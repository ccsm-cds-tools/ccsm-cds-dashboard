{"version":3,"file":"static/js/67.5e8e55a2.chunk.js","mappings":";2GAUAA,EAAOC,QAVP,SAA2BC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GAG2BN,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,8BCVzG,IAAIQ,EAAmB,EAAQ,MAM/BT,EAAOC,QAJP,SAA4BC,GAC1B,GAAIK,MAAMG,QAAQR,GAAM,OAAOO,EAAiBP,IAGbF,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,0BCA1GD,EAAOC,QANP,SAAyBU,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,sCAIUb,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,0BCNvG,SAASa,EAAkBC,EAAQC,GACjC,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAMZ,OAAQC,IAAK,CACrC,IAAIY,EAAaD,EAAMX,GACvBY,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAalDjB,EAAOC,QATP,SAAsBW,EAAaY,EAAYC,GAM7C,OALID,GAAYV,EAAkBF,EAAYc,UAAWF,GACrDC,GAAaX,EAAkBF,EAAaa,GAChDJ,OAAOC,eAAeV,EAAa,YAAa,CAC9CQ,UAAU,IAELR,GAGsBZ,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,0BCfpGD,EAAOC,QAJP,SAA0B0B,GACxB,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOpB,MAAMuB,KAAKH,IAGnF3B,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,0BCAxGD,EAAOC,QAJP,WACE,MAAM,IAAIY,UAAU,yIAGeb,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,0BCQ1GD,EAAOC,QAZP,SAAgC8B,EAASC,GAKvC,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfZ,OAAOa,OAAOb,OAAOc,iBAAiBJ,EAAS,CACpDC,IAAK,CACHI,MAAOf,OAAOa,OAAOF,QAKchC,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,6BCZ9G,IAAIoC,EAAoB,EAAQ,MAE5BC,EAAkB,EAAQ,MAE1BC,EAA6B,EAAQ,KAErCC,EAAoB,EAAQ,MAMhCxC,EAAOC,QAJP,SAA4BC,GAC1B,OAAOmC,EAAkBnC,IAAQoC,EAAgBpC,IAAQqC,EAA2BrC,IAAQsC,KAGzDxC,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,6BCZ1G,IAAIQ,EAAmB,EAAQ,MAW/BT,EAAOC,QATP,SAAqCwC,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAOhC,EAAiBgC,EAAGC,GACtD,IAAIC,EAAItB,OAAOK,UAAUkB,SAASC,KAAKJ,GAAGR,MAAM,GAAI,GAEpD,MADU,WAANU,GAAkBF,EAAEK,cAAaH,EAAIF,EAAEK,YAAYC,MAC7C,QAANJ,GAAqB,QAANA,EAAoBpC,MAAMuB,KAAKW,GACxC,cAANE,GAAqB,2CAA2CK,KAAKL,GAAWlC,EAAiBgC,EAAGC,QAAxG,IAG4C1C,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,8GCHjG,CAgBhBgD,QAAS,EAMTC,UAAW,CAAC,IAAK,KAOjBC,SAAW,KAGXC,aAAe,gBACfC,WAAa,IACbC,aAAe,wBACfC,WAAa,IAQbC,UAAY,MAOZC,WAAa,MAObC,cAAgB,0BAOhBC,eAAiB,UAMjBC,WAAa,sJASbC,mBAAqB,yJAQrBC,SAAW,CACT,sBAAwB,UACxB,iBAAmB,iBACnB,iBAAmB,QACnB,SAAa,YACb,OAAW,UACX,SAAa,YACb,SAAa,aAMfC,UAAY,sBASXC,WAAa,CAAE,WAAa,iBACb,kBAAoB,yGC1GtC,IAAIC,EAAKC,EAAQ,KACbC,EAAYD,EAAQ,MACXE,EAAAA,WAuBXtB,SAAAA,EAAYuB,GAEV,GAFsB,UAEE,IAApBJ,EAAGK,KAAKrB,QACV,MAAM,IAAIsB,MAAM,yEAGlB,QAAmBC,IAAfH,GAA2C,OAAfA,EAC9BI,KAAKC,kBAEF,GAAIL,aAAsB9D,MAAO,CACpC,GAAI8D,EAAWjE,SAAW6D,EAAGK,KAAKrB,QAChC,MAAM,IAAIsB,MAAM,mGACuBI,KAAKC,UAAUP,KAExDI,KAAKI,QAAU,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAGK,KAAKrB,QAAS6B,IACnCL,KAAKI,QAAQE,KAAKV,EAAWS,SAM5B,GAAIX,EAAUE,GAAa,CAC9B,GAAIA,EAAa,GAAKA,GAAcJ,EAAGK,KAAKrB,QAC1C,MAAM,IAAIsB,MAAM,+EAGlBE,KAAKC,aACLD,KAAKI,QAAQR,GAAc,yCAgB/BW,SAAaC,EAAU7C,GAErB,IAAK+B,EAAUc,IACXA,EAAW,GAAKA,GAAYhB,EAAGK,KAAKrB,QACtC,MAAM,IAAIsB,MAAO,2EACJU,EADI,MAIdR,KAAKI,SACRJ,KAAKC,kBAEOF,IAAVpC,GAAiC,OAAVA,IACzBA,EAAQ,GAEVqC,KAAKI,QAAQI,GAAY7C,8BAa3B8C,SAAaD,GACX,IAAKd,EAAUc,IACXA,EAAW,GAAKA,GAAYhB,EAAGK,KAAKrB,QACtC,MAAM,IAAIsB,MAAO,2EACJU,EADI,MAGnB,IAAIE,EAAM,KAGV,OAFIV,KAAKI,UACPM,EAAMV,KAAKI,QAAQI,IACdE,6BAgBTC,SAAYC,GAGV,OAAOZ,KAFsD,MAAjDY,EAAaC,OAAOD,EAAajF,OAAS,GAAaiF,EAAeA,EAAe,6BAenGzC,WACE,IAAIuC,EAAM,KAGV,OAFIV,KAAKI,UACPM,EAAM,IAAMV,KAAKI,QAAQU,KAAK,MAAQ,KACjCJ,qBAcTK,SAAIC,GACF,IAAKA,aAAgBrB,EACnB,MAAM,IAAIG,MAAO,qEACPkB,EADO,mCAGnB,GAAIhB,KAAKI,SAAWY,EAAKZ,QACvB,IAAK,IAAIxE,EAAI,EAAGA,EAAI4D,EAAGK,KAAKrB,QAAS5C,IACnCoE,KAAKI,QAAQxE,IAAMoF,EAAKZ,QAAQxE,GAEpC,OAAOoE,wBAaTiB,SAAID,GACF,IAAKA,aAAgBrB,EACnB,MAAM,IAAIG,MAAO,qEACPkB,EADO,mCAGnB,GAAIhB,KAAKI,SAAWY,EAAKZ,QACvB,IAAK,IAAIxE,EAAI,EAAGA,EAAI4D,EAAGK,KAAKrB,QAAS5C,IACnCoE,KAAKI,QAAQxE,IAAMoF,EAAKZ,QAAQxE,GAEpC,OAAOoE,0BAWTkB,WACE,GAAIlB,KAAKI,QACP,IAAK,IAAIxE,EAAI,EAAGA,EAAI4D,EAAGK,KAAKrB,QAAS5C,IACnCoE,KAAKI,QAAQxE,IAAMoE,KAAKI,QAAQxE,GAEpC,OAAOoE,wBAaTmB,SAAIC,GACF,IAAK1B,EAAU0B,GACb,MAAM,IAAItB,MAAO,qEACPkB,KADO,yBAGnB,GAAIhB,KAAKI,QACP,IAAK,IAAIxE,EAAI,EAAGA,EAAI4D,EAAGK,KAAKrB,QAAS5C,IACnCoE,KAAKI,QAAQxE,IAAMwF,EAEvB,OAAOpB,2BAcTqB,SAAOL,GACL,IAAKA,aAAgBrB,EACnB,MAAM,IAAIG,MAAO,wEACPkB,EADO,mCAGnB,IAAIM,GAAU,EACVC,EAAUP,EAAKZ,QACnB,GAAIJ,KAAKI,SAAWmB,EAClB,IAAK,IAAI3F,EAAI,EAAG0F,GAAW1F,EAAI4D,EAAGK,KAAKrB,QAAS5C,IAC9C0F,EAAWtB,KAAKI,QAAQxE,KAAO2F,EAAQ3F,QAGzC0F,EAA4B,OAAjBtB,KAAKI,SAAgC,OAAZmB,EAEtC,OAAOD,2BAgBTE,SAAUR,GAER,IAAKA,aAAgBrB,EACnB,MAAM,IAAIG,MAAO,2EACPkB,EADO,mCAGnB,GAAqB,OAAjBA,EAAKZ,QACPJ,KAAKI,QAAU,SACZ,CACkB,OAAjBJ,KAAKI,UACPJ,KAAKI,QAAU,IAEjB,IAAK,IAAIxE,EAAI,EAAGA,EAAI4D,EAAGK,KAAKrB,QAAS5C,IACnCoE,KAAKI,QAAQxE,GAAKoF,EAAKZ,QAAQxE,GAEnC,OAAOoE,+BAUTC,WACuB,OAAjBD,KAAKI,cAAqCL,IAAjBC,KAAKI,UAChCJ,KAAKI,QAAU,IAEjB,IAAK,IAAIxE,EAAI,EAAGA,EAAI4D,EAAGK,KAAKrB,QAAS5C,IACnCoE,KAAKI,QAAQE,KAAK,GAEpB,OAAON,2BAWTyB,WACE,IAAIC,EAA2B,OAAjB1B,KAAKI,QACnB,GAAIJ,KAAKI,QACP,IAAK,IAAIxE,EAAI,EAAG8F,GAAW9F,EAAI4D,EAAGK,KAAKrB,QAAS5C,IAC9C8F,EAA8B,IAApB1B,KAAKI,QAAQxE,GAE3B,OAAO8F,wBAUTC,WACE,OAAyB,OAAjB3B,KAAKI,6BASfwB,WACE,IAAIC,EAAO,IAAIlC,EAEf,OADAkC,EAAKL,UAAUxB,MACR6B,QAlVElC,sEC4FN,SAAqBmC,GAC1B,IAAMC,EAASD,GAAOA,EAAIC,OAE1B,GAAIA,EAAQ,CACV,GAAIA,EAAOpG,QAAUmG,EAAIE,KAAM,CAC7B,IAAMC,EAAUC,EAAcH,GAE9B,OAAOD,EAAIE,KAAKG,IAAIC,EAAWC,KAAK,KAAMJ,IAE1C,OAAOH,EAAIE,KAIf,OAAOF,GApHT,IAAMQ,EAASxG,MAAMmB,UAAUqD,KAW/B,SAASiC,EAAaC,GACpB,OAAO5F,OAAO6F,KAAKD,GAAQE,QAAO,SAACX,EAAQjF,GAV7C,IAAkBa,EAgBd,OAhBcA,EAWD6E,EAAO1F,GAV2B,oBAA1CF,OAAOK,UAAUkB,SAASC,KAAKT,GAWlC2E,EAAOK,MAAMZ,EAAQQ,EAAaC,EAAO1F,IAAMqF,KAAIS,SAAAA,GAAO,OAAK9F,GAAL,SAAa,GAAG+F,OAAOD,SAEjFb,EAAOzB,KAAKxD,GAEPiF,IACN,IAQL,SAASG,EAAcH,GACrB,OAAOA,EAAOI,KAAIrF,SAAAA,GAAG,OAAIhB,MAAMG,QAAQa,GAAOA,EAAM,CAACA,MASvD,SAASgG,EAASf,EAAQgB,GACxB,GAAIhB,EAAOjB,SAAWoB,EAAcK,EAAaQ,IAAOjC,OACtD,MAAM,IAAIhB,MAAM,+BAGlB,OAAOiC,EAAOI,KAAIa,SAAAA,GAChB,IAAIC,EAAQF,EAOZ,OANAC,EAAOE,SAAQpG,SAAAA,GAEb,QAAciD,KADdkD,EAAQA,EAAMnG,IAEZ,MAAM,IAAIgD,MAAM,kCAGbmD,KAUX,SAASb,EAAWL,EAAQgB,GAC1B,IAAII,EAAS,GAUb,OARApB,EAAOmB,SAAQ,SAACF,EAAQpH,GAEtB,IADA,IAAIqH,EAAQE,EACHvH,EAAI,EAAGA,EAAIoH,EAAOrH,OAAS,EAAGC,IACrCqH,EAAQA,EAAMD,EAAOpH,IAAMqH,EAAMD,EAAOpH,KAAO,GAEjDqH,EAAMD,EAAOA,EAAOrH,OAAS,IAAMoH,EAAKnH,MAGnCuH,+IC/DE1D,EAAQ,KAAnB,IAEa2D,EAAAA,WAsBX/E,SAAAA,EAAYgF,GAEV,GAFiB,eAEMtD,IAAnBsD,EAAK,OAA8C,OAAnBA,EAAK,YAClBtD,IAAnBsD,EAAK,OAA8C,OAAnBA,EAAK,YACjBtD,IAApBsD,EAAK,QAAgD,OAApBA,EAAK,aACpBtD,IAAlBsD,EAAK,KACP,MAAM,IAAIvD,MAAM,iLAalBE,KAAKsD,MAAQD,EAAK,MAKlBrD,KAAKuD,QAAUF,EAAK,QAKpBrD,KAAKwD,MAAQH,EAAK,MAKlBrD,KAAKyD,aAAeJ,EAAK,aAKM,kBAApBA,EAAK,OACdrD,KAAK0D,OAASC,WAAWN,EAAK,QAE9BrD,KAAK0D,OAASL,EAAK,OAMrBrD,KAAK4D,KAAOP,EAAK,uCASnBQ,WACE,OAAO7D,KAAK0D,8BAQdI,WACE,OAAO9D,KAAKsD,+BAQdS,WACE,OAAO/D,KAAKuD,+BAQdS,WACE,OAAOhE,KAAKwD,oCAQdS,WACE,OAAOjE,KAAKyD,mCAQdS,WACE,OAAOlE,KAAK4D,2BAWdvC,SAAO8C,GACL,OAAOnE,KAAKsD,QAAUa,EAAQb,OACtBtD,KAAKuD,UAAYY,EAAQZ,SACzBvD,KAAKwD,QAAUW,EAAQX,OACvBxD,KAAKyD,eAAiBU,EAAQV,cAC9BzD,KAAK0D,SAAWS,EAAQT,QACxB1D,KAAK4D,OAASO,EAAQP,WA9IrBR,0LCHAgB,EAAAA,WAUX/F,SAAAA,IAAa,UACX2B,KAAKqE,QAAU,GACfrE,KAAKsE,SAAW,wCAQlBC,WACE,OAAO3H,OAAO6F,KAAKzC,KAAKqE,SAAS1I,yCASnC6I,WAKE,IAJA,IAAIC,EAAa,GACbC,EAAQ9H,OAAO6F,KAAKzC,KAAKsE,UAEzBK,EAAOD,EAAM/I,OACRiJ,EAAI,EAAGA,EAAID,EAAMC,IAAK,CAC7B,IAAIC,EAAM7E,KAAK8E,iBAAiBJ,EAAME,IACtCH,GAAcI,EAAIvB,MAAQ,IAAMuB,EAAIrB,MAAQ,KAAOqB,EAAInB,OAAS,OAElE,OAAOe,mCAWTM,WACE,IAAIC,EAAa,GACbN,EAAQ9H,OAAO6F,KAAKzC,KAAKqE,SAC7BK,EAAMO,OAEN,IADA,IAAIN,EAAOD,EAAM/I,OACRiJ,EAAI,EAAGA,EAAID,EAAMC,IACxBI,EAAW1E,KAAKN,KAAKkF,gBAAgBR,EAAME,KAE7C,OAAOI,qBAQTjE,SAAIoE,GACFnF,KAAKqE,QAAQc,EAAUrB,WAAaqB,EACpCnF,KAAKsE,SAASa,EAAUtB,YAAcsB,2BAaxCC,SAAUC,GACR,OAA8B,OAAvBrF,KAAKqE,QAAQgB,SAAyCtF,IAAvBC,KAAKqE,QAAQgB,kCAUrDH,SAAgBG,GACd,OAAOrF,KAAKqE,QAAQgB,mCAUtBP,SAAiBnH,GACf,OAAOqC,KAAKsE,SAAS3G,SAxGZyG,2BAgHb,IAAIkB,EAAuB,IAAIlB,EAClBmB,EAAe,CAC1BC,YAAa,WACX,OAAOF,wKCOI,IA7HTG,WAQJpH,SAAAA,IAAc,UAGZ2B,KAAK0F,MAAQ,GAIb1F,KAAK0F,MAAL,IAAoB,CAACC,MAAU,SAASC,GAAG,OAAOA,EAAI,QACpCC,QAAU,SAASD,GAAG,OAAOA,EAAI,SAInD5F,KAAK0F,MAAL,KAAqB,CAACC,MAAU,SAASC,GAAG,OAAOA,EAAI,QACpCC,QAAU,SAASD,GAAG,OAAOA,EAAI,SAQpD5F,KAAK0F,MAAL,MAAsB,CAACC,MAAU,SAASC,GAAG,OAAOA,EAAI,QACpCC,QAAU,SAASD,GAAG,OAAOA,EAAI,SAIrD5F,KAAK0F,MAAL,GAAmB,CAACC,MAAS,SAASC,GAAG,OAASE,KAAKC,IAAIH,GAAKE,KAAKE,MACpDH,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,IAAKL,KAI5D5F,KAAK0F,MAAL,GAAmB,CAACC,MAAQ,SAASC,GAAG,OAAOE,KAAKC,IAAIH,IACvCC,QAAU,SAASD,GAAG,OAAOE,KAAKI,IAAIN,KACvD5F,KAAK0F,MAAM,OAAS,CAACC,MAAQ,SAASC,GAAG,OAAO,EAAIE,KAAKC,IAAIH,IAC3CC,QAAU,SAASD,GAAG,OAAOE,KAAKI,IAAIN,EAAI,KAG5D5F,KAAK0F,MAAL,GAAmB,CAACC,MAAQ,SAASC,GAAG,OAAOE,KAAKC,IAAIH,GAAKE,KAAKE,MACjDH,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,GAAIL,KAC3D5F,KAAK0F,MAAM,QAAU,CAACC,MAAQ,SAASC,GAAG,OAAO,GAAKE,KAAKC,IAAIH,GAAGE,KAAKE,MACpDH,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,GAAIL,EAAI,MACjE5F,KAAK0F,MAAM,QAAU,CAACC,MAAQ,SAASC,GAAG,OAAO,GAAKE,KAAKC,IAAIH,GAAGE,KAAKE,MACpDH,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,GAAIL,EAAI,MAEjE5F,KAAK0F,MAAM,OAAS,CAACC,MAAQ,SAASC,GAAG,OAAO,EAAIE,KAAKC,IAAIH,GAAGE,KAAKE,MAC9CH,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,GAAIL,EAAI,KAErE5F,KAAK0F,MAAL,SAAyB1F,KAAK0F,MAAM,OAGpC1F,KAAK0F,MAAL,GAAmB,CAACC,MAAQ,SAASC,GAAG,OAAOE,KAAKC,IAAIH,GAAGE,KAAKK,KAC/CN,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,EAAGL,KAG1D5F,KAAK0F,MAAM,UAAY,CAACC,MAAQ,SAASC,GAAG,OAAqB,IAAdE,KAAKM,IAAIR,IACvCC,QAAU,SAASD,GAAG,OAAOE,KAAKO,KAAKT,EAAE,OAE9D5F,KAAK0F,MAAL,YAA4B1F,KAAK0F,MAAM,UAGvC1F,KAAK0F,MAAL,KAAqB,CAACC,MAAQ,SAASC,GAAG,OAAOE,KAAKQ,KAAKV,IACxCC,QAAU,SAASD,GAAG,OAAOA,EAAEA,IAGlD5F,KAAK0F,MAAL,IAAoB,CAACC,MAAQ,SAASC,GAAG,OAAO,EAAMA,GACpCC,QAAU,SAASD,GAAG,OAAO,EAAMA,IAGrD5F,KAAK0F,MAAL,IAAoB,CAACC,MAAQ,SAASC,GAAG,OAAS5F,KAAK0F,MAAL,GAAiBE,IACjDC,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,IAAKL,KAE7D5F,KAAK0F,MAAL,IAAoB,CAACC,MAAQ,SAASC,GACZ,OAAS5F,KAAKuG,KAAL,GAAgBX,GAAI5F,KAAK0F,MAAL,GAAiB,MACrDG,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,KAAML,KAE/D5F,KAAK0F,MAAL,IAAoB,CAACC,MAAQ,SAASC,GACZ,OAAS5F,KAAK0F,MAAL,GAAiBE,GAAI5F,KAAK0F,MAAL,GAAiB,MACvDG,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,KAAOL,KAE/D5F,KAAK0F,MAAL,IAAoB,CAACC,MAAQ,SAASC,GACZ,OAAS5F,KAAK0F,MAAL,GAAiBE,GAAI5F,KAAK0F,MAAL,GAAiB,MACvDG,QAAU,SAASD,GAAG,OAAOE,KAAKG,IAAI,KAAQL,sCAYlEY,SAAQC,GACNA,EAAQA,EAAMC,cAEd,IAAIC,EAAI3G,KAAK0F,MAAMe,GACnB,GAAU,OAANE,EACF,MAAM,IAAI7G,MAAJ,6BAAgC2G,EAAhC,oBACR,OAAOE,2BAWTvB,SAAUqB,GAER,OADAA,EAAQA,EAAMC,cACe,OAAtB1G,KAAK0F,MAAMe,SAxHhBhB,sHCwBC,SAAyBmB,GAC9B,IAAIC,EAAM,GAAKD,EACf,OAAQE,MAAMD,KAASC,MAAMnD,WAAWkD,qBAanC,SAAuBE,GAC5B,MAAO,QAAQxI,KAAKwI,kBAmBf,SAAqBC,GAE1B,IAEIC,EAFAC,EAAS,GACTC,EAAOC,EAAW5B,cAKtB,IAHAyB,EAAOE,EAAKE,iBAAiBL,IAGpB,MAIJ,CACHE,EAAM,OAAa,YACnB,IAAII,EAAOL,EAAI,MAAUtL,OACzBuL,EAAM,MAAY,GAClB,IAAK,IAAIK,EAAI,EAAGA,EAAID,EAAMC,IAAK,CAC7B,IAAIC,EAAUP,EAAI,MAAUM,GAC5BL,EAAM,MAAUK,GAAK,CACnB,KAAQC,EAAQC,QAChB,KAAQD,EAAQhE,MAChB,SAAYgE,EAAQE,iBAZxBR,EAAM,OAAaD,EAAI,OACvBC,EAAM,IAAUD,EAAI,IActB,OAAOC,GAvET,IAAIE,EAAa3H,EAAAA,MAAAA,4KCXjB,IAAIkI,EAAMlI,EAAQ,MACdmI,EAAOnI,EAAQ,MACfoI,EAAKpI,EAAQ,MACbqI,EAAOrI,EAAQ,MACfsI,EAActI,EAAAA,MAAAA,GAELuI,EAAAA,wEAQXC,WAEE,IAAMC,EAAWzI,EAAQ,MAIzB,GAHAyI,EAASC,SAAWJ,EAAYG,EAASC,UACzCD,EAASE,MAAQL,EAAYG,EAASE,OAEa,IAA/CN,EAAKV,WAAW5B,cAAc6C,aAAoB,CAMpD,IAJA,IAAIC,EAAOV,EAAKrC,aAAaC,cACzB2C,EAAWD,EAAQ,SACnBK,EAAOJ,EAASxM,OAEXiJ,EAAI,EAAGA,EAAI2D,EAAM3D,IAAK,CAC7B,IAAI4D,EAAU,IAAIb,EAAIvE,OAAO+E,EAASvD,IACtC0D,EAAKvH,IAAIyH,GAOX,IAJA,IAAIC,EAAOX,EAAKV,WAAW5B,cACvB4C,EAAQF,EAAQ,MAChBQ,EAAON,EAAMzM,OAERgN,EAAI,EAAGA,EAAID,EAAMC,IAAK,CAC7B,IAAIC,EAAU,IAAIf,EAAGgB,KAAKT,EAAMO,IAChCF,EAAKK,QAAQF,WA/BRZ,oBAsCb,IAAIe,EAAe,IAAIf,yGC7CvB,cAIA,8hBALA,IAAInI,EAAOJ,EAAAA,KAAAA,KAEP2H,EAAa3H,EAAAA,MAAAA,WACbuJ,EAAavJ,EAAAA,IAAAA,EAOJwJ,EAAAA,WAOX5K,SAAAA,IAAc,UAEoC,IAA1C+I,EAAW5B,cAAc6C,cAG3BU,EAAAA,aAAad,eAKfjI,KAAKkJ,YAAcF,EAAWxD,yDAalC2D,SAAkBC,QACJrJ,IAARqJ,IACFA,GAAM,GACRpJ,KAAKkJ,YAAYC,kBAAkBC,2CAarCC,SAAyBD,QACXrJ,IAARqJ,IACFA,GAAM,GACRpJ,KAAKkJ,YAAYG,yBAAyBD,qCAyD5CE,SAAmBC,EAAMC,EAASC,QAEhB1J,IAAZyJ,IACFA,GAAU,QAEIzJ,IAAZ0J,IACFA,EAAU,YAEZ,IAAIxC,EAAOjH,KAAK0J,iBAAiBH,EAAME,EAASD,GAC5ChC,EAAUP,EAAI,KACdC,EAAS,GAiBb,OAVEA,EANGM,EAMM,CAAC,OAAUP,EAAI,aAAmBsC,EAAO,QAAS,UACjD,SAAYtC,EAAI,WAChB,KAAQ,CAAC,KAAQO,EAAQC,QAChB,KAAQD,EAAQhE,MAChB,SAAYgE,EAAQE,YAT9B,CAAC,OAAYT,EAAI,YAAyC,OAAvBA,EAAI,WACjB,UAAV,QACX,SAAY,MASpBA,EAAI,cACNC,EAAM,YAAkBD,EAAI,aAE9BC,EAAM,IAAUD,EAAI,OACbC,+BA+DTyC,SAAcC,EAAcC,EAASC,EAAYN,EAASO,QACxChK,IAAZyJ,IACFA,GAAU,QAEYzJ,IAApBgK,IACFA,EAAkB,MAEpB,IAAIC,EAAY,CAAC,OAAW,SACX,MAAU,KACV,IAAQ,IAsBzB,GApBIJ,IACFA,EAAeA,EAAaK,QAEzBL,GAAgC,IAAhBA,IACnBI,EAAS,OAAa,QACtBA,EAAS,IAAQ1J,KAAK,0CAER,OAAZuJ,GAAoB/C,MAAM+C,IAAgC,kBAAZA,IAC7CK,EAAUC,gBAAgBN,MAC7BG,EAAS,OAAa,QACtBA,EAAS,IAAQ1J,KAAK,gEAGpBwJ,IACFA,EAAaA,EAAWG,QAErBH,GAA4B,IAAdA,IACjBE,EAAS,OAAa,QACtBA,EAAS,IAAQ1J,KAAK,uCAEI,UAAxB0J,EAAS,OACX,IACE,IAAII,EAAW,KAEXC,EAAYrK,KAAK0J,iBAAiBE,EAAc,UAAWJ,GAC/DY,EAAWC,EAAS,KAChBA,EAAS,SACXL,EAAS,IAAUA,EAAS,IAAQnH,OAAOwH,EAAS,SAClDA,EAAS,cACXL,EAAS,YAAkB,GAC3BA,EAAS,YAATA,KAAmCK,EAAS,aAEzCD,GACHJ,EAAS,IAAQ1J,KAAM,oCAA4BsJ,EAA5B,8CAIzB,IAAIU,EAAS,KAeb,GAbAA,GADAD,EAAYrK,KAAK0J,iBAAiBI,EAAY,UAAWN,IACvC,KACda,EAAS,SACXL,EAAS,IAAUA,EAAS,IAAQnH,OAAOwH,EAAS,SAClDA,EAAS,cACNL,EAAS,cACZA,EAAS,YAAkB,IAC7BA,EAAS,YAATA,GAAiCK,EAAS,aAEvCC,GACHN,EAAS,IAAQ1J,KAAM,oCAA4BwJ,EAA5B,8CAIrBM,GAAYE,EACd,IAEE,GAAKP,EAGA,CACH,GAA0B,IAAtBK,EAASG,UAAsC,IAApBD,EAAOC,SACpC,MAAM,IAAIzK,MAAM,8IAIlB,GAA0B,IAAtBsK,EAASG,UAAsC,IAApBD,EAAOC,SACpC,MAAM,IAAIzK,MAAM,qJAIlB,IAAKsK,EAASI,wBAAwBF,GACpC,MAAM,IAAIxK,MAAO,kBAAU8J,EAAV,sCACCE,EADD,MAMO,IAAtBM,EAASG,SACXP,EAAS,MACPI,EAASK,iBAAiBZ,EAASS,EAAQP,GAK7CC,EAAS,MACPI,EAASM,iBAAiBb,EAASS,EAAQP,QA5B/CC,EAAS,MAAYM,EAAOK,YAAYd,EAASO,GAkCnDJ,EAAS,OAAa,YACtBA,EAAS,SAAeI,EACxBJ,EAAS,OAAaM,EAExB,MAAOM,GACLZ,EAAS,OAAa,SACtBA,EAAS,IAAQ1J,KAAKsK,EAAIC,UAMhC,MAAOD,GACDA,EAAIC,SAAWhL,EAAKT,mBACtB4K,EAAS,OAAa,SAEtBA,EAAS,OAAa,QACxBA,EAAS,IAAQ1J,KAAKsK,EAAIC,SAI9B,OAAOb,+BAoBTc,SAAc9D,GACZ,IAAIE,EAAS,GASb,YARenH,IAAXiH,GAAmC,OAAXA,GAC1BE,EAAM,OAAa,QACnBA,EAAM,IAAU,yCAGhBA,EAASgD,EAAUa,YAAY/D,GAG1BE,kCAoCTwC,SAAiBsB,EAAOvB,EAASD,QAEfzJ,IAAZyJ,IACFA,GAAU,GAEZ,IAAItC,EAAS,CACbA,OAAmB,IAEnB,GAAK8D,EAGA,CACH,IAAI7D,EAAOC,EAAW5B,cACtBwF,EAAQA,EAAMf,OAId,IAAIzC,EAAUL,EAAK8D,cAAcD,GAIjC,GAAIxD,EACFN,EAAM,KAAWM,EACjBN,EAAM,WAAiB8D,OAGvB,IACE,IAAI/D,EAAOjH,KAAKkJ,YAAYgC,YAAYF,EAAOvB,EAASD,GACxDtC,EAAM,KAAWD,EAAK,GACtBC,EAAM,WAAiBD,EAAK,GACxBA,EAAK,KACPC,EAAM,OAAaD,EAAK,IAC1BC,EAAM,YAAkBD,EAAK,GAE/B,MAAO2D,GACLO,QAAQpF,IAAK,yCAAiCiF,EAAjC,KACX,wCAA0CJ,EAAIC,SAC9C3D,EAAM,OAAWkE,QAAS,UAAEJ,EAAF,qCACEJ,EAAIC,gBA7BtC3D,EAAM,OAAW5G,KAAK,6BAkCxB,OAAO4G,oCAeTmE,SAAmBC,GAEjB,IAAIC,EAAS,GACTC,EAAY,KACZnB,EAAYrK,KAAK0J,iBAAiB4B,EAAU,YAAY,GACxDlB,EAAWC,EAAS,KAGxB,GAFIA,EAAS,OAAW1O,OAAS,IAC/B4P,EAASlB,EAAS,QACfD,EAGA,CACH,IAAIqB,EAAS,KACTC,EAAUtB,EAASzJ,YAAY,QACnC,GAAK+K,EAGA,CACH,IACED,EAASC,EAAQ/K,YAAY,WAE/B,MAAOiK,GACLW,EAAOjL,KAAKsK,EAAIC,SAEd,wDADED,EAAIC,UAENY,EAAS,MAEb,GAAIA,EAEFD,EADWpE,EAAW5B,cACLmG,oBAAoBF,QAdvCF,EAAOjL,KAAK,yCAA2CgL,QANzDC,EAAOjL,KAAPiL,uBAAAA,OAAmCD,EAAnCC,MAwBF,MAAO,CAACC,EAAYD,SA3dXtC,SA+ebA,EAAazD,YAAc,WACzB,OAAO,IAAIyD,iICzfN,IAAIpJ,EAAOJ,EAAAA,KAAAA,cACX,IAAIwJ,EAAexJ,EAAAA,MAAAA,mBACnB,IAAI2H,EAAa3H,EAAAA,MAAAA,oKCGxB,gDAIA,8hBANA,IAGI2H,EAHAvH,EAAOJ,EAAAA,KAAAA,KACPE,EAAYF,EAAAA,MAAAA,EAIZC,EAAYD,EAAQ,MAGXoJ,EAAAA,WAiBXxK,SAAAA,IAAwB,IAAZgF,EAAY,uDAAJ,GAAI,UAetBrD,KAAK4L,QAAUvI,EAAK,UAAe,EAKnCrD,KAAKwD,MAAQH,EAAK,OAAa,GAK/BrD,KAAKyH,QAAUpE,EAAK,SAAe,GAKnCrD,KAAKuD,QAAUF,EAAK,SAAe,GAKnCrD,KAAK6L,UAAYxI,EAAK,WAAiB,GASvCrD,KAAK8L,WAAazI,EAAK,YAAkB,OAKnBtD,IAAlBsD,EAAK,MAA4C,OAAlBA,EAAK,KACtCrD,KAAK+L,KAAO,IAAIpM,OAIoBI,IAA7BsD,EAAK,KAALA,QACPrD,KAAK+L,KAAO,IAAIpM,EAAU0D,EAAK,KAALA,SAEnBA,EAAK,gBAAoB1D,EAChCK,KAAK+L,KAAO1I,EAAK,KAEVA,EAAK,gBAAoBvH,OAAS4D,EAAU2D,EAAK,MACxDrD,KAAK+L,KAAO,IAAIpM,EAAU0D,EAAK,MAG/BrD,KAAK+L,KAAO,IAAIpM,EAKlBK,KAAKyD,aAAeJ,EAAK,cAAoB,KAK7CrD,KAAKgM,OAAS3I,EAAK,QAAc,KAKjCrD,KAAKiM,UAAY5I,EAAK,YAAiB,EAMvCrD,KAAKkM,UAAY7I,EAAK,WAAiB,KAKvCrD,KAAKmM,KAAO9I,EAAK,MAAY,KAK7BrD,KAAKoM,QAAU/I,EAAK,SAAe,EAOnCrD,KAAKqM,WAAahJ,EAAK,aAAkB,EAKzCrD,KAAKsM,aAAejJ,EAAK,eAAoB,EAS7CrD,KAAKuK,SAAWlH,EAAK,UAAgB,EASrCrD,KAAKuM,UAAYlJ,EAAK,WAAiB,KACvCrD,KAAKwM,QAAUnJ,EAAK,SAAe,KACnCrD,KAAKyM,eAAiBpJ,EAAK,gBAAsB,KACjDrD,KAAK0M,UAAYrJ,EAAK,WAAiB,KACvCrD,KAAK0H,UAAYrE,EAAK,WAAiB,KAkBvCrD,KAAK2M,cAAgBtJ,EAAK,eAAqB,KAC/CrD,KAAK4M,cAAgBvJ,EAAK,eAAqB,KAM/CrD,KAAK6M,eAAiBxJ,EAAK,gBAAsB,KACjDrD,KAAK8M,YAAczJ,EAAK,aAAmB,KAc3CrD,KAAK+M,UAAY1J,EAAK,YAAiB,uCAWzC2J,WAQE,OAPAhN,KAAKwD,MAAS,GACdxD,KAAK8L,WAAa,EACb9L,KAAK+L,OACR/L,KAAK+L,KAAO,IAAIpM,GAClBK,KAAK+L,KAAK9L,aACVD,KAAKmM,KAAO,KACZnM,KAAKoM,QAAU,EACRpM,+BAeTiN,SAAWC,GACT,IAAK,IAAIpQ,KAAOoQ,EAAM,CACpB,IAAIC,EAAyC,OAAhCrQ,EAAI+D,OAAO/D,EAAInB,OAAS,GAAcmB,EAAM,IAAMA,EAC/D,IAAIkD,KAAKoN,eAAeD,GAGtB,MAAM,IAAIrN,MAAJ,2BAA8BhD,EAA9B,iCAFNkD,KAAKmN,GAAQD,EAAKpQ,yBAYxB8E,WAAQ,WACFyL,EAAU,IAAIxE,EAWlB,OAVAjM,OAAO0Q,oBAAoBtN,MAAMkD,SAAQqK,SAAAA,GAC3B,SAARA,EACE,OACFF,EAAO,KAAW,OAAazL,QAE/ByL,EAAO,KAAW,KAGpBA,EAAQE,GAAO,EAAKA,MAEjBF,wBAWTG,SAAOC,GAAO,WACZ7Q,OAAO0Q,oBAAoBG,GAAOvK,SAAQqK,SAAAA,GAC5B,SAARA,EACEE,EAAK,KACP,OAAeA,EAAK,KAAS7L,QAE7B,OAAe,KAGjB,EAAK2L,GAAOE,EAAMF,4BAexBlM,SAAOoM,GAEL,OAAQzN,KAAK8L,aAAe2B,EAAM3B,YAC1B9L,KAAKmM,OAASsB,EAAMtB,MACpBnM,KAAKoM,UAAYqB,EAAMrB,UACP,OAAdpM,KAAK+L,MAAgC,OAAf0B,EAAM1B,MAC7B/L,KAAK+L,KAAK1K,OAAOoM,EAAM1B,iCAYlC2B,SAAWD,GAUT,IARA,IAAIE,EAAW/Q,OAAO6F,KAAKzC,MAAMiF,OAC7B2I,EAAShR,OAAO6F,KAAKgL,GAAOxI,OAE5B4I,EAASF,EAAShS,OAClBmS,EAASD,IAAWD,EAAOjS,OAItBoS,EAAI,EAAGA,EAAIF,GAAUC,EAAOC,IAG/BD,EAFAH,EAASI,KAAOH,EAAOG,KACL,SAAhBJ,EAASI,GACH/N,KAAK+L,KAAK1K,OAAOoM,EAAM1B,MAEvB/L,KAAK2N,EAASI,MAAQN,EAAME,EAASI,KAKnD,OAAOD,6BAYTnN,SAAYC,GAGV,OAAOZ,KAFsD,MAAjDY,EAAaC,OAAOD,EAAajF,OAAS,GAAaiF,EAC1BA,EAAe,gCAyB1D+J,SAAY9D,EAAKuD,GACf,IAAI4D,EAAS,EAEb,GAAIhO,KAAKsM,aACP,MAAO,IAAIxM,MAAJ,4CAA+CE,KAAKwD,QAC7D,GAAI4G,EAASkC,aACX,MAAO,IAAIxM,MAAJ,+CAAkDsK,EAAS5G,QAGpE,GAAI4G,EAAS2B,MAAQ/L,KAAK+L,OAAU3B,EAAS2B,KAAK1K,OAAOrB,KAAK+L,MAE5D,MAAI/L,KAAKwK,wBAAwBJ,GACzB,IAAItK,MAAMD,EAAKT,oBAGf,IAAIU,MAAO,kBAAUsK,EAAS3C,QAAnB,sCACTzH,KAAKyH,QADI,MAKrB,GAAI2C,EAAS2B,QAAU/L,KAAK+L,MAAQ/L,KAAK+L,KAAKpK,UAC5C,MAAM,IAAI7B,MAAO,kBAAUsK,EAAS3C,QAAnB,sCACTzH,KAAKyH,QADI,MAKnB,GAAIzH,KAAK+L,QAAU3B,EAAS2B,MAAQ3B,EAAS2B,KAAKpK,UAChD,MAAM,IAAI7B,MAAO,kBAAUsK,EAAS3C,QAAnB,sCACTzH,KAAKyH,QADI,MAInB,IAAIwG,EAAU7D,EAAS+B,KACnB+B,EAAU9D,EAAS0B,WAQvB,GAAImC,IAAYjO,KAAKmM,KACnB6B,EAAUnH,EAAMqH,EAAWlO,KAAK8L,eAG7B,CACH,IAAIlG,EAAI,EACR,GAAe,MAAXqI,EAIFrI,EADeF,EAAAA,QAAMc,QAAQyH,GAChBpI,QAAQgB,EAAMuD,EAASgC,SAAW8B,OAI/CtI,EAAIiB,EAAMqH,EAGZ,GAAiB,MAAblO,KAAKmM,KAIP6B,EADatI,EAAAA,QAAMc,QAAQxG,KAAKmM,MAChBxG,MAAMC,EAAI5F,KAAK8L,YAAc9L,KAAKoM,aAGlD4B,EAASpI,EAAI5F,KAAK8L,WAItB,OAAOkC,2BAqBTG,SAAUtH,EAAKyD,GAEb,OAAOA,EAAOK,YAAY9D,EAAK7G,qCAejCoO,SAAgBvH,GAMd,OAHiB,OAAd7G,KAAKmM,OACNtF,EAAM7G,KAAKmM,KAAKkC,OAAOxH,EAAM7G,KAAKoM,SAAWpM,KAAK8L,YAE7CjF,gCAaTyH,SAAezH,GAGbA,EAAM7G,KAAKoO,gBAAgBvH,GAG3B7G,KAAK8L,WAAa,EAClB9L,KAAKmM,KAAO,KACZnM,KAAKoM,QAAU,EACfpM,KAAKwD,MAAQ,GAMb,IAAK,IAAI5H,EAAI,EAAG2S,EAAM5O,EAAU6O,SAAU5S,EAAI2S,EAAK3S,IAAK,CACtD,IAAI6S,EAAOzO,KAAK+L,KAAKtL,aAAa7E,GAE9B8S,EADO1O,KAAK2O,iBACFhD,oBAAoB,IAAIhM,EAAU/D,IAChD,GAAS,MAAN8S,EACD,MAAM,IAAI5O,MAAJ,6CAAgDlE,IACxDoE,KAAKwD,MAAQkL,EAAGpQ,KAAOmQ,EAEzB,OAAO5H,kCAmBT6D,SAAiBkE,EAAKC,EAAS9E,GAK7B,IAAI+E,EAAU9O,KAAK8L,WAAa8C,EAAK7E,EAIjCgF,EADO/O,KAAK2O,iBACE1D,cAAc,OAAOa,WAIvC,OAAOgD,GAHWD,EAAQ/C,WAAaiD,mCAoBzCtE,SAAiBmE,EAAKI,EAAUjF,GAI9B,IACIgF,EADO/O,KAAK2O,iBACE1D,cAAc,OAAOa,WAavC,OATkB9L,KAAK8L,WAAaiD,EAKPH,EAAO7E,EAInBiF,EAASlD,sCAY5BmD,SAAYpI,GACV,OAAiB,MAAb7G,KAAKmM,KACAnM,KAAKsO,eAAezH,GAEpBA,8BAcXqI,SAAa9N,GAEX,IAAIiM,EAAUrN,KAAK4B,QACC,MAAhByL,EAAQlB,KACVkB,EAAQjB,SAAWhL,EAEnBiM,EAAQvB,YAAc1K,EACxB,IAAI+N,EAAS/N,EAAEjD,WAOf,OANAkP,EAAQ7J,MAAQxD,KAAKoP,YAAYD,EAAQ,IAAKnP,KAAKwD,MAAO,IAAK,KAC/D6J,EAAQ5F,QAAUzH,KAAKoP,YAAYD,EAAQ,IAAKnP,KAAKyH,QAAS,IAAK,KACnE4F,EAAQ9J,QAAUvD,KAAKoP,YAAYD,EAAQ,IAAKnP,KAAKuD,QAAS,IAAK,KACnE8J,EAAQ5J,aAAezD,KAAKoP,YAAYD,EAAQ,IAAKnP,KAAKyD,aACtD,IAAK,KAEF4J,+BAgBTgC,SAAc5B,GAEZ,IAAIJ,EAAUrN,KAAK4B,QAEnB,GAAoB,MAAhByL,EAAQlB,KAAc,CACxB,GAAkB,MAAdsB,EAAMtB,MAAkBsB,EAAM1B,OAAQ0B,EAAM1B,KAAKtK,SAGnD,MAAO,IAAI3B,MAAO,6CAAqCuN,EAAQ7J,MAA7C,KAChB,WAHF6J,EAAQjB,SAAWqB,EAAM3B,gBAMxB,GAAkB,MAAd2B,EAAMtB,KAAc,CAC3B,GAAKkB,EAAQtB,OAAQsB,EAAQtB,KAAKtK,SAKhC,MAAO,IAAI3B,MAAJ,6CAAgD2N,EAAMjK,QAJ7D6J,EAAQjB,QAAUqB,EAAMrB,QAAUiB,EAAQvB,WAC1CuB,EAAQlB,KAAOsB,EAAMtB,UAQvBkB,EAAQvB,YAAc2B,EAAM3B,WA6C9B,OAxCKuB,EAAQtB,MAASsB,EAAQtB,OAASsB,EAAQtB,KAAK3L,QAC9CqN,EAAM1B,KACRsB,EAAQtB,KAAO0B,EAAM1B,KAAKnK,QAE1ByL,EAAQtB,KAAO0B,EAAM1B,KAIhB0B,EAAM1B,MAAQ0B,EAAM1B,gBAAgBpM,GAC3C0N,EAAQtB,KAAKhL,IAAI0M,EAAM1B,MAKzBsB,EAAQ7J,MAAQxD,KAAKoP,YAAY/B,EAAQ7J,MAAO,IAAKiK,EAAMjK,MAAO,IAAK,KACvE6J,EAAQ5F,QAAUzH,KAAKoP,YAAY/B,EAAQ5F,QAAS,IAAKgG,EAAMhG,QAC7D,IAAK,KACH4F,EAAQ9J,SAAWkK,EAAMlK,QAC3B8J,EAAQ9J,QAAUvD,KAAKoP,YAAY/B,EAAQ9J,QAAS,IAAKkK,EAAMlK,QAC7D,IAAK,KACAkK,EAAMlK,UACb8J,EAAQ9J,QAAUkK,EAAMlK,SAC1B8J,EAAQ3F,UAAY,GAChB2F,EAAQ5J,cAAgBgK,EAAMhK,aAChC4J,EAAQ5J,aAAezD,KAAKoP,YAAY/B,EAAQ5J,aAAc,IAC5DgK,EAAMhK,aAAc,IAAK,KACpBgK,EAAMhK,eACb4J,EAAQ5J,aAAegK,EAAMhK,cAI/B4J,EAAQ9C,SAAW8C,EAAQ9C,SAAWkD,EAAMlD,SAMtC8C,EAAQf,eACXe,EAAQf,aAAemB,EAAMnB,cAEzBe,wBAeTiC,SAAO7B,GAEL,IAAIJ,EAAUrN,KAAK4B,QAEnB,GAAoB,MAAhByL,EAAQlB,KACV,MAAO,IAAIrM,MAAJ,2CAA8CuN,EAAQ7J,QAC/D,GAAkB,MAAdiK,EAAMtB,KACR,MAAO,IAAIrM,MAAJ,8CAAiD2N,EAAMjK,QAsDhE,OApDI6J,EAAQ7J,OAASiK,EAAMjK,MACzB6J,EAAQ7J,MAAQxD,KAAKoP,YAAY/B,EAAQ7J,MAAO,IAAKiK,EAAMjK,MAAO,IAAK,KAChEiK,EAAMjK,QACb6J,EAAQ7J,MAAQiK,EAAM8B,aAAa9B,EAAMjK,QAE3C6J,EAAQ5F,QAAUzH,KAAKoP,YAAY/B,EAAQ5F,QAAS,IAAKgG,EAAMhG,QAC7D,IAAK,KAEH4F,EAAQ9J,SAAWkK,EAAMlK,QAC3B8J,EAAQ9J,QAAUvD,KAAKoP,YAAY/B,EAAQ9J,QAAS,IAAKkK,EAAMlK,QAC/D,IAAK,KACEkK,EAAMlK,UACb8J,EAAQ9J,QAAUkK,EAAM8B,aAAa9B,EAAMlK,UAE7C8J,EAAQ3F,UAAY,GAEpB2F,EAAQvB,YAAc2B,EAAM3B,WAExBuB,EAAQ5J,cAAgBgK,EAAMhK,aAChC4J,EAAQ5J,aAAezD,KAAKoP,YAAY/B,EAAQ5J,aAAc,IAC5DgK,EAAMhK,aAAc,IAAK,KACpBgK,EAAMhK,eACb4J,EAAQ5J,aAAegK,EAAM8B,aAAa9B,EAAMhK,eAM9CgK,EAAM1B,OACJsB,EAAQtB,MACNsB,EAAQtB,KAAKpK,UACf0L,EAAQtB,KAAK9L,aACfoN,EAAQtB,KAAOsB,EAAQtB,KAAK9K,IAAIwM,EAAM1B,OAMtCsB,EAAQtB,KAAO0B,EAAM1B,KAAKnK,QAAQV,SAKtCmM,EAAQ9C,SAAW8C,EAAQ9C,SAAWkD,EAAMlD,SAMvC8C,EAAQf,eACXe,EAAQf,aAAemB,EAAMnB,cAExBe,wBAeTmC,WAEE,GAAiB,MAAbxP,KAAKmM,KACP,MAAO,IAAIrM,MAAJ,+CAAkDE,KAAKwD,QAKhE,OAHAxD,KAAKwD,MAAQxD,KAAKuP,aAAavP,KAAKwD,OACpCxD,KAAK8L,WAAa,EAAE9L,KAAK8L,WACzB9L,KAAK+L,KAAK7K,QACHlB,iCAaTuP,SAAa3I,GAEX,GAAIA,EAAUjL,OAAS,EAAG,CACxB,IAAI8T,EAAY7I,EAAU8I,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAC3E,OAAOD,EAAU5O,OAAO,IACtB,IAAK,IAAM+F,EAAY6I,EAAUE,OAAO,GAAI,MAC5C,IAAK,IAAM/I,EAAY6I,EAAW,MAClC,QAAW7I,EAAY,IAAM6I,GAGjC,OAAO7I,6BAmBTwI,SAAYQ,EAAMC,EAAUC,EAAMC,EAAWC,GAE3C,OAAOhQ,KAAKiQ,gBAAgBL,EAAMG,EAAWC,GAC3CH,EAAW7P,KAAKiQ,gBAAgBH,EAAMC,EAAWC,kCAkBrDC,SAAgBlJ,EAAKgJ,EAAWC,GAgB9B,OAdI9F,EAAUC,gBAAgBpD,IAIN,MAAlBA,EAAIlG,OAAO,IAAgC,MAAlBkG,EAAIlG,OAAO,GAHlCkG,EAMG,SAASxI,KAAKwI,GACfgJ,EAAYhJ,EAAMiJ,EAGlBjJ,uBAwBZmJ,SAAMtL,GAEJ,GAAiB,MAAb5E,KAAKmM,KACP,MAAO,IAAIrM,MAAO,6CAAqCE,KAAKwD,MAA1C,MACD,eAUnB,IAJA,IACI2M,EADOnQ,KAAKyH,QACEqG,MAAM,kBACpBsC,EAAQD,EAAOxU,OAEVC,EAAI,EAAGA,EAAIwU,EAAOxU,IAAK,CAC9B,IAAIyU,EAAKF,EAAOvU,GAChB,GAAW,MAAPyU,GAAqB,MAAPA,EAAY,CAC5B,IAAIC,EAAMC,SAASF,GACnB,GAAI3Q,EAAU4Q,GACZH,EAAOvU,GAAMkK,KAAKG,IAAIqK,EAAK1L,GAAGzG,gBAG9B,IADA,IAAIqS,EAAOH,EAAG1U,OACLgN,EAAI6H,EAAO,EAAG7H,GAAK,EAAGA,IAAK,CAClC,IAAI8H,EAAQF,SAASF,EAAG1H,IACxB,IAAKjJ,EAAU+Q,GAAQ,CAIrB,GAHc,MAAVJ,EAAG1H,IAAwB,MAAV0H,EAAG1H,IACtBA,IAEEA,EAAI6H,EAAO,EAAG,CAChB,IAAItK,EAAMqK,SAASF,EAAGV,OAAOhH,IAC7BzC,EAAMJ,KAAKG,IAAIC,EAAKtB,GACpBuL,EAAOvU,GAAKyU,EAAGV,OAAO,EAAGhH,GAAKzC,EAAI/H,WAClCwK,GAAK,OAGLwH,EAAOvU,IAAMgJ,EAAEzG,WACfwK,GAAK,EAEPA,GAAK,KAcf,OANA3I,KAAKyH,QAAU0I,EAAOrP,KAAK,IAE3Bd,KAAK8L,WAAahG,KAAKG,IAAIjG,KAAK8L,WAAYlH,GACxC5E,KAAK+L,MACP/L,KAAK+L,KAAK5K,IAAIyD,GAET5E,4CAqBTwK,SAAwBiD,GACtB,IACIpN,EADOL,KAAK2O,iBACH+B,wBACTC,GAAgB,EACpB,GAAsB,IAAlB3Q,KAAKuK,UAAqC,IAAnBkD,EAAMlD,SAAgB,CAC/C,IAAIqG,EAAU5Q,KAAK+L,KAAKnK,QACpBiP,EAASD,EAAQnQ,aAAaJ,GAClCuQ,EAAQrQ,aAAaF,EAAIwQ,EAAS7Q,KAAKuK,UACvCoG,EAAiBC,EAAQvP,OAAOoM,EAAM1B,WAEnC,GAAuB,IAAnB0B,EAAMlD,UAAoC,IAAlBvK,KAAKuK,SAAgB,CACpD,IAAIqG,EAAUnD,EAAM1B,KAAKnK,QACrBiP,EAASD,EAAQnQ,aAAaJ,GAClCuQ,EAAQrQ,aAAaF,EAAIwQ,EAASpD,EAAMlD,UACxCoG,EAAiBC,EAAQvP,OAAOrB,KAAK+L,MAEvC,OAAO4E,gCAYThC,WAGE,OAFKvH,IACHA,EAAa3H,EAAAA,MAAAA,YACR2H,EAAW5B,oBA9+BTqD,oHCTb,kiBALA,IAAIhJ,EAAOJ,EAAAA,KAAAA,KACPoJ,EAAOpJ,EAAAA,MAAAA,KACP2H,EAAa3H,EAAAA,MAAAA,WACb8F,EAAe9F,EAAAA,MAAAA,aAINuJ,EAAAA,WAKX3K,SAAAA,IAAc,UAGZ2B,KAAK8Q,OAAS1J,EAAW5B,cACzBxF,KAAK+Q,SAAWxL,EAAaC,cAK7BxF,KAAKjB,UAAYc,EAAKd,UACtBiB,KAAKhB,WAAaa,EAAKb,WAOvBgB,KAAKb,WAAa,GAIlBa,KAAKgR,YAAc,qBACnBhR,KAAKiR,UAAYjR,KAAKgR,YAAYrV,OAClCqE,KAAKkR,WAAa,qBAClBlR,KAAKmR,UAAYnR,KAAKkR,WAAWvV,OAIjCqE,KAAKoR,YAAc,KACnBpR,KAAKqR,UAAY,KAMjBrR,KAAKsR,QAAU,GAGftR,KAAKuR,aAAe,GAGpBvR,KAAKwR,aAAe,GAGpBxR,KAAKyR,YAAc,8CAYrBtI,SAAkBC,QACJrJ,IAARqJ,GAAqBA,GACvBpJ,KAAKjB,UAAYc,EAAKZ,cACtBe,KAAKhB,WAAaa,EAAKX,iBAGvBc,KAAKjB,UAAYc,EAAKd,UACtBiB,KAAKhB,WAAaa,EAAKb,oDAY3BqK,SAAyBD,GAErBpJ,KAAKb,gBADKY,IAARqJ,GAAqBA,EACLvJ,EAAKV,WAEL,8BA0CtB+L,SAAY3B,EAAME,EAASD,GAIzB,GAAa,MAFbD,EAAOA,EAAKU,SAEgB,OAATV,EACjB,MAAO,IAAIzJ,MAAM,qDAGH,aAAZ2J,GACFzJ,KAAKoR,YAAcvR,EAAKlB,aACxBqB,KAAKqR,UAAYxR,EAAKjB,aAGtBoB,KAAKoR,YAAcvR,EAAKhB,aACxBmB,KAAKqR,UAAYxR,EAAKf,YAItBkB,KAAK0R,kBADS3R,IAAZyJ,IAAqC,IAAZA,EACP,KAGA,GAGtBxJ,KAAKsR,QAAU,GACftR,KAAKuR,aAAe,GACpBvR,KAAKwR,aAAe,GAEpB,IAAIG,EAAapI,EACbrC,EAAS,GAUb,GADAqC,EAAOvJ,KAAK4R,gBAAgBrI,GACxBvJ,KAAKsR,QAAQ3V,OAAS,EACxBuL,EAAO,GAAK,KACZA,EAAO,GAAK,SAET,CAEiBlH,KAAKsR,QAAQ3V,OAAjC,IAMIkW,EAAQ,KACZ,IAAKA,KAAShS,EAAKN,WACjB,MAAgC,IAAzBgK,EAAKuI,QAAQD,IAClBtI,EAAOA,EAAKmG,QAAQmC,EAAOhS,EAAKN,WAAWsS,IAM/C,GAAItI,EAAKuI,QAAQ,MAAQ,EACvB,MAAO,IAAIhS,MAAM,qDAQnB,IAAIiS,GADJ7K,EAASlH,KAAKgS,gBAAgBzI,EAAMoI,IACb,IAMnBzH,EAAU+H,cAAcF,IAAmC,kBAAdA,KAC/CA,EAAY,IAAIlJ,EAAK,CACnB,QAAW8I,EACX,WAAcI,EACd,MAASJ,IAEXzK,EAAO,GAAK6K,GAOhB,OAHA7K,EAAO,GAAKlH,KAAKsR,QACbtR,KAAK0R,cAAgB1R,KAAK0R,aAAa/V,OAAS,IAClDuL,EAAO,GAAKlH,KAAK0R,cACZxK,iCAgCT8K,SAAgBzI,EAAMoI,GAGpB,IAAII,EAAY,KAGZG,EAAgBlS,KAAKsR,QAAQ3V,OAAS,EAKtCwW,EAAanS,KAAKoS,eAAe7I,EAAMoI,GAIvCxB,EAAS,GAGb,KANA+B,EAAgBC,EAAW,IAMP,CAClB5I,EAAO4I,EAAW,GAClBR,EAAaQ,EAAW,GAIxB,IAAIE,EAAWrS,KAAKsS,gBAAgB/I,EAAMoI,GAG1C,KADAO,EAAgBG,EAAS,IACL,CAClBlC,EAASkC,EAAS,GAClBV,EAAaU,EAAS,GAGtB,IADA,IAAI7B,EAAOL,EAAOxU,OACT4W,EAAK,EAAGA,EAAK/B,EAAM+B,IAAM,CAEhC,IAAIC,EAAUrC,EAAOoC,GAAPpC,GAMd,GAAIjG,EAAU+H,cAAcO,GAC1BrC,EAAOoC,GAAPpC,GAAmBsC,OAAOD,QAQ1B,GAAIA,EAAQV,QAAQ9R,KAAKgR,cAAgB,EAAG,CAC1C,IAAI0B,EAAY1S,KAAK2S,eAAeH,EAASb,GAGxCO,IACHA,EAAgBQ,EAAU,IAKvBR,IACH/B,EAAOoC,GAAPpC,GAAmBuC,EAAU,QAM5B,CACH,IAAIE,EAAO5S,KAAK6S,UAAUL,EAASb,GAEnB,OAAZiB,EAAK,GACPV,GAAgB,GAGhB/B,EAAOoC,GAAPpC,GAAmByC,EAAK,GACxBjB,EAAaiB,EAAK,OAwB9B,OAfKV,GAEgB,OAAd/B,EAAO,IAA6B,MAAdA,EAAO,SACTpQ,IAApBoQ,EAAO,GAAPA,IAAqD,OAApBA,EAAO,GAAPA,IACP,IAAxBnQ,KAAKsR,QAAQ3V,SAElBqE,KAAKsR,QAAQhR,KAAM,uBAAeqR,EAAf,yIAGnBO,GAAgB,GAGfA,IACHH,EAAY/R,KAAK8S,uBAAuB3C,EAAQwB,IAE3C,CAACI,EAAWJ,kCAiBrBC,SAAgBmB,GAEd,IADA,IAAIC,EAAYD,EAAQjB,QAAQ,KACzBkB,GAAa,GAAG,CAErB,IAAIC,EAAaF,EAAQjB,QAAQ,KACjC,GAAImB,EAAa,EACfjT,KAAKsR,QAAQhR,KAAK,oDAChBN,KAAKjB,UAAYgU,EAAQpD,OAAOqD,GAChChT,KAAKhB,YACPgU,GAAa,MAEV,CACH,IAAIE,EAAWH,EAAQI,UAAUH,EAAWC,EAAa,GACrDG,EAAOpT,KAAKwR,aAAa7V,OAAOwC,WACpC4U,EAAUA,EAAQrD,QAAQwD,EAAUlT,KAAKkR,WAAakC,EACpDpT,KAAKkR,YACPlR,KAAKwR,aAAalR,KAAK4S,GACvBF,EAAYD,EAAQjB,QAAQ,MAKhC,IAAImB,EAAaF,EAAQjB,QAAQ,KAKjC,OAJImB,GAAc,GAChBjT,KAAKsR,QAAQhR,KAAK,oDAChBN,KAAKjB,UAAYgU,EAAQI,UAAU,EAAGF,EAAa,GACnDjT,KAAKhB,YACF+T,gCAkCTX,SAAeW,EAASpB,GAkBtB,IAfA,IAAI0B,EAAY,GACZC,EAAa,EACbC,GAAiB,EAEjBC,EAAKxT,KAAKuR,aAAa5V,OAKvB8X,EAAY,EAMG,KAAZV,IAAmBQ,GAAgB,CACxC,IAAIG,EAAS,EACTC,EAAU,EACVC,EAAUb,EAAQjB,QAAQ,KAK9B,GAAI8B,EAAU,EAAG,CACf,IAAIC,EAAWd,EAAQjB,QAAQ,KAC/B,GAAI+B,GAAY,EAAG,CACjB,IAAIC,EAAU,+DACMf,EAAQI,UAAU,EAAGU,EAAWJ,IADtC,UAETzT,KAAKjB,WAFI,OAEQgU,EAAQpD,OAAOkE,EAAU,IAFjC,OAEsC7T,KAAKhB,YACrD6U,EAAWd,EAAQpX,OAAS,IAC9BmY,GAAU,GAAJ,OAAOf,EAAQpD,OAAOkE,EAAW,KAEzC7T,KAAKsR,QAAQhR,KAAKwT,GAClBT,EAAUC,GAAcP,EACxBQ,GAAiB,OAOjBF,EAAUC,GAAcP,EACxBA,EAAU,OAMT,CACHW,GAAU,EAEV,IAAIlD,EAAOuC,EAAQpX,OACfiY,EAAU,IACZP,EAAUC,KAAgBP,EAAQpD,OAAO,EAAGiE,IAY9C,IAFA,IAAIC,EAAW,EACXE,EAAIH,EAAU,EACXG,EAAIvD,GAAQkD,GAAUC,EAASI,IACjB,MAAfhB,EAAQgB,GACVL,GAAU,EACY,MAAfX,EAAQgB,KACfJ,GAAW,GASf,GAAID,IAAWC,EAAS,CACtBE,EAAWE,EACXV,EAAUC,KAAgBtT,KAAKgR,YAAcwC,EAAGrV,WAAa6B,KAAKgR,YAClE,IAAI3G,EAAYrK,KAAKgS,gBACnBe,EAAQI,UAAUS,EAAU,EAAGC,EAAW,GAAIlC,GAC3B,OAAjBtH,EAAU,GACZkJ,GAAiB,GAEjB5B,EAAatH,EAAU,GACvBrK,KAAKuR,aAAaiC,KAAQnJ,EAAU,GACpC0I,EAAUA,EAAQpD,OAAOkE,GACzBJ,EAAYI,QAOdR,EAAU/S,KAAKqR,EAAWhC,OAAOiE,IACjC5T,KAAKsR,QAAQhR,KAAM,+DACdqR,EAAWwB,UAAU,EAAGS,EAAUH,IADpB,UAEdzT,KAAKjB,WAFS,OAEG4S,EAAWhC,OAAOiE,EAAS,IAF9B,UAGd5T,KAAKhB,YAHS,OAGI2S,EAAWhC,OAAOiE,EAAU,KACnDL,GAAiB,GAMvB,OAFIA,IACFvT,KAAKuR,aAAe,IACf,CAAC8B,EAAUvS,KAAK,IAAK6Q,EAAY4B,kCAuB1CjB,SAAgB/I,EAAMoI,GAMpB,IAAIqC,EAAUzK,EAAKuE,MAAM,kBACrBoE,GAAgB,EAChB/B,EAAS,GACT8D,EAAgB,2CAiBpB,GAZmB,MAAfD,EAAQ,GACVA,EAAQ5I,QAAQ,KAIM,MAAf4I,EAAQ,KACfhU,KAAKsR,QAAQhR,KAAM,UAAEqR,EAAF,6KAInBO,GAAgB,IAEbA,EAAe,CAMlB,IAAKhI,EAAUC,gBAAgB6J,EAAQ,IAAK,CAC1C,IAAIE,EAASF,EAAQ,GAAGlG,MAAMmG,GAC9B,GAAIC,GAA4B,IAAlBA,EAAOvY,QAA8B,KAAduY,EAAO,IAC5B,KAAdA,EAAO,IAAoD,IAAvCA,EAAO,GAAGpC,QAAQ9R,KAAKkR,YAAmB,CAC9D,IAAIiD,EAAUD,EAAO,GAErB,IAAKhC,IAA0D,IAAzCgC,EAAO,GAAGpC,QAAQ9R,KAAKgR,aAAqB,CAChE,IAAIoD,EAAapU,KAAK2S,eAAeuB,EAAO,GAAIvC,GAChDuC,EAAO,GAAKE,EAAW,GAAXA,QACZD,EAAU,IAAH,OAAOD,EAAO,GAAd,KACPhC,EAAgBkC,EAAW,GAExBlC,IACHlS,KAAKsR,QAAQhR,KAAM,UAAE4T,EAAO,IAAT,OAAcC,EAAd,0CACZnU,KAAKoR,aADO,OACO8C,EAAO,GADd,YACoBC,GADpB,OAC8BnU,KAAKqR,YACtDM,EAAaA,EAAWjC,QAAXiC,GAAAA,OAAsBuC,EAAO,IAA7BvC,OAAkCwC,GAAlCxC,GAAAA,OACRuC,EAAO,GADCvC,KAAAA,OACKwC,IAClBH,EAAQ,GAAKE,EAAO,GACpBF,EAAQ5I,QAAQ8I,EAAO,GAAI,OAYjC,IAAKhC,EAAe,CAClB,IAAIK,EAAKyB,EAAQrY,OACjBwU,EAAS,CAAC,CAACkE,GAAI,GAAIhE,GAAI2D,EAAQ,KAC/B,IAAK,IAAI9V,EAAI,EAAGA,EAAIqU,EAAIrU,IAAK,CAI3B,IAAIoW,EAAQN,EAAQ9V,KAGpB,GAAK8V,EAAQ9V,GAOR,IAA4C,IAAxC2B,EAAKpB,UAAUqT,QAAQkC,EAAQ9V,IACtC8B,KAAKsR,QAAQhR,KAAM,UAAEqR,EAAF,uEACgB3R,KAAKjB,WADrB,UAEduV,GAFc,OAENtU,KAAKhB,WAFC,cAEegB,KAAKjB,WAFpB,UAGdiV,EAAQ9V,IAHM,OAGD8B,KAAKhB,WAHJ,aAGmBgB,KAAKjB,WAHxB,UAIduV,GAJc,OAINN,EAAQ9V,IAJF,OAIO8B,KAAKhB,WAJZ,MAKnBd,EAAIqU,EACJL,GAAgB,OAWhB,GAAKhI,EAAUC,gBAAgB6J,EAAQ9V,IAgDrCiS,EAAO7P,KAAK,CAAC+T,GAAIC,EAAOjE,GAAI2D,EAAQ9V,SAhDM,CAC1C,IAAIqW,EAAUP,EAAQ9V,GAAG4P,MAAMmG,GAC/B,GAAIM,GAA8B,IAAnBA,EAAQ5Y,QAA+B,KAAf4Y,EAAQ,IAC9B,KAAfA,EAAQ,IAAqD,IAAxCA,EAAQ,GAAGzC,QAAQ9R,KAAKkR,YAAmB,CAChE,IAAIsD,EAAgBD,EAAQ,GAC5B,GAAKrC,IAA2D,IAA1CqC,EAAQ,GAAGzC,QAAQ9R,KAAKgR,aAoBzC,CACH,IAAIyD,EAAY,IAAMF,EAAQ,GAAK,IAAMA,EAAQ,GAAK,IAClDpC,EAAanS,KAAKoS,eAAeqC,EAAW9C,GAG5CQ,EAAW,IACbjU,EAAIqU,EACJL,GAAgB,IAGhBlS,KAAKsR,QAAQhR,KAAM,UAAEiU,EAAQ,GAAV,0CACIvU,KAAKoR,aADT,OACuBmD,EAAQ,GAD/B,YACqCA,EAAQ,IAD7C,UAEdvU,KAAKqR,YACVM,EAAaA,EAAWjC,QAAQ6E,EAAQ,GAAIE,GAC5CtE,EAAO7P,KAAK,CAAC+T,GAAIC,EAAOjE,GAAI8B,EAAW,UAlCwB,CACjE,IAAIiC,EAAapU,KAAK2S,eAAe4B,EAAQ,GAAI5C,GAIjD,GAHA4C,EAAQ,GAAKH,EAAW,GAAXA,QACbI,EAAgB,IAAH,OAAOD,EAAQ,GAAf,OACbrC,EAAgBkC,EAAW,IACP,CAClBpU,KAAKsR,QAAQhR,KAAM,UAAEiU,EAAQ,IAAV,OAAeC,EAAf,0CACIxU,KAAKoR,aADT,OACuBmD,EAAQ,GAD/B,YACqCC,GADrC,UAEdxU,KAAKqR,YACV,IAAIqD,EAAe,IAAH,OAAOH,EAAQ,GAAf,YAAqBC,EAArB,KAChB7C,EAAaA,EAAWjC,QAAXiC,GAAAA,OAAsB4C,EAAQ,IAA9B5C,OAAmC6C,GAC9CE,GACF,IAAIC,EAAa3U,KAAKoS,eAAesC,EAAc/C,IACnDO,EAAgByC,EAAW,KAEzBxE,EAAO7P,KAAK,CAAC+T,GAAIC,EAAOjE,GAAIsE,EAAW,YAwB7CxE,EAAO7P,KAAK,CAAC+T,GAAIC,EAAOjE,GAAI2D,EAAQ9V,UApExC8B,KAAKsR,QAAQhR,KAAM,UAAEqR,EAAF,4EACqB3R,KAAKjB,WAD1B,UAEduV,GAFc,OAENtU,KAAKhB,WAFC,MAGnBd,EAAIqU,EACJL,GAAgB,IA0ExB,MAAO,CAAC/B,EAAQwB,EAAYO,iCAgC9BS,SAAeiC,EAAMjD,GACnB,IAAIO,GAAgB,EAEhB7E,EAAU,KAUVwH,EAAQD,EAAK9C,QAAQ9R,KAAKgR,aAC1B8D,EAAU,KACVD,EAAQ,IACVC,EAAUF,EAAKjF,OAAO,EAAGkF,EAAQ,IAEnC,IAAIE,EAAQH,EAAKI,YAAYhV,KAAKgR,aAC9BiE,EAAU,KACVF,EAAQ/U,KAAKiR,UAAY2D,EAAKjZ,SAChCsZ,EAAUL,EAAKjF,OAAOoF,EAAQ/U,KAAKiR,YAIrC,IAAIiE,EAAWN,EAAKzB,UAAU0B,EAAQ7U,KAAKiR,UAAW8D,GAItD,IAAI7K,EAAUC,gBAAgB+K,GAW5B,MAAO,IAAIpV,MAAO,mDAA2CoV,EAA3C,wBACJN,EADI,MAMpB,GAhBEvH,EAAUrN,KAAKuR,aAAakB,OAAOyC,IAKjCN,EAJG1K,EAAU+H,cAAc5E,GAIpBA,EAHAA,EAAQ5F,QAcfqN,EAEF,GAAI5K,EAAUC,gBAAgB2K,GAAU,CACtC,IAAIK,EAAO9H,EAAQ1M,YAAY,cAC/BwU,GAAQ1C,OAAOqC,GACfzH,EAAQJ,WAAW,CAAC,WAAckI,IAClCP,EAAO,GAAH,OAAME,EAAN,YAAiBF,GACrB5U,KAAKsR,QAAQhR,KAAM,UAAEwU,GAAF,OAAYF,EAAZ,gCACjB5U,KAAKoR,YAAcwD,EAAO5U,KAAKqR,gBAGjC,GAAIyD,EAAQhD,QAAQ9R,KAAKkR,aAAe,EAAG,CACzC,IAAIkE,EAAUpV,KAAKqV,aAAaP,EAASnD,GAKzC,GAAIyD,EAAQ,IAAMA,EAAQ,GACxB,MAAO,IAAItV,MAAO,gDACbgV,EADa,oFAEUzH,EAAQ5F,UAItCmN,GAAQQ,EAAQ,GAChBpV,KAAKsR,QAAQhR,KAAM,yBAAiB8U,EAAQ,GAAzB,0CACMpV,KAAKoR,YAAcwD,EAAO5U,KAAKqR,gBAKrD,GAAKrR,KAAK0R,aAMV,CAEHQ,EAAkC,cADhBlS,KAAKsV,gBAAgBR,QANvC9U,KAAKsR,QAAQhR,KAAM,UAAEwU,EAAF,oCAAqCF,EAArC,oDAEnB1C,GAAgB,EAatB,GAAI+C,EAEF,GAAIA,EAAQnD,QAAQ9R,KAAKkR,aAAe,EAAG,CACzC,IAAIkE,EAAUpV,KAAKqV,aAAaJ,EAAStD,GAKzC,GAAIyD,EAAQ,IAAMA,EAAQ,GACxB,MAAO,IAAItV,MAAO,+CACbmV,EADa,oFAEU5H,EAAQ5F,UAItCmN,GAAQQ,EAAQ,QAMhB,GAAIlL,EAAUC,gBAAgB8K,GAC5BL,GAAQK,EACR5H,EAAUA,EAAQ6C,MAAMuC,OAAOwC,IAC/BjV,KAAKsR,QAAQhR,KAAM,uBAAe2U,EAAf,6FAEjBjV,KAAKoR,YAAcwD,EAAO5U,KAAKqR,gBAK9B,GAAKrR,KAAK0R,aAMV,CAEHQ,EAAkC,cADhBlS,KAAKsV,gBAAgBR,QANvC9U,KAAKsR,QAAQhR,KAAM,eAAO2U,EAAP,oCAA0CL,EAA1C,oDAEnB1C,GAAgB,EAyBtB,OAhBKA,IACE7E,EAMInD,EAAU+H,cAAc5E,GAC/BA,EAAU,IAAIxE,EAAK,CAAC,QAAWwE,EAC/B,WAAcA,EACd,MAASA,IAGTA,EAAQ5F,QAAUmN,EAXlBvH,EAAU,IAAIxE,EAAK,CACjB,QAAW+L,EACX,WAAc,EACd,MAASA,KAWR,CAACvH,EAAS6E,+BAyBnBmD,SAAaT,EAAMjD,GAIjB,IAAI4D,EAAQX,EAAK9C,QAAQ9R,KAAKkR,YAC1BsE,EAAaD,EAAQ,EAAKX,EAAKzB,UAAU,EAAGoC,GAAS,KAC3C,IAAVA,IACFX,EAAOA,EAAKjF,OAAO4F,IAIrB,IAAIE,EAAQb,EAAK9C,QAAQ9R,KAAKkR,WAAY,GACtCwE,EAAYD,EAAQzV,KAAKmR,UAAayD,EAAKjZ,OAC7CiZ,EAAKjF,OAAO8F,EAAQzV,KAAKmR,WAAa,KAIpCwE,EAAMf,EAAKzB,UAAUnT,KAAKmR,UAAWsE,GACrCG,EAASnD,OAAOkD,GACpB,IAAKzL,EAAUC,gBAAgBwL,IAAQC,GAAU5V,KAAKwR,aAAa7V,OACjE,MAAO,IAAImE,MAAO,sDAA8C6V,EAA9C,wBACVf,EADU,kCACoBjD,IAKxC,MAAO,CADPiD,EAAO5U,KAAKwR,aAAaoE,GACXJ,EAAWE,kCA6B3BJ,SAAgBV,GAEd,IAAI1N,EAASgD,EAAUa,YAAY6J,GACnC,GAAyB,cAArB1N,EAAM,OAA4B,CACpC,IAAI2O,EAAU,GACdA,EAAO,IAAW,UAAEjB,EAAF,wFAElBiB,EAAO,YAAkBjB,EACzB,IAAIkB,EAAS5O,EAAM,MAAUvL,OAC7Bka,EAAO,MAAY,GACnB,IAAK,IAAIzU,EAAI,EAAGA,EAAI0U,EAAQ1U,IAAK,CAC/B,IAAI2U,EAAO7O,EAAM,MAAU9F,GACvB4U,EAAY,CAACD,EAAI,KAAUA,EAAI,KAAUA,EAAI,UAEjDF,EAAO,MAAUvV,KAAK0V,GAExBhW,KAAK0R,aAAapR,KAAKuV,QAGvB7V,KAAKsR,QAAQhR,KAAM,UAAEsU,EAAF,+DAGrB,OAAO1N,EAAM,gCAyBf2L,SAAUoD,EAAOtE,GAIf,IAAItE,EAAUrN,KAAK8Q,OAAO7F,cAAcgL,GACxC,GAAI5I,EACFA,EAAUA,EAAQzL,aAKf,GAAIqU,EAAMnE,QAAQ9R,KAAKkR,aAAe,EAAG,CAC5C,IAAIgF,EAAalW,KAAKmW,uBAAuBF,EAAOtE,IACpDtE,EAAU6I,EAAW,MAEnBvE,EAAauE,EAAW,QAQvB,CAMH,GAAID,EAAMnE,QAAQ,MAAQ,EAAG,CAC3B,IAAIsE,EAAUH,EAAMvG,QAAQ,IAAK,MACjCrC,EAAUrN,KAAK8Q,OAAO7F,cAAcmL,OAElC/I,EAAUA,EAAQzL,SACV6F,QAAU4F,EAAQ5F,QAAQiI,QAAQ,IAAK,KAC/CrC,EAAQ9J,QAAU8J,EAAQ9J,QAAQmM,QAAQ,IAAK,MAKnD,IAAKrC,EAAS,CACZ,IAAIgJ,EAAc,IAAMJ,EAAQ,KAChC5I,EAAUrN,KAAK8Q,OAAO7F,cAAcoL,MAElChJ,EAAUA,EAAQzL,QAClB+P,EAAaA,EAAWjC,QAAQuG,EAAOI,GACvCrW,KAAKsR,QAAQhR,KAAM,UAAE2V,EAAF,mDACdI,EADc,UACQrW,KAAKoR,YADb,UAEdiF,EAFc,aAEEhJ,EAAQ7J,MAFV,YAEmBxD,KAAKqR,aAK/C,IAAKhE,EAAS,CACZ,IAAIiJ,EAAatW,KAAK8Q,OAAOyF,cAAcN,GAC3C,GAAIK,GAAcA,EAAW3a,OAAS,EAAG,CAMvC,IAJA,IAAI6a,EAAU,qBAAuBP,EAAQ,QAD7C5I,EAAUiJ,EAAW,GAAG1U,SAEd6F,QAAU,MAAQzH,KAAKoR,YAC/B/D,EAAQ5F,QAAUzH,KAAKqR,UACrBoF,GAAS,EACJC,EAAI,EAAGA,EAAI1W,KAAKsR,QAAQ3V,SAAW8a,EAAQC,IAClDD,EAASzW,KAAKsR,QAAQoF,KAAOF,EAC1BC,GACHzW,KAAKsR,QAAQhR,KAAKkW,GACpB,IAAIG,EAAO,IAAIC,OAAO,cAAiBX,EAAQ,eAC3CY,EAAMlF,EAAW7D,MAAM6I,GAC3BhF,EAAaA,EAAWjC,QAAQiH,EAAME,EAAI,GAAKxJ,EAAQ5F,QAAUoP,EAAI,IACrEZ,EAAQ5I,EAAQ5F,SAMpB,IAAK4F,EAAS,CAKZ,IAAIwE,EAAQ,KACZ,IAAKA,KAAShS,EAAKN,YAC8B,IAA3C0W,EAAMnE,QAAQjS,EAAKN,WAAWsS,MAChCoE,EAAQA,EAAMvG,QAAQ7P,EAAKN,WAAWsS,GAAQA,KAElDxE,EAAUrN,KAAK8Q,OAAO7F,cAAcgL,MAElC5I,EAAUA,EAAQzL,SAEtB,IAAKyL,EAAS,CAEZ,IAAIyJ,EAAWb,EACXc,EAAW,KACX7Q,EAAM,KACN8Q,EAAU,KACVC,EAAS,KACTC,EAAS,KACTC,EAAS,KAITC,EAAapX,KAAKqX,oBAAoBpB,GAU1C,GATImB,IACFnB,EAAQmB,EAAW,GACnBlR,EAAMkR,EAAW,GACjBL,EAAW/W,KAAK8Q,OAAO7F,cAAcgL,KAMlCc,IAEHC,EAAUf,EAAMpV,OAAO,GACvBoW,EAASjX,KAAK+Q,SAAS7L,gBAAgB8R,IAG3B,CACVE,EAASD,EAAOpT,WAChBsT,EAASF,EAAO/S,SAChB,IAAIoT,EAAWN,EAAQrb,OACvBsa,EAAQA,EAAMtG,OAAO2H,IAGrBP,EAAW/W,KAAK8Q,OAAO7F,cAAcgL,KAOT,KAAXe,GAAwC,KAAtBf,EAAMtG,OAAO,EAAG,KACjDqH,EAAU,KAEVE,GADAD,EAASjX,KAAK+Q,SAAS7L,gBAAgB8R,IACvBnT,WAChBoS,EAAQA,EAAMtG,OAAO,GAGrBoH,EAAW/W,KAAK8Q,OAAO7F,cAAcgL,IAS3C,GAAKc,EAUA,EAGH1J,EAAU0J,EAASnV,SACX8F,UAAY,GACpB,IAAI6P,EAASlK,EAAQ1M,YAAY,QAC7B6W,EAASnK,EAAQ1M,YAAY,cAC7B8W,EAAUpK,EAAQ1M,YAAY,SAC9B+W,EAAYrK,EAAQ1M,YAAY,WAChCgX,EAAiBtK,EAAQ1M,YAAY,gBAGzC,GAAIuF,EAAK,CAEP,IAAI0R,EADJ1R,EAAMqK,SAASrK,GAEXqR,IACFA,EAASA,EAAOpW,IAAI+E,IACtBsR,EAAS1R,KAAKG,IAAIuR,EAAQtR,GAC1BmH,EAAQJ,WAAW,CAAC,WAAcuK,IAG9BP,GAMEE,IACFS,GAAUX,EAAO/S,SACjBgT,EAASpR,KAAKG,IAAI,GAAI2R,IAaxBX,IACE5J,EAAQlB,KACVkB,EAAQJ,WAAW,CAAC,QAAWiK,KAG/BM,GAAUN,EACV7J,EAAQJ,WAAW,CAAC,WAAcuK,MAKtC,IAAIK,EAAUxK,EAAQ5F,QAatB,GAZIwP,IACFQ,EAAUR,EAAOjT,UAAYyT,EAC7BI,EAAUb,EAAUa,EACpBH,EAAYT,EAAOlT,YAAc2T,EACjCC,EAAiBV,EAAOhT,iBAAmB0T,EAC3CtK,EAAQJ,WAAW,CACjB,MAASwK,EACT,QAAWI,EACX,QAAWH,EACX,aAAgBC,KAGhBzR,EAAK,CACP,IAAI4R,EAAS5R,EAAI/H,WACjBkP,EAAQJ,WAAW,CACjB,MAASwK,EAAU,QAAUK,EAAS,SACtC,QAAWD,EAAUC,EACrB,QAAWJ,EAAYI,EACvB,aAAgBH,EAAiB,QAAUG,EAAS,iBA/ExD,GAFAzK,EAAU,KAENrN,KAAK0R,aACW1R,KAAKsV,gBAAgBwB,QAGvC9W,KAAKsR,QAAQhR,KAAb,UAAqBwW,EAArB,gCAkFR,MAAO,CAACzJ,EAASsE,yCAiBnBwE,SAAuBF,EAAOtE,GAE5B,IAAItE,EAAU,KAGV+H,EAAUpV,KAAKqV,aAAaY,EAAOtE,GACnCoG,EAAW3C,EAAQ,GACnB4C,EAAc5C,EAAQ,GACtB6C,EAAc7C,EAAQ,GAItBpV,KAAKb,aAAyD,IAA3Ca,KAAKsR,QAAQQ,QAAQ9R,KAAKb,aAC/Ca,KAAKsR,QAAQhR,KAAKN,KAAKb,YAOzB,IAAI+Y,EAASlY,KAAKsR,QAAQ3V,OAC1B,GAAKqc,GAAgBC,EA4BnB,GAAID,IAAgBC,EAIlB,GAAI/N,EAAU+H,cAAc+F,GAC1B3K,EAAU2K,MAGP,CACH,IAAIG,EAAYnY,KAAK6S,UAAUmF,EAAarG,GAGxCwG,EAAU,KACZ9K,EAAU8K,EAAU,IACZ1Q,SAAWsQ,EACnBpG,EAAawG,EAAU,IAIvBnY,KAAKsR,QAAQhR,KAAM,oCAA4B0X,EAA5B,4CACUD,EADV,WAQpB,IAAKC,GAAeC,EAIvB,GAAI/N,EAAU+H,cAAcgG,GAC1B5K,EAAU4K,EAAcF,EACxB/X,KAAKsR,QAAQhR,KAAM,yBAAiByX,EAAjB,uEACdE,GAA8BjY,KAAKoR,YAAc/D,EACpDrN,KAAKqR,eAEJ,CACH,IAAI8G,EAAYnY,KAAK6S,UAAUoF,EAAatG,GACxCwG,EAAU,KACZ9K,EAAU8K,EAAU,IACZ1Q,SAAWsQ,EACnBpG,EAAatE,EAAQ5F,QACrBzH,KAAKsR,QAAQhR,KAAM,yBAAiByX,EAAjB,0CACM/X,KAAKoR,YAAc/D,EAAQ5F,QAClDzH,KAAKqR,YAIPrR,KAAKsR,QAAQhR,KAAM,oCAA4B0X,EAA5B,2CACSD,EADT,WASvB/X,KAAKsR,QAAQhR,KAAM,oCAA4B0X,GAA5B,OAA0CD,GAA1C,UACdE,EADc,iGAtFW,CAChC,IAAIG,EAAc,IAAML,EAAS5E,UAAU,EAAG4E,EAASpc,OAAS,GAAK,IACjEwc,EAAYnY,KAAK6S,UAAUuF,EAAazG,GAIxCwG,EAAU,IACZ9K,EAAU8K,EAAU,GACpBxG,EAAaA,EAAWjC,QAAQqI,EAAUK,GAC1CpY,KAAKsR,QAAQhR,KAAM,UAAEyX,EAAF,mDACdK,EADc,UACQpY,KAAKoR,YADb,UAEdgH,EAFc,aAEE/K,EAAQ7J,MAFV,YAEmBxD,KAAKqR,cAKvCrR,KAAKsR,QAAQ3V,OAASuc,GACxBlY,KAAKsR,QAAQ+G,MAEfpC,EAAQ,EACR5I,EAAU,GAwEd,MAAO,CAACA,EAAUsE,yCAqBpBmB,SAAuB3C,EAAQwB,GAE7B,IAAII,EAAY5B,EAAO,GAAPA,GACZjG,EAAU+H,cAAcF,KAC1BA,EAAY,IAAIlJ,EAAK,CAAC,QAAYkJ,EAChC,WAAeU,OAAOV,GACtB,MAAUA,KAMd,IAJA,IAAIvB,EAAOL,EAAOxU,OACduW,GAAgB,EAGXoG,EAAK,EAAIA,EAAK9H,IAAU0B,EAAeoG,IAAM,CACpD,IAAIC,EAAWpI,EAAOmI,GAAPnI,GAMf,GALIjG,EAAU+H,cAAcsG,KAC1BA,EAAW,IAAI1P,EAAK,CAAC,QAAY0P,EAC/B,WAAe9F,OAAO8F,GACtB,MAASA,KAEI,OAAbA,GACsB,kBAAbA,IAA4BA,EAAS5X,YAAe,CAC/D,IAAI6X,EAAa,uBAAe7G,EAAf,4BACD,UACZ4G,IACFC,GAAc,YAAIxY,KAAKjB,WAAT,OAAqBwZ,EAASpa,YAA9B,UACE6B,KAAKhB,WADP,MAGhBwZ,GAAa,wCACbxY,KAAKsR,QAAQhR,KAAKkY,GAClBtG,GAAgB,OAGhB,IAOUH,EAJe,MADV5B,EAAOmI,GAAPnI,GAKO4B,EAAUzC,OAAOiJ,GACjBxG,EAAU1C,cAAckJ,GAE9C,MAAO3N,GACL5K,KAAKsR,QAAQlG,QAAQR,EAAIC,SACzBqH,GAAgB,EAChBH,EAAY,MAIlB,OAAOA,qCA4BTsF,SAAoBpB,GAElB,IAAIvV,EAAM,GACNmW,EAAMZ,EAAMnI,MAAM,4BAWtB,OAPI+I,GAAOA,EAAI,IAAiB,KAAXA,EAAI,IACvBnW,EAAIJ,KAAKuW,EAAI,IACbnW,EAAIJ,KAAKuW,EAAI,KAGbnW,EAAM,KAEDA,QAt9CEsI,SAu+CbA,EAAWxD,YAAc,WACvB,OAAO,IAAIwD,mJC3+Cb,IAAInJ,EAAOJ,EAAAA,KAAAA,KAmsBPgZ,EAAqB,IAjsBnBC,WAqBJra,SAAAA,IAAc,UAUZ2B,KAAK2Y,WAAa,GASlB3Y,KAAK4Y,WAAa,GAQlB5Y,KAAK6Y,WAAa,GAQlB7Y,KAAK8Y,aAAe,GAYpB9Y,KAAK+Y,gBAAkB,GAStB/Y,KAAKgZ,cAAgB,GAWtBhZ,KAAKiZ,cAAgB,sCAUvB5Q,WACE,OAAOzL,OAAO6F,KAAKzC,KAAK4Y,YAAYjd,8BAYtCmN,SAAQtB,GAEMA,EAAO,OAEjBxH,KAAKkZ,YAAY1R,GAGnBxH,KAAKmZ,YAAY3R,GACjBxH,KAAKoZ,cAAc5R,GAEnB,IACMA,EAAO,KAAS7G,YAAY,YAC9BX,KAAKqZ,iBAAiB7R,GAE1B,MAAMoD,gCAoBRsO,SAAY1R,GAEV,IAAIwD,EAAQxD,EAAO,MAEnB,IAAIwD,EAOF,MAAM,IAAIlL,MAAM,iFACK0H,EAAO,QADZ,MANZxH,KAAK2Y,WAAW3N,GAClBhL,KAAK2Y,WAAW3N,GAAO1K,KAAKkH,GAE5BxH,KAAK2Y,WAAW3N,GAAS,CAACxD,8BAmBhC2R,SAAY3R,GAEV,IAAIyO,EAAQzO,EAAO,QACnB,IAAIyO,EAiBF,MAAM,IAAInW,MAAM,4DAfhB,GAAIE,KAAK4Y,WAAW3C,GAClB,MAAM,IAAInW,MAAO,wFACSmW,IAI1B,GAFAjW,KAAK4Y,WAAW3C,GAASzO,EACzBxH,KAAK6Y,WAAWvY,KAAK2V,GACR,KAATA,EAAc,CAGhB,IAFA,IAAIxK,EAASjE,EAAQuE,KAAK3L,QACtBC,EAAI,EACDA,EAAIoL,EAAO9P,QAAU8P,EAAOpL,GAAK,EAAGA,KAC3CL,KAAKiZ,cAAgB5Y,gCAuB7B+Y,SAAc5R,GAEZ,IAAIuL,EAAU,KAMd,GAJEA,EADyB,GAAvBlT,EAAKyZ,eACG9R,EAAO,cAEPA,EAAO,cAEN,CACX,IAAI+R,EAAS,CAACC,IAAKhS,EAAO,eAAoBuO,KAAMvO,GAChDxH,KAAK8Y,aAAa/F,GACpB/S,KAAK8Y,aAAa/F,GAASzS,KAAKiZ,GAEhCvZ,KAAK8Y,aAAa/F,GAAW,CAACwG,oCAepCF,SAAiB7R,GAEf,IAAIiS,EAAOjS,EAAO,KAAS7G,YAAY,WAEvC,IAAI8Y,EAOF,MAAM,IAAI3Z,MAAM,2FACG0H,EAAO,QADV,MANZxH,KAAK+Y,gBAAgBU,GACvBzZ,KAAK+Y,gBAAgBU,GAAMnZ,KAAKkH,GAEhCxH,KAAK+Y,gBAAgBU,GAAQ,CAACjS,oCAmBpCkS,WAEE,IAAK,IAAIrU,KAAQrF,KAAK4Y,WAAY,CAChC,IAAIpR,EAAUxH,KAAK4Y,WAAWvT,GAC1BsU,EAAQnS,EAAQ+E,UAGpB,GAAIoN,EAAO,CACT,IAAIC,EAAUD,EAAME,MAAM,KAC1B,GAAmB,KAAfD,EAAQ,GAEV,IADA,IAAItS,EAAOsS,EAAQje,OACV4L,EAAI,EAAGA,EAAID,EAAMC,IAAK,CAC7B,IAAIP,EAAS4S,EAAQrS,GAAG0C,OAIxBjK,KAAK8Z,gBAAgBzU,EAAM2B,IAMjChH,KAAK8Z,gBAAgBzU,EAAMmC,EAAQhE,uCAavCsW,SAAgBjC,EAASkC,GAKvB,IAHA,IAAIC,EAAQD,EAAYF,MAAM,KAC1BI,EAAOD,EAAMre,OAERue,EAAI,EAAGA,EAAID,EAAMC,IAAK,CAC7B,IAAIC,EAAOH,EAAME,GAMjB,GAAIla,KAAKgZ,cAAcmB,IAEc,IADpBna,KAAKgZ,cAAcmB,GACrBrI,QAAQ+F,IACnB7X,KAAKgZ,cAAcmB,GAAM7Z,KAAKuX,QAMhC7X,KAAKgZ,cAAcmB,GAAQ,CAACtC,iCAclC5M,SAAcgL,GACZ,IAAI5I,EAAU,KAId,OAHI4I,IACF5I,EAAUrN,KAAK4Y,WAAW3C,IAErB5I,+BAkBTkJ,SAAcvL,GAEZ,GAAc,OAAVA,QAA4BjL,IAAViL,EACpB,MAAO,IAAIlL,MAAM,6DAEnB,IAAIsa,EAASpP,EAAM8G,QAAQjS,EAAKnB,UAC5BuX,EAAQ,KACRmE,GAAU,IACZnE,EAAQjL,EAAM2E,OAAOyK,EAASva,EAAKnB,SAAS/C,QAC5CqP,EAAQA,EAAM2E,OAAO,EAAGyK,IAE1B,IAAIC,EAAWra,KAAK2Y,WAAW3N,GAC/B,GAAIqP,EAAU,CACZ,IAAI7J,EAAO6J,EAAS1e,OAEpB,GAAIsa,GAASzF,EAAO,EAAG,CAErB,IADA,IAAI5U,EAAI,EACDye,EAASze,GAAG6L,UAAYwO,GAASra,EAAI4U,EAAM5U,KAEhDye,EADEze,EAAI4U,EACK,CAAC6J,EAASze,IAEV,MAIjB,OAAOye,iCAcTC,SAAgBvH,GACd,IAAIwH,EAAS,KAMb,OALIxH,QAEahT,KADfwa,EAASva,KAAK8Y,aAAa/F,MAEzBwH,EAAS,MAENA,qCAcT5O,SAAoB8N,GAElB,IAAIe,EACJ,GAAa,OAATf,QAA0B1Z,IAAT0Z,EACnB,MAAO,IAAI3Z,MAAM,oEASnB,YAJmBC,KADnBya,EAAaxa,KAAK+Y,gBAAgBU,KACa,OAAfe,GAC9BrP,QAAQpF,IAARoF,wCAAAA,OAAoDsO,IAG/Ce,kCAiBTnT,SAAiBoT,GAEf,IAAIvT,EAAS,GACTsT,EAAa,GAEjB,IACE,GAAa,OAATC,QAA0B1a,IAAT0a,EAEnB,MADAvT,EAAM,OAAa,QACZ,IAAIpH,MAAM,mEAI4B,IAA3ClD,OAAO6F,KAAKzC,KAAKgZ,eAAerd,QAClCqE,KAAK0Z,oBAEP,IAAIgB,EAEJ,GADAA,EAAa1a,KAAKgZ,cAAcyB,GAChB,CACdvT,EAAM,OAAa,YAEnB,IADA,IAAIyT,EAAOD,EAAW/e,OACbgL,EAAI,EAAGA,EAAIgU,EAAMhU,IACxB6T,EAAWla,KAAKN,KAAK4Y,WAAW8B,EAAW/T,KAE7CO,EAAM,MAAYsT,EAEM,IAAtBA,EAAW7e,SACbuL,EAAM,OAAa,SACnBA,EAAM,IAANA,2CAAAA,OAA2DuT,IAG/D,MAAM7P,GACJ1D,EAAM,IAAU0D,EAAIC,QAEtB,OAAO3D,iCAST0T,WACE,OAAOhe,OAAO6F,KAAKzC,KAAK2Y,4CAW1BkC,WACE,IAAIC,EAAW,GACXC,EAAQne,OAAO6F,KAAKzC,KAAK4Y,YAC7BmC,EAAM9V,KAAKjF,KAAKgb,cAEhB,IADA,IAAIxK,EAAOuK,EAAMpf,OACRC,EAAI,EAAGA,EAAI4U,EAAM5U,IACxBkf,EAASlf,GAAKmf,EAAMnf,GAAKiE,EAAKnB,SAAWsB,KAAK4Y,WAAWmC,EAAMnf,IAAI4H,MAErE,OAAOsX,uCAQTpK,WACE,OAAO1Q,KAAKiZ,0CAWd+B,SAAazT,EAAG0T,GAKd,OAHA1T,GADAA,EAAIA,EAAEmI,QAAQ,UAAW,KACnBhJ,gBAENuU,GADAA,EAAIA,EAAEvL,QAAQ,UAAW,KACnBhJ,gBACY,EAAI,iCASxBwU,WACE,OAAOte,OAAO6F,KAAKzC,KAAK4Y,yCAa1BuC,WAIE,IAFA,IAAIC,EAAY,GACZ5K,EAAOxQ,KAAK6Y,WAAWld,OAClBgN,EAAI,EAAGA,EAAI6H,EAAM7H,IACxByS,EAAU9a,KAAKN,KAAKiL,cAAcjL,KAAK6Y,WAAWlQ,KAEpD,OAAOyS,gCAcTC,SAAeC,EAAMC,QACPxb,IAARwb,GAA6B,OAARA,IACvBA,EAAM,KAKR,IAJA,IAAIC,EAAW,GACXJ,EAAYpb,KAAK4a,kBACjBpK,EAAO4K,EAAUzf,OACjB8f,EAAOH,EAAK3f,OACPC,EAAI,EAAGA,EAAI4U,EAAM5U,IAExB,IADA,IAAI8f,EAAW1b,KAAKuW,cAAc6E,EAAUxf,IACnC+M,EAAI,EAAGA,EAAI+S,EAAS/f,OAAQgN,IAAK,CAExC,IADA,IAAIgT,EAAMD,EAAS/S,GACVoL,EAAI,EAAGA,EAAI0H,EAAM1H,IAGxB,GAFIA,EAAI,IACNyH,GAAYD,GACE,SAAZD,EAAKvH,GACU,OAAb4H,EAAI5P,WAA8BhM,IAAb4b,EAAI5P,MACzB4P,EAAI5P,KAAK3L,mBAAmBtE,MAC9B0f,GAAY,IAAMG,EAAI5P,KAAK3L,QAAQU,KAAK,KAAO,IAE/C0a,GAAY,OAEX,CACH,IAAII,EAAOD,EAAIL,EAAKvH,IAElByH,GADkB,kBAATI,EACGA,EAAKlM,QAAQ,UAAW,KAExBkM,EAGlBJ,GAAY,OAGhB,OAAOA,4BAiBTK,SAAWC,EAAQP,QACFxb,IAAX+b,IACFA,GAAS,QACC/b,IAARwb,IACFA,EAAM,KACR,IAAIQ,EAAW,GACXvL,EAAOxQ,KAAK6Y,WAAWld,OACvBqgB,EAAa,SAAWT,EACxBO,IACFE,GAAc,SAAWT,GAE3BS,GAAc,OAAST,EACnBO,IACFE,GAAc,SAAWT,GAC3BS,GAAc,YAAcT,EAAM,YAAcA,EAAM,eAAiBA,EACzD,QAAUA,EAAM,WAAaA,EACvCO,IACFE,GAAc,WAAaT,EAAM,cAAgBA,EAAM,WAAaA,EACtD,SAAWA,EAAM,QAAUA,EAAM,WAAaA,EAC9C,WAAaA,EAAM,YAAcA,EAAM,aAAeA,GAEtEQ,GADAC,GAAc,WACU,KAExB,IAAK,IAAIrT,EAAI,EAAGA,EAAI6H,EAAM7H,IAAK,CAC7B,IAAIsT,EAAUjc,KAAKiL,cAAcjL,KAAK6Y,WAAWlQ,IACjDqT,EAAahc,KAAK6Y,WAAWlQ,GAAK4S,EAC9BO,IACFE,GAAcC,EAAQtb,YAAY,WAAa4a,GAEjDS,GAAcC,EAAQtb,YAAY,SAAW4a,EACzCO,IACEG,EAAQtb,YAAY,WACtBqb,GAAc,OAAST,EAEvBS,GAAc,QAAUT,GAE5BS,GAAcC,EAAQtb,YAAY,cAAiB4a,EACnD,IAAIW,EAASD,EAAQtb,YAAY,QAE/Bqb,GADEE,EACYA,EAAO9b,QAAUmb,EAGjB,OAASA,EAErBU,EAAQtP,cACVqP,GAAcC,EAAQtP,cAAgB4O,EAAMU,EAAQnP,YAAcyO,EAElES,GAAc,OAAST,EAAM,OAASA,EAEpCU,EAAQ9P,KACV6P,GAAcC,EAAQ9P,KAAOoP,EAE7BS,GAAc,OAAST,EAErBO,IACFE,GAAcC,EAAQtb,YAAY,aAAe4a,EACnCU,EAAQtb,YAAY,gBAAkB4a,EACtCU,EAAQtb,YAAY,aAAe4a,EACnCU,EAAQtb,YAAY,WAAa4a,EACjCU,EAAQtb,YAAY,UAAY4a,EAChCU,EAAQtb,YAAY,aAAe4a,EACnCU,EAAQtb,YAAY,aAAe4a,EACnCU,EAAQtb,YAAY,cAAgB4a,EACpCU,EAAQtb,YAAY,gBAAkB4a,GAElDU,EAAQlP,YACViP,GAAc,gDAChBD,GAAYC,EAAa,KAE3B,OAAOD,QAzrBLrD,IAksBOtR,EAAa,CACxB5B,YAAa,WACX,OAAOiT,sDC5sBX,SAAS0D,EAAQra,GAAkC,OAAOqa,EAAU,mBAAqBhf,QAAU,iBAAmBA,OAAOC,SAAW,SAAU0E,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAO,mBAAqB3E,QAAU2E,EAAIzD,cAAgBlB,QAAU2E,IAAQ3E,OAAOF,UAAY,gBAAkB6E,GAAQqa,EAAQra,GAIzU,SAASsa,EAAgBpe,EAAG4G,GAA+G,OAA1GwX,EAAkBxf,OAAOyf,gBAAkB,SAAyBre,EAAG4G,GAAsB,OAAjB5G,EAAEse,UAAY1X,EAAU5G,GAAaoe,EAAgBpe,EAAG4G,GAErK,SAAS2X,EAAaC,GAAW,IAAIC,EAMrC,WAAuC,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQ7f,UAAU8f,QAAQ3e,KAAKse,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOE,GAAK,OAAO,GAN9PC,GAA6B,OAAO,WAAkC,IAAsC9Z,EAAlC+Z,EAAQC,EAAgBX,GAAkB,GAAIC,EAA2B,CAAE,IAAIW,EAAYD,EAAgBnd,MAAM3B,YAAa8E,EAASuZ,QAAQC,UAAUO,EAAOG,UAAWD,QAAqBja,EAAS+Z,EAAMva,MAAM3C,KAAMqd,WAAc,OAAOC,EAA2Btd,KAAMmD,IAE5Z,SAASma,EAA2BC,EAAMnf,GAAQ,GAAIA,IAA2B,WAAlB+d,EAAQ/d,IAAsC,oBAATA,GAAwB,OAAOA,EAAa,QAAa,IAATA,EAAmB,MAAM,IAAIhC,UAAU,4DAA+D,OAAOohB,EAAuBD,GAExR,SAASC,EAAuBD,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIE,eAAe,6DAAgE,OAAOF,EAI/J,SAASJ,EAAgBnf,GAAwJ,OAAnJmf,EAAkBvgB,OAAOyf,eAAiBzf,OAAO8gB,eAAiB,SAAyB1f,GAAK,OAAOA,EAAEse,WAAa1f,OAAO8gB,eAAe1f,IAAcmf,EAAgBnf,GAExM,SAAS2f,EAAmBliB,GAAO,OAMnC,SAA4BA,GAAO,GAAIK,MAAMG,QAAQR,GAAM,OAAOmiB,EAAkBniB,GAN1CoiB,CAAmBpiB,IAI7D,SAA0ByB,GAAQ,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOpB,MAAMuB,KAAKH,GAJjF4gB,CAAiBriB,IAAQsiB,EAA4BtiB,IAE1H,WAAgC,MAAM,IAAIW,UAAU,wIAF8E4hB,GAQlI,SAASC,EAA2BjgB,EAAGkgB,GAAkB,IAAIC,EAAuB,qBAAXhhB,QAA0Ba,EAAEb,OAAOC,WAAaY,EAAE,cAAe,IAAKmgB,EAAI,CAAE,GAAIriB,MAAMG,QAAQ+B,KAAOmgB,EAAKJ,EAA4B/f,KAAOkgB,GAAkBlgB,GAAyB,kBAAbA,EAAErC,OAAqB,CAAMwiB,IAAIngB,EAAImgB,GAAI,IAAIviB,EAAI,EAAOwiB,EAAI,aAAiB,MAAO,CAAEhd,EAAGgd,EAAGlgB,EAAG,WAAe,OAAItC,GAAKoC,EAAErC,OAAe,CAAE0iB,MAAM,GAAe,CAAEA,MAAM,EAAO1gB,MAAOK,EAAEpC,OAAWohB,EAAG,SAAWsB,GAAM,MAAMA,GAAO3X,EAAGyX,GAAO,MAAM,IAAIhiB,UAAU,yIAA4I,IAA6CwO,EAAzC2T,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEpd,EAAG,WAAe+c,EAAKA,EAAG/f,KAAKJ,IAAOE,EAAG,WAAe,IAAIugB,EAAON,EAAGO,OAAsC,OAA9BH,EAAmBE,EAAKJ,KAAaI,GAASzB,EAAG,SAAW2B,GAAOH,GAAS,EAAM5T,EAAM+T,GAAQhY,EAAG,WAAe,IAAW4X,GAAoC,MAAhBJ,EAAE,QAAoBA,EAAE,SAAvD,QAAiF,GAAIK,EAAQ,MAAM5T,KAE/9B,SAASmT,EAA4B/f,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,kBAANA,EAAgB,OAAO4f,EAAkB5f,EAAGC,GAAS,IAAIC,EAAItB,OAAOK,UAAUkB,SAASC,KAAKJ,GAAGR,MAAM,GAAI,GAAiE,MAAnD,WAANU,GAAkBF,EAAEK,cAAaH,EAAIF,EAAEK,YAAYC,MAAgB,QAANJ,GAAqB,QAANA,EAAoBpC,MAAMuB,KAAKW,GAAc,cAANE,GAAqB,2CAA2CK,KAAKL,GAAW0f,EAAkB5f,EAAGC,QAAzG,GAE7S,SAAS2f,EAAkBniB,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAAQ,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAAOC,EAAKD,GAAKH,EAAIG,GAAM,OAAOC,EAEhL,SAAS+iB,EAAgB1iB,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAEhH,SAASC,EAAkBC,EAAQC,GAAS,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAMZ,OAAQC,IAAK,CAAE,IAAIY,EAAaD,EAAMX,GAAIY,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAE7S,SAASqiB,EAAa1iB,EAAaY,EAAYC,GAAyN,OAAtMD,GAAYV,EAAkBF,EAAYc,UAAWF,GAAiBC,GAAaX,EAAkBF,EAAaa,GAAcJ,OAAOC,eAAeV,EAAa,YAAa,CAAEQ,UAAU,IAAiBR,EAE/Q,IAAI2iB,EAAMrf,EAAQ,MAEdsf,EAAOtf,EAAQ,MAEfuf,EAAcvf,EAAQ,MAEtBwf,EAAcxf,EAAQ,MAEtByf,EAAczf,EAAQ,MAEtB0f,EAAc1f,EAAQ,MAEtB2f,EAA2B,WAC7B,SAASA,EAAYC,GACnBT,EAAgB5e,KAAMof,GAEtBpf,KAAKsf,WAAaP,EAAKM,GAgDzB,OA7CAR,EAAaO,EAAa,CAAC,CACzBtiB,IAAK,OACLa,MAAO,SAAc4hB,GACnB,IAAIC,EAAmBnC,UAAU1hB,OAAS,QAAsBoE,IAAjBsd,UAAU,GAAmBA,UAAU,GAAK,KACvFoC,EAAkBD,GAAoBD,EAASG,aAE/CC,EAAc3f,KAAKsf,WAAWM,UAAUH,GAG5C,GAAID,GAAoBD,EAASG,aAAc,CAC7C,IAAIG,EAAe7f,KAAKsf,WAAWM,UAAUL,EAASG,cAEtD,IAAK1f,KAAK8f,mBAAmBD,EAAcF,GAAc,KAAM,4CAA4C9c,OAAO0c,EAASG,aAAc,6BAA6B7c,OAAO2c,GAG/K,OAAO,IAAIO,EAAWR,EAAUI,EAAa3f,KAAKsf,cAEnD,CACDxiB,IAAK,qBACLa,MAAO,SAA4BkiB,EAAcF,GAC/C,OAAOA,GAAeE,GAAgBA,EAAaG,gBAAgBC,SAASN,IAC5EA,EAAYK,gBAAgBC,SAASJ,MAErC,CAAC,CACH/iB,IAAK,WACLa,MAAO,WACL,OAAO,IAAIyhB,EAAYJ,KAExB,CACDliB,IAAK,WACLa,MAAO,WACL,OAAO,IAAIyhB,EAAYH,KAExB,CACDniB,IAAK,WACLa,MAAO,WACL,OAAO,IAAIyhB,EAAYF,KAExB,CACDpiB,IAAK,WACLa,MAAO,WACL,OAAO,IAAIyhB,EAAYD,OAIpBC,EApDsB,GAuD3Bc,EAA6B,WAC/B,SAASA,EAAcb,GACrBT,EAAgB5e,KAAMkgB,GAEtBlgB,KAAKmgB,OAAS,EACdngB,KAAKogB,SAAW,GAChBpgB,KAAKsf,WAAaP,EAAKM,GA8DzB,OA1DAR,EAAaqB,EAAe,CAAC,CAC3BpjB,IAAK,UACLujB,IAAK,WACH,OAAOrgB,KAAKsf,WAAWgB,UAExB,CACDxjB,IAAK,cACLa,MAAO,SAAqB4iB,GAC1BvgB,KAAKogB,SAAWpgB,KAAKogB,SAASvd,OAAO0d,KAEtC,CACDzjB,IAAK,iBACLa,MAAO,WACL,GAAIqC,KAAKmgB,OAASngB,KAAKogB,SAASzkB,OAC9B,OAAO,IAAI6kB,EAAQxgB,KAAKogB,SAASpgB,KAAKmgB,QAASngB,KAAKsf,cAGvD,CACDxiB,IAAK,cACLa,MAAO,WAML,OAJIqC,KAAKmgB,OAASngB,KAAKogB,SAASzkB,QAC9BqE,KAAKmgB,SAGAngB,KAAKygB,mBAEb,CACD3jB,IAAK,QACLa,MAAO,WACLqC,KAAKmgB,OAAS,EACdngB,KAAKogB,SAAW,MAEhB,CAAC,CACHtjB,IAAK,WACLa,MAAO,WACL,OAAO,IAAIuiB,EAAclB,KAG1B,CACDliB,IAAK,WACLa,MAAO,WACL,OAAO,IAAIuiB,EAAcjB,KAG1B,CACDniB,IAAK,WACLa,MAAO,WACL,OAAO,IAAIuiB,EAAchB,KAG1B,CACDpiB,IAAK,WACLa,MAAO,WACL,OAAO,IAAIuiB,EAAcf,OAItBe,EApEwB,GAuE7BH,EAA0B,WAC5B,SAASA,EAAWW,EAAMC,EAAUC,GAClC,IAAIC,EAAQ7gB,KAoBZ,GAlBA4e,EAAgB5e,KAAM+f,GAGtBnjB,OAAOc,iBAAiBsC,KAAM,CAC5B8gB,MAAO,CACLnjB,MAAO+iB,EACPjkB,YAAY,GAEdskB,UAAW,CACTpjB,MAAOgjB,EACPlkB,YAAY,GAEd6iB,WAAY,CACV3hB,MAAOijB,EACPnkB,YAAY,KAIA,MAAZkkB,EAAJ,CAOA,IAFA,IAAIK,EAAe,IAAIC,IAEdC,EAAcP,EAAyB,MAAfO,GAC/BA,EAAYC,SAASje,SAAQ,SAAU8Z,GACrC,OAAOgE,EAAajgB,IAAIic,EAAE1e,SAI1B4iB,EADmC,MAAjCA,EAAYE,kBACAR,EAAUhB,UAAUsB,EAAYE,kBAAkBC,KAElD,KAIlB,IACIC,EADAC,EAAYtD,EAA2B+C,GAG3C,IACE,IAAIQ,EAAQ,WACV,IAAIljB,EAAOgjB,EAAM3jB,MACjBf,OAAOC,eAAegkB,EAAOviB,EAAM,CACjC+hB,IAAK,WACH,OAAOrgB,KAAKqgB,IAAI/hB,IAElB7B,YAAY,KAIhB,IAAK8kB,EAAUngB,MAAOkgB,EAAQC,EAAUrjB,KAAKmgB,MAC3CmD,IAEF,MAAO5W,GACP2W,EAAUvE,EAAEpS,GAfd,QAiBE2W,EAAU5a,UAtCVwE,QAAQsW,MAAM,iCAAiC5e,OAAO6d,IA6O1D,OAlMA7B,EAAakB,EAAY,CAAC,CACxBjjB,IAAK,MACLa,MAAO,SAAa+jB,GAClB,GAAkB,MAAd1hB,KAAK8gB,MAEP,OAAO9gB,KAAK8gB,MAGd,IAAIa,EAAQD,EAAM7H,MAAM,KACpB+H,EAAOD,EAAM,GACbE,EAASF,EAAMhmB,OAAS,EAAIgmB,EAAMG,OAAO,GAAGhhB,KAAK,UAAOf,EAExDgiB,EAAU/hB,KAAK+gB,UAAUiB,YAAYJ,GAAM,GAG/C,GAAuB,qBAAZG,EAAX,CAKA,IAIIE,EAAUC,EAJVC,EAAqB,SAA4BJ,EAASK,GAC5D,MAAO,GAAGvf,OAAOkf,EAAQzjB,MAAMuE,OAAOuf,EAAO9jB,KAAK,GAAG+jB,eAAexf,OAAOuf,EAAO9jB,KAAKd,MAAM,KAK/F,GAAIokB,IAASG,EAAQzjB,MAAQyjB,EAAQG,cAAcI,SAIjDL,EAAWL,EAEXM,EAAgBH,EAAQG,cAAcK,QAAQC,MAAK,SAAUzO,GAC3D,OAAOkO,IAAaE,EAAmBJ,EAAShO,WAMlD,GAHAkO,EAAWF,EAAQzjB,MACnB4jB,EAAgBH,EAAQG,eAENI,SAAU,CAG1B,IACIG,EADAC,EAAazE,EAA2BiE,EAAcK,SAG1D,IACE,IAAKG,EAAWthB,MAAOqhB,EAASC,EAAWxkB,KAAKmgB,MAAO,CACrD,IAAI+D,EAASK,EAAO9kB,MAEpB,GAAIykB,EAAOO,QAAS,CAClB,IAAIC,EAAiBT,EAAmBJ,EAASK,GAEjD,GAAkC,MAA9BpiB,KAAK8gB,MAAM8B,IAAqE,MAA1C5iB,KAAK8gB,MAAM,IAAIje,OAAO+f,IAA0B,CACxFX,EAAWW,EACXV,EAAgBE,EAChB,SAIN,MAAOxX,GACP8X,EAAW1F,EAAEpS,GAff,QAiBE8X,EAAW/b,KAKjB,GAAgC,WAA5Bub,EAAcW,UAEhB,OAAc,MAAVhB,OACF1W,QAAQsW,MAAM,qDAAqD5e,OAAO7C,KAAK+gB,UAAUziB,KAAM,KAAKuE,OAAO+e,EAAM,KAAK/e,OAAOgf,EAAQ,MAuR/I,SAAwB7f,EAAM1D,GAC5B,GAAY,MAAR0D,EAEF,OAAOA,EAGT,OAAQ1D,GACN,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACH,OAAO0D,EAET,IAAK,OACL,IAAK,UACL,IAAK,WAEH,OAEF,IAAK,WAEH,OAAO8c,EAAIgE,SAASC,MAAM/gB,EAAK0N,QAAQ,IAAK,WAE9C,IAAK,OAEH,OAAmC,MAA5BoP,EAAIgE,SAASC,MAAM/gB,GAAgB8c,EAAIgE,SAASC,MAAM/gB,GAAMghB,eAAYjjB,EAEjF,IAAK,OAKD,IAAIkjB,EAAOnE,EAAIgE,SAASC,MAAM,cAAclgB,OAAOb,EAAK0N,QAAQ,IAAK,YAErE,OADAuT,EAAKC,eAAiB,KACfD,GArTAE,CAAenjB,KAAK8gB,MAAMmB,GAAWC,EAAc5jB,MAG5D,IAAI0D,EAgMV,SAA6B0e,EAAMuB,EAAUC,EAAetB,GAC1D,IAAIjjB,EAAQ+iB,EAAKuB,GACbmB,EAAQ1C,EAAK,IAAI7d,OAAOof,IAE5B,GAAa,MAATtkB,GAA0B,MAATylB,EACnB,OAAO1C,EAAKuB,GAId,GAAIoB,EAAsCnB,EAAetB,GAAY,CAKnE,IAHA,IAAI0C,EAAWpB,EAAcqB,QAAUznB,MAAMG,QAAQ0B,GAASggB,EAAmBhgB,GAAS,CAACA,GACvF6lB,EAAWtB,EAAcqB,QAAUznB,MAAMG,QAAQmnB,GAASzF,EAAmByF,GAAS,CAACA,GAEpFE,EAAS3nB,OAAS6nB,EAAS7nB,QAChC6nB,EAASljB,UAAKP,GAGhB,KAAOyjB,EAAS7nB,OAAS2nB,EAAS3nB,QAChC2nB,EAAShjB,UAAKP,GAKhB,IAFA,IAAIiC,EAAO,GAEFpG,EAAI,EAAGA,EAAI0nB,EAAS3nB,OAAQC,IAAK,CACxC,IAAImH,EAAO,GAEgB,qBAAhBugB,EAAS1nB,KAClBmH,EAAKpF,MAAQ2lB,EAAS1nB,IAGL,MAAf4nB,EAAS5nB,IACXgB,OAAO4Q,OAAOzK,EAAMygB,EAAS5nB,IAGZ,MAAf0nB,EAAS1nB,IAA6B,MAAf4nB,EAAS5nB,KAElCmH,EAAOugB,EAAS1nB,IAGlBoG,EAAK1B,KAAKyC,GAGZ,OAAOmf,EAAcqB,OAASvhB,EAAOA,EAAK,GAG5C,OAAO0e,EAAKuB,GA9OGwB,CAAoBzjB,KAAK8gB,MAAOmB,EAAUC,EAAeliB,KAAKsf,YAEzE,OAAY,MAARtd,EAEKA,EAGF0hB,EAAa1hB,EAAMkgB,EAAeliB,KAAKsf,WAAYuC,GApExD1W,QAAQsW,MAAM,gCAAgC5e,OAAO7C,KAAK+gB,UAAUziB,KAAM,KAAKuE,OAAO+e,MAuEzF,CACD9kB,IAAK,QACLa,MAAO,WACL,OAAOqC,KAAK8gB,MAAM6C,KAGnB,CACD7mB,IAAK,UACLa,MAAO,SAAiB+jB,GACtB,IAAIrc,EAAOrF,KAAKqgB,IAAIqB,GAMpB,OAJMrc,aAAgByZ,EAAI8E,OACxBve,EAAOwe,EAAOxe,IAGTA,IAGR,CACDvI,IAAK,UACLa,MAAO,SAAiB+jB,GACtB,IAAIoC,EAAO9jB,KAAKqgB,IAAIqB,GAMpB,OAJMoC,aAAgBhF,EAAIgE,WAAagB,IAAQA,EAAKnmB,QAClDmmB,EAAOA,EAAKnmB,OAGPmmB,IAGR,CACDhnB,IAAK,cACLa,MAAO,SAAqB+jB,GAC1B,IAAIqC,EAAM/jB,KAAKqgB,IAAIqB,GAMnB,OAJMqC,aAAejF,EAAIkF,WAAaD,IAAOA,EAAIpmB,QAC/ComB,EAAMA,EAAIpmB,OAGLomB,IAGR,CACDjnB,IAAK,oBACLa,MAAO,SAA2B+jB,GAChC,IAAIuC,EAAYjkB,KAAKqgB,IAAIqB,GAMzB,OAJMuC,aAAqBnF,EAAIgE,UAAemB,aAAqBnF,EAAIkF,WAAaC,IAAaA,EAAUtmB,QACzGsmB,EAAYA,EAAUtmB,OAGjBsmB,IAER,CACDnnB,IAAK,MACLa,MAAO,SAAaukB,GAClB,OAAOliB,KAAKkkB,iBAAiBC,MAAK,SAAUC,GAC1C,OAAOA,EAAEC,OAASnC,EAAcmC,MAAQD,EAAE9lB,MAAQ4jB,EAAc5jB,UAGnE,CACDxB,IAAK,iBACLa,MAAO,WACL,IAAI2mB,EAAgB,GAmCpB,OAjC0B,MAAtBtkB,KAAKukB,gBACPD,EAAgB,CAACtkB,KAAKukB,eAAe1hB,OAAO8a,EAAmB3d,KAAKukB,cAAcvE,kBAAkB7d,KAAI,SAAU4R,GAEhH,IAAI8O,EAAY9O,EAAE8O,UAEdA,IAAc9O,EAAE6M,UAAUtiB,KAC5BukB,EAAY9O,EAAE6M,UAAU4D,IACD,WAAd3B,IACTA,EAAY,4BAId,IAAIvkB,EAAOyV,EAAEzV,KAQb,OANIA,EAAKmmB,WAAW,GAAG5hB,OAAOkR,EAAE6M,UAAUtiB,KAAM,QAC9CA,EAAOA,EAAKd,MAAMuW,EAAE6M,UAAUtiB,KAAK3C,OAAS,IAKvC,CACL2C,KAHFA,EAAO,IAAIuE,OAAOggB,EAAW,KAAKhgB,OAAOvE,GAIvC+lB,KAAM,0BAOZC,EAAchkB,KAAK,CACjBhC,KAAM,gCACN+lB,KAAM,uBAEDC,IAER,CACDxnB,IAAK,cACLa,MAAO,WACL,OAAOqC,KAAK+gB,cAIThB,EApQqB,GAuQ1BS,EAAuB,SAAUkE,IAnbrC,SAAmBC,EAAUC,GAAc,GAA0B,oBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIxoB,UAAU,sDAAyDuoB,EAAS1nB,UAAYL,OAAOioB,OAAOD,GAAcA,EAAW3nB,UAAW,CAAEoB,YAAa,CAAEV,MAAOgnB,EAAUhoB,UAAU,EAAMD,cAAc,KAAWE,OAAOC,eAAe8nB,EAAU,YAAa,CAAEhoB,UAAU,IAAcioB,GAAYxI,EAAgBuI,EAAUC,GAobpbE,CAAUtE,EAASkE,GAEnB,IAAIK,EAASxI,EAAaiE,GAE1B,SAASA,EAAQwE,EAAQpE,GACvB,IAAIqE,EAEJrG,EAAgB5e,KAAMwgB,GAEtB,IAAI0E,EAAetE,EAAUuE,uBAAyBvE,EAAUuE,uBAAyBvE,EAAUwE,iBAC/F1F,EAAekB,EAAUwE,iBAAiB1V,QAAQ,UAAW,IAC7D2V,EAAUL,EAAOM,MAAM9C,MAAK,SAAUxF,GACxC,OAAOA,EAAEuI,UAAYvI,EAAEuI,SAAS7F,cAAgBA,KAE9C8F,EAAU5E,EAAUhB,UAAUsF,GAOlC,OANAD,EAASF,EAAO3mB,KAAK4B,KAAMqlB,EAAQE,SAAUC,EAAS5E,GAEtDhkB,OAAOC,eAAe2gB,EAAuByH,GAAS,UAAW,CAC/DtnB,MAAOqnB,EACPvoB,YAAY,IAEPwoB,EAoCT,OAjCApG,EAAa2B,EAAS,CAAC,CACrB1jB,IAAK,aACLa,MAAO,SAAoB8nB,GACzB,IAAIC,EAAU1lB,KAAK2lB,YAAYF,GAE/B,GAAIC,EAAQ/pB,OAAS,EACnB,OAAO+pB,EAAQ,KAGlB,CACD5oB,IAAK,cACLa,MAAO,SAAqB8nB,GAC1B,IAAIG,EAAS5lB,KAET6lB,EAAY7lB,KAAKsf,WAAWM,UAAU6F,GAE1C,GAAiB,MAAbI,EAEF,OADA1a,QAAQsW,MAAM,gCAAgC5e,OAAO4iB,IAC9C,GAGT,IAAI/F,EAAemG,EAAUvnB,KAAKoR,QAAQ,UAAW,IAQrD,OANc1P,KAAK8lB,QAAQR,MAAMS,QAAO,SAAU/I,GAChD,OAAOA,EAAEuI,UAAYvI,EAAEuI,SAAS7F,cAAgBA,KAC/Cvd,KAAI,SAAU6a,GACf,OAAO,IAAI+C,EAAW/C,EAAEuI,SAAUM,EAAWD,EAAOtG,mBAOnDkB,EA1DkB,CA2DzBT,GA8DF,SAASsD,EAAsCnB,EAAetB,GAC5D,GAAIsB,EAAcS,QAAS,CAEzB,GAAgC,SAA5BT,EAAcW,WAAwBX,EAAc5jB,KAAK,GAAGoI,gBAAkBwb,EAAc5jB,KAAK,GACnG,OAAO,EAKT,IAAIqiB,EAAWC,EAAUhB,UAAUsC,EAAcb,KAEjD,GAAIV,GAAYA,EAASS,mBAAwD,iBAAnCT,EAASS,kBAAkBC,KAAuD,IAA7BV,EAASQ,SAASxlB,OAAc,CACjI,IAAIsmB,EAAWtB,EAASqB,YAAY,SACpC,OAAOC,GAA2C,kBAA/BA,EAASC,cAAcb,IAG5C,OAAO,EACF,QAAIa,EAAcqB,QAChBF,EAAsCnB,EAAc8D,YAAapF,GA6D5E,SAAS8C,EAAa1hB,EAAMkgB,EAAetB,EAAWiB,GACpD,GAAY,MAAR7f,EAEF,OAAOA,EAGT,GAAIkgB,EAAcS,QAAS,CACzB,IAAIsD,EAAgBrF,EAAUhB,UAAUsC,EAAcb,KAClD6E,EAAa,IAAInG,EAAW/d,EAAMikB,EAAerF,GAErD,OAAc,MAAViB,EACKqE,EAAW7F,IAAIwB,GAGjBqE,EACF,OAAIhE,EAAcqB,OACT,MAAV1B,OACF1W,QAAQsW,MAAM,4CAITzf,EAAKG,KAAI,SAAUY,GACxB,OAAO2gB,EAAa3gB,EAAMmf,EAAc8D,YAAapF,MAE9CsB,EAAciE,WAChB,IAAIrH,EAAIkF,SAASN,EAAa1hB,EAAKokB,IAAKlE,EAAcmE,UAAWzF,GAAY8C,EAAa1hB,EAAKskB,KAAMpE,EAAcmE,UAAWzF,GAAY5e,EAAKukB,UAAWvkB,EAAKwkB,iBADjK,EAcT,SAAS3C,EAAOld,GACd,GAAS,MAALA,EAEF,OAAOA,EAGT,GAAI7K,MAAMG,QAAQ0K,GAChB,OAAOA,EAAExE,KAAI,SAAU4R,GACrB,OAAO8P,EAAO9P,MAIlB,IAAI0S,EAAW9f,EAAE4d,cAAcjmB,KAAKoR,QAAQ,UAAW,IAEvD,GAAiB,oBAAb+W,EAAgC,CAClC,GAAgB,MAAZ9f,EAAE+f,OAEJ,OAAO/f,EAAE+f,OAET,IAAIC,EAAUhgB,EAAE+f,OAAOvkB,KAAI,SAAU4R,GACnC,OAAO8P,EAAO9P,MAEhB,OAA0B,IAAnB4S,EAAQhrB,OAAegrB,EAAQ,GAAKA,EAExC,MAAiB,WAAbF,EACF,IAAI3H,EAAI8E,KAAKjd,EAAEtB,KAAOsB,EAAEtB,KAAK1H,MAAQgJ,EAAEtB,KAAMsB,EAAEigB,OAASjgB,EAAEigB,OAAOjpB,MAAQgJ,EAAEigB,OAAQjgB,EAAE2Z,QAAU3Z,EAAE2Z,QAAQ3iB,MAAQgJ,EAAE2Z,QAAS3Z,EAAEkgB,QAAUlgB,EAAEkgB,QAAQlpB,MAAQgJ,EAAEkgB,SAC7I,SAAbJ,EACF9f,EAAEhJ,WADJ,EAKTpC,EAAOC,QAAU,CACf0kB,cAAeA,EACfd,YAAaA,sCCpsBf7jB,EAAOC,QAAU,EAAjBD,yCCAA,SAASoiB,EAAmBliB,GAAO,OAMnC,SAA4BA,GAAO,GAAIK,MAAMG,QAAQR,GAAM,OAAOmiB,EAAkBniB,GAN1CoiB,CAAmBpiB,IAI7D,SAA0ByB,GAAQ,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOpB,MAAMuB,KAAKH,GAJjF4gB,CAAiBriB,IAAQsiB,EAA4BtiB,IAE1H,WAAgC,MAAM,IAAIW,UAAU,wIAF8E4hB,GAQlI,SAASC,EAA2BjgB,EAAGkgB,GAAkB,IAAIC,EAAuB,qBAAXhhB,QAA0Ba,EAAEb,OAAOC,WAAaY,EAAE,cAAe,IAAKmgB,EAAI,CAAE,GAAIriB,MAAMG,QAAQ+B,KAAOmgB,EAAKJ,EAA4B/f,KAAOkgB,GAAkBlgB,GAAyB,kBAAbA,EAAErC,OAAqB,CAAMwiB,IAAIngB,EAAImgB,GAAI,IAAIviB,EAAI,EAAOwiB,EAAI,aAAiB,MAAO,CAAEhd,EAAGgd,EAAGlgB,EAAG,WAAe,OAAItC,GAAKoC,EAAErC,OAAe,CAAE0iB,MAAM,GAAe,CAAEA,MAAM,EAAO1gB,MAAOK,EAAEpC,OAAWohB,EAAG,SAAWsB,GAAM,MAAMA,GAAO3X,EAAGyX,GAAO,MAAM,IAAIhiB,UAAU,yIAA4I,IAA6CwO,EAAzC2T,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEpd,EAAG,WAAe+c,EAAKA,EAAG/f,KAAKJ,IAAOE,EAAG,WAAe,IAAIugB,EAAON,EAAGO,OAAsC,OAA9BH,EAAmBE,EAAKJ,KAAaI,GAASzB,EAAG,SAAW2B,GAAOH,GAAS,EAAM5T,EAAM+T,GAAQhY,EAAG,WAAe,IAAW4X,GAAoC,MAAhBJ,EAAE,QAAoBA,EAAE,SAAvD,QAAiF,GAAIK,EAAQ,MAAM5T,KAE/9B,SAASmT,EAA4B/f,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,kBAANA,EAAgB,OAAO4f,EAAkB5f,EAAGC,GAAS,IAAIC,EAAItB,OAAOK,UAAUkB,SAASC,KAAKJ,GAAGR,MAAM,GAAI,GAAiE,MAAnD,WAANU,GAAkBF,EAAEK,cAAaH,EAAIF,EAAEK,YAAYC,MAAgB,QAANJ,GAAqB,QAANA,EAAoBpC,MAAMuB,KAAKW,GAAc,cAANE,GAAqB,2CAA2CK,KAAKL,GAAW0f,EAAkB5f,EAAGC,QAAzG,GAE7S,SAAS2f,EAAkBniB,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAAQ,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAAOC,EAAKD,GAAKH,EAAIG,GAAM,OAAOC,EAEhL,SAAS+iB,EAAgB1iB,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAEhH,SAASC,EAAkBC,EAAQC,GAAS,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAMZ,OAAQC,IAAK,CAAE,IAAIY,EAAaD,EAAMX,GAAIY,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAE7S,SAASqiB,EAAa1iB,EAAaY,EAAYC,GAAyN,OAAtMD,GAAYV,EAAkBF,EAAYc,UAAWF,GAAiBC,GAAaX,EAAkBF,EAAaa,GAAcJ,OAAOC,eAAeV,EAAa,YAAa,CAAEQ,UAAU,IAAiBR,EAE/Q,IAAI2qB,EAAKrnB,EAAQ,MAEbsnB,EAAStnB,EAAQ,MAEjBunB,EAAavnB,EAAQ,MAiCzB,IAAIwnB,EAAyB,WAC3B,SAASA,EAAUC,GACjBtI,EAAgB5e,KAAMinB,GAEtBjnB,KAAKmnB,MAAQD,EAAIE,EAAE9oB,KACnB0B,KAAKqnB,SAAWH,EAAIE,EAAE9G,QACtBtgB,KAAKsnB,KAAOJ,EAAIE,EAAE5C,IAClBxkB,KAAKunB,gBAAkBL,EAAIE,EAAEI,eAC7BxnB,KAAKynB,iBAAmBP,EAAIE,EAAEM,gBAC9B1nB,KAAK2nB,kBAAoBT,EAAIE,EAAEhC,iBAC/BplB,KAAK4nB,wBAA0BV,EAAIE,EAAEjC,uBACrCnlB,KAAK6nB,8BAAgCX,EAAIE,EAAEU,6BAC3C9nB,KAAK+nB,eAAiBb,EAAIE,EAAEY,cAC5BhoB,KAAKioB,sBAAwBf,EAAIE,EAAEc,qBACnCloB,KAAKmoB,gBAAkB,IAAIC,IAC3BpoB,KAAKqoB,qBAAuB,IAAID,IAChCpoB,KAAKsoB,eAAiB,IAAIF,IAE1B,IACI9G,EADAC,EAAYtD,EAA2BiJ,EAAIvG,UAG/C,IACE,IAAKY,EAAUngB,MAAOkgB,EAAQC,EAAUrjB,KAAKmgB,MAAO,CAClD,IAAI+F,EAAI9C,EAAM3jB,MAEd,GAAW,MAAPymB,EAAEgD,IAAoC,cAAtBmB,EAAQnE,EAAEgD,EAAE/C,OAA+C,gBAAtBkE,EAAQnE,EAAEgD,EAAE/C,OAA0B,CAC7F,IAAIwB,EAAY,IAAI2C,EAAUpE,EAAGpkB,MAEV,MAAnB6lB,EAAU4C,OACZzoB,KAAKmoB,gBAAgBO,IAAI7C,EAAU4C,MAAO5C,GAGhB,MAAxBA,EAAU8C,YACZ3oB,KAAKqoB,qBAAqBK,IAAI7C,EAAU8C,WAAY9C,GAGhC,MAAlBA,EAAUvnB,MACZ0B,KAAKsoB,eAAeI,IAAI7C,EAAUvnB,KAAMunB,KAI9C,MAAOjb,GACP2W,EAAUvE,EAAEpS,GArBd,QAuBE2W,EAAU5a,KAgFd,OA5EAkY,EAAaoI,EAAW,CAAC,CACvBnqB,IAAK,OACLujB,IAAK,WACH,OAAOrgB,KAAKmnB,QAEb,CACDrqB,IAAK,UACLujB,IAAK,WACH,OAAOrgB,KAAKqnB,WAEb,CACDvqB,IAAK,MACLujB,IAAK,WACH,OAAOrgB,KAAKsnB,OAEb,CACDxqB,IAAK,iBACLujB,IAAK,WACH,OAAOrgB,KAAKunB,kBAEb,CACDzqB,IAAK,kBACLujB,IAAK,WACH,OAAOrgB,KAAKynB,mBAEb,CACD3qB,IAAK,mBACLujB,IAAK,WACH,OAAOrgB,KAAK2nB,oBAEb,CACD7qB,IAAK,yBACLujB,IAAK,WACH,OAAOrgB,KAAK4nB,0BAEb,CACD9qB,IAAK,+BACLujB,IAAK,WACH,OAAOrgB,KAAK6nB,gCAEb,CACD/qB,IAAK,gBACLujB,IAAK,WACH,OAAOrgB,KAAK+nB,iBAEb,CACDjrB,IAAK,uBACLujB,IAAK,WACH,OAAOrgB,KAAKioB,wBAEb,CACDnrB,IAAK,YACLa,MAAO,SAAmBirB,GAExB,GAAI5oB,KAAKmoB,gBAAgBU,IAAID,GAC3B,OAAO5oB,KAAKmoB,gBAAgB9H,IAAIuI,GAC3B,GAAI5oB,KAAKqoB,qBAAqBQ,IAAID,GACvC,OAAO5oB,KAAKqoB,qBAAqBhI,IAAIuI,GAMvC,IAAIE,EAAYF,EAAMlZ,QAAQ,IAAI7M,OAAO7C,KAAKwkB,IAAK,KAAM,GAAG3hB,OAAO7C,KAAK1B,KAAM,MAE9E,GAAI0B,KAAKsoB,eAAeO,IAAIC,GAC1B,OAAO9oB,KAAKsoB,eAAejI,IAAIyI,GAKjC,IAAIC,EAAeD,EAAUrE,WAAW,GAAG5hB,OAAO7C,KAAK1B,KAAM,MAAQwqB,EAAUtrB,MAAMwC,KAAK1B,KAAK3C,OAAS,GAAK,GAAGkH,OAAO7C,KAAK1B,KAAM,KAAKuE,OAAOimB,GAC9I,OAAO9oB,KAAKsoB,eAAejI,IAAI0I,OAI5B9B,EA5HoB,GA+HzBuB,EAAyB,WAC3B,SAASA,EAAUtB,EAAKtG,GAatB,GAZAhC,EAAgB5e,KAAMwoB,GAEtBxoB,KAAKgpB,WAAa9B,EAAIE,EAAEvE,WAAajC,EAAU4D,IAC/CxkB,KAAKmnB,MAAQD,EAAIE,EAAE9oB,KACnB0B,KAAKipB,YAAc/B,EAAIE,EAAEuB,WACzB3oB,KAAKkpB,OAAShC,EAAIE,EAAEqB,MACpBzoB,KAAKmpB,eAAsC,QAArBjC,EAAIE,EAAEgC,YAC5BppB,KAAKqpB,iBAAmBnC,EAAIE,EAAEkC,gBAC9BtpB,KAAKupB,mBAAqBC,EAAwBtC,EAAK,QACvDlnB,KAAKsf,WAAasB,EAClB5gB,KAAKypB,gBAAkB,IAAIrB,IAER,MAAflB,EAAInF,QAAiB,CACvB,IACIU,EADAC,EAAazE,EAA2BiJ,EAAInF,SAGhD,IACE,IAAKW,EAAWthB,MAAOqhB,EAASC,EAAWxkB,KAAKmgB,MAAO,CACrD,IAAIrB,EAAIyF,EAAO9kB,MACXokB,EAAU,IAAI2H,EAAa1M,EAAG4D,GAElC5gB,KAAKypB,gBAAgBf,IAAI3G,EAAQzjB,KAAMyjB,IAEzC,MAAOnX,GACP8X,EAAW1F,EAAEpS,GARf,QAUE8X,EAAW/b,KAIf3G,KAAK2pB,eAAiB,KAyHxB,OAtHA9K,EAAa2J,EAAW,CAAC,CACvB1rB,IAAK,YACLujB,IAAK,WACH,OAAOrgB,KAAKgpB,aAEb,CACDlsB,IAAK,OACLujB,IAAK,WACH,OAAOrgB,KAAKmnB,QAEb,CACDrqB,IAAK,aACLujB,IAAK,WACH,OAAOrgB,KAAKipB,cAEb,CACDnsB,IAAK,QACLujB,IAAK,WACH,OAAOrgB,KAAKkpB,SAEb,CACDpsB,IAAK,gBACLujB,IAAK,WACH,OAAOrgB,KAAKmpB,iBAEb,CACDrsB,IAAK,kBACLujB,IAAK,WACH,OAAOrgB,KAAKqpB,mBAEb,CACDvsB,IAAK,oBACLujB,IAAK,WACH,OAAOrgB,KAAKupB,qBAEb,CACDzsB,IAAK,YACLujB,IAAK,WACH,OAAOrgB,KAAKsf,aAEb,CACDxiB,IAAK,WACLujB,IAAK,WACH,OAAOvkB,MAAMuB,KAAK2C,KAAKypB,gBAAgBG,YAGxC,CACD9sB,IAAK,gBACLa,MAAO,WACL,IAAKqC,KAAK2pB,iBACR3pB,KAAK2pB,eAAiB,GAElB3pB,KAAKohB,mBAAmB,CAC1B,IAAIyI,EAEAC,EAAc9pB,KAAKsf,WAAWM,UAAU5f,KAAKohB,kBAAkB9iB,MAE/DwrB,IAAcD,EAAuB7pB,KAAK2pB,gBAAgBrpB,KAAKqC,MAAMknB,EAAsB,CAACC,GAAajnB,OAAO8a,EAAmBmM,EAAY9J,mBAIvJ,OAAOhgB,KAAK2pB,iBAcb,CACD7sB,IAAK,cACLa,MAAO,SAAqBosB,GAC1B,IAAIC,EAAsB3M,UAAU1hB,OAAS,QAAsBoE,IAAjBsd,UAAU,IAAmBA,UAAU,GAErF0E,EAAU/hB,KAAKypB,gBAAgBpJ,IAAI0J,GAOvC,GAJe,MAAXhI,GAA6C,MAA1B/hB,KAAKohB,mBAAkE,WAArCphB,KAAKohB,kBAAkByB,YAC9Ed,EAAU/hB,KAAKsf,WAAWM,UAAU5f,KAAKohB,kBAAkBC,KAAKW,YAAY+H,IAG/D,MAAXhI,GAAmBiI,EAGrB,IAAK,IAAIpuB,EAAI,EAAGA,EAAImuB,EAAGpuB,OAAQC,IAC7B,GAAI,UAAU2C,KAAKwrB,EAAGnuB,IAAK,CACzB,IAAI0C,EAAOyrB,EAAGvsB,MAAM,EAAG5B,GACnBquB,EAAYjqB,KAAKgiB,YAAY1jB,GAAM,GAEvC,GAAiB,MAAb2rB,GAAqBA,EAAU/H,eAAiB+H,EAAU/H,cAAcI,SAAU,CACpF,IAAI4H,EAAO,WACT,IAAIC,EAAeJ,EAAGvsB,MAAM5B,GAK5B,GAJwBquB,EAAU/H,cAAcK,QAAQC,MAAK,SAAUzO,GACrE,OAAOA,EAAEzV,OAAS6rB,GAAgBpW,EAAEzV,OAAS,GAAGuE,OAAOsnB,EAAa,GAAGzjB,eAAe7D,OAAOsnB,EAAa3sB,MAAM,OAKhH,OADAukB,EAAUkI,EACH,QARA,GAYX,GAAa,UAATC,EAAkB,OAM9B,OAAOnI,MAIJyG,EAzJoB,GA4JzBkB,EAA4B,WAC9B,SAASA,EAAaxC,EAAKtG,GACzBhC,EAAgB5e,KAAM0pB,GAEtB1pB,KAAKmnB,MAAQD,EAAIE,EAAE9oB,KACnB0B,KAAKoqB,eAAiBZ,EAAwBtC,EAAK,GAAI,WACvDlnB,KAAKqqB,cAAoC,QAApBnD,EAAIE,EAAEkD,WAC3BtqB,KAAKuqB,YAAiC,SAAnBrD,EAAIE,EAAEoD,SACzBxqB,KAAKsf,WAAasB,EAoBpB,OAjBA/B,EAAa6K,EAAc,CAAC,CAC1B5sB,IAAK,OACLujB,IAAK,WACH,OAAOrgB,KAAKmnB,QAEb,CACDrqB,IAAK,gBACLujB,IAAK,WACH,OAAOrgB,KAAKoqB,iBAEb,CACDttB,IAAK,eACLujB,IAAK,WACH,OAAOrgB,KAAKqqB,kBAITX,EA5BuB,GAgC5Be,EAAgB,2BAEhBC,EAAkC,WACpC,SAASA,EAAmBpsB,EAAMukB,GAChCjE,EAAgB5e,KAAM0qB,GAEtB1qB,KAAKmnB,MAAQ7oB,EACb0B,KAAKgpB,WAAanG,EAyBpB,OAtBAhE,EAAa6L,EAAoB,CAAC,CAChC5tB,IAAK,UACLujB,IAAK,WACH,OAAO,IAER,CACDvjB,IAAK,OACLujB,IAAK,WACH,OAAOrgB,KAAKmnB,QAEb,CACDrqB,IAAK,YACLujB,IAAK,WACH,OAAOrgB,KAAKgpB,aAEb,CACDlsB,IAAK,MACLujB,IAAK,WACH,OAAyB,MAAlBrgB,KAAK6iB,UAAoB7iB,KAAK1B,KAAO,GAAGuE,OAAO7C,KAAK6iB,UAAW,KAAKhgB,OAAO7C,KAAK1B,UAIpFosB,EA9B6B,GAkClCC,EAAe,gCAEfC,EAAiC,WACnC,SAASA,EAAkB5E,GACzBpH,EAAgB5e,KAAM4qB,GAEtB5qB,KAAK6qB,aAAe7E,EAetB,OAZAnH,EAAa+L,EAAmB,CAAC,CAC/B9tB,IAAK,SACLujB,IAAK,WACH,OAAO,IAER,CACDvjB,IAAK,cACLujB,IAAK,WACH,OAAOrgB,KAAK6qB,iBAITD,EAnB4B,GAuBjCE,EAAmB,oCAEnBC,EAAqC,WACvC,SAASA,EAAsB1E,GAC7BzH,EAAgB5e,KAAM+qB,GAEtB/qB,KAAKgrB,WAAa3E,EAepB,OAZAxH,EAAakM,EAAuB,CAAC,CACnCjuB,IAAK,aACLujB,IAAK,WACH,OAAO,IAER,CACDvjB,IAAK,YACLujB,IAAK,WACH,OAAOrgB,KAAKgrB,eAITD,EAnBgC,GAuBrCE,EAAiB,kCAEjBC,EAAmC,WACrC,SAASA,EAAoB3I,GAC3B3D,EAAgB5e,KAAMkrB,GAEtBlrB,KAAKmrB,SAAW5I,EAelB,OAZA1D,EAAaqM,EAAqB,CAAC,CACjCpuB,IAAK,WACLujB,IAAK,WACH,OAAO,IAER,CACDvjB,IAAK,UACLujB,IAAK,WACH,OAAOrgB,KAAKmrB,aAITD,EAnB8B,GAsBvC,SAAS1B,EAAwBtC,GAG/B,IAFA,IAAI7C,EAAMnC,EAEDkJ,EAAO/N,UAAU1hB,OAAQwM,EAAW,IAAIrM,MAAMsvB,EAAO,EAAIA,EAAO,EAAI,GAAIC,EAAO,EAAGA,EAAOD,EAAMC,IACtGljB,EAASkjB,EAAO,GAAKhO,UAAUgO,GAGjC,GAAInE,EAAIE,EACN,IAAK,IAAIxrB,EAAI,EAAW,MAARyoB,GAAgBzoB,EAAIuM,EAASxM,OAAQC,IACnDyoB,EAAuB,KAAhBlc,EAASvM,GAAY2sB,EAAQrB,EAAIE,EAAE/C,MAAQkE,EAAQrB,EAAIE,EAAE,GAAGvkB,OAAOsF,EAASvM,GAAI,UAK3F,IAAK,IAAI0vB,EAAK,EAAoB,MAAjBpJ,GAAyBoJ,EAAKnjB,EAASxM,OAAQ2vB,IAC9DpJ,EAAiC,KAAjB/Z,EAASmjB,GAAapE,EAAIhF,cAAgBgF,EAAI,GAAGrkB,OAAOsF,EAASmjB,GAAK,kBAOxF,OAJIpJ,GAAiBA,EAAcvmB,OAAS,IAC1CumB,EAAgBA,EAAc,IAGzBqJ,EAAiBlH,EAAMnC,GAGhC,SAASqJ,EAAiBC,EAAYC,GAEpC,GAAID,GAAcf,EAAclsB,KAAKitB,GAAa,CAChD,IAAIE,EAAIjB,EAAckB,KAAKH,GAC3B,OAAO,IAAId,EAAmBgB,EAAE,GAAIA,EAAE,IACjC,GAAID,GA7IS,uBA6IWlD,EAAQkD,EAAiBrE,EAAE/C,MAA2B,CACnF,IAAI/lB,EAAOmtB,EAAiBrE,EAAE9oB,KAC1BukB,EAAY4I,EAAiBrE,EAAEwE,WAAaH,EAAiBrE,EAAEvE,UACnE,OAAO,IAAI6H,EAAmBpsB,EAAMukB,GAEjC,GAAI2I,GAAcb,EAAapsB,KAAKitB,GAAa,CACpD,IAAIK,EAAKlB,EAAagB,KAAKH,GAE3B,OAAO,IAAIZ,EAAkBW,EAAiBM,EAAG,KAC5C,GAAIJ,GAlHQ,sBAkHYlD,EAAQkD,EAAiBrE,EAAE/C,MACxD,OAAO,IAAIuG,EAAkBpB,EAAwBiC,EAAkB,YAEpE,GAAID,GAAcV,EAAiBvsB,KAAKitB,GAAa,CACxD,IAAIM,EAAMhB,EAAiBa,KAAKH,GAEhC,OAAO,IAAIT,EAAsBQ,EAAiBO,EAAI,KACjD,GAAIL,GAhGY,0BAgGQlD,EAAQkD,EAAiBrE,EAAE/C,MACxD,OAAO,IAAI0G,EAAsBvB,EAAwBiC,EAAkB,UAExE,GAAID,GAAcP,EAAe1sB,KAAKitB,GAAa,CAEtD,IAMIjJ,EANMuI,EAAiBa,KAAKH,GAER,GAAG3R,MAAM,KAAK1X,KAAI,SAAU4R,GAClD,OAAOA,EAAE9J,UAGiB9H,KAAI,SAAU4R,GACxC,OAAOwX,EAAiBxX,MAE1B,OAAO,IAAImX,EAAoB3I,GAC1B,GAAIkJ,GAtFU,wBAsFUlD,EAAQkD,EAAiBrE,EAAE/C,MAA4B,CACpF,IAAI8G,EAAWM,EAAiBrJ,OAAOjgB,KAAI,SAAU4R,GACnD,OAAOwX,EAAiB,KAAMxX,MAGhC,OAAO,IAAImX,EAAoBC,IAMnC,SAAS5C,EAAQxhB,GACf,OAAW,MAAPA,EACKA,EAGFA,EAAI2I,QAAQ,MAAO,IAG5BnU,EAAOC,QAxhBP,SAAc6jB,GACZ,IAAI6H,EAAK5oB,EAULsiB,EARA,oBAAoBriB,KAAK8gB,IAC3B6H,EAAM7H,EACN/gB,EAAO,QAEP4oB,EAAMJ,EAAGiF,aAAa1M,EAAe,QACrC/gB,EAAO+gB,GAIT,IAAI2M,EAAO,CACTC,OAAO,EACPC,kBAAmB,CAAClF,EAAWmF,aAC/BC,mBAAoB,CAACpF,EAAWmF,cAalC,OAXApF,EAAO7b,YAAYgc,EAAK8E,GAAM,SAAUphB,EAAKzH,GAChC,MAAPyH,EAG2B,MAApBzH,EAAOyd,UAKlBA,EAAY,IAAIqG,EAAU9jB,EAAOyd,WAJ/BzV,QAAQsW,MAAM,+BAA+B5e,OAAOvE,IAHpD6M,QAAQsW,MAAM,kCAAkC5e,OAAOvE,EAAM,KAAMsM,MAShEgW,kCCtDTrlB,EAAOC,QAAQ,i/lvBCFf,cAGA,aAGE,WAAY6wB,GAEV,IAAK,IAAMC,UAFD,QAAAD,EAAAA,IACV,KAAKE,UAAY,GACCF,EAEhB,IAAK,IAAM/L,KADX,KAAKiM,UAAUD,GAAO,GACAD,EAAcC,GAAM,CACxC,IAAMvR,EAAQsR,EAAcC,GAAKhM,GAASne,KACxC,SAACkD,GAAc,WAAImnB,EAAAA,KAAKnnB,EAAKA,KAAMA,EAAKuhB,OAAQvhB,EAAKib,YAEvD,KAAKiM,UAAUD,GAAKhM,GAAW,IAAIkM,EAAAA,SAASF,EAAKhM,EAASvF,IA2BlE,OAtBE0R,EAAAA,UAAAA,mBAAAA,SAAmBH,GACjB,OAAO,KAAKC,UAAUD,GAAO1vB,OAAOgtB,OAAO,KAAK2C,UAAUD,IAAQ,IAGpEG,EAAAA,UAAAA,aAAAA,SAAaH,EAAahM,GACxB,GAAe,MAAXA,EACF,OAA8B,MAAvB,KAAKiM,UAAUD,GAAe,KAAKC,UAAUD,GAAKhM,GAAW,KAEpE,IAAMoM,EAAU,KAAKC,mBAAmBL,GACxC,OAAuB,IAAnBI,EAAQ/wB,OACH,KAEA+wB,EAAQhqB,QAAO,SAAC6E,EAAQ0T,GAC7B,OAAI1T,EAAE+Y,QAAUrF,EAAEqF,QACT/Y,EAEA0T,MAMnB,EAtCA,GAAazf,EAAAA,YAAAA,8oCCHb,iBAGA,aAIE,WAAYklB,GACV,KAAKA,KAAOA,EACZ,KAAKiD,GAAK,KAAKjD,KAAKiD,GAqFxB,OAlFEiJ,EAAAA,UAAAA,IAAAA,SAAI1K,GACF,OAAO,KAAKgC,iBAAiBC,MAC3B,YAAK,SAAEE,OAASnC,EAAcmC,MAAQD,EAAE9lB,MAAQ4jB,EAAc5jB,SAIlEsuB,EAAAA,UAAAA,eAAAA,WACE,MAAO,CACL,CACEtuB,KAAM,+DAAwD,KAAKoiB,KAAKmM,YACxExI,KAAM,sBAER,CACE/lB,KAAM,8DACN+lB,KAAM,sBAER,CAAE/lB,KAAM,gCAAiC+lB,KAAM,wBAInDuI,EAAAA,UAAAA,cAAAA,SAAclL,GACZ,GAAa,MAATA,GAAiBA,EAAM5P,QAAQ,MAAQ,EAAG,CACtC,MAAe4P,EAAM7H,MAAM,IAAK,GAA/B+H,EAAI,KAAEkL,EAAI,KACjB,OAAO,IAAIF,EAAO,KAAKG,cAAcnL,IAAOmL,cAAcD,GAE5D,OAAO,KAAKpM,KAAKgB,IAGnBkL,EAAAA,UAAAA,IAAAA,SAAIlL,GAIF,IAAM/jB,EAAQ,KAAKovB,cAAcrL,GACjC,MAAqB,kBAAV/jB,GAAsB,gCAAgCY,KAAKZ,GAC7D,KAAKqlB,QAAQtB,GAET,MAAT/jB,GAAkC,kBAAVA,GAAoC,MAAdA,EAAM0H,MAAgC,MAAhB1H,EAAMipB,OACrE,KAAK9iB,QAAQ4d,GAET,MAAT/jB,GAAkC,kBAAVA,GAAoC,MAAbA,EAAMyoB,KAA6B,MAAdzoB,EAAM2oB,KAGvE3oB,EAFE,KAAKqvB,YAAYtL,IAK5BkL,EAAAA,UAAAA,MAAAA,WACE,OAAO,KAAKjJ,IAGdiJ,EAAAA,UAAAA,QAAAA,SAAQlL,GACN,IAAMnU,EAAM,KAAKwf,cAAcrL,GAC/B,OAAW,MAAPnU,EACK0f,EAAGnK,SAASC,MAAMxV,GAElB,MAIXqf,EAAAA,UAAAA,YAAAA,SAAYlL,GACV,IAAMnU,EAAM,KAAKwf,cAAcrL,GAC/B,GAAW,MAAPnU,GAA8B,kBAARA,EAAkB,CAC1C,IAAM6Y,EAAiB,MAAX7Y,EAAI6Y,IAAc6G,EAAGnK,SAASC,MAAMxV,EAAI6Y,KAAO,KACrDE,EAAmB,MAAZ/Y,EAAI+Y,KAAe2G,EAAGnK,SAASC,MAAMxV,EAAI+Y,MAAQ,KAC9D,OAAO,IAAI2G,EAAGjJ,SAASoC,EAAKE,KAIhCsG,EAAAA,UAAAA,kBAAAA,SAAkBlL,GAChB,IAAMnU,EAAM,KAAKwf,cAAcrL,GAC/B,OAAW,MAAPnU,GAA8B,kBAARA,EACjB,KAAKyf,YAAYtL,GAEjB,KAAKsB,QAAQtB,IAIxBkL,EAAAA,UAAAA,QAAAA,SAAQlL,GACN,IAAMnU,EAAM,KAAKwf,cAAcrL,GAC/B,GAAW,MAAPnU,GAA8B,kBAARA,EACxB,OAAO,IAAI0f,EAAGrJ,KAAKrW,EAAIlI,KAAMkI,EAAIqZ,OAAQrZ,EAAI+S,UAGnD,EA3FA,GAAa9kB,EAAAA,OAAAA,EA6Fb,kBAME,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAKqM,OAASxM,EAAKwM,OACnBrM,EAAKsM,UAA8B,MAAlBzM,EAAKyM,UAAoBF,EAAGnK,SAASC,MAAMrC,EAAKyM,gBAAaptB,EAC9E8gB,EAAK6E,QAAU,IACdhF,EAAKgF,SAAW,IAAIxiB,SAAQ,SAACwT,GACM,MAA9BmK,EAAK6E,QAAQhP,EAAEmW,cACjBhM,EAAK6E,QAAQhP,EAAEmW,YAAc,IAE/BhM,EAAK6E,QAAQhP,EAAEmW,YAAYvsB,KAAK,IAAIssB,EAAOlW,SAsBjD,OAtC6B0W,EAAAA,EAAAA,GAoB3B5M,EAAAA,UAAAA,YAAAA,SAAYiF,GACV,GAAe,MAAXA,EACF,MAAO,GAGT,IAAM3X,EAAQ2X,EAAQ3X,MACpB,wEAGF,GAAa,MAATA,EAAe,MAAO,GAE1B,IAAM+e,EAAa/e,EAAM,GACzB,MAAmB,YAAf+e,EACK,CAAC,MAED,KAAKnH,QAAQmH,IAAe,IAGzC,EAtCA,CAA6BD,GAAhBpxB,EAAAA,QAAAA,EAwCb,iBAIE,WAAY6xB,GACV,KAAKA,SAAWA,EAChB,KAAKC,cAYT,OATEpN,EAAAA,UAAAA,eAAAA,WACE,OAAO,KAAKqN,SAGdrN,EAAAA,UAAAA,YAAAA,WACE,IAAMsN,EAAc,KAAKH,SAASI,QAElC,OADA,KAAKF,QAAUC,EAAc,IAAIhN,EAAQgN,QAAeztB,EACjD,KAAKwtB,SAEhB,EAlBA,GAAa/xB,EAAAA,cAAAA,8rBCvIb,cAiCEoB,OAAAA,eAAAA,EAAAA,UAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAjCOqN,EAAAA,WACT,cAiCE9wB,OAAAA,eAAAA,EAAAA,aAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAjCOsN,EAAAA,cACT,cAiCE/wB,OAAAA,eAAAA,EAAAA,aAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAjCOuN,EAAAA,cAGT,cA+BEhxB,OAAAA,eAAAA,EAAAA,UAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA/BOwN,EAAAA,WAgCPjxB,OAAAA,eAAAA,EAAAA,iBAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAhCgBwN,EAAAA,kBAiChBjxB,OAAAA,eAAAA,EAAAA,oBAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAjCgCwN,EAAAA,qBAClC,cAiCEjxB,OAAAA,eAAAA,EAAAA,WAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAjCOyN,EAAAA,YACT,cAiCElxB,OAAAA,eAAAA,EAAAA,UAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAjCO0N,EAAAA,WACT,cAiCEnxB,OAAAA,eAAAA,EAAAA,yBAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAjCO2N,EAAAA,0BAkCPpxB,OAAAA,eAAAA,EAAAA,sBAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAlC+B2N,EAAAA,uBAGjC,cAgCEpxB,OAAAA,eAAAA,EAAAA,UAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAhCO4N,EAAAA,WAiCPrxB,OAAAA,eAAAA,EAAAA,gBAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAjCgB4N,EAAAA,iBAGlB,cA+BErxB,OAAAA,eAAAA,EAAAA,cAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA/BO6N,EAAAA,eAGT,cA6BEtxB,OAAAA,eAAAA,EAAAA,OAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,QA6BA5vB,OAAAA,eAAAA,EAAAA,aAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,cA6BA5vB,OAAAA,eAAAA,EAAAA,UAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,WA6BA5vB,OAAAA,eAAAA,EAAAA,OAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,QA6BA5vB,OAAAA,eAAAA,EAAAA,WAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,YA6BA5vB,OAAAA,eAAAA,EAAAA,WAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,YA6BA5vB,OAAAA,eAAAA,EAAAA,WAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,YA6BA5vB,OAAAA,eAAAA,EAAAA,QAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,SA6BA5vB,OAAAA,eAAAA,EAAAA,WAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OA5BAmM,EAAAA,YAIF2B,EAAAA,EAAAA,MAAAA,GA2BA3yB,EAAAA,QAAe,CACb4yB,QAAO,UACPC,WAAU,aACVC,WAAU,aACVC,QAAO,UACPC,eAAc,iBACdC,kBAAiB,oBACjBC,SAAQ,WACRC,QAAO,UACPC,uBAAsB,yBACtBC,oBAAmB,sBACnBrO,QAAO,UACPN,cAAa,gBACbuM,YAAW,cACX7I,KAAI,OACJkL,WAAU,aACVC,QAAO,UACPC,KAAI,OACJlM,SAAQ,WACRkB,SAAQ,WACRiL,SAAQ,WACRC,MAAK,QACLC,SAAQ,gJChFV,cAEA,aACE,WACS9pB,EACAuhB,EACAtG,EACAuG,GAHA,YACA,cACA,eACA,eAeX,OAZEjqB,OAAAA,eAAIgnB,EAAAA,UAAA,SAAM,KAAV,WACE,OAAO,mCAGTA,EAAAA,UAAAA,SAAAA,SAASve,GACP,MAAoB,kBAATA,EAEFA,IAAS,KAAKA,KAEd+pB,EAAYC,EAAWhqB,GAAO,CAAC,QAG5C,EApBA,GAAa7J,EAAAA,KAAAA,EAsBb,iBACE,WAAmBuf,EAAqB8L,GAArB,aAAqB,eACtC,KAAK9L,QAAL,KAAKA,MAAU,IAUnB,OAPEne,OAAAA,eAAImyB,EAAAA,UAAA,YAAS,KAAb,WACE,OAAO,mCAGTA,EAAAA,UAAAA,SAAAA,SAAS1pB,GACP,OAAO+pB,EAAYC,EAAWhqB,GAAO,KAAK0V,QAE9C,EAZA,GAAavf,EAAAA,QAAAA,EAcb,iBACE,WAAmB8wB,EAAoBhM,EAAyBvF,QAAA,QAAAA,EAAAA,IAA7C,WAAoB,eAAyB,aAC9D,KAAKA,QAAL,KAAKA,MAAU,IAgCnB,OA7BEne,OAAAA,eAAIuyB,EAAAA,UAAA,aAAU,KAAd,WACE,OAAO,mCAGTA,EAAAA,UAAAA,SAAAA,SAAS9pB,GACP,IAAMiqB,EAAYD,EAAWhqB,GAE7B,GAAyB,IAArBiqB,EAAU3zB,QAAwC,kBAAjB2zB,EAAU,GAAiB,CAG9D,IAFA,IAAIC,GAAa,EACbC,GAA2B,EACR,WAAKzU,MAALuQ,EAAAA,EAAAA,OAAAA,IAAY,CAA9B,IAAMmE,EAAQ,KAQjB,GANIA,EAAS7I,SAAW,KAAK7L,MAAM,GAAG6L,SACpC4I,GAA2B,GAEzBC,EAASpqB,OAASiqB,EAAU,KAC9BC,GAAa,GAEXC,GAA4BD,EAC9B,MAAM,IAAIzvB,MACR,+FAIN,OAAOyvB,EAEP,OAAOH,EAAYE,EAAW,KAAKvU,QAGzC,EAlCA,GAoCA,SAASsU,EAAWtb,GAClB,GAAS,MAALA,EACF,MAAO,GACF,IAAI,iBAAYA,GAAI,CAEzB,IADA,IAAI2b,EAAY,GACC,QAAApE,EAAAA,EAAAA,OAAAA,IAAG,CAAf,IAAMqE,EAAE,KACXD,EAAOA,EAAK7sB,OAAOwsB,EAAWM,IAEhC,OAAOD,EACF,OAAI,iBAAY3b,EAAEgH,OAChBhH,EAAEgH,MAEF,CAAChH,GAIZ,SAASqb,EAAYQ,EAAUC,GAE7B,OAAOD,EAAIzL,MAAK,SAAC2L,GACf,SAAI3L,MAAK,SAACwL,GAER,MAAkB,kBAAPG,EAGFA,IAAOH,EAAGtqB,MAQQ0qB,EANHJ,GAMVK,EANMF,GAOXzqB,OAAS0qB,EAAM1qB,MAAQ2qB,EAAMpJ,SAAWmJ,EAAMnJ,QAD7D,IAAoBoJ,EAAaD,QApEpBv0B,EAAAA,SAAAA,EAwEb,MACE,SAAmBmoB,EAAmBrD,GAAnB,UAAmB,gBAD3B9kB,EAAAA,WAAAA,+ZC9Gb2yB,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,KAAAA,GACAA,EAAAA,EAAAA,MAAAA,m7BCLA,cACA,UAKA,UAaM8B,EAA6B,WACjC,IAAMC,EAAU,IAAI9H,IAIpB,OAHA8H,EAAQxH,IAAI,EAAG,QACfwH,EAAQxH,IAAI,EAAG,WACfwH,EAAQxH,IAAI,GAAI,cACTwH,EAL0B,GAQ7BC,EAAkC,WACtC,IAAMC,EAAe,CACnBC,KAAM,OACN,UAAW,UACX,aAAc,aACd,mBAAoB,eACpB,kBAAmB,oBACnB,kBAAmB,gBACnB,qBAAsB,iBACtB,oBAAqB,sBACrB,qBAAsB,mBACtB,wBAAyB,oBACzB,uBAAwB,yBACxB,wBAAyB,sBACzB,2BAA4B,uBAC5B,0BAA2B,4BAC3B,4BAA6B,0BAC7B,+BAAgC,2BAChC,8BAA+B,iCAE3BC,EAAW,IAAIlI,IASrB,OARAxrB,OAAO6F,KAAK2tB,GAASltB,SAAQ,YAC3B,IAAMqtB,EAAUH,EAAQriB,GACnBuiB,EAASzH,IAAI0H,EAAQ50B,QAGxB20B,EAASjQ,IAAIkQ,EAAQ50B,QAAQ2E,KAAKyN,GAFlCuiB,EAAS5H,IAAI6H,EAAQ50B,OAAQ,CAACoS,OAK3BuiB,EA7B+B,GAgCxC,SAASE,EAAmBC,EAAoB1a,GAC9C,IAAMpY,EAAQ8yB,EAASpQ,IAAItK,GAC3B,OAAOpY,GAAS,EAAImI,KAAK4qB,MAAM/yB,GAASmI,KAAK6qB,KAAKhzB,GAGpD,SAASizB,EAAsBC,EAAwB9a,GASrD,OAPIA,IAAS+M,EAASja,KAAKioB,OAED,IAApBD,EAAQE,UACVF,EAAUA,EAAQnI,IAAI,CAAEqI,QAAS,IAAK7vB,MAAM,CAAE8vB,MAAO,KAEvDjb,EAAO+M,EAASja,KAAKooB,KAEhBJ,EAAQK,QAAQnb,GASzB,iBACE,WACSob,EACAC,EACAC,QAFA,QAAAF,EAAAA,WACA,QAAAC,EAAAA,WACA,QAAAC,EAAAA,MAFA,YACA,aACA,WAsdX,OA1cEC,EAAAA,UAAAA,UAAAA,WAAA,WAEE,OAAO,KAAKjzB,YAAYkzB,OAAOC,OAAM,YAAS,OAAe,MAAf,EAAK9P,OAGrD4P,EAAAA,UAAAA,YAAAA,WACE,OAAQ,KAAKG,aAGfH,EAAAA,UAAAA,cAAAA,SAAcI,GAEZ,GAAqB,kBAAVA,GAAsB,KAAKrzB,YAAYkzB,OAAOtR,SAASyR,IAEhE,GAAmB,MAAf,KAAKA,GACP,OAAO,OAIT,IAAoB,eAAKrzB,YAAYkzB,OAAjBjG,EAAAA,EAAAA,OAAAA,IAAyB,CAAxC,IAAM5J,EAAK,KAEd,GAAoB,MAAhBgQ,EAAMhQ,IAAiC,MAAf,KAAKA,GAC/B,OAAO,EAKb,OAAQ,KAAKiQ,gBAAgBD,IAG/BJ,EAAAA,UAAAA,cAAAA,SAAcI,GACZ,OAAQ,KAAKC,gBAAgBD,KAAW,KAAKE,cAAcF,IAI7DJ,EAAAA,UAAAA,gBAAAA,SAAgBI,GAEd,GAAqB,kBAAVA,GAAsB,KAAKrzB,YAAYkzB,OAAOtR,SAASyR,GAChE,OAAOA,IAAU,KAAKG,eAIxB,IAAoB,eAAKxzB,YAAYkzB,OAAjBjG,EAAAA,EAAAA,OAAAA,IAAyB,CAAxC,IAAM5J,EAAK,KAEd,GAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GAC/B,OAAO,EAGT,GAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GAC/B,OAAO,EAGX,OAAO,GAGT4P,EAAAA,UAAAA,OAAAA,SAAOI,GACL,OAAOI,EAAyB,KAAMJ,EAAO,OAG/CJ,EAAAA,UAAAA,WAAAA,SAAWI,GACT,OAAOI,EAAyB,KAAMJ,GAAO,IAG/CJ,EAAAA,UAAAA,OAAAA,SAAOI,EAAYK,GACjB,IAAML,EAAMM,SAAUN,EAAMO,WAC1B,OAAO,KACF,GAAI,KAAKD,QAAUN,EAAMO,WAC9B,OAAO,KAAKC,cAAcC,OAAOT,EAAOK,GAM1C,GALY,KAAaE,YAAcP,EAAMM,SAC3CN,EAAQA,EAAMQ,eAIC,MAAbH,GAAqB,KAAK1zB,YAAYkzB,OAAOzf,QAAQigB,GAAa,EACpE,MAAM,IAAIjyB,MAAM,6BAAsBiyB,IAOpCK,EAAuCL,IACpC,KAAa7O,iBAAmBwO,EAAMxO,iBACzCwO,EAAQA,EAAMW,wBAAyB,KAAanP,iBAKxD,IAAoB,eAAK7kB,YAAYkzB,OAAjBjG,EAAAA,EAAAA,OAAAA,IAAyB,CAAxC,IAAM5J,EAAK,KAGd,GAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GAS1B,OAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,IACrB,MAAbqQ,GASG,KAhBP,GAAI,KAAKrQ,KAAWgQ,EAAMhQ,GACxB,OAAO,EAmBX,GAAiB,MAAbqQ,GAAqBA,IAAcrQ,EACrC,MAKJ,OAAO,GAGT4P,EAAAA,UAAAA,aAAAA,SAAaI,EAAYK,GACvB,IAAML,EAAMM,SAAUN,EAAMO,WAC1B,OAAO,KACF,GAAI,KAAKD,QAAUN,EAAMO,WAC9B,OAAO,KAAKC,cAAcI,aAAaZ,EAAOK,GAMhD,GALY,KAAaE,YAAcP,EAAMM,SAC3CN,EAAQA,EAAMQ,eAIC,MAAbH,GAAqB,KAAK1zB,YAAYkzB,OAAOzf,QAAQigB,GAAa,EACpE,MAAM,IAAIjyB,MAAM,6BAAsBiyB,IAOpCK,EAAuCL,IACpC,KAAa7O,iBAAmBwO,EAAMxO,iBACzCwO,EAAQA,EAAMW,wBAAyB,KAAanP,iBAKxD,IAAoB,eAAK7kB,YAAYkzB,OAAjBjG,EAAAA,EAAAA,OAAAA,IAAyB,CAAxC,IAAM5J,EAAK,KAGd,GAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GAc1B,OAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,IACrB,MAAbqQ,GASG,KArBP,GAAI,KAAKrQ,GAASgQ,EAAMhQ,GACtB,OAAO,EAGF,GAAI,KAAKA,GAASgQ,EAAMhQ,GAC7B,OAAO,EAoBX,GAAiB,MAAbqQ,GAAqBA,IAAcrQ,EACrC,MAKJ,OAAO,GAGT4P,EAAAA,UAAAA,YAAAA,SAAYI,EAAYK,GACtB,IAAML,EAAMM,SAAUN,EAAMO,WAC1B,OAAO,KACF,GAAI,KAAKD,QAAUN,EAAMO,WAC9B,OAAO,KAAKC,cAAcK,YAAYb,EAAOK,GAM/C,GALY,KAAaE,YAAcP,EAAMM,SAC3CN,EAAQA,EAAMQ,eAIC,MAAbH,GAAqB,KAAK1zB,YAAYkzB,OAAOzf,QAAQigB,GAAa,EACpE,MAAM,IAAIjyB,MAAM,6BAAsBiyB,IAOpCK,EAAuCL,IACpC,KAAa7O,iBAAmBwO,EAAMxO,iBACzCwO,EAAQA,EAAMW,wBAAyB,KAAanP,iBAKxD,IAAoB,eAAK7kB,YAAYkzB,OAAjBjG,EAAAA,EAAAA,OAAAA,IAAyB,CAAxC,IAAM5J,EAAK,KAGd,GAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GAc1B,OAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,IACrB,MAAbqQ,GASG,KArBP,GAAI,KAAKrQ,GAASgQ,EAAMhQ,GACtB,OAAO,EAGF,GAAI,KAAKA,GAASgQ,EAAMhQ,GAC7B,OAAO,EAoBX,GAAiB,MAAbqQ,GAAqBA,IAAcrQ,EACrC,MAKJ,OAAO,GAGT4P,EAAAA,UAAAA,OAAAA,SAAOI,EAAYK,GACjB,IAAML,EAAMM,SAAUN,EAAMO,WAC1B,OAAO,KACF,GAAI,KAAKD,QAAUN,EAAMO,WAC9B,OAAO,KAAKC,cAAcM,OAAOd,EAAOK,GAM1C,GALY,KAAaE,YAAcP,EAAMM,SAC3CN,EAAQA,EAAMQ,eAIC,MAAbH,GAAqB,KAAK1zB,YAAYkzB,OAAOzf,QAAQigB,GAAa,EACpE,MAAM,IAAIjyB,MAAM,6BAAsBiyB,IAOpCK,EAAuCL,IACpC,KAAa7O,iBAAmBwO,EAAMxO,iBACzCwO,EAAQA,EAAMW,wBAAyB,KAAanP,iBAKxD,IAAoB,eAAK7kB,YAAYkzB,OAAjBjG,EAAAA,EAAAA,OAAAA,IAAyB,CAAxC,IAAM5J,EAAK,KAGd,GAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GAc1B,OAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GACrB,MAAbqQ,GAIK,KAKF,KArBP,GAAI,KAAKrQ,GAASgQ,EAAMhQ,GACtB,OAAO,EAGF,GAAI,KAAKA,GAASgQ,EAAMhQ,GAC7B,OAAO,EAoBX,GAAiB,MAAbqQ,GAAqBA,IAAcrQ,EACrC,MAKJ,OAAO,GAGT4P,EAAAA,UAAAA,MAAAA,SAAMI,EAAYK,GAChB,IAAML,EAAMM,SAAUN,EAAMO,WAC1B,OAAO,KACF,GAAI,KAAKD,QAAUN,EAAMO,WAC9B,OAAO,KAAKC,cAAcO,MAAMf,EAAOK,GAMzC,GALY,KAAaE,YAAcP,EAAMM,SAC3CN,EAAQA,EAAMQ,eAIC,MAAbH,GAAqB,KAAK1zB,YAAYkzB,OAAOzf,QAAQigB,GAAa,EACpE,MAAM,IAAIjyB,MAAM,6BAAsBiyB,IAOpCK,EAAuCL,IACpC,KAAa7O,iBAAmBwO,EAAMxO,iBACzCwO,EAAQA,EAAMW,wBAAyB,KAAanP,iBAKxD,IAAoB,eAAK7kB,YAAYkzB,OAAjBjG,EAAAA,EAAAA,OAAAA,IAAyB,CAAxC,IAAM5J,EAAK,KAGd,GAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GAc1B,OAAmB,MAAf,KAAKA,IAAkC,MAAhBgQ,EAAMhQ,GACrB,MAAbqQ,GAIK,KAKF,KArBP,GAAI,KAAKrQ,GAASgQ,EAAMhQ,GACtB,OAAO,EAGF,GAAI,KAAKA,GAASgQ,EAAMhQ,GAC7B,OAAO,EAoBX,GAAiB,MAAbqQ,GAAqBA,IAAcrQ,EACrC,MAKJ,OAAO,GAGT4P,EAAAA,UAAAA,IAAAA,SAAIoB,EAAahR,SACf,GAAe,IAAXgR,GAA6B,MAAb,KAAKvB,KACvB,OAAO,KAAKwB,OAKd,IAAIC,EAAgB,KAAKC,kBASkB,MAAf,KAAKnR,IACNgR,EAAS,IAClCE,EAAgBA,EAAcE,MAAM,KAAKjB,iBAI3C,IAAMkB,EAAcH,EAAcI,OAAIC,EAAAA,IAAIvR,GAAQgR,EAAMO,IAClD9vB,EAAU,KAAK9E,YAClB60B,kBAAkBH,GAClBI,iBAAiB,KAAKtB,gBAOzB,OALK,KAAaI,YAA8C,MAA/B,KAAa/O,iBAC5C/f,EAAO+f,eAAiB,MAItB/f,EAAOsvB,MAAMj3B,EAAAA,oBAAsB2H,EAAOqvB,OAAOh3B,EAAAA,qBAC5C,KAEA2H,GAIXmuB,EAAAA,UAAAA,cAAAA,SAAc5P,GACZ,OAAQA,GACN,IAAK,QAEL,IAAK,MACH,OAAO,EACT,IAAK,OAEL,IAAK,SAEL,IAAK,SAEL,IAAK,cACH,OAAO,EACT,QACE,MAAM,IAAI5hB,MAAM,mDAAqD4hB,KAI3E4P,EAAAA,UAAAA,gBAAAA,SAAgB5P,GACd,OAAQA,GACN,IAAK,QACH,OAAO,GACT,IAAK,MACH,OAyvBR,SAAqByP,EAAqBC,GACxC,GAAY,MAARD,GAAyB,MAATC,EAClB,MAAM,IAAItxB,MAAM,oDAGlB,OAAO,IAAIszB,EAAAA,OAAOjC,EAAMC,EAAO,GAAGpO,UA9vBrBqQ,CAAY,KAAKlC,KAAM,KAAKC,OACrC,IAAK,OACH,OAAO,GACT,IAAK,SAEL,IAAK,SACH,OAAO,GACT,IAAK,cACH,OAAO,IACT,QACE,MAAM,IAAItxB,MAAM,wDAA0D4hB,KAGlF,EA1dA,GA4dA,cAwHE,WACEyP,EACAC,EACAC,EACAiC,EACAC,EACAC,EACAC,EACAvQ,QAPA,QAAAiO,EAAAA,WACA,QAAAC,EAAAA,WACA,QAAAC,EAAAA,WACA,QAAAiC,EAAAA,WACA,QAAAC,EAAAA,WACA,QAAAC,EAAAA,WACA,QAAAC,EAAAA,MAPF,MAaE1O,EAAAA,KAAAA,KAAMoM,EAAMC,EAAOC,IAAI,YACvBxQ,EAAKyS,KAAOA,EACZzS,EAAK0S,OAASA,EACd1S,EAAK2S,OAASA,EACd3S,EAAK4S,YAAcA,EAEjB5S,EAAKqC,oBADgBnjB,IAAnBmjB,GACqB,IAAIkQ,EAAAA,QAASM,oBAAsB,IAAO,EAE3CxQ,IAuT5B,OApc8BkK,EAAAA,EAAAA,GA4BrBtK,EAAAA,MAAP,SAAa6Q,GACX,GAAe,OAAXA,EACF,OAAO,KAGT,IAAMC,EAAU,8GAA8GjI,KAC5HgI,GAGF,GAAe,MAAXC,EACF,OAAO,KAET,IAAMC,EAAQD,EAAQ,GAChBE,EAASF,EAAQ,GACjBG,EAAOH,EAAQ,GACfI,EAAQJ,EAAQ,GAChBK,EAAUL,EAAQ,IAClBM,EAAUN,EAAQ,IACpBO,EAAeP,EAAQ,IAQ3B,GAPoB,MAAhBO,IACFA,GAAe,gCAA2BA,IAExB,MAAhBA,IACFR,GAAS,wCAAmCA,EAAQC,EAAQ,OA4sBlE,SAAqCD,GACnC,GAAsB,kBAAXA,EACT,OAAO,EAIL,qBAAqBp1B,KAAKo1B,KAC5BA,GAAU,OAGZ,IAAMvD,EAAUD,EAA+B9P,IAAIsT,EAAOh4B,QAC1D,GAAe,MAAXy0B,EACF,OAAO,EAGT,OAAOA,EAAQjM,MAAK,SAACiQ,GAAa,kBAAcC,WAAWV,EAAQS,GAAKE,WAxtBjEC,CAA4BZ,GAC/B,OAAO,KAIT,IAAMa,EAAO,CAACX,EAAOC,EAAQC,EAAMC,EAAOC,EAASC,EAASC,GAAchyB,KAAI,YAC5E,OAAc,MAAPsyB,EAAclkB,SAASkkB,GAAOA,KAGvC,GAAmB,MAAfb,EAAQ,IAAa,CACvB,IAAM/sB,EAAM0J,SAASqjB,EAAQ,MAAuB,MAAfA,EAAQ,IAAcrjB,SAASqjB,EAAQ,KAAO,GAAK,GACxFY,EAAKl0B,KAAqB,MAAhBszB,EAAQ,IAAc/sB,GAAa,EAAPA,OACb,MAAhB+sB,EAAQ,KACjBY,EAAKl0B,KAAK,GAGZ,WAAWwiB,EAAQ,KAAAngB,MAAR,EAAQ+xB,EAAAA,MAAAA,GAAIF,GAAI,MAItB1R,EAAAA,WAAP,SAAkBgB,EAAWZ,GAE3B,OAAIY,aAAgBhB,EACXgB,EAEa,MAAlBZ,EAEK,IAAIJ,GADXgB,EAAO,IAAIsP,EAAAA,OAAOtP,EAAK6Q,UAA6B,GAAjBzR,EAAsB,GAAK,MAEvD0R,iBACL9Q,EAAK+Q,cAAgB,EACrB/Q,EAAKgR,aACLhR,EAAKiR,cACLjR,EAAKkR,gBACLlR,EAAKmR,gBACLnR,EAAKoR,qBACLhS,GAGK,IAAIJ,EACTgB,EAAKqR,cACLrR,EAAKsR,WAAa,EAClBtR,EAAKd,UACLc,EAAKuR,WACLvR,EAAKwR,aACLxR,EAAKyR,aACLzR,EAAK0R,oBAKJ1S,EAAAA,kBAAP,SAAyB+N,GACvB,OAAIA,aAAmB/N,EACd+N,EAEF,IAAI/N,EACT+N,EAAQM,KACRN,EAAQO,MACRP,EAAQQ,IACRR,EAAQyC,KACRzC,EAAQ0C,OACR1C,EAAQ2C,OACR3C,EAAQ4C,YACR5C,EAAQ6B,OAAS,KA6BrB91B,OAAAA,eAAIkmB,EAAAA,UAAA,aAAU,KAAd,WACE,OAAO,mCAGTlmB,OAAAA,eAAIkmB,EAAAA,UAAA,SAAM,KAAV,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,WACE,OAAO,IAAIA,EACT,KAAKqO,KACL,KAAKC,MACL,KAAKC,IACL,KAAKiC,KACL,KAAKC,OACL,KAAKC,OACL,KAAKC,YACL,KAAKvQ,iBAITJ,EAAAA,UAAAA,UAAAA,WACE,OAAwB,MAApB,KAAK2Q,YACA,KAAK1yB,IAAI,EAAG+hB,EAASja,KAAK4sB,aACT,MAAf,KAAKjC,OACP,KAAKzyB,IAAI,EAAG+hB,EAASja,KAAK6sB,QACT,MAAf,KAAKnC,OACP,KAAKxyB,IAAI,EAAG+hB,EAASja,KAAK8sB,QACX,MAAb,KAAKrC,KACP,KAAKvyB,IAAI,EAAG+hB,EAASja,KAAK+sB,MACZ,MAAZ,KAAKvE,IACP,KAAKtwB,IAAI,EAAG+hB,EAASja,KAAKooB,KACV,MAAd,KAAKG,MACP,KAAKrwB,IAAI,EAAG+hB,EAASja,KAAKgtB,OACX,MAAb,KAAK1E,KACP,KAAKpwB,IAAI,EAAG+hB,EAASja,KAAKitB,WAD5B,GAKThT,EAAAA,UAAAA,YAAAA,WACE,OAAwB,MAApB,KAAK2Q,YACA,KAAK1yB,KAAK,EAAG+hB,EAASja,KAAK4sB,aACV,MAAf,KAAKjC,OACP,KAAKzyB,KAAK,EAAG+hB,EAASja,KAAK6sB,QACV,MAAf,KAAKnC,OACP,KAAKxyB,KAAK,EAAG+hB,EAASja,KAAK8sB,QACZ,MAAb,KAAKrC,KACP,KAAKvyB,KAAK,EAAG+hB,EAASja,KAAK+sB,MACb,MAAZ,KAAKvE,IACP,KAAKtwB,KAAK,EAAG+hB,EAASja,KAAKooB,KACX,MAAd,KAAKG,MACP,KAAKrwB,KAAK,EAAG+hB,EAASja,KAAKgtB,OACZ,MAAb,KAAK1E,KACP,KAAKpwB,KAAK,EAAG+hB,EAASja,KAAKitB,WAD7B,GAKThT,EAAAA,UAAAA,wBAAAA,SAAwBI,QAAA,QAAAA,EAAAA,GACtB,IAAM6S,EAAiB,KAAKlD,kBAAkBmD,QAC5CC,EAAAA,gBAAgB/5B,SAA0B,GAAjBgnB,IAG3B,OADkBJ,EAASoQ,kBAAkB6C,GAC5B5C,iBAAiB,KAAKtB,iBAGzC/O,EAAAA,UAAAA,kBAAAA,SAAkB4O,EAAYwE,GAE5B,GAAa,OADbxE,EAAQ,KAAKyE,mBAAmBzE,MACVA,EAAMO,WAC1B,OAAO,KAUT,IAAM1qB,EAAI,KAAK6uB,qBACTnb,EAAIyW,EAAM0E,qBAsBhB,MAjBE,CAACtT,EAASja,KAAKitB,KAAMhT,EAASja,KAAKgtB,MAAO/S,EAASja,KAAKioB,KAAMhO,EAASja,KAAKooB,KAAKhR,SAC/EiW,KAGF3uB,EAAE6e,IAAM7e,EAAE6e,IAAIiQ,MAAM,EAAG,CAAEC,eAAe,IACxC/uB,EAAE+e,KAAO/e,EAAE+e,KAAK+P,MAAM,EAAG,CAAEC,eAAe,IAC1Crb,EAAEmL,IAAMnL,EAAEmL,IAAIiQ,MAAM,EAAG,CAAEC,eAAe,IACxCrb,EAAEqL,KAAOrL,EAAEqL,KAAK+P,MAAM,EAAG,CAAEC,eAAe,KAI5C/uB,EAAE6e,IAAMwK,EAAsBrpB,EAAE6e,IAAK8P,GACrC3uB,EAAE+e,KAAOsK,EAAsBrpB,EAAE+e,KAAM4P,GACvCjb,EAAEmL,IAAMwK,EAAsB3V,EAAEmL,IAAK8P,GACrCjb,EAAEqL,KAAOsK,EAAsB3V,EAAEqL,KAAM4P,GAGhC,IAAIK,EAAAA,YACT/F,EAAmBvV,EAAEmL,IAAIoQ,KAAKjvB,EAAE+e,KAAM4P,GAAYA,GAClD1F,EAAmBvV,EAAEqL,KAAKkQ,KAAKjvB,EAAE6e,IAAK8P,GAAYA,KAItDpT,EAAAA,UAAAA,gBAAAA,SAAgB4O,EAAYwE,GAE1B,GAAa,OADbxE,EAAQ,KAAKyE,mBAAmBzE,MACVA,EAAMO,WAC1B,OAAO,KAET,IAAM1qB,EAAI,KAAK6uB,qBACTnb,EAAIyW,EAAM0E,qBAChB,OAAO,IAAIG,EAAAA,YACT/F,EAAmBvV,EAAEmL,IAAIoQ,KAAKjvB,EAAE+e,KAAM4P,GAAYA,GAClD1F,EAAmBvV,EAAEqL,KAAKkQ,KAAKjvB,EAAE6e,IAAK8P,GAAYA,KAItDpT,EAAAA,UAAAA,MAAAA,WAEE,OAAQ,KAAKI,gBAGfJ,EAAAA,UAAAA,aAAAA,WACE,IAAI3f,EAAS,KACb,OAAiB,MAAb,KAAKguB,KAGAhuB,GAFPA,EAAS2f,EAASja,KAAKitB,KAIP,MAAd,KAAK1E,MAGAjuB,GAFPA,EAAS2f,EAASja,KAAKgtB,MAIT,MAAZ,KAAKxE,IAGAluB,GAFPA,EAAS2f,EAASja,KAAKooB,IAIR,MAAb,KAAKqC,KAGAnwB,GAFPA,EAAS2f,EAASja,KAAK+sB,KAIN,MAAf,KAAKrC,OAGApwB,GAFPA,EAAS2f,EAASja,KAAK8sB,OAIN,MAAf,KAAKnC,SACPrwB,EAAS2f,EAASja,KAAK6sB,OAID,MAApB,KAAKjC,cACPtwB,EAAS2f,EAASja,KAAK4sB,cAHhBtyB,QAQX2f,EAAAA,UAAAA,kBAAAA,WACE,OAAO,KAAK2T,SACRC,EAAyBrW,IAAI,KAAKwR,gBAClC8E,EAA6BtW,IAAI,KAAKwR,iBAG5C/O,EAAAA,UAAAA,gBAAAA,6BACQ8T,EACmB,MAAvB,KAAK1T,eACqB,GAAtB,KAAKA,gBAC+B,GAApC,IAAIkQ,EAAAA,QAASM,oBACnB,OAAOuC,EAAAA,SAAcY,WAAW,CAC9B1F,KAAe,QAAT,OAAKA,YAAI8B,IAAAA,EAAAA,OAAIlzB,EACnBqxB,MAAiB,QAAV,OAAKA,aAAK0F,IAAAA,EAAAA,OAAI/2B,EACrBsxB,IAAa,QAAR,OAAKA,WAAG0F,IAAAA,EAAAA,OAAIh3B,EACjBuzB,KAAe,QAAT,OAAKA,YAAI0D,IAAAA,EAAAA,OAAIj3B,EACnBwzB,OAAmB,QAAX,OAAKA,cAAMjV,IAAAA,EAAAA,OAAIve,EACvByzB,OAAmB,QAAX,OAAKA,cAAMyD,IAAAA,EAAAA,OAAIl3B,EACvB0zB,YAA6B,QAAhB,OAAKA,mBAAWyD,IAAAA,EAAAA,OAAIn3B,EACjCo3B,KAAMlB,EAAAA,gBAAgB/5B,SAAS06B,MAInC9T,EAAAA,UAAAA,mBAAAA,WACE,IAAMsD,EAAM,KAAKyM,kBACXvM,EAAOF,EAAI0M,MAAM,KAAKjB,gBAC5B,OAAO,IAAI0E,EAAAA,YAAYnQ,EAAKE,IAG9BxD,EAAAA,UAAAA,SAAAA,SAASsU,QAAA,QAAAA,GAAAA,GACP,IAAIvG,EAAU,KAAKgC,kBAEnB,GAAIuE,EAAgB,CAClB,IAAM1E,GAA6C,GAApC,IAAIU,EAAAA,QAASM,oBAC5B7C,EAAUA,EAAQmF,QAAQC,EAAAA,gBAAgB/5B,SAASw2B,GAAS,CAAE4D,eAAe,IAE/E,OAAOzF,EAAQwG,YAGjBvU,EAAAA,UAAAA,OAAAA,WACE,OAAO,KAAK3kB,YAGd2kB,EAAAA,UAAAA,KAAAA,SAAKjc,GACH,OAAOywB,OAAO,IAAMzwB,GAAKrJ,OAAO,IAGlCslB,EAAAA,UAAAA,SAAAA,WACE,OAAI,KAAK2T,SACA,KAAKc,eAEL,KAAKC,oBAIhB1U,EAAAA,UAAAA,aAAAA,WACE,IAAI/b,EAAM,GAcV,OAbiB,MAAb,KAAKusB,OACPvsB,GAAO,KAAK0wB,KAAK,KAAKnE,MACH,MAAf,KAAKC,SACPxsB,GAAO,IAAM,KAAK0wB,KAAK,KAAKlE,QACT,MAAf,KAAKC,SACPzsB,GAAO,IAAM,KAAK0wB,KAAK,KAAKjE,QACJ,MAApB,KAAKC,cACP1sB,GAAO,IAAMuwB,OAAO,KAAO,KAAK7D,aAAaj2B,OAAO,OAMrDuJ,GAGT+b,EAAAA,UAAAA,iBAAAA,WACE,IAAI/b,EAAM,GAuBV,GAtBiB,MAAb,KAAKoqB,OACPpqB,GAAO,KAAKoqB,KACM,MAAd,KAAKC,QACPrqB,GAAO,IAAM,KAAK0wB,KAAK,KAAKrG,OACZ,MAAZ,KAAKC,MACPtqB,GAAO,IAAM,KAAK0wB,KAAK,KAAKpG,KACX,MAAb,KAAKiC,OACPvsB,GAAO,IAAM,KAAK0wB,KAAK,KAAKnE,MACT,MAAf,KAAKC,SACPxsB,GAAO,IAAM,KAAK0wB,KAAK,KAAKlE,QACT,MAAf,KAAKC,SACPzsB,GAAO,IAAM,KAAK0wB,KAAK,KAAKjE,QACJ,MAApB,KAAKC,cACP1sB,GAAO,IAAMuwB,OAAO,KAAO,KAAK7D,aAAaj2B,OAAO,WASxC,IAAtBuJ,EAAI+K,QAAQ,MAAsC,MAAvB,KAAKoR,eAAwB,CAC1Dnc,GAAO,KAAKmc,eAAiB,EAAI,IAAM,IACvC,IAAMwU,EAAc5xB,KAAK4qB,MAAM5qB,KAAK6xB,IAAI,KAAKzU,iBAC7Cnc,GAAO,KAAK0wB,KAAKC,GACjB,IAAME,EAA4D,IAA/C9xB,KAAK6xB,IAAI,KAAKzU,gBAAkBwU,GACnD3wB,GAAO,IAAM,KAAK0wB,KAAKG,GAGzB,OAAO7wB,GAGT+b,EAAAA,UAAAA,YAAAA,WACE,OAAO,MAGTA,EAAAA,UAAAA,QAAAA,WACE,OAAO,IAAIkM,EAAK,KAAKmC,KAAM,KAAKC,MAAO,KAAKC,MAG9CvO,EAAAA,UAAAA,QAAAA,WAEE,OAAO,IAAIA,EAAS,EAAG,EAAG,EAAG,KAAKwQ,KAAM,KAAKC,OAAQ,KAAKC,OAAQ,KAAKC,YAAa,OAGtF3Q,EAAAA,UAAAA,OAAAA,WACE,OAAqB,IAAd,KAAKqO,MAA6B,IAAf,KAAKC,OAA4B,IAAb,KAAKC,KAGrDvO,EAAAA,UAAAA,mBAAAA,SAAmB4O,GACjB,OAAa,MAATA,GAAiBA,EAAMM,OAClBN,EAAMQ,cAERR,GAGT5O,EAAAA,UAAAA,iBAAAA,SAAiBoT,QAAA,QAAAA,EAA2BpT,EAASja,KAAK4sB,aACxD,IAAMoC,EAAU,KAAKlF,OACrB,GAAiB,MAAbuD,GAAqBA,IAAcpT,EAASja,KAAK4sB,YAGnD,IAFA,IAAMqC,EAAahV,EAASyO,OAAOzf,QAAQokB,GAEvB,MADGpT,EAASyO,OAAO/zB,MAAMs6B,EAAa,GACtCxM,EAAAA,EAAAA,OAAAA,IAAgB,CAElCuM,EAFc,MAEG,KAGrB,OAAOA,GA3bO/U,EAAAA,KAAO,CACrBgT,KAAM,OACND,MAAO,QACP/E,KAAM,OACNG,IAAK,MACL2E,KAAM,OACND,OAAQ,SACRD,OAAQ,SACRD,YAAa,eAGC3S,EAAAA,OAAS,CACvBA,EAASja,KAAKitB,KACdhT,EAASja,KAAKgtB,MACd/S,EAASja,KAAKooB,IACdnO,EAASja,KAAK+sB,KACd9S,EAASja,KAAK8sB,OACd7S,EAASja,KAAK6sB,OACd5S,EAASja,KAAK4sB,aA2alB,EApcA,CAA8BnE,GAAjB91B,EAAAA,SAAAA,EAscb,kBA6BE,WAAY21B,EAA4BC,EAA6BC,eAAzD,QAAAF,EAAAA,WAA4B,QAAAC,EAAAA,WAA6B,QAAAC,EAAAA,MACnEtM,EAAAA,KAAAA,KAAMoM,EAAMC,EAAOC,IAAI,KAuL3B,OArN0BjE,EAAAA,EAAAA,GAIjB4B,EAAAA,MAAP,SAAa2E,GACX,GAAe,OAAXA,EACF,OAAO,KAGT,IAAMC,EAAU,gCAAgCjI,KAAKgI,GAErD,GAAe,MAAXC,EACF,OAAO,KAET,IAAMC,EAAQD,EAAQ,GAChBE,EAASF,EAAQ,GACjBG,EAAOH,EAAQ,GAErB,IA0RJ,SAAiCD,GAC/B,GAAsB,kBAAXA,EACT,OAAO,EAGT,IAAMoE,EAAS9H,EAA0B5P,IAAIsT,EAAOh4B,QACpD,GAAc,MAAVo8B,EACF,OAAO,EAGT,OAAO9B,EAAAA,SAAc5B,WAAWV,EAAQoE,GAAQzD,QApSzC0D,CAAwBrE,GAC3B,OAAO,KAIT,IAAMa,EAAO,CAACX,EAAOC,EAAQC,GAAM5xB,KAAI,YAAO,OAAQ,MAAPsyB,EAAclkB,SAASkkB,GAAOA,KAG7E,WAAWzF,EAAI,KAAArsB,MAAJ,EAAI+xB,EAAAA,MAAAA,GAAIF,GAAI,MAOzB53B,OAAAA,eAAIoyB,EAAAA,UAAA,SAAM,KAAV,WACE,OAAO,mCAGTpyB,OAAAA,eAAIoyB,EAAAA,UAAA,aAAU,KAAd,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,WACE,OAAO,IAAIA,EAAK,KAAKmC,KAAM,KAAKC,MAAO,KAAKC,MAG9CrC,EAAAA,UAAAA,UAAAA,WACE,OAAgB,MAAZ,KAAKqC,IACA,KAAKtwB,IAAI,EAAGiuB,EAAKnmB,KAAKooB,KACN,MAAd,KAAKG,MACP,KAAKrwB,IAAI,EAAGiuB,EAAKnmB,KAAKgtB,OACP,MAAb,KAAK1E,KACP,KAAKpwB,IAAI,EAAGiuB,EAAKnmB,KAAKitB,WADxB,GAKT9G,EAAAA,UAAAA,YAAAA,WACE,OAAgB,MAAZ,KAAKqC,IACA,KAAKtwB,KAAK,EAAGiuB,EAAKnmB,KAAKooB,KACP,MAAd,KAAKG,MACP,KAAKrwB,KAAK,EAAGiuB,EAAKnmB,KAAKgtB,OACR,MAAb,KAAK1E,KACP,KAAKpwB,KAAK,EAAGiuB,EAAKnmB,KAAKitB,WADzB,GAKT9G,EAAAA,UAAAA,kBAAAA,SAAkB0C,EAAYwE,GAC5B,GAAa,MAATxE,GAAiBA,EAAMO,WACzB,OAAO,KAAKC,cAAc+F,kBAAkBvG,EAAOwE,GAErD,GAAa,MAATxE,IAAkBA,EAAMM,OAC1B,OAAO,KAMT,IAAMzqB,EAAI,KAAK6uB,qBACTnb,EAAIyW,EAAM0E,qBAShB,OANA7uB,EAAE6e,IAAMwK,EAAsBrpB,EAAE6e,IAAK8P,GACrC3uB,EAAE+e,KAAOsK,EAAsBrpB,EAAE+e,KAAM4P,GACvCjb,EAAEmL,IAAMwK,EAAsB3V,EAAEmL,IAAK8P,GACrCjb,EAAEqL,KAAOsK,EAAsB3V,EAAEqL,KAAM4P,GAGhC,IAAIK,EAAAA,YACT/F,EAAmBvV,EAAEmL,IAAIoQ,KAAKjvB,EAAE+e,KAAM4P,GAAYA,GAClD1F,EAAmBvV,EAAEqL,KAAKkQ,KAAKjvB,EAAE6e,IAAK8P,GAAYA,KAItDlH,EAAAA,UAAAA,gBAAAA,SAAgB0C,EAAYwE,GAC1B,GAAa,MAATxE,GAAiBA,EAAMO,WACzB,OAAO,KAAKC,cAAcgG,gBAAgBxG,EAAOwE,GAEnD,GAAa,MAATxE,IAAkBA,EAAMM,OAC1B,OAAO,KAGT,IAAMzqB,EAAI,KAAK6uB,qBACTnb,EAAIyW,EAAM0E,qBAChB,OAAO,IAAIG,EAAAA,YACT/F,EAAmBvV,EAAEmL,IAAIoQ,KAAKjvB,EAAE+e,KAAM4P,GAAYA,GAClD1F,EAAmBvV,EAAEqL,KAAKkQ,KAAKjvB,EAAE6e,IAAK8P,GAAYA,KAItDlH,EAAAA,UAAAA,aAAAA,WACE,IAAI7rB,EAAS,KACb,OAAiB,MAAb,KAAKguB,KAGAhuB,GAFPA,EAAS6rB,EAAKnmB,KAAKitB,KAIH,MAAd,KAAK1E,MAGAjuB,GAFPA,EAAS6rB,EAAKnmB,KAAKgtB,MAIL,MAAZ,KAAKxE,IAGAluB,EAFPA,EAAS6rB,EAAKnmB,KAAKooB,OAOvBjC,EAAAA,UAAAA,kBAAAA,WACE,OAAO2H,EAA6BtW,IAAI,KAAKwR,iBAG/C7C,EAAAA,UAAAA,gBAAAA,qBACE,OAAOiH,EAAAA,SAAcY,WAAW,CAC9B1F,KAAe,QAAT,OAAKA,YAAI8B,IAAAA,EAAAA,OAAIlzB,EACnBqxB,MAAiB,QAAV,OAAKA,aAAK0F,IAAAA,EAAAA,OAAI/2B,EACrBsxB,IAAa,QAAR,OAAKA,WAAG0F,IAAAA,EAAAA,OAAIh3B,EACjBo3B,KAAMlB,EAAAA,gBAAgBkC,eAI1BnJ,EAAAA,UAAAA,mBAAAA,WACE,IAAM5I,EAAM,KAAKyM,kBACXvM,EAAOF,EAAI0M,MAAM,KAAKjB,gBAAuBX,QAAQ,OAC3D,OAAO,IAAIqF,EAAAA,YAAYnQ,EAAKE,IAG9B0I,EAAAA,UAAAA,SAAAA,WACQ,MAAa,CACjB,KAAKmC,KACS,MAAd,KAAKC,MAAgB,KAAKA,MAAQ,EAAI,EAC1B,MAAZ,KAAKC,IAAc,KAAKA,IAAM,GAHzB+G,EAAC,KAAEC,EAAE,KAAEh4B,EAAC,KAKf,OAAO,IAAI+yB,EAAAA,OAAOgF,EAAaC,EAAIh4B,IAG9B2uB,EAAAA,WAAP,SAAkBlL,GAChB,OAAIA,aAAgBkL,EACXlL,EAEF,IAAIkL,EAAKlL,EAAKqR,cAAerR,EAAKsR,WAAa,EAAGtR,EAAKd,YAGzDgM,EAAAA,kBAAP,SAAyB6B,GACvB,OAAIA,aAAmB7B,EACd6B,EAEF,IAAI7B,EAAK6B,EAAQM,KAAMN,EAAQO,MAAOP,EAAQQ,MAGvDrC,EAAAA,UAAAA,OAAAA,WACE,OAAO,KAAK7wB,YAGd6wB,EAAAA,UAAAA,SAAAA,WACE,IAAIjoB,EAAM,GAUV,OATiB,MAAb,KAAKoqB,OACPpqB,GAAO,KAAKoqB,KAAKhzB,WACC,MAAd,KAAKizB,QACPrqB,GAAO,IAAM,KAAKqqB,MAAMjzB,WAAWm6B,SAAS,EAAG,KAC/B,MAAZ,KAAKjH,MACPtqB,GAAO,IAAM,KAAKsqB,IAAIlzB,WAAWm6B,SAAS,EAAG,QAI5CvxB,GAGTioB,EAAAA,UAAAA,YAAAA,WAIE,OAAiB,MAAb,KAAKmC,MAA8B,MAAd,KAAKC,OAA6B,MAAZ,KAAKC,IAC3C,IAAIvO,EAAS,KAAKqO,KAAM,KAAKC,MAAO,KAAKC,IAAK,KAAM,KAAM,KAAM,MAIhE,IAAIvO,EAAS,KAAKqO,KAAM,KAAKC,MAAO,KAAKC,MAIpDrC,EAAAA,UAAAA,iBAAAA,SAAiBkH,QAAA,QAAAA,EAAYlH,EAAKnmB,KAAKooB,KACrC,IAAM4G,EAAU,KAAKlF,OACrB,GAAIuD,IAAclH,EAAKnmB,KAAKooB,IAG1B,IAFA,IAAM6G,EAAa9I,EAAKuC,OAAOzf,QAAQokB,GAEnB,MADGlH,EAAKuC,OAAO/zB,MAAMs6B,EAAa,GAClCxM,EAAAA,EAAAA,OAAAA,IAAgB,CAElCuM,EAFc,MAEG,KAGrB,OAAOA,GAlNO7I,EAAAA,KAAO,CAAE8G,KAAM,OAAQD,MAAO,QAAS/E,KAAM,OAAQG,IAAK,OAC1DjC,EAAAA,OAAS,CAACA,EAAKnmB,KAAKitB,KAAM9G,EAAKnmB,KAAKgtB,MAAO7G,EAAKnmB,KAAKooB,KAmNvE,EArNA,CAA0BK,GAAb91B,EAAAA,KAAAA,EA0NAA,EAAAA,mBAAqBsnB,EAASC,MAAM,2BACpCvnB,EAAAA,mBAAqBsnB,EAASC,MAAM,2BACpCvnB,EAAAA,eAAiBwzB,EAAKjM,MAAM,cAC5BvnB,EAAAA,eAAiBwzB,EAAKjM,MAAM,cAC5BvnB,EAAAA,eAA0D,QAAzC,IAASunB,MAAM,kCAA0BkQ,IAAAA,OAAA,EAAAA,EAAE0B,UAC5Dn5B,EAAAA,eAA0D,QAAzC,IAASunB,MAAM,kCAA0B+T,IAAAA,OAAA,EAAAA,EAAEnC,UAEzE,IAAMgC,EAAgC,WACpC,IAAM4B,EAAU,IAAInQ,IAQpB,OAPAmQ,EAAQ7P,IAAI5F,EAASja,KAAKitB,KAAM,GAChCyC,EAAQ7P,IAAI5F,EAASja,KAAKgtB,MAAO,GACjC0C,EAAQ7P,IAAI5F,EAASja,KAAKooB,IAAK,GAC/BsH,EAAQ7P,IAAI5F,EAASja,KAAK+sB,KAAM,IAChC2C,EAAQ7P,IAAI5F,EAASja,KAAK8sB,OAAQ,IAClC4C,EAAQ7P,IAAI5F,EAASja,KAAK6sB,OAAQ,IAClC6C,EAAQ7P,IAAI5F,EAASja,KAAK4sB,YAAa,IAChC8C,EAT6B,GAYhC7B,EAA4B,WAChC,IAAM8B,EAAS,IAAIpQ,IAKnB,OAJAoQ,EAAO9P,IAAI5F,EAASja,KAAK+sB,KAAM,GAC/B4C,EAAO9P,IAAI5F,EAASja,KAAK8sB,OAAQ,GACjC6C,EAAO9P,IAAI5F,EAASja,KAAK6sB,OAAQ,GACjC8C,EAAO9P,IAAI5F,EAASja,KAAK4sB,YAAa,GAC/B+C,EANyB,GASlC,SAAS1G,EAAyBvqB,EAAQ0T,EAAQwd,GAEhD,KAAMlxB,EAAEyqB,SAAW/W,EAAE+W,WAAazqB,EAAE0qB,aAAehX,EAAEgX,YACnD,OAAO,EAIL1qB,EAAE2b,iBAAmBjI,EAAEiI,iBACzBjI,EAAIA,EAAEoX,wBAAwB9qB,EAAE2b,iBAGlC,IAAoB,YAAE7kB,YAAYkzB,OAAdjG,EAAAA,EAAAA,OAAAA,IAAsB,CAArC,IAAM5J,EAAK,KAEd,GAAgB,MAAZna,EAAEma,IAA8B,MAAZzG,EAAEyG,GAqBnB,OAAgB,MAAZna,EAAEma,IAA8B,MAAZzG,EAAEyG,IAKxB+W,EAvBP,GAAc,WAAV/W,EAAoB,CAGtB,IAAMgX,EAAmC,MAApBnxB,EAAC,YAA0BA,EAAC,YAAkB,EAC7DoxB,EAAwBpxB,EAAEma,GAASgX,EAAe,IAClDE,EAAmC,MAApB3d,EAAC,YAA0BA,EAAC,YAAkB,EAInE,OAAO0d,IAHuB1d,EAAEyG,GAASkX,EAAe,IAO1D,GAAIrxB,EAAEma,KAAWzG,EAAEyG,GACjB,OAAO,EAab,OAAO,EA4CT,SAAS0Q,EAAuCL,GAC9C,OAAoB,MAAbA,GAAqB,UAAUxzB,KAAKwzB,yGCn0C7C,MACE,SAAmBlnB,EAAyBguB,GAAzB,eAAyB,gBADjCr9B,EAAAA,UAAAA,qoBCAb,cACA,SACA,UACA,UAQA,aAEA,aACE,WACS4qB,EACAE,EACAC,EACAC,EACAsS,GAJA,WACA,YACA,iBACA,kBACA,wBAEP,KAAKvS,UAAyB,MAAbA,GAAoBA,EACrC,KAAKC,WAA2B,MAAdA,GAAqBA,EAskB3C,OAnkBE5pB,OAAAA,eAAIonB,EAAAA,UAAA,aAAU,KAAd,WACE,OAAO,mCAGTpnB,OAAAA,eAAIonB,EAAAA,UAAA,YAAS,KAAb,WACE,IAAIqC,EAAY,KACV0S,EAAoB,MAAZ,KAAK3S,IAAc,KAAKA,IAAM,KAAKE,KAmBjD,OAlBa,MAATyS,IACmB,kBAAVA,EACT1S,EAAY5T,OAAO/S,UAAUq5B,GACzB,oCACA,oCACKA,EAAMtC,QAAUsC,EAAMtC,SAC/BpQ,EAAY,iCACH0S,EAAM/G,OACf3L,EAAY,iCACH0S,EAAM9G,WACf5L,EAAY,qCACH0S,EAAMC,aACf3S,EAAY,uCAGC,MAAbA,GAA8C,MAAzB,KAAKyS,mBAC5BzS,EAAY,KAAKyS,kBAEZzS,mCAGTrC,EAAAA,UAAAA,KAAAA,WACE,IAAIiV,EAAS,KAAK7S,IACd8S,EAAU,KAAK5S,KAQnB,OAPgB,MAAZ,KAAKF,KAAwC,oBAAlB,KAAKA,IAAIuM,OACtCsG,EAAS,KAAK7S,IAAIuM,QAEH,MAAb,KAAKrM,MAA0C,oBAAnB,KAAKA,KAAKqM,OACxCuG,EAAU,KAAK5S,KAAKqM,QAGf,IAAI3O,EAASiV,EAAQC,EAAS,KAAK3S,UAAW,KAAKC,aAG5DxC,EAAAA,UAAAA,SAAAA,SAASjhB,EAAWgvB,GAElB,GAAI,KAAKxL,WAAyB,MAAZ,KAAKH,KAAe+S,EAAI93B,OAAO,KAAK+kB,IAAKrjB,GAC7D,OAAO,EAET,GAAI,KAAKyjB,YAA2B,MAAb,KAAKF,MAAgB6S,EAAI93B,OAAO,KAAKilB,KAAMvjB,GAChE,OAAO,EAET,GAAY,MAARA,GAAgBA,EAAKojB,WACvB,MAAM,IAAIrmB,MAAM,wCAElB,IAAIs5B,EAQAC,EAQJ,OAdED,EADE,KAAK7S,WAAyB,MAAZ,KAAKH,IACjB,WAAM,UACL,KAAKG,UACN4S,EAAIG,iBAEJH,EAAII,SAIZF,EADE,KAAK7S,YAA2B,MAAb,KAAKF,KACjB,WAAM,UACN,KAAKE,WACL2S,EAAIK,oBAEJL,EAAIM,YAERC,EAAAA,iBAAiBC,IACtBP,EAAM,KAAKhT,IAAKrjB,EAAMgvB,GACtBsH,EAAO,KAAK/S,KAAMvjB,EAAMgvB,KAI5B/N,EAAAA,UAAAA,iBAAAA,SAAiB0N,EAAYK,GAC3B,GAAa,MAATL,IAAkBA,EAAMvL,WAC1B,MAAM,IAAIrmB,MAAM,oDAElB,OAAO45B,EAAAA,iBAAiBC,IACtB,KAAK1Z,SAASyR,EAAOK,GACrB2H,EAAAA,iBAAiBE,IAAIlI,EAAMzR,SAAS,KAAM8R,MAI9C/N,EAAAA,UAAAA,SAAAA,SAAS0N,EAAYK,GACnB,GAAa,MAATL,IAAkBA,EAAMvL,WAC1B,OAAO,KAAK0T,SAASnI,EAAOK,GAE9B,IAAMxqB,EAAI,KAAKuyB,WACT7e,EAAIyW,EAAMoI,WAChB,OAAOJ,EAAAA,iBAAiBC,IACtBR,EAAIG,iBAAiB/xB,EAAE6e,IAAKnL,EAAEmL,IAAK2L,GACnCoH,EAAIK,oBAAoBjyB,EAAE+e,KAAMrL,EAAEqL,KAAMyL,KAI5C/N,EAAAA,UAAAA,WAAAA,SAAW0N,EAAYK,GAErB,OAAa,MAATL,GAAkBA,EAAMvL,WAGnBuL,EAAMzR,SAAS,MAFf,KAAK4Z,SAASnI,EAAOK,IAMhC/N,EAAAA,UAAAA,SAAAA,SAASjhB,EAAWgvB,GAClB,IAAMgI,EAAS,KAAKD,WACd,EAAe,WACnB,GAAY,MAAR/2B,GAAgBA,EAAKojB,WAAY,CACnC,IAAM6T,EAAaj3B,EAAK+2B,WACxB,MAAO,CAACE,EAAW5T,IAAK4T,EAAW1T,MAEnC,MAAO,CAACvjB,EAAMA,GALG,GAAdqjB,EAAG,KAAEE,EAAI,KAQhB,OAAOoT,EAAAA,iBAAiBC,IACtBR,EAAIG,iBAAiBS,EAAO3T,IAAKE,EAAMyL,GACvCoH,EAAIK,oBAAoBO,EAAOzT,KAAMF,EAAK2L,KAI9C/N,EAAAA,UAAAA,cAAAA,SAAcjhB,EAAWgvB,GACvB,IAAMgI,EAAS,KAAKD,WACdxT,EAAe,MAARvjB,GAAgBA,EAAKojB,WAAapjB,EAAK+2B,WAAWxT,KAAOvjB,EACtE,OAAO22B,EAAAA,iBAAiBC,IACtBR,EAAIG,iBAAiBS,EAAO3T,IAAKE,EAAMyL,GACvCoH,EAAIM,YAAYM,EAAOzT,KAAMA,EAAMyL,KAIvC/N,EAAAA,UAAAA,eAAAA,SAAejhB,EAAWgvB,GACxB,IAAMgI,EAAS,KAAKD,WACd1T,EAAc,MAARrjB,GAAgBA,EAAKojB,WAAapjB,EAAK+2B,WAAW1T,IAAMrjB,EACpE,OAAO22B,EAAAA,iBAAiBC,IACtBR,EAAII,SAASQ,EAAO3T,IAAKA,EAAK2L,GAC9BoH,EAAIK,oBAAoBO,EAAOzT,KAAMF,EAAK2L,KAI9C/N,EAAAA,UAAAA,MAAAA,SAAM0N,2BACJ,GAAa,MAATA,IAAkBA,EAAMvL,WAC1B,MAAM,IAAIrmB,MAAM,yCAGlB,GAAI,KAAKm6B,SAASvI,IAAU,KAAKwI,MAAMxI,GAAQ,CACvC,MAAS,CAAC,KAAKoI,WAAYpI,EAAMoI,YAAhCvyB,EAAC,KAAE0T,EAAC,KACPkf,OAAC,EAAEC,OAAE,EACLjB,EAAIG,iBAAiB/xB,EAAE6e,IAAKnL,EAAEmL,MAC/B+T,GAADlH,EAAU,CAAC,KAAK7M,IAAK,KAAKG,YAAxB,GAAE6T,EAAE,MACGjB,EAAIK,oBAAoBjyB,EAAE6e,IAAKnL,EAAEmL,MACzC+T,GAADrD,EAAU,CAACpF,EAAMtL,IAAKsL,EAAMnL,YAA1B,GAAE6T,EAAE,MACGC,EAAW9yB,EAAE6e,IAAKnL,EAAEmL,MAC5B+T,GAADpD,EAAU,CAACuD,EAAyB/yB,EAAE6e,IAAKnL,EAAEmL,MAAM,IAAjD,GAAEgU,EAAE,MAEGG,EAAahzB,EAAE6e,IAAKnL,EAAEmL,MAAQ7e,EAAE6e,IAAIwL,cAAc3W,EAAEmL,MAC5D+T,GAADnD,EAAU,CAACtF,EAAMtL,IAAKsL,EAAMnL,YAA1B,GAAE6T,EAAE,OAELD,GAAD7b,EAAU,CAAC,KAAK8H,IAAK,KAAKG,YAAxB,GAAE6T,EAAE,MAER,IAAII,OAAC,EAAEC,OAAE,EAaT,OAZItB,EAAIK,oBAAoBjyB,EAAE+e,KAAMrL,EAAEqL,OACnCkU,GAADvD,EAAU,CAAC,KAAK3Q,KAAM,KAAKE,aAAzB,GAAEiU,EAAE,MACGtB,EAAIG,iBAAiB/xB,EAAE+e,KAAMrL,EAAEqL,OACvCkU,GAADtD,EAAU,CAACxF,EAAMpL,KAAMoL,EAAMlL,aAA3B,GAAEiU,EAAE,MACGJ,EAAW9yB,EAAE+e,KAAMrL,EAAEqL,OAC7BkU,GAADE,EAAU,CAACC,EAA0BpzB,EAAE+e,KAAMrL,EAAEqL,OAAO,IAApD,GAAEmU,EAAE,MAEGF,EAAahzB,EAAE+e,KAAMrL,EAAEqL,OAAS/e,EAAE+e,KAAKsL,cAAc3W,EAAEqL,OAC/DkU,GAADI,EAAU,CAAClJ,EAAMpL,KAAMoL,EAAMlL,aAA3B,GAAEiU,EAAE,OAELD,GAADK,EAAU,CAAC,KAAKvU,KAAM,KAAKE,aAAzB,GAAEiU,EAAE,MAED,IAAIzW,EAASmW,EAAGK,EAAGJ,EAAIK,GAE9B,OAAO,MAIXzW,EAAAA,UAAAA,UAAAA,SAAU0N,2BACR,GAAa,MAATA,IAAkBA,EAAMvL,WAC1B,MAAM,IAAIrmB,MAAM,yCAGlB,GAAI,KAAKm6B,SAASvI,GAAQ,CAClB,MAAS,CAAC,KAAKoI,WAAYpI,EAAMoI,YAAhCvyB,EAAC,KAAE0T,EAAC,KACPkf,OAAC,EAAEC,OAAE,EACLjB,EAAIK,oBAAoBjyB,EAAE6e,IAAKnL,EAAEmL,MAClC+T,GAADlH,EAAU,CAAC,KAAK7M,IAAK,KAAKG,YAAxB,GAAE6T,EAAE,MACGjB,EAAIG,iBAAiB/xB,EAAE6e,IAAKnL,EAAEmL,MACtC+T,GAADrD,EAAU,CAACpF,EAAMtL,IAAKsL,EAAMnL,YAA1B,GAAE6T,EAAE,MACGC,EAAW9yB,EAAE6e,IAAKnL,EAAEmL,MAC5B+T,GAADpD,EAAU,CAAC4D,EAA0BpzB,EAAE6e,IAAKnL,EAAEmL,MAAM,IAAlD,GAAEgU,EAAE,MAEGG,EAAahzB,EAAE6e,IAAKnL,EAAEmL,MAAQnL,EAAEmL,IAAIwL,cAAcrqB,EAAE6e,MAC5D+T,GAADnD,EAAU,CAACtF,EAAMtL,IAAKsL,EAAMnL,YAA1B,GAAE6T,EAAE,OAELD,GAAD7b,EAAU,CAAC,KAAK8H,IAAK,KAAKG,YAAxB,GAAE6T,EAAE,MAER,IAAII,OAAC,EAAEC,OAAE,EAaT,OAZItB,EAAIG,iBAAiB/xB,EAAE+e,KAAMrL,EAAEqL,OAChCkU,GAADvD,EAAU,CAAC,KAAK3Q,KAAM,KAAKE,aAAzB,GAAEiU,EAAE,MACGtB,EAAIK,oBAAoBjyB,EAAE+e,KAAMrL,EAAEqL,OAC1CkU,GAADtD,EAAU,CAACxF,EAAMpL,KAAMoL,EAAMlL,aAA3B,GAAEiU,EAAE,MACGJ,EAAW9yB,EAAE+e,KAAMrL,EAAEqL,OAC7BkU,GAADE,EAAU,CAACJ,EAAyB/yB,EAAE+e,KAAMrL,EAAEqL,OAAO,IAAnD,GAAEmU,EAAE,MAEGF,EAAahzB,EAAE+e,KAAMrL,EAAEqL,OAASrL,EAAEqL,KAAKsL,cAAcrqB,EAAE+e,OAC/DkU,GAADI,EAAU,CAAClJ,EAAMpL,KAAMoL,EAAMlL,aAA3B,GAAEiU,EAAE,OAELD,GAADK,EAAU,CAAC,KAAKvU,KAAM,KAAKE,aAAzB,GAAEiU,EAAE,MAED,IAAIzW,EAASmW,EAAGK,EAAGJ,EAAIK,GAE9B,OAAO,MAIXzW,EAAAA,UAAAA,OAAAA,SAAO0N,GACL,GAAc,OAAVA,EACF,OAAO,KAET,GAAa,MAATA,IAAkBA,EAAMvL,WAC1B,MAAM,IAAIrmB,MAAM,0CAGlB,IAAMg7B,EAAK,KAAKb,SAASvI,GACzB,IAAW,IAAPoJ,EAAa,CACf,IAAMC,EAAM,KAAKC,eAAetJ,GAC1BuJ,EAAM,KAAKC,cAAcxJ,GAC/B,OAAY,IAARqJ,IAAwB,IAARE,EACX,IAAIjX,EAAS,KAAKoC,IAAKsL,EAAMtL,IAAK,KAAKG,WAAYmL,EAAMnL,YAC/C,IAAR0U,IAAwB,IAARF,EAClB,IAAI/W,EAAS0N,EAAMpL,KAAM,KAAKA,MAAOoL,EAAMlL,WAAY,KAAKA,YAE5D,KAEJ,OAAW,IAAPsU,EACF,KAGA,MAIX9W,EAAAA,UAAAA,OAAAA,SAAO0N,EAAYK,GAGjB,GACe,MAAZ,KAAK3L,KACS,MAAbsL,EAAMtL,KACO,MAAb,KAAKE,MACS,MAAdoL,EAAMpL,OACL,KAAKE,YACK,MAAZ,KAAKJ,KACS,MAAbsL,EAAMtL,KACO,MAAb,KAAKE,MACS,MAAdoL,EAAMpL,OACLoL,EAAMlL,YACI,MAAZ,KAAKJ,KACS,MAAbsL,EAAMtL,KACO,MAAb,KAAKE,MACS,MAAdoL,EAAMpL,OACLoL,EAAMlL,aACN,KAAKA,YAER,GAAwB,kBAAb,KAAKJ,KACd,GAAM,KAAK+U,UAAYzJ,EAAMyJ,QAC3B,OAAO,OAGT,IAAK,KAAKA,QAAQhJ,OAAOT,EAAMyJ,QAASpJ,GACtC,OAAO,OAGN,GACQ,MAAZ,KAAK3L,KAA4B,MAAbsL,EAAMtL,KAA4B,MAAb,KAAKE,MAA8B,MAAdoL,EAAMpL,MACxD,MAAZ,KAAKF,KAA4B,MAAbsL,EAAMtL,KAA4B,MAAb,KAAKE,MAA8B,MAAdoL,EAAMpL,MACxD,MAAZ,KAAKF,KAA4B,MAAbsL,EAAMtL,KAA4B,MAAb,KAAKE,MAA8B,MAAdoL,EAAMpL,KAErE,GAAyB,kBAAd,KAAKA,MACd,GAAM,KAAK8U,QAAU1J,EAAM0J,MACzB,OAAO,OAGT,IAAK,KAAKA,MAAMjJ,OAAOT,EAAM0J,MAAOrJ,GAClC,OAAO,EAMb,OACe,MAAZ,KAAK3L,MAAgB,KAAKG,WACb,MAAb,KAAKD,OAAiB,KAAKE,YACd,MAAbkL,EAAMtL,MAAgBsL,EAAMnL,WACd,MAAdmL,EAAMpL,OAAiBoL,EAAMlL,WAEvB,KAIL,KAAKD,WAAyB,MAAZ,KAAKH,KAAe,KAAKI,YAA2B,MAAb,KAAKF,KACzDoL,EAAMnL,WAA0B,MAAbmL,EAAMtL,KAAesL,EAAMlL,YAA4B,MAAdkL,EAAMpL,OAQvEoL,EAAMnL,WAA0B,MAAbmL,EAAMtL,MAAesL,EAAMlL,YAA4B,MAAdkL,EAAMpL,QAI9C,kBAAb,KAAKF,IACP,KAAK+U,UAAYzJ,EAAMyJ,SAAW,KAAKC,QAAU1J,EAAM0J,MAG5D,KAAKD,QAAQhJ,OAAOT,EAAMyJ,QAASpJ,IAAc,KAAKqJ,MAAMjJ,OAAOT,EAAM0J,MAAOrJ,KAKtF/N,EAAAA,UAAAA,aAAAA,SAAa0N,EAAYK,GACvB,OAAkB,MAAd,KAAKqJ,OAA0B,MAAT1J,GAAkC,MAAjBA,EAAMyJ,QACxC,KAEAhC,EAAIG,iBAAiB,KAAK8B,MAAO1J,EAAMyJ,QAASpJ,IAI3D/N,EAAAA,UAAAA,YAAAA,SAAY0N,EAAYK,GACtB,OAAoB,MAAhB,KAAKoJ,SAA4B,MAATzJ,GAAgC,MAAfA,EAAM0J,MAC1C,KAEAjC,EAAIK,oBAAoB,KAAK2B,QAASzJ,EAAM0J,MAAOrJ,IAI9D/N,EAAAA,UAAAA,OAAAA,SAAO0N,GACL,GAAa,MAATA,GAAiBA,EAAMvL,WAAY,CAC/B,MAAS,CAAC,KAAK2T,WAAYpI,EAAMoI,YAAhCvyB,EAAC,KAAE0T,EAAC,KACX,OAAOye,EAAAA,iBAAiBC,IAAIR,EAAI93B,OAAOkG,EAAE6e,IAAKnL,EAAEmL,KAAM+S,EAAI93B,OAAOkG,EAAE+e,KAAMrL,EAAEqL,OAE3E,OAAO,GAIXtC,EAAAA,UAAAA,MAAAA,SAAM0N,EAAYK,GAChB,IAAMgI,EAAS,KAAKD,WAGpB,OAAIpI,EAAMoI,SACDX,EAAIM,YAAYM,EAAO3T,IAAKsL,EAAMoI,WAAWxT,KAAMyL,GAEnDoH,EAAIM,YAAYM,EAAO3T,IAAKsL,EAAOK,IAI9C/N,EAAAA,UAAAA,OAAAA,SAAO0N,EAAYK,GACjB,IAAMgI,EAAS,KAAKD,WAGpB,OAAIpI,EAAMoI,SACDX,EAAII,SAASQ,EAAOzT,KAAMoL,EAAMoI,WAAW1T,IAAK2L,GAEhDoH,EAAII,SAASQ,EAAOzT,KAAMoL,EAAOK,IAI5C/N,EAAAA,UAAAA,MAAAA,SAAM0N,EAAYK,GAChB,OAAO2H,EAAAA,iBAAiB2B,GACtB,KAAKC,YAAY5J,EAAOK,GACxB,KAAKwJ,WAAW7J,EAAOK,KAI3B/N,EAAAA,UAAAA,WAAAA,SAAW0N,EAAYK,GACrB,IACE,OAAiB,MAAbA,GAAiC,MAAZ,KAAK3L,KAAe,KAAKA,IAAI6L,WAC7C,KAAK6H,WAAW1T,IAAI+L,OACA,MAAzBT,EAAMoI,WAAWxT,KAAeoL,EAAMoI,WAAWxT,KAAKvlB,IAAI,EAAGgxB,GAAa,KAC1EA,GAGKoH,EAAI93B,OAAO,KAAKy4B,WAAW1T,KAAK,eAAUsL,EAAMoI,WAAWxT,OAEpE,MAAO7E,GACP,OAAO,IAIXuC,EAAAA,UAAAA,YAAAA,SAAY0N,EAAYK,GACtB,IACE,OAAiB,MAAbA,GAAkC,MAAb,KAAKzL,MAAgB,KAAKA,KAAK2L,WAC/C,KAAK6H,WAAWxT,KAAK6L,OACF,MAAxBT,EAAMoI,WAAW1T,IAAcsL,EAAMoI,WAAW1T,IAAIrlB,KAAK,EAAGgxB,GAAa,KACzEA,GAGKoH,EAAI93B,OAAO,KAAKy4B,WAAWxT,MAAM,iBAAYoL,EAAMoI,WAAW1T,MAEvE,MAAO3E,GACP,OAAO,IAIXuC,EAAAA,UAAAA,MAAAA,WACE,OAAgB,MAAZ,KAAKoC,IACH,KAAKG,WACA,yBAAoB,KAAKD,MAEzB,KAAKF,IAGT,KAAK0T,WAAW1T,KAGzBpC,EAAAA,UAAAA,IAAAA,WACE,OAAiB,MAAb,KAAKsC,KACH,KAAKE,YACA,yBAAoB,KAAKJ,KAEzB,KAAKE,KAGT,KAAKwT,WAAWxT,MAGzBtC,EAAAA,UAAAA,OAAAA,SAAO0N,EAAYK,GACjB,IAAIyJ,EAEFA,EADe,MAAbzJ,GAAiC,MAAZ,KAAK3L,KAAe,KAAKA,IAAI6L,WACvC,KAAK7L,IAAI+L,OAAOT,EAAMtL,IAAK2L,GAE3BoH,EAAI93B,OAAO,KAAK+kB,IAAKsL,EAAMtL,KAE1C,IAAMqV,EAAqBtC,EAAIG,iBAAiB,KAAKhT,KAAMoL,EAAMpL,KAAMyL,GACvE,OAAOyJ,GAAcC,GAGvBzX,EAAAA,UAAAA,KAAAA,SAAK0N,EAAYK,GACf,IAAI2J,EACEC,EAA0BxC,EAAIK,oBAAoB,KAAKpT,IAAKsL,EAAMtL,IAAK2L,GAM7E,OAJE2J,EADe,MAAb3J,IAAkC,MAAZ,KAAK3L,IAAc,KAAKA,IAAI6L,gBAAalyB,GACtD,KAAKumB,KAAK6L,OAAOT,EAAMpL,KAAMyL,GAE7BoH,EAAI93B,OAAO,KAAKilB,KAAMoL,EAAMpL,MAElCqV,GAA2BD,GAGpC1X,EAAAA,UAAAA,MAAAA,WACE,GACe,MAAZ,KAAKoC,MAAgB,KAAKA,IAAI6L,YAAc,KAAK7L,IAAI4L,SACxC,MAAb,KAAK1L,OAAiB,KAAKA,KAAK2L,YAAc,KAAK3L,KAAK0L,QAEzD,MAAM,IAAIlyB,MAAM,gEAGlB,IAAMi6B,EAAS,KAAKD,WACpB,GACiB,MAAdC,EAAO3T,KAAe2T,EAAO3T,IAAIwV,eAClB,MAAf7B,EAAOzT,MAAgByT,EAAOzT,KAAKsV,cAEpC,OAAO,KACF,GAAI7B,EAAO3T,IAAI4S,WAAY,CAChC,GAAIe,EAAO3T,IAAIrQ,OAASgkB,EAAOzT,KAAKvQ,KAClC,MAAM,IAAIjW,MAAM,oEAElB,IAAM+7B,EAAW9B,EAAO3T,IAAIzoB,MACtBm+B,EAAY/B,EAAOzT,KAAK3oB,MAC1B64B,EAAO1wB,KAAK6xB,IAAImE,EAAYD,GAEhC,OADArF,EAAO1wB,KAAKi2B,MAAMvF,EAAO1wB,KAAKG,IAAI,GAAI,IAAMH,KAAKG,IAAI,GAAI,GAClD,IAAI+1B,EAAAA,SAASxF,EAAMuD,EAAO3T,IAAIrQ,MAG/BygB,EAAO1wB,KAAK6xB,IAAIoC,EAAOzT,KAAOyT,EAAO3T,KAC3C,OAAOtgB,KAAKi2B,MAAMvF,EAAO1wB,KAAKG,IAAI,GAAI,IAAMH,KAAKG,IAAI,GAAI,IAI7D+d,EAAAA,UAAAA,KAAAA,WACE,IAAMiY,EAAY,KAAKC,eACvB,GACe,MAAZ,KAAK9V,MAAgB,KAAKA,IAAI6L,YAAc,KAAK7L,IAAI4L,SACxC,MAAb,KAAK1L,OAAiB,KAAKA,KAAK2L,YAAc,KAAK3L,KAAK0L,QAEzD,MAAM,IAAIlyB,MAAM,+DAGlB,IAAMi6B,EAAS,KAAKD,WACpB,GACiB,MAAdC,EAAO3T,KAAe2T,EAAO3T,IAAIwV,eAClB,MAAf7B,EAAOzT,MAAgByT,EAAOzT,KAAKsV,cAEpC,OAAO,KACF,GAAI7B,EAAO3T,IAAI4S,WAAY,CAChC,GAAIe,EAAO3T,IAAIrQ,OAASgkB,EAAOzT,KAAKvQ,KAClC,MAAM,IAAIjW,MAAM,mEAElB,IAAM+7B,EAAW9B,EAAO3T,IAAIzoB,MACtBm+B,EAAY/B,EAAOzT,KAAK3oB,MACxB64B,EAAO1wB,KAAK6xB,IAAImE,EAAYD,GAAYI,EAAUt+B,MAExD,OADAmI,KAAKi2B,MAAMvF,EAAO1wB,KAAKG,IAAI,GAAI,IAAMH,KAAKG,IAAI,GAAI,GAC3C,IAAI+1B,EAAAA,SAASxF,EAAMuD,EAAO3T,IAAIrQ,MAE/BygB,EAAO1wB,KAAK6xB,IAAIoC,EAAOzT,KAAOyT,EAAO3T,KAAO6V,EAAUt+B,MAC5D,OAAOmI,KAAKi2B,MAAMvF,EAAO1wB,KAAKG,IAAI,GAAI,IAAMH,KAAKG,IAAI,GAAI,IAI7D+d,EAAAA,UAAAA,aAAAA,WACE,IAAIiY,EACJ,GAAgB,MAAZ,KAAK7V,IAEL6V,EADE,KAAK7V,IAAI6L,YAAc,KAAK7L,IAAI4L,QAAU,KAAK5L,IAAIqQ,OACzC,IAAIuF,EAAAA,SAAS,EAAG,KAAK5V,IAAIyL,gBAC5B,KAAKzL,IAAI4S,YACN,oBAAc,eAAU,KAAK5S,KAAM,KAAKA,MAExC,eAAU,KAAKA,KAAO,KAAKA,QAEpC,IAAiB,MAAb,KAAKE,KASd,MAAM,IAAIxmB,MAAM,iDAPdm8B,EADE,KAAK3V,KAAK2L,YAAc,KAAK3L,KAAK0L,QAAU,KAAK1L,KAAKmQ,OAC5C,IAAIuF,EAAAA,SAAS,EAAG,KAAK1V,KAAKuL,gBAC7B,KAAKvL,KAAK0S,YACP,oBAAc,eAAU,KAAK1S,MAAO,KAAKA,OAEzC,eAAU,KAAKA,MAAQ,KAAKA,KAU5C,MAJyB,kBAAd2V,IACTA,EAAY,IAAID,EAAAA,SAASC,EAAW,MAG/BA,GAGTjY,EAAAA,UAAAA,SAAAA,WAGE,IAAMuC,EAAY,KAAKA,WAAyB,MAAZ,KAAKH,IACnCI,EAAa,KAAKA,YAA2B,MAAb,KAAKF,KAC3C,GAAsB,MAAlB,KAAKD,UAAmB,CAC1B,IAAID,OAAG,EAELA,EADE,KAAKG,WAAyB,MAAZ,KAAKH,KACnB,qBAAgB,KAAKC,WACjB,KAAKE,WAAyB,MAAZ,KAAKH,IAG3B,KAAKA,KAFL,eAAU,KAAKA,KAIvB,IAAIE,OAAI,EAcR,OAZEA,EADE,KAAKE,YAA2B,MAAb,KAAKF,MACnB,qBAAgB,KAAKD,WAClB,KAAKG,YAA2B,MAAb,KAAKF,KAG3B,KAAKA,MAFL,iBAAY,KAAKA,MAIf,MAAPF,IACFA,EAAM,IAAImQ,EAAAA,aAAY,qBAAgB,KAAKlQ,WAAYC,IAE7C,MAARA,IACFA,EAAO,IAAIiQ,EAAAA,YAAYnQ,GAAK,qBAAgB,KAAKC,aAE5C,IAAIrC,EAASoC,EAAKE,EAAMC,EAAWC,GAE1C,OAAO,IAAIxC,EAAS,KAAKoC,IAAK,KAAKE,KAAMC,EAAWC,IAIxDxC,EAAAA,UAAAA,SAAAA,WACE,IAAMmX,EAAQ,KAAK5U,UAAY,IAAM,IAC/B6U,EAAM,KAAK5U,WAAa,IAAM,IACpC,OAAO2U,EAAQ,KAAK/U,IAAIjoB,WAAa,KAAO,KAAKmoB,KAAKnoB,WAAai9B,GAEvE,EA/kBA,GAilBA,SAASb,EAAa30B,EAAQwyB,GAC5B,MAAO,CAACxyB,EAAGwyB,GAAG5G,OAAM,YAAK,OAAK,MAAL,GAAa2K,EAAElK,cAG1C,SAASoI,EAAWz0B,EAAQwyB,GAC1B,MAAO,CAACxyB,EAAGwyB,GAAG5G,OAAM,YAClB,MAAoB,kBAAN2K,GAAwB,MAALA,GAAaA,EAAEP,eAAkC,kBAAVO,EAAE/V,OAI9E,SAASkU,EAAyB10B,EAAQwyB,GAC/B,MAALxyB,GAAcA,EAAEg2B,gBAClBh2B,EAAI,IAAI2wB,EAAAA,YAAY3wB,IAEb,MAALwyB,GAAcA,EAAEwD,gBAClBxD,EAAI,IAAI7B,EAAAA,YAAY6B,IAEtB,IAAMhS,EAAMxgB,EAAEwgB,IAAMgS,EAAEhS,IAAMxgB,EAAEwgB,IAAMgS,EAAEhS,IAChCE,EAAO1gB,EAAE0gB,KAAO8R,EAAE9R,KAAO1gB,EAAE0gB,KAAO8R,EAAE9R,KAC1C,OAAIF,IAAQE,EACH,IAAIiQ,EAAAA,YAAYnQ,EAAKE,GAErBF,EAIX,SAASuU,EAA0B/0B,EAAQwyB,GAChC,MAALxyB,GAAcA,EAAEg2B,gBAClBh2B,EAAI,IAAI2wB,EAAAA,YAAY3wB,IAEb,MAALwyB,GAAcA,EAAEwD,gBAClBxD,EAAI,IAAI7B,EAAAA,YAAY6B,IAEtB,IAAMhS,EAAMxgB,EAAEwgB,IAAMgS,EAAEhS,IAAMxgB,EAAEwgB,IAAMgS,EAAEhS,IAChCE,EAAO1gB,EAAE0gB,KAAO8R,EAAE9R,KAAO1gB,EAAE0gB,KAAO8R,EAAE9R,KAC1C,OAAIF,IAAQE,EACH,IAAIiQ,EAAAA,YAAYnQ,EAAKE,GAErBF,EAvnBE5qB,EAAAA,SAAAA,8GCbb,+BAsCA,OArCS4gC,EAAAA,IAAP,eAAW,oCAAA7uB,EAAAA,GAAAA,UAAAA,GACT,OAAIA,EAAI0S,UAAS,MAEN1S,EAAI0S,SAAS,OACf,OAMJmc,EAAAA,GAAP,eAAU,oCAAA7uB,EAAAA,GAAAA,UAAAA,GACR,QAAIA,EAAI0S,UAAS,MAEN1S,EAAI0S,SAAS,OACf,MAMJmc,EAAAA,IAAP,eAAW,oCAAA7uB,EAAAA,GAAAA,UAAAA,GACT,OAAIA,EAAI0S,SAAS,MACR,KAIA1S,EAAI7K,QAAO,SAAC6E,EAAG0T,GAAM,OAAc,MAAZ1T,GAAK0T,OAIhCmhB,EAAAA,IAAP,SAAW7uB,GACT,OAAW,MAAPA,GACMA,EAED,MAGb,EAtCA,GAAa/R,EAAAA,iBAAAA,oLCAb,cACA,UASA,aACE,WAAmBmC,EAAmBoY,GACpC,GADiB,aAAmB,YAClB,MAAd,KAAKpY,OAAiBmJ,MAAM,KAAKnJ,OACnC,MAAM,IAAImC,MAAM,oDACX,KAAK,oBAAe,KAAKnC,OAC9B,MAAM,IAAImC,MAAM,0DAIlB,GAAiB,MAAb,KAAKiW,KAAc,CACrB,IAAMsmB,GAAa,eAAU,KAAKtmB,MAClC,IAAKsmB,EAAWC,MACd,MAAM,IAAIx8B,MAAMu8B,EAAWxxB,UAmInC,OA9HEjO,OAAAA,eAAIqyB,EAAAA,UAAA,aAAU,KAAd,WACE,OAAO,mCAGTA,EAAAA,UAAAA,MAAAA,WACE,OAAO,IAAIA,EAAS,KAAKtxB,MAAO,KAAKoY,OAGvCkZ,EAAAA,UAAAA,SAAAA,WACE,MAAO,UAAG,KAAKtxB,MAAK,MAAAkF,OAAK,KAAKkT,KAAI,MAGpCkZ,EAAAA,UAAAA,aAAAA,SAAayC,GACX,GAAa,MAATA,GAAiBA,EAAMsH,WAAY,CACrC,IAAMuD,GAAW,iBAAY7K,EAAM/zB,MAAO+zB,EAAM3b,KAAM,KAAKA,MAC3D,OAAgB,MAAZwmB,EACK,KAEA,KAAK5+B,OAAS4+B,IAK3BtN,EAAAA,UAAAA,YAAAA,SAAYyC,GACV,GAAa,MAATA,GAAiBA,EAAMsH,WAAY,CACrC,IAAMuD,GAAW,iBAAY7K,EAAM/zB,MAAO+zB,EAAM3b,KAAM,KAAKA,MAC3D,OAAgB,MAAZwmB,EACK,KAEA,KAAK5+B,OAAS4+B,IAK3BtN,EAAAA,UAAAA,MAAAA,SAAMyC,GACJ,GAAa,MAATA,GAAiBA,EAAMsH,WAAY,CACrC,IAAMuD,GAAW,iBAAY7K,EAAM/zB,MAAO+zB,EAAM3b,KAAM,KAAKA,MAC3D,OAAgB,MAAZwmB,EACK,KAEA,KAAK5+B,MAAQ4+B,IAK1BtN,EAAAA,UAAAA,OAAAA,SAAOyC,GACL,GAAa,MAATA,GAAiBA,EAAMsH,WAAY,CACrC,IAAMuD,GAAW,iBAAY7K,EAAM/zB,MAAO+zB,EAAM3b,KAAM,KAAKA,MAC3D,OAAgB,MAAZwmB,EACK,KAEA,KAAK5+B,MAAQ4+B,IAK1BtN,EAAAA,UAAAA,OAAAA,SAAOyC,GACL,GAAa,MAATA,GAAiBA,EAAMsH,WAAY,CACrC,IAAM,KAAKjjB,MAAQ2b,EAAM3b,MAAU,KAAKA,OAAS2b,EAAM3b,KACrD,OAAO,EACF,GAAK,KAAKA,MAAS2b,EAAM3b,KAEzB,CACL,IAAMwmB,GAAW,iBAAY7K,EAAM/zB,MAAO+zB,EAAM3b,KAAM,KAAKA,MAC3D,OAAgB,MAAZwmB,EACK,MAEA,mBAAc,QAAS,KAAK5+B,OAAQ,KAAO4+B,EANpD,OAAO,KAAK5+B,QAAU+zB,EAAM/zB,QAYlCsxB,EAAAA,UAAAA,YAAAA,SAAY3kB,GAGV,OAAO,IAAI2kB,GAFG,iBAAY,KAAKtxB,MAAO,KAAKoY,KAAMzL,GAEtBA,IAG7B2kB,EAAAA,UAAAA,UAAAA,SAAUyC,GACR,GAAa,MAATA,GAA2B,IAAVA,GAA+B,IAAhBA,EAAM/zB,MACxC,OAAO,KACG+zB,EAAMsH,aAEhBtH,EAAQ,IAAIzC,EAASyC,EAAO,MAGxB,OAA6B,gCACjC,KAAK/zB,MACL,KAAKoY,KACL2b,EAAM/zB,MACN+zB,EAAM3b,MAJDymB,EAAI,KAAEC,EAAK,KAAEC,EAAI,KAAEjvB,EAAK,KAMzBkvB,EAAcH,EAAOE,EACrBE,GAAa,wBAAmBH,EAAOhvB,GAG7C,OAAkB,MAAdmvB,IAAsB,2BAAsBD,GACvC,KAEF,IAAI1N,GAAS,mBAAc,QAAS0N,GAAc,GAAIC,IAG/D3N,EAAAA,UAAAA,WAAAA,SAAWyC,GACT,GAAa,MAATA,EACF,OAAO,KACGA,EAAMsH,aAEhBtH,EAAQ,IAAIzC,EAASyC,EAAO,MAGxB,OAA6B,gCACjC,KAAK/zB,MACL,KAAKoY,KACL2b,EAAM/zB,MACN+zB,EAAM3b,MAJDymB,EAAI,KAAEC,EAAK,KAAEC,EAAI,KAAEjvB,EAAK,KAMzBkvB,EAAcH,EAAOE,EACrBE,GAAa,uBAAkBH,EAAOhvB,GAG5C,OAAkB,MAAdmvB,IAAsB,2BAAsBD,GACvC,KAEF,IAAI1N,GAAS,mBAAc,QAAS0N,GAAc,GAAIC,IAEjE,EA/IA,GAoKA,SAASC,EAAiBt1B,EAAQ0T,EAAQ6hB,GACxC,GAAS,MAALv1B,GAAaA,EAAEyxB,YAAmB,MAAL/d,GAAaA,EAAE+d,WAAY,CACpD,OAA6B,gCACjCzxB,EAAE5J,MACF4J,EAAEwO,KACFkF,EAAEtd,MAAQm/B,EACV7hB,EAAElF,MAJGymB,EAAI,KAAEC,EAAK,KAAEC,EAAI,KAMxB,GAAID,IAN2B,KAQ7B,OAAO,KAET,IAAMM,EAAMP,EAAOE,EACnB,OAAI,2BAAsBK,GACjB,KAEF,IAAI9N,EAAS8N,EAAKN,GACpB,GAAIl1B,EAAEorB,MAAQprB,EAAExG,IAAK,CAE1B,IAAMi8B,GAAW,0BAAqB/hB,EAAElF,OAASkF,EAAElF,KACnD,OAAOxO,EAAEorB,OAAO5xB,IAAIka,EAAEtd,MAAQm/B,EAAWE,GAEzC,MAAM,IAAIl9B,MAAM,+BA1LPtE,EAAAA,SAAAA,EAiJbA,EAAAA,cAAA,SAA8BuL,GAC5B,IAAMk2B,EAAa,gCAAgCtR,KAAK5kB,GACxD,GAAkB,MAAdk2B,GAAuC,MAAjBA,EAAW,GAAY,CAC/C,IAAMt/B,EAAQgG,WAAWs5B,EAAW,IACpC,KAAK,oBAAet/B,GAClB,OAAO,KAET,IAAIoY,OAAI,EAMR,OAJEA,EADmB,MAAjBknB,EAAW,GACNA,EAAW,GAAGhzB,OAEd,GAEF,IAAIglB,EAAStxB,EAAOoY,GAE3B,OAAO,MA8BXva,EAAAA,WAAA,SAA2B+L,EAAQ0T,GACjC,OAAO4hB,EAAiBt1B,EAAG0T,EAAG,IAGhCzf,EAAAA,cAAA,SAA8B+L,EAAQ0T,GACpC,OAAO4hB,EAAiBt1B,EAAG0T,GAAI,IAGjCzf,EAAAA,WAAA,SAA2B+L,EAAQ0T,GACjC,GAAS,MAAL1T,GAAaA,EAAEyxB,WACjB,OAAOzxB,EAAE21B,UAAUjiB,IAIvBzf,EAAAA,iBAAA,SAAiC+L,EAAQ0T,GACvC,OAAS,MAAL1T,GAAaA,EAAEyxB,WACVzxB,EAAE41B,WAAWliB,GAEbA,EAAEkiB,WAAW51B,qGCxNxB,iBACE,WAAmB61B,EAA4BC,GAC7C,GADiB,iBAA4B,mBAC5B,MAAbD,EACF,MAAM,IAAIt9B,MAAM,qDAGlB,GAAmB,MAAfu9B,EACF,MAAM,IAAIv9B,MAAM,uDA8BtB,OA1BElD,OAAAA,eAAIsyB,EAAAA,UAAA,UAAO,KAAX,WACE,OAAO,mCAGTA,EAAAA,UAAAA,MAAAA,WACE,OAAO,IAAIA,EAAM,KAAKkO,UAAUx7B,QAAS,KAAKy7B,YAAYz7B,UAG5DstB,EAAAA,UAAAA,SAAAA,WACE,MAAO,UAAG,KAAKkO,UAAUj/B,WAAU,OAAA0E,OAAM,KAAKw6B,YAAYl/B,aAG5D+wB,EAAAA,UAAAA,OAAAA,SAAOwC,GACL,GAAa,MAATA,GAAiBA,EAAM4L,QAAS,CAClC,IAAMC,EAAe,KAAKH,UAAUF,UAAU,KAAKG,aAC7CG,EAAgB9L,EAAM0L,UAAUF,UAAUxL,EAAM2L,aACtD,OAAmB,OAAZE,QAAY,IAAZ,OAAY,EAAZ,EAAcl8B,OAAOm8B,GAE5B,OAAO,GAIXtO,EAAAA,UAAAA,WAAAA,SAAWwC,GACT,IAAM+L,EAAQ,KAAKp8B,OAAOqwB,GAC1B,OAAgB,MAAT+L,GAAgBA,GAE3B,EArCA,GAAajiC,EAAAA,MAAAA,2GCFb,cAEA,aASE,WAAmB4qB,EAAwBE,cAAxB,QAAAF,EAAAA,MAAA,WAAwB,YACzC,IAAY7e,EAAQ0T,EAYdyiB,EAAkB,SAACnwB,GACvB,OAAO,MAAP,IAAgBA,EAAIowB,QAAUpwB,EAAIqwB,WAAarwB,EAAIswB,aAC5B,qBAAd,KAAKvX,OACd,KAAKA,KAAO,KAAKF,MAEfsX,EAAgB,KAAKtX,MAAQsX,EAAgB,KAAKpX,SACpD,KAAKF,IAAM,KAAKE,KAAO,MAET,MAAZ,KAAKF,KAA4B,MAAb,KAAKE,OApBjB/e,EAoBoC,KAAK6e,IApBjCnL,EAoBsC,KAAKqL,YAnBlD/e,WAAa0T,IAKD,oBAAZ1T,EAAEkrB,MACJlrB,EAAEkrB,MAAMxX,GAER1T,EAAI0T,MAYbgY,EAAwB,CAAC,KAAK3M,KAAM,KAAKF,KAAxC,KAAKA,IAAG6M,EAAAA,GAAE,KAAK3M,KAAI2M,EAAAA,IAsF1B,OApHS6K,EAAAA,KAAP,SAAYh8B,GACV,OAAW,MAAPA,GAAeA,EAAI85B,cACd95B,EAEA,IAAIg8B,EAAYh8B,IA8B3BlF,OAAAA,eAAIkhC,EAAAA,UAAA,gBAAa,KAAjB,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,WACE,IAAI7E,EAAS,KAAK7S,IACd8S,EAAU,KAAK5S,KAQnB,MAP6B,oBAAlB,KAAKF,IAAIuM,OAClBsG,EAAS,KAAK7S,IAAIuM,QAEU,oBAAnB,KAAKrM,KAAKqM,OACnBuG,EAAU,KAAK5S,KAAKqM,QAGf,IAAImL,EAAY7E,EAAQC,IAGjC4E,EAAAA,UAAAA,QAAAA,WAGE,IAAav2B,EAAQ0T,EAoBrB,OACc,MAAZ,KAAKmL,KAA4B,MAAb,KAAKE,OArBd/e,EAqBkC,KAAK6e,IArB/BnL,EAqBoC,KAAKqL,YApBjD/e,WAAa0T,IAGM,oBAAnB1T,EAAE+qB,aACJ/qB,EAAE+qB,aAAarX,GAEf1T,GAAK0T,KAGJ,SAAC1T,EAAQ0T,GACnB,cAAW1T,WAAa0T,IAGM,oBAAnB1T,EAAE+qB,aACJ/qB,EAAEgrB,YAAYtX,GAEd1T,GAAK0T,GAIuD8iB,CAAI,KAAK3X,IAAK,KAAKE,OAI5FwX,EAAAA,UAAAA,OAAAA,SAAOpM,GAEL,OADAA,EAAQoM,EAAYzgC,KAAKq0B,GAClBgI,EAAAA,iBAAiBE,IAAIF,EAAAA,iBAAiB2B,GAAG,KAAK9B,SAAS7H,GAAQ,KAAK+H,YAAY/H,MAGzFoM,EAAAA,UAAAA,SAAAA,SAASpM,GACP,IAAMsM,EAAK,SAACz2B,EAAQ0T,GAClB,cAAW1T,WAAa0T,IAGA,oBAAb1T,EAAEirB,OACJjrB,EAAEirB,OAAOvX,GAET1T,EAAI0T,IAGfyW,EAAQoM,EAAYzgC,KAAKq0B,GACzB,IAAMuM,EAAuB,MAAZ,KAAK7X,KAA6B,MAAdsL,EAAMpL,MAAgB0X,EAAG,KAAK5X,IAAKsL,EAAMpL,MAE9E,OAAI2X,KAD2B,MAAb,KAAK3X,MAA6B,MAAboL,EAAMtL,KAAe4X,EAAG,KAAK1X,KAAMoL,EAAMtL,MAEvE6X,EAEA,MAIXH,EAAAA,UAAAA,YAAAA,SAAYpM,GACV,OAAOoM,EAAYzgC,KAAKq0B,GAAO6H,SAAS,OAG1CuE,EAAAA,UAAAA,iBAAAA,SAAiBpM,GACf,OAAOgI,EAAAA,iBAAiBE,IAAI,KAAKH,YAAYqE,EAAYzgC,KAAKq0B,MAGhEoM,EAAAA,UAAAA,oBAAAA,SAAoBpM,GAClB,OAAOgI,EAAAA,iBAAiBE,IAAI,KAAKL,SAASuE,EAAYzgC,KAAKq0B,MAE/D,EArHA,GAAal2B,EAAAA,YAAAA,4uBCFb,cACA,UACA,UAEA,UACA,UACA,SAEA,cAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKqd,QAAS,WAAMxd,EAAKwd,UAE7B,OAPkC9Q,EAAAA,EAAAA,GAOlC,EAPA,CAAkCQ,EAAAA,YASlC,cACE,WAAYlN,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAUf,OAZ2B0M,EAAAA,EAAAA,GAKzB+Q,EAAAA,UAAAA,KAAAA,SAAKC,GACH,IAAMC,EAAQ,KAAKH,OAAOI,QAAQF,GAClC,OAAI,iBAAYC,IACP,iBAAYA,GAAO1iC,OAErB,GAEX,EAZA,CAA2B4iC,GAAd/iC,EAAAA,MAAAA,EAcb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KA2Bf,OA7ByB0M,EAAAA,EAAAA,GAKvBoR,EAAAA,UAAAA,KAAAA,SAAKJ,GACH,IAAIC,EAAQ,KAAKH,OAAOI,QAAQF,GAChC,KAAK,iBAAYC,GACf,OAAO,KAGT,IACEA,EAAQI,EAAkBJ,GAC1B,MAAOrhB,GACP,OAAO,KAGT,GAAqB,IAAjBqhB,EAAM1iC,OACR,OAAO,KAGT,GAAI+iC,EAAkBL,GAAQ,CAC5B,IACMtB,EADS4B,EAAwBN,GACpB37B,QAAO,SAACkD,EAAGwyB,GAAM,SAAIA,KACxC,OAAO,IAAI5L,EAAAA,SAASuQ,EAAKsB,EAAM,GAAGtoB,MAElC,OAAOsoB,EAAM37B,QAAO,SAACkD,EAAWwyB,GAAc,SAAIA,MAGxD,EA7BA,CAAyBmG,GAAZ/iC,EAAAA,IAAAA,EA+Bb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KA8Bf,OAhCyB0M,EAAAA,EAAAA,GAKvBwR,EAAAA,UAAAA,KAAAA,SAAKR,GACH,IAAM1O,EAAO,KAAKwO,OAAOI,QAAQF,GACjC,GAAY,MAAR1O,EACF,OAAO,KAET,IAAMmP,GAAmB,iBAAYnP,GAIrC,IACE+O,EAAkB/O,GAClB,MAAO1S,GACP,OAAO,KAGT,GAAgC,IAA5B6hB,EAAiBljC,OACnB,OAAO,KAIT,IADA,IAAImjC,EAAUD,EAAiB,GACT,QAAAvT,EAAAA,EAAAA,OAAAA,IAAkB,CAAnC,IAAMvJ,EAAO,MACZ,cAASA,EAAS+c,KACpBA,EAAU/c,GAGd,OAAO+c,GAEX,EAhCA,CAAyBP,GAAZ/iC,EAAAA,IAAAA,EAkCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KA8Bf,OAhCyB0M,EAAAA,EAAAA,GAKvB2R,EAAAA,UAAAA,KAAAA,SAAKX,GACH,IAAMC,EAAQ,KAAKH,OAAOI,QAAQF,GAClC,GAAa,MAATC,EACF,OAAO,KAET,IAAMQ,GAAmB,iBAAYR,GAIrC,IACEI,EAAkBJ,GAClB,MAAOrhB,GACP,OAAO,KAGT,GAAgC,IAA5B6hB,EAAiBljC,OACnB,OAAO,KAIT,IADA,IAAIqjC,EAAUH,EAAiB,GACT,QAAAvT,EAAAA,EAAAA,OAAAA,IAAkB,CAAnC,IAAMvJ,EAAO,MACZ,iBAAYA,EAASid,KACvBA,EAAUjd,GAGd,OAAOid,GAEX,EAhCA,CAAyBT,GAAZ/iC,EAAAA,IAAAA,EAkCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KA4Bf,OA9ByB0M,EAAAA,EAAAA,GAKvB6R,EAAAA,UAAAA,KAAAA,SAAKb,GACH,IAAIC,EAAQ,KAAKH,OAAOI,QAAQF,GAChC,KAAK,iBAAYC,GACf,OAAO,KAGT,IACEA,EAAQI,EAAkBJ,GAC1B,MAAOrhB,GACP,OAAO,KAGT,GAAqB,IAAjBqhB,EAAM1iC,OACR,OAAO,KAGT,GAAI+iC,EAAkBL,GAAQ,CAC5B,IAAMzU,EAAS+U,EAAwBN,GACjCtB,EAAMnT,EAAOlnB,QAAO,SAACkD,EAAGwyB,GAAM,SAAIA,KACxC,OAAO,IAAI5L,EAAAA,SAASuQ,EAAMnT,EAAOjuB,OAAQ0iC,EAAM,GAAGtoB,MAGlD,OADMgnB,EAAMsB,EAAM37B,QAAO,SAACkD,EAAWwyB,GAAc,SAAIA,MAC1CiG,EAAM1iC,QAGzB,EA9BA,CAAyB4iC,GAAZ/iC,EAAAA,IAAAA,EAgCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KA0Bf,OA5B4B0M,EAAAA,EAAAA,GAK1B8R,EAAAA,UAAAA,KAAAA,SAAKd,GACH,IAAIC,EAAQ,KAAKH,OAAOI,QAAQF,GAChC,KAAK,iBAAYC,GACf,OAAO,KAET,GAAqB,IAAjBA,EAAM1iC,OACR,OAAO,KAGT,IACE0iC,EAAQI,EAAkBJ,GAC1B,MAAOrhB,GACP,OAAO,KAGT,IAAK0hB,EAAkBL,GACrB,OAAOc,EAAgBd,GAGzB,IACMe,EAASD,EADAR,EAAwBN,IAEvC,OAAO,IAAI7R,EAAAA,SAAS4S,EAAQf,EAAM,GAAGtoB,OAEzC,EA5BA,CAA4BwoB,GAAf/iC,EAAAA,OAAAA,EA8Bb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAmDf,OArD0B0M,EAAAA,EAAAA,GAKxBiS,EAAAA,UAAAA,KAAAA,SAAKjB,GACH,IAQIkB,EAREjB,EAAQ,KAAKH,OAAOI,QAAQF,GAClC,KAAK,iBAAYC,GACf,OAAO,KAET,GAAqB,IAAjBA,EAAM1iC,OACR,OAAO,KAIT,IACE2jC,EAAWb,EAAkBJ,GAC7B,MAAOrhB,GACP,OAAO,KAGT,GAAI0hB,EAAkBY,GAAW,CAC/B,IACIC,EADE3V,EAAS+U,EAAwBW,GAKvC,OAHoB,KADhBC,EAAO,KAAKA,KAAK3V,IACZjuB,SACP4jC,EAAOA,EAAK,IAEP,IAAI/S,EAAAA,SAAS+S,EAAMlB,EAAM,GAAGtoB,MAGnC,OAAoB,KADdwpB,EAAO,KAAKA,KAAKD,IACd3jC,OACA4jC,EAAK,GAELA,GAKbF,EAAAA,UAAAA,KAAAA,SAAK5jC,GAIH,IAHA,IAAI8S,EAAM,EACJixB,EAAc,GAChB9S,EAAiB,GACF,QAAApB,EAAAA,EAAAA,OAAAA,IAAK,CAAnB,IAAM7c,EAAI,KACPgxB,EAAOD,EAAO/wB,IAAyB,MAAhB+wB,EAAO/wB,GAAgB+wB,EAAO/wB,GAAQ,GAAK,EACpEgxB,IAAQlxB,GAAQme,EAAQzM,SAASxR,GAE1BgxB,EAAMlxB,IACfme,EAAU,CAACje,GACXF,EAAMkxB,GAHN/S,EAAQpsB,KAAKmO,GAMjB,OAAOie,GAEX,EArDA,CAA0B6R,GAAb/iC,EAAAA,KAAAA,EA6Db,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKwD,KAAO,uBAuDhB,OA9D4B+I,EAAAA,EAAAA,GAU1BsS,EAAAA,UAAAA,KAAAA,SAAKtB,GACH,IAAIC,EAAQ,KAAKH,OAAOI,QAAQF,GAChC,KAAK,iBAAYC,GACf,OAAO,KAGT,IACEA,EAAQI,EAAkBJ,GAC1B,MAAOrhB,GACP,OAAO,KAGT,GAAqB,IAAjBqhB,EAAM1iC,OACR,OAAO,KAGT,GAAI+iC,EAAkBL,GAAQ,CAC5B,IAAMzU,EAAS+U,EAAwBN,GACjCsB,EAAS,KAAKC,kBAAkBhW,GACtC,OAAO,IAAI4C,EAAAA,SAASmT,EAAQtB,EAAM,GAAGtoB,MAErC,OAAO,KAAK6pB,kBAAkBvB,IAIlCqB,EAAAA,UAAAA,kBAAAA,SAAkBhQ,GAChB,IAAMniB,EAAM,KAAKsyB,MAAMnQ,GACvB,GAAIniB,EACF,OAAOA,EAAI,KAAK8W,OAIpBqb,EAAAA,UAAAA,MAAAA,SAAMhQ,GAKJ,IAJA,IACMoQ,EADMpQ,EAAKhtB,QAAO,SAACkD,EAAGwyB,GAAM,SAAIA,KACnB1I,EAAK/zB,OACpBokC,EAAe,EAEF,QAAAzU,EAAAA,EAAAA,OAAAA,IAAM,CAAlB,IAAM0U,EAAE,KACXD,GAAgBj6B,KAAKG,IAAI+5B,EAAKF,EAAM,GAGtC,IAAMG,EAAW,GAAKvQ,EAAK/zB,OAAS,GAAMokC,EACpCG,EAAW,EAAIxQ,EAAK/zB,OAAUokC,EAGpC,MAAO,CACLI,kBAAmBF,EACnBG,oBAAqBF,EACrBG,mBALcv6B,KAAKQ,KAAK25B,GAMxBK,qBALcx6B,KAAKQ,KAAK45B,KAQ9B,EA9DA,CAA4B3B,GAAf/iC,EAAAA,OAAAA,EAgEb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KA2Bf,OA7B6B0M,EAAAA,EAAAA,GAK3BmT,EAAAA,UAAAA,KAAAA,SAAKnC,GACH,IAAIC,EAAQ,KAAKH,OAAOI,QAAQF,GAChC,KAAK,iBAAYC,GACf,OAAO,KAGT,IACEA,EAAQI,EAAkBJ,GAC1B,MAAOrhB,GACP,OAAO,KAET,GAAqB,IAAjBqhB,EAAM1iC,OACR,OAAO,KAGT,GAAI+iC,EAAkBL,GAAQ,CAC5B,IACMmC,EADS7B,EAAwBN,GAChB37B,QAAO,SAACkD,EAAGwyB,GAAM,SAAIA,KAE5C,OAAO,IAAI5L,EAAAA,SAASgU,EAASnC,EAAM,GAAGtoB,MAEtC,OAAOsoB,EAAM37B,QAAO,SAACkD,EAAWwyB,GAAc,SAAIA,MAGxD,EA7BA,CAA6BmG,GAAhB/iC,EAAAA,QAAAA,EA+Bb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KA6Bf,OA/BmC0M,EAAAA,EAAAA,GAKjCqT,EAAAA,UAAAA,KAAAA,SAAKrC,GACH,IAAIC,EAAQ,KAAKH,OAAOI,QAAQF,GAChC,KAAK,iBAAYC,GACf,OAAO,KAGT,IACEA,EAAQI,EAAkBJ,GAC1B,MAAOrhB,GACP,OAAO,KAGT,GAAqB,IAAjBqhB,EAAM1iC,OACR,OAAO,KAGT,GAAI+iC,EAAkBL,GAAQ,CAC5B,IACMmC,EADS7B,EAAwBN,GAChB37B,QAAO,SAACkD,EAAGwyB,GAAM,SAAIA,KACtCsI,EAAU56B,KAAKG,IAAIu6B,EAAS,EAAMnC,EAAM1iC,QAC9C,OAAO,IAAI6wB,EAAAA,SAASkU,EAASrC,EAAM,GAAGtoB,MAEhCyqB,EAAUnC,EAAM37B,QAAO,SAACkD,EAAWwyB,GAAc,SAAIA,KAC3D,OAAOtyB,KAAKG,IAAIu6B,EAAS,EAAMnC,EAAM1iC,SAG3C,EA/BA,CAAmC4iC,GAAtB/iC,EAAAA,cAAAA,EAiCb,kBACE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKwD,KAAO,yBAEhB,OALsC+I,EAAAA,EAAAA,GAKtC,EALA,CAAsCsS,GAAzBlkC,EAAAA,iBAAAA,EAOb,kBACE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKwD,KAAO,sBAEhB,OAL8B+I,EAAAA,EAAAA,GAK9B,EALA,CAA8BsS,GAAjBlkC,EAAAA,SAAAA,EAOb,kBACE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKwD,KAAO,wBAEhB,OALwC+I,EAAAA,EAAAA,GAKxC,EALA,CAAwCsS,GAA3BlkC,EAAAA,mBAAAA,EAOb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAOf,OAT6B0M,EAAAA,EAAAA,GAK3BuT,EAAAA,UAAAA,KAAAA,SAAKvC,GACH,IAAMC,EAAQ,KAAKH,OAAOI,QAAQF,GAClC,OAAO,cAAQ,iBAAYC,KAE/B,EATA,CAA6BE,GAAhB/iC,EAAAA,QAAAA,EAWb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAOf,OAT6B0M,EAAAA,EAAAA,GAK3BwT,EAAAA,UAAAA,KAAAA,SAAKxC,GACH,IAAMC,EAAQ,KAAKH,OAAOI,QAAQF,GAClC,OAAO,aAAQC,IAEnB,EATA,CAA6BE,GAW7B,SAASE,EAAkB7U,GACzB,IAwBuBnuB,EAxBjB4iC,GAAQ,iBAAYzU,GAC1B,GAAI8U,EAAkBL,GACpB,OAsBqB5iC,EAtBE4iC,GAwBdl8B,KAAI,YAAK,SAAE0+B,YAAYplC,EAAI,GAAGsa,SAvBlC,GAiBT,SAA2Bta,GACzB,OAAOA,EAAI0oB,MAAK,YAAK,SAAE6U,cAlBZ8H,CAAkBzC,GAC3B,MAAM,IAAI0C,EAAAA,UACR,wFAGF,OAAO1C,EAIX,SAASM,EAAwBqC,GAC/B,OAAOA,EAAW7+B,KAAI,YAAY,SAASxE,SAG7C,SAAS+gC,EAAkBjjC,GACzB,OAAOA,EAAI+1B,OAAM,YAAK,SAAEwH,cAY1B,SAASmG,EAAgB8B,GACvB,IAAM5C,GAAQ,oBAAe4C,EAAS,OACtC,OAAI5C,EAAM1iC,OAAS,IAAM,EAEhB0iC,GAAOA,EAAM1iC,OAAS,GAAK,IAG1B0iC,EAAMA,EAAM1iC,OAAS,EAAI,GAAK0iC,EAAMA,EAAM1iC,OAAS,IAAM,EAhDxDH,EAAAA,QAAAA,wyCC7Zb,cACA,aACA,SAOA,UAEA,SAGA,cACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAuCf,OAzCyB0M,EAAAA,EAAAA,GAKvB8T,EAAAA,UAAAA,KAAAA,SAAK9C,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,GAAY,MAAR5J,GAAgBA,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACxC,OAAO,KAGT,IAAMm3B,EAAMvI,EAAK9xB,QAAO,SAACkD,EAAQwyB,GAO/B,OANIxyB,EAAEg2B,gBAAkBxD,EAAEwD,cACxBxD,EAAI,IAAI7B,EAAAA,YAAY6B,EAAGA,GACdA,EAAEwD,gBAAkBh2B,EAAEg2B,gBAC/Bh2B,EAAI,IAAI2wB,EAAAA,YAAY3wB,EAAGA,IAGrBA,EAAEozB,YAAcpzB,EAAEqsB,YAAcrsB,EAAEosB,QAAWpsB,EAAE6wB,QAAU7wB,EAAE6wB,UACtD,gBAAW7wB,EAAGwyB,GACZxyB,EAAEg2B,eAAiBxD,EAAEwD,cAE5Bh2B,EAAEwgB,IAAI4S,YACNpzB,EAAEwgB,IAAI6L,YACNrsB,EAAEwgB,IAAI4L,QACLpsB,EAAEwgB,IAAIqQ,QAAU7wB,EAAEwgB,IAAIqQ,SAEhB,IAAIF,EAAAA,aAAY,gBAAW3wB,EAAEwgB,IAAKgS,EAAEhS,MAAM,gBAAWxgB,EAAE0gB,KAAM8R,EAAE9R,OAE/D,IAAIiQ,EAAAA,YAAY3wB,EAAEwgB,IAAMgS,EAAEhS,IAAKxgB,EAAE0gB,KAAO8R,EAAE9R,MAG5C1gB,EAAIwyB,KAIf,OAAIgJ,EAASC,sBAAsBtE,GAC1B,KAEFA,GAEX,EAzCA,CAAyBnP,EAAAA,YAAZpyB,EAAAA,IAAAA,EA2Cb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAkCf,OApC8B0M,EAAAA,EAAAA,GAK5BkU,EAAAA,UAAAA,KAAAA,SAAKlD,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,GAAY,MAAR5J,GAAgBA,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACxC,OAAO,KAGT,IAAM27B,EAAa/M,EAAK9xB,QAAO,SAACkD,EAAQwyB,GAOtC,OANIxyB,EAAEg2B,gBAAkBxD,EAAEwD,cACxBxD,EAAI,IAAI7B,EAAAA,YAAY6B,EAAGA,GACdA,EAAEwD,gBAAkBh2B,EAAEg2B,gBAC/Bh2B,EAAI,IAAI2wB,EAAAA,YAAY3wB,EAAGA,IAGrBA,EAAEozB,YAAcpzB,EAAEqsB,YAAcrsB,EAAEosB,QAC7B,mBAAcpsB,EAAGwyB,GACfxyB,EAAEg2B,eAAiBxD,EAAEwD,cAC1Bh2B,EAAEwgB,IAAI4S,YAAcpzB,EAAEwgB,IAAI6L,YAAcrsB,EAAEwgB,IAAI4L,OACzC,IAAIuE,EAAAA,aAAY,mBAAc3wB,EAAEwgB,IAAKgS,EAAE9R,OAAO,mBAAc1gB,EAAE0gB,KAAM8R,EAAEhS,MAEtE,IAAImQ,EAAAA,YAAY3wB,EAAEwgB,IAAMgS,EAAE9R,KAAM1gB,EAAE0gB,KAAO8R,EAAEhS,KAG7CxgB,EAAIwyB,KAIf,OAAIgJ,EAASC,sBAAsBE,GAC1B,KAEFA,GAEX,EApCA,CAA8B3T,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAsCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAkCf,OApC8B0M,EAAAA,EAAAA,GAK5BoU,EAAAA,UAAAA,KAAAA,SAAKpD,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,GAAY,MAAR5J,GAAgBA,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACxC,OAAO,KAGT,IAAM46B,EAAUhM,EAAK9xB,QAAO,SAACkD,EAAQwyB,GAOnC,OANIxyB,EAAEg2B,gBAAkBxD,EAAEwD,cACxBxD,EAAI,IAAI7B,EAAAA,YAAY6B,EAAGA,GACdA,EAAEwD,gBAAkBh2B,EAAEg2B,gBAC/Bh2B,EAAI,IAAI2wB,EAAAA,YAAY3wB,EAAGA,IAGrBA,EAAEozB,YAAcZ,EAAEY,YACb,sBAAiBpzB,EAAGwyB,GAClBxyB,EAAEg2B,eAAiBxD,EAAEwD,cAC1Bh2B,EAAEwgB,IAAI4S,WACD,IAAIzC,EAAAA,aAAY,sBAAiB3wB,EAAEwgB,IAAKgS,EAAEhS,MAAM,sBAAiBxgB,EAAE0gB,KAAM8R,EAAE9R,OAE3E,IAAIiQ,EAAAA,YAAY3wB,EAAEwgB,IAAMgS,EAAEhS,IAAKxgB,EAAE0gB,KAAO8R,EAAE9R,MAG5C1gB,EAAIwyB,KAIf,OAAIgJ,EAASC,sBAAsBb,GAC1B,KAEFA,GAEX,EApCA,CAA8B5S,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAsCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAoCf,OAtC4B0M,EAAAA,EAAAA,GAK1BqU,EAAAA,UAAAA,KAAAA,SAAKrD,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,GAAY,MAAR5J,GAAgBA,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACxC,OAAO,KAGT,IAAM87B,EAAWlN,EAAK9xB,QAAO,SAACkD,EAAQwyB,GAOpC,OANIxyB,EAAEg2B,gBAAkBxD,EAAEwD,cACxBxD,EAAI,IAAI7B,EAAAA,YAAY6B,EAAGA,GACdA,EAAEwD,gBAAkBh2B,EAAEg2B,gBAC/Bh2B,EAAI,IAAI2wB,EAAAA,YAAY3wB,EAAGA,IAGrBA,EAAEozB,YACG,gBAAWpzB,EAAGwyB,GACZxyB,EAAEg2B,eAAiBxD,EAAEwD,cAC1Bh2B,EAAEwgB,IAAI4S,WACD,IAAIzC,EAAAA,aAAY,gBAAW3wB,EAAEwgB,IAAKgS,EAAE9R,OAAO,gBAAW1gB,EAAE0gB,KAAM8R,EAAEhS,MAEhE,IAAImQ,EAAAA,YAAY3wB,EAAEwgB,IAAMgS,EAAE9R,KAAM1gB,EAAE0gB,KAAO8R,EAAEhS,KAG7CxgB,EAAIwyB,KAMf,OAAIgJ,EAASC,sBAAsBK,GAC1B,KAEFA,GAEX,EAtCA,CAA4B9T,EAAAA,YAAfpyB,EAAAA,OAAAA,EAwCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAiBf,OAnBqC0M,EAAAA,EAAAA,GAKnCuU,EAAAA,UAAAA,KAAAA,SAAKvD,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,GAAY,MAAR5J,GAAgBA,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACxC,OAAO,KAGT,IAAM87B,EAAWlN,EAAK9xB,QAAO,SAACkD,EAAWwyB,GAAc,SAAIA,KACrDwJ,EAAoBF,GAAY,EAAI57B,KAAK4qB,MAAMgR,GAAY57B,KAAK6qB,KAAK+Q,GAE3E,OAAIN,EAASC,sBAAsBO,GAC1B,KAEFA,GAEX,EAnBA,CAAqChU,EAAAA,YAAxBpyB,EAAAA,gBAAAA,EAqBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAf4B0M,EAAAA,EAAAA,GAK1ByU,EAAAA,UAAAA,KAAAA,SAAKzD,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,GAAY,MAAR5J,GAAgBA,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACxC,OAAO,KAGT,IAAMk8B,EAAStN,EAAK9xB,QAAO,SAACkD,EAAWwyB,GAAc,SAAIA,KAEzD,OAAOgJ,EAASW,cAAcD,IAElC,EAfA,CAA4BlU,EAAAA,YAAfpyB,EAAAA,OAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb6B0M,EAAAA,EAAAA,GAK3B4U,EAAAA,UAAAA,KAAAA,SAAK5D,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,KAGF3uB,KAAK6qB,KAAK8D,IAErB,EAbA,CAA6B7G,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb2B0M,EAAAA,EAAAA,GAKzB6U,EAAAA,UAAAA,KAAAA,SAAK7D,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,KAGF3uB,KAAK4qB,MAAM+D,IAEtB,EAbA,CAA2B7G,EAAAA,YAAdpyB,EAAAA,MAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb8B0M,EAAAA,EAAAA,GAK5B8U,EAAAA,UAAAA,KAAAA,SAAK9D,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,KAGFA,GAAO,EAAI3uB,KAAK4qB,MAAM+D,GAAO3uB,KAAK6qB,KAAK8D,IAElD,EAbA,CAA8B7G,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAcb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAfyB0M,EAAAA,EAAAA,GAKvB+U,EAAAA,UAAAA,KAAAA,SAAK/D,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,KACEA,EAAIuE,WACN,IAAIgD,EAAAA,SAASl2B,KAAK6xB,IAAIlD,EAAI92B,OAAQ82B,EAAI1e,MAEtCjQ,KAAK6xB,IAAIlD,IAGtB,EAfA,CAAyB7G,EAAAA,YAAZpyB,EAAAA,IAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAf4B0M,EAAAA,EAAAA,GAK1BgV,EAAAA,UAAAA,KAAAA,SAAKhE,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,KACEA,EAAIuE,WACN,IAAIgD,EAAAA,UAAsB,EAAbvH,EAAI92B,MAAY82B,EAAI1e,OAE1B,EAAP0e,GAGb,EAfA,CAA4B7G,EAAAA,YAAfpyB,EAAAA,OAAAA,EAiBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,WAAY,WAAMrR,EAAKqR,aAYhC,OAjB2B3E,EAAAA,EAAAA,GAQzBiV,EAAAA,UAAAA,KAAAA,SAAKjE,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EACF,OAAO,KAGT,IAAM6N,EAAwB,MAAlB,KAAKvQ,UAAoB,KAAKA,UAAUuM,QAAQF,GAAO,EACnE,OAAOt4B,KAAKi2B,MAAMtH,EAAM3uB,KAAKG,IAAI,GAAIq8B,IAAQx8B,KAAKG,IAAI,GAAIq8B,IAE9D,EAjBA,CAA2B1U,EAAAA,YAAdpyB,EAAAA,MAAAA,EAmBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAfwB0M,EAAAA,EAAAA,GAKtBmV,EAAAA,UAAAA,KAAAA,SAAKnE,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EACF,OAAO,KAGT,IAAM+N,EAAK18B,KAAKC,IAAI0uB,GAEpB,OAAO2M,EAASW,cAAcS,IAElC,EAfA,CAAwB5U,EAAAA,YAAXpyB,EAAAA,GAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAgBf,OAlByB0M,EAAAA,EAAAA,GAKvBqV,EAAAA,UAAAA,KAAAA,SAAKrE,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EACF,OAAO,KAGT,IAAMvkB,EAAQpK,KAAKI,IAAIuuB,GAEvB,OAAI2M,EAASC,sBAAsBnxB,GAC1B,KAEFA,GAEX,EAlBA,CAAyB0d,EAAAA,YAAZpyB,EAAAA,IAAAA,EAoBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAfyB0M,EAAAA,EAAAA,GAKvBsV,EAAAA,UAAAA,KAAAA,SAAKtE,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,GAAY,MAAR5J,GAAgBA,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACxC,OAAO,KAGT,IAAMG,EAAMyuB,EAAK9xB,QAAO,SAACkD,EAAWwyB,GAAc,YAAKryB,IAAIH,GAAKE,KAAKC,IAAIqyB,MAEzE,OAAOgJ,EAASW,cAAch8B,IAElC,EAfA,CAAyB6nB,EAAAA,YAAZpyB,EAAAA,IAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAgBf,OAlB2B0M,EAAAA,EAAAA,GAKzBuV,EAAAA,UAAAA,KAAAA,SAAKvE,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,GAAY,MAAR5J,GAAgBA,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACxC,OAAO,KAGT,IAAMsK,EAAQskB,EAAK9xB,QAAO,SAACkD,EAAWwyB,GAAc,YAAKnyB,IAAIL,EAAGwyB,MAEhE,OAAIgJ,EAASC,sBAAsBnxB,GAC1B,KAEFA,GAEX,EAlBA,CAA2B0d,EAAAA,YAAdpyB,EAAAA,MAAAA,EAoBb,kBAWE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK+hB,UAAYliB,EAAKkiB,YAgB1B,OA7B8BxV,EAAAA,EAAAA,GAgB5ByV,EAAAA,UAAAA,KAAAA,SAAKzE,GACH,GAAIyE,EAASC,WAAW,KAAKF,WAAY,CACvC,GAAuB,uCAAnB,KAAKA,UAAoD,CAC3D,IAAMG,EAAeF,EAASC,WAAW,KAAKF,WAAwBjQ,OAEtE,OADAoQ,EAAY7f,eAAiBkb,EAAI1K,oBAC1BqP,EAEP,OAAOF,EAASC,WAAW,KAAKF,WAGlC,MAAM,IAAI9iC,MAAM,oCAA6B,KAAK8iC,aAzBtCC,EAAAA,WAAa,CAC3B,oCAAqCzB,EAAS4B,cAC9C,oCAAqC5B,EAAS6B,gBAC9C,qCAAsC7B,EAAS8B,mBAC/C,iCAAkC9B,EAAS+B,eAC3C,iCAAkC/B,EAASgC,gBAuB/C,EA7BA,CAA8BxV,EAAAA,YAAjBpyB,EAAAA,SAAAA,EA+Bb,kBAWE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK+hB,UAAYliB,EAAKkiB,YAgB1B,OA7B8BxV,EAAAA,EAAAA,GAgB5BiW,EAAAA,UAAAA,KAAAA,SAAKjF,GACH,GAA2C,MAAvCiF,EAASC,WAAW,KAAKV,WAAoB,CAC/C,GAAuB,uCAAnB,KAAKA,UAAoD,CAC3D,IAAMW,EAAeF,EAASC,WAAW,KAAKV,WAAwBjQ,OAEtE,OADA4Q,EAAYrgB,eAAiBkb,EAAI1K,oBAC1B6P,EAEP,OAAOF,EAASC,WAAW,KAAKV,WAGlC,MAAM,IAAI9iC,MAAM,oCAA6B,KAAK8iC,aAzBtCS,EAAAA,WAAa,CAC3B,oCAAqCjC,EAASoC,cAC9C,oCAAqCpC,EAASqC,gBAC9C,qCAAsCrC,EAASsC,mBAC/C,iCAAkCtC,EAASuC,eAC3C,iCAAkCvC,EAASwC,gBAuB/C,EA7BA,CAA8BhW,EAAAA,YAAjBpyB,EAAAA,SAAAA,EA+Bb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAyBf,OA3B+B0M,EAAAA,EAAAA,GAK7ByW,EAAAA,UAAAA,KAAAA,SAAKzF,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EACF,OAAO,KAGT,IAAIqP,EAAY,KAChB,IAGEA,EAAY1C,EAAS0C,UAAUrP,GAC/B,MAAOzX,GACP,GAAIA,aAAaokB,EAAS2C,kBACxB,OAAO,KAIX,OAAI3C,EAASC,sBAAsByC,GAC1B,KAEFA,GAEX,EA3BA,CAA+BlW,EAAAA,YAAlBpyB,EAAAA,UAAAA,EA6Bb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAyBf,OA3BiC0M,EAAAA,EAAAA,GAK/B4W,EAAAA,UAAAA,KAAAA,SAAK5F,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EACF,OAAO,KAGT,IAAIwP,EAAc,KAClB,IAGEA,EAAc7C,EAAS6C,YAAYxP,GACnC,MAAOzX,GACP,GAAIA,aAAaokB,EAAS2C,kBACxB,OAAO,KAIX,OAAI3C,EAASC,sBAAsB4C,GAC1B,KAEFA,GAEX,EA3BA,CAAiCrW,EAAAA,YAApBpyB,EAAAA,YAAAA,ioBCxdb,iBACA,UAEAA,EAAAA,MAAA,SAAgB0oC,EAAMxjB,GACpB,OAAY,MAARA,EACKA,GAGL,iBAAYA,GACNA,EAAeve,KAAI,YAAS,SAAMgiC,MAG1B,gBAAdzjB,EAAK2D,KACA,IAAI+f,EAAEC,YAAY3jB,GACF,YAAdA,EAAK2D,KACP+f,EAAEE,QAAQjnC,KAAKqjB,IAQFpiB,EAPIoiB,EAAK2D,KASL,oBAAZ+f,EAAE9lC,GAGlB,SAAyBA,EAAcoiB,GAErC,OAAO,IAAI0jB,EAAE9lC,GAAMoiB,GAbV6jB,CAAgB7jB,EAAK2D,KAAM3D,GAE3B,MAIX,IAAwBpiB,oxCCxBxB,cACA,aAEA,SAEA,cAKE,WAAYoiB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAK8C,GAAKjD,EAAKiD,GACf9C,EAAKP,QAAUI,EAAKJ,UAUxB,OAnBiC8M,EAAAA,EAAAA,GAa/BoX,EAAAA,UAAAA,KAAAA,SAAKpG,GACH,IAAMqG,EACJrG,EAAIsG,YAAYC,aAAa,KAAKhhB,GAAI,KAAKrD,UAAY,IAAIskB,EAAGzV,SAAS,KAAKxL,GAAI,KAAKrD,SAEvF,OADA8d,EAAIyG,cAAcnc,IAAI,KAAKpqB,KAAMmmC,GAC1BA,GAEX,EAnBA,CAAiC7W,EAAAA,YAApBpyB,EAAAA,YAAAA,EAqBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAKikB,YAAcpkB,EAAKokB,cAW5B,OAlBiC1X,EAAAA,EAAAA,GAU/B2X,EAAAA,UAAAA,KAAAA,SAAK3G,GAEH,IAAIqG,EAAWrG,EAAI4G,YAAY,KAAK1mC,KAAM,KAAKwmC,aAI/C,OAHIL,aAAoB7W,EAAAA,aACtB6W,EAAWA,EAASnG,QAAQF,IAEvBqG,GAEX,EAlBA,CAAiC7W,EAAAA,YAApBpyB,EAAAA,YAAAA,EAoBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK9F,OAAQ,WAAM2F,EAAK3F,OACxB8F,EAAK4jB,SAAW,IAAIM,EAAYrkB,EAAK+jB,YAazC,OApBmCrX,EAAAA,EAAAA,GAUjC6X,EAAAA,UAAAA,KAAAA,SAAK7G,GACH,IAAMqG,EAAW,KAAKA,SAASnG,QAAQF,GAEvC,GAAgB,MAAZqG,IAAqBA,EAAS5G,WAChC,MAAM,IAAI/9B,MAAM,oDAGlB,IAAMib,EAAQ,KAAKA,MAAM4Q,KAAKyS,GAC9B,OAAgB,MAATrjB,GAAiBA,EAAMoJ,MAAK,SAAC9e,GAAc,SAAS6/B,SAAS7/B,OAExE,EApBA,CAAmCuoB,EAAAA,YAAtBpyB,EAAAA,cAAAA,EAsBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKxb,MAAO,WAAMqb,EAAKrb,MACvBwb,EAAK4jB,SAAW,IAAIM,EAAYrkB,EAAK+jB,YAuBzC,OA9BgCrX,EAAAA,EAAAA,GAU9B+X,EAAAA,UAAAA,KAAAA,SAAK/G,GAEH,GAAiB,MAAb,KAAK/4B,KACP,OAAO,EAET,GAAqB,MAAjB,KAAKo/B,SACP,MAAM,IAAI3kC,MAAM,oDAElB,IAAMuF,EAAO,KAAKA,KAAKi5B,QAAQF,GAE/B,GAAY,MAAR/4B,EACF,OAAO,EAET,IAAMo/B,EAAW,KAAKA,SAASnG,QAAQF,GACvC,GAAgB,MAAZqG,IAAqBA,EAAS5G,WAChC,MAAM,IAAI/9B,MAAM,oDAGlB,OAAO2kC,EAASS,SAAS7/B,IAE7B,EA9BA,CAAgCuoB,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAgCb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAK8C,GAAKjD,EAAKiD,GACf9C,EAAKP,QAAUI,EAAKJ,UAMxB,OAfmC8M,EAAAA,EAAAA,GAYjCgY,EAAAA,UAAAA,KAAAA,SAAKC,GACH,OAAO,IAAIT,EAAG9V,WAAW,KAAKnL,GAAI,KAAKrD,UAE3C,EAfA,CAAmCsN,EAAAA,YAAtBpyB,EAAAA,cAAAA,EAiBb,kBAME,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAK8C,GAAKjD,EAAKiD,GACf9C,EAAKykB,WAAa5kB,EAAK6kB,WAAWjnC,KAClCuiB,EAAKgG,QAAUnG,EAAKmG,UAOxB,OAlB6BuG,EAAAA,EAAAA,GAc3BoY,EAAAA,UAAAA,KAAAA,SAAKpH,GACH,IAAMxX,EAASwX,EAAIqH,cAAc,KAAKH,YAAYhH,QAAQF,GAC1D,OAAO,IAAIwG,EAAGhhB,KAAK,KAAKD,GAAIiD,EAAOjD,GAAIiD,EAAOtG,QAAS,KAAKuG,UAEhE,EAlBA,CAA6B+G,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAoBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAK6kB,QAAUhlB,EAAKokB,cAQxB,OAf6B1X,EAAAA,EAAAA,GAU3BuY,EAAAA,UAAAA,KAAAA,SAAKvH,GAEH,IAAMwH,GADNxH,EAAM,KAAKsH,QAAUtH,EAAIyH,kBAAkB,KAAKH,SAAWtH,GACvCt6B,QAAQ,KAAKxF,MACjC,OAAOsnC,EAAUA,EAAQtH,QAAQF,QAAOr+B,GAE5C,EAfA,CAA6B6tB,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAiBb,kBAME,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKxb,KAAOqb,EAAKrb,KACjBwb,EAAKykB,WAAa5kB,EAAKkG,OAAOtoB,KAC9BuiB,EAAKP,QAAUI,EAAKJ,QACpBO,EAAKgG,QAAUnG,EAAKmG,UAaxB,OAxB0BuG,EAAAA,EAAAA,GAgBxBxwB,OAAAA,eAAIgnB,EAAAA,UAAA,SAAM,KAAV,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,SAAKwa,GACH,IAAMxX,EAASwX,EAAIqH,cAAc,KAAKH,aAAe,GACrD,OAAO,IAAIV,EAAGhhB,KAAK,KAAKve,KAAMuhB,EAAOjD,GAAI,KAAKrD,QAAS,KAAKuG,UAEhE,EAxBA,CAA0B+G,EAAAA,YAAbpyB,EAAAA,KAAAA,EA0Bb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAKgG,QAAUnG,EAAKmG,QACpBhG,EAAK9F,MAAQ2F,EAAKrb,OAUtB,OAnBgC+nB,EAAAA,EAAAA,GAY9B0Y,EAAAA,UAAAA,KAAAA,SAAK1H,GACH,IAAMrjB,EAAQ,KAAKA,MAAM5Y,KAAI,SAACkD,GAC5B,IAAMugC,EAAUxH,EAAIt6B,QAAQuB,EAAK/G,MACjC,OAAOsnC,EAAUA,EAAQtH,QAAQF,QAAOr+B,KAE1C,OAAO,IAAI6kC,EAAG7V,QAAQhU,EAAO,KAAK8L,UAEtC,EAnBA,CAAgC+G,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAqBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,OAOrB,OAZgC8uB,EAAAA,EAAAA,GAQ9B2Y,EAAAA,UAAAA,KAAAA,SAAK3H,GACH,IAAM4H,EAAa5H,EAAI6H,WAAW,KAAK3nC,MACvC,OAAO0nC,EAAaA,EAAW1H,QAAQF,QAAOr+B,GAElD,EAZA,CAAgC6tB,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAcb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK9F,MAAQ2F,EAAKrb,KAClBwb,EAAKgG,QAAUnG,EAAKmG,UAkBxB,OAzB6BuG,EAAAA,EAAAA,GAY3BxwB,OAAAA,eAAImyB,EAAAA,UAAA,YAAS,KAAb,WACE,OAAO,mCAGTA,EAAAA,UAAAA,OAAAA,SAAOqP,EAAc/4B,GACnB,IAAMuhB,EAASwX,EAAIqH,cAAcpgC,EAAKuhB,OAAOtoB,OAAS,GACtD,OAAO,IAAIsmC,EAAGhhB,KAAKve,EAAKA,KAAMuhB,EAAOjD,GAAIte,EAAKib,QAASjb,EAAKwhB,UAG9DkI,EAAAA,UAAAA,KAAAA,SAAKqP,GAAL,WACQrjB,EAAQ,KAAKA,MAAM5Y,KAAI,SAACkD,GAAc,SAAKwe,OAAOua,EAAK/4B,MAC7D,OAAO,IAAIu/B,EAAG7V,QAAQhU,EAAO,KAAK8L,UAEtC,EAzBA,CAA6B+G,EAAAA,YAAhBpyB,EAAAA,QAAAA,EA2Bb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAAYrR,EAAKqR,YAc1B,OAnBkC3E,EAAAA,EAAAA,GAQhC8Y,EAAAA,UAAAA,KAAAA,SAAK9H,GACH,IAAM+H,EAAQ,KAAKhF,SAAS/C,GACtBgI,EAAQxB,EAAG9hB,SAASujB,WAAWjI,EAAIkI,wBACnCnjC,EACK,MAATgjC,EAAgBA,EAAMjO,gBAAgBkO,EAAO,KAAKrU,UAAUrrB,oBAAiB3G,EAC/E,OAAc,MAAVoD,GAAkBA,EAAOojC,UACpBpjC,EAAOijB,IAEPjjB,GAGb,EAnBA,CAAkCyqB,EAAAA,YAArBpyB,EAAAA,aAAAA,EAqBb,kBAEE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAAYrR,EAAKqR,YAqB1B,OAzBoC3E,EAAAA,EAAAA,GAOlCoZ,EAAAA,UAAAA,KAAAA,SAAKpI,GAEC,MAAiB,KAAK+C,SAAS/C,GAA9B+H,EAAK,KAAEC,EAAK,KACjB,GAAa,MAATD,GAA0B,MAATC,EAAe,CAE9BA,EAAMpU,QAAUmU,EAAMlU,aACxBkU,EAAQA,EAAMnjB,WAEhB,IAAM7f,EAASgjC,EAAMjO,gBAAgBkO,EAAO,KAAKrU,UAAUrrB,eAC3D,OAAc,MAAVvD,GAAkBA,EAAOojC,UACpBpjC,EAAOijB,IAEPjjB,EAIX,OAAO,MAEX,EAzBA,CAAoCyqB,EAAAA,YAAvBpyB,EAAAA,eAAAA,koBCvQb,cACA,UAOA,cACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAUf,OAZ0B0M,EAAAA,EAAAA,GAKxBqZ,EAAAA,UAAAA,KAAAA,SAAKrI,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAAKj8B,KAAI,SAACyD,GAAW,qBAAYvI,KAAKuI,MACjE,OAAe,MAAX4uB,EAAK,IAAyB,MAAXA,EAAK,GACnB,KAEFA,EAAK,GAAG+E,SAAS/E,EAAK,KAEjC,EAZA,CAA0B5G,EAAAA,YAAbpyB,EAAAA,KAAAA,EAcb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAUf,OAZiC0M,EAAAA,EAAAA,GAK/BsZ,EAAAA,UAAAA,KAAAA,SAAKtI,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAAKj8B,KAAI,SAACyD,GAAW,qBAAYvI,KAAKuI,MACjE,OAAe,MAAX4uB,EAAK,IAAyB,MAAXA,EAAK,GACnB,KAEFA,EAAK,GAAG8E,iBAAiB9E,EAAK,KAEzC,EAZA,CAAiC5G,EAAAA,YAApBpyB,EAAAA,YAAAA,EAcb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAUf,OAZ6B0M,EAAAA,EAAAA,GAK3BuZ,EAAAA,UAAAA,KAAAA,SAAKvI,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAAKj8B,KAAI,SAACyD,GAAW,qBAAYvI,KAAKuI,MACjE,OAAe,MAAX4uB,EAAK,IAAyB,MAAXA,EAAK,GACnB,KAEFA,EAAK,GAAGiF,YAAYjF,EAAK,KAEpC,EAZA,CAA6B5G,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAcb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAUf,OAZoC0M,EAAAA,EAAAA,GAKlCwZ,EAAAA,UAAAA,KAAAA,SAAKxI,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAAKj8B,KAAI,SAACyD,GAAW,qBAAYvI,KAAKuI,MACjE,OAAe,MAAX4uB,EAAK,IAAyB,MAAXA,EAAK,GACnB,KAEFA,EAAK,GAAGgF,oBAAoBhF,EAAK,KAE5C,EAZA,CAAoC5G,EAAAA,YAAvBpyB,EAAAA,eAAAA,wmBClDb,cACA,SACA,UAIA,cAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKgmB,WAAY,WAAMnmB,EAAKmmB,WAC5BhmB,EAAKimB,IAAK,WAAMpmB,EAAKqmB,MACrBlmB,EAAKmmB,KAAM,WAAMtmB,EAAKumB,QAU1B,OAnBwB7Z,EAAAA,EAAAA,GAYtB8Z,EAAAA,UAAAA,KAAAA,SAAK9I,GACH,OAAI,KAAKyI,UAAUvI,QAAQF,GAClB,KAAK0I,GAAGxI,QAAQF,GAEhB,KAAK4I,IAAI1I,QAAQF,IAG9B,EAnBA,CAAwBxQ,EAAAA,YAAXpyB,EAAAA,GAAAA,EAqBb,MAIE,SAAYklB,GACV,KAAKymB,MAAO,WAAMzmB,EAAKymB,MACvB,KAAKJ,MAAO,WAAMrmB,EAAKqmB,OANdvrC,EAAAA,SAAAA,EAUb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKumB,WAAY,WAAM1mB,EAAK0mB,WAC5BvmB,EAAKwmB,UAAY3mB,EAAK4mB,SAASnlC,KAAI,SAAColC,GAAY,WAAIC,EAASD,MAC7D1mB,EAAKmmB,KAAM,WAAMtmB,EAAKumB,QA6B1B,OAtC0B7Z,EAAAA,EAAAA,GAYxBqa,EAAAA,UAAAA,KAAAA,SAAKrJ,GACH,OAAI,KAAKgJ,UACA,KAAKM,cAActJ,GAEnB,KAAKuJ,cAAcvJ,IAI9BqJ,EAAAA,UAAAA,cAAAA,SAAcrJ,GAEZ,IADA,IAAM7wB,EAAM,KAAK65B,UAAU9I,QAAQF,GAClB,WAAKiJ,UAAL/b,EAAAA,EAAAA,OAAAA,IAAgB,CAA5B,IAAMic,EAAE,KACX,IAAI,YAAOA,EAAGJ,KAAK7I,QAAQF,GAAM7wB,GAC/B,OAAOg6B,EAAGR,KAAKzI,QAAQF,GAG3B,OAAO,KAAK4I,IAAI1I,QAAQF,IAG1BqJ,EAAAA,UAAAA,cAAAA,SAAcrJ,GACZ,IAAiB,eAAKiJ,UAAL/b,EAAAA,EAAAA,OAAAA,IAAgB,CAA5B,IAAMic,EAAE,KACX,GAAIA,EAAGJ,KAAK7I,QAAQF,GAClB,OAAOmJ,EAAGR,KAAKzI,QAAQF,GAG3B,OAAO,KAAK4I,IAAI1I,QAAQF,IAE5B,EAtCA,CAA0BxQ,EAAAA,YAAbpyB,EAAAA,KAAAA,w/CCpCb,cACA,SACA,UACA,aAGA,cAcE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKH,KAAOA,IAsBhB,OAtC8B0M,EAAAA,EAAAA,GAmB5BtK,EAAAA,UAAAA,KAAAA,SAAKsb,GACH,UADF,OACyB,QAASwJ,WAATtc,EAAAA,EAAAA,OAAAA,IAAqB,CAAvC,IAAMrJ,EAAQ,KAEU,MAAvB,KAAKvB,KAAKuB,GAEZ,KAAKA,IAAY,WAAM,KAAKvB,KAAKuB,IACX,mBAAbA,GAA4D,MAA3Bmc,EAAI1K,sBAE9C,KAAKzR,GAAY4lB,EAAAA,QAAQxqC,KAAK,CAC5BgnB,KAAM,UACN1mB,MAAOygC,EAAI1K,oBACXkP,UAAW,uCAKjB,IAAMpO,EAAO1R,EAAS8kB,WAAWzlC,KAAI,YAAK,OAAY,MAAX0e,EAAKjc,GAAaic,EAAKjc,GAAG05B,QAAQF,QAAOr+B,KACpF,YAAW,IAAG+iB,UAAQzgB,KAAAM,MAAAswB,EAAAyB,EAAAA,MAAAA,GAAIF,GAAI,MAjChB1R,EAAAA,WAAa,CAC3B,OACA,QACA,MACA,OACA,SACA,SACA,cACA,kBA2BJ,EAtCA,CAA8B8K,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAwCb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKH,KAAOA,IAchB,OArB0B0M,EAAAA,EAAAA,GAUxB4B,EAAAA,UAAAA,KAAAA,SAAKoP,GACH,UADF,OACyB,QAAKwJ,WAALtc,EAAAA,EAAAA,OAAAA,IAAiB,CAAnC,IAAMrJ,EAAQ,KACU,MAAvB,KAAKvB,KAAKuB,KAEZ,KAAKA,IAAY,WAAM,KAAKvB,KAAKuB,KAIrC,IAAMuS,EAAOxF,EAAK4Y,WAAWzlC,KAAI,YAAK,OAAY,MAAX0e,EAAKjc,GAAaic,EAAKjc,GAAG05B,QAAQF,QAAOr+B,KAChF,YAAW,IAAGivB,MAAI3sB,KAAAM,MAAAswB,EAAAyB,EAAAA,MAAAA,GAAIF,GAAI,MAhBZxF,EAAAA,WAAa,CAAC,OAAQ,QAAS,OAkBjD,EArBA,CAA0BpB,EAAAA,YAAbpyB,EAAAA,KAAAA,EAuBb,kBAEE,WAAYklB,GAEV,IAFF,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,KACY,QAAKknB,WAALtc,EAAAA,EAAAA,OAAAA,IAAiB,CAAnC,IAAMrJ,EAAQ,KACK,MAAlBvB,EAAKuB,KAEPpB,EAAKoB,IAAY,WAAMvB,EAAKuB,cAUpC,OAjB0BmL,EAAAA,EAAAA,GAYxB0a,EAAAA,UAAAA,KAAAA,SAAK1J,SAAL,OAEQ5J,EAAOsT,EAAKF,WAAWzlC,KAAI,YAAK,OAAY,MAAX0e,EAAKjc,GAAaic,EAAKjc,GAAG05B,QAAQF,QAAOr+B,KAChF,OAAO,KAAI,IAAG+iB,UAAQzgB,KAAAM,MAAAswB,EAAAyB,EAAAA,MAAAA,EAAC,EAAG,EAAG,GAAMF,GAAI,MAAEG,WAd3BmT,EAAAA,WAAa,CAAC,OAAQ,SAAU,SAAU,eAgB5D,EAjBA,CAA0Bla,EAAAA,YAAbpyB,EAAAA,KAAAA,EAmBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OAR2B0M,EAAAA,EAAAA,GAKzB2a,EAAAA,UAAAA,KAAAA,SAAK3J,GACH,OAAOA,EAAIkI,uBAAuBtjB,WAEtC,EARA,CAA2B4K,EAAAA,YAAdpyB,EAAAA,MAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OARyB0M,EAAAA,EAAAA,GAKvB4a,EAAAA,UAAAA,KAAAA,SAAK5J,GACH,OAAOA,EAAIkI,wBAEf,EARA,CAAyB1Y,EAAAA,YAAZpyB,EAAAA,IAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OAR+B0M,EAAAA,EAAAA,GAK7B6a,EAAAA,UAAAA,KAAAA,SAAK7J,GACH,OAAOA,EAAIkI,uBAAuB3R,WAEtC,EARA,CAA+B/G,EAAAA,YAAlBpyB,EAAAA,UAAAA,EAUb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAAYrR,EAAKqR,YAW1B,OAhB2C3E,EAAAA,EAAAA,GAQzC8a,EAAAA,UAAAA,KAAAA,SAAK9J,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACKA,EAAI,KAAK1C,UAAUrrB,eAEnB,MAGb,EAhBA,CAA2CknB,EAAAA,YAA9BpyB,EAAAA,sBAAAA,EAkBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb8B0M,EAAAA,EAAAA,GAK5B+a,EAAAA,UAAAA,KAAAA,SAAK/J,GACH,IAAMta,EAAO,KAAKqd,SAAS/C,GAC3B,OAAY,MAARta,EACKA,EAAKd,UAEL,MAGb,EAbA,CAA8B4K,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb8B0M,EAAAA,EAAAA,GAK5Bgb,EAAAA,UAAAA,KAAAA,SAAKhK,GACH,IAAMta,EAAO,KAAKqd,SAAS/C,GAC3B,OAAY,MAARta,EACKA,EAAK6Q,UAEL,MAGb,EAbA,CAA8B/G,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAbwC0M,EAAAA,EAAAA,GAKtCib,EAAAA,UAAAA,KAAAA,SAAKjK,GACH,IAAMta,EAAO,KAAKqd,SAAS/C,GAC3B,OAAY,MAARta,EACKA,EAAKZ,eAEL,MAGb,EAbA,CAAwC0K,EAAAA,YAA3BpyB,EAAAA,mBAAAA,EAgBbA,EAAAA,QAAA,SAAwB+L,EAAQ0T,EAAQ8W,GACtC,OAAOxqB,EAAEkrB,MAAMxX,EAAG8W,IAIpBv2B,EAAAA,SAAA,SAAyB+L,EAAQ0T,EAAQ8W,GACvC,OAAOxqB,EAAEirB,OAAOvX,EAAG8W,IAGrB,kBAGE,WAAYrR,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAAYrR,EAAKqR,YAwB1B,OA7BuC3E,EAAAA,EAAAA,GAQrCkb,EAAAA,UAAAA,KAAAA,SAAKlK,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAE3B,GACa,MAAX5J,EAAK,IACM,MAAXA,EAAK,IACgC,oBAA9BA,EAAK,GAAGyD,mBACsB,oBAA9BzD,EAAK,GAAGyD,kBAEf,OAAO,KAET,IAAM90B,EAASqxB,EAAK,GAAGyD,kBACrBzD,EAAK,GACa,MAAlB,KAAKzC,UAAoB,KAAKA,UAAUrrB,mBAAgB3G,GAE1D,OAAc,MAAVoD,GAAkBA,EAAOojC,UACpBpjC,EAAOijB,IAEPjjB,GAGb,EA7BA,CAAuCyqB,EAAAA,YAA1BpyB,EAAAA,kBAAAA,EA+Bb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAAYrR,EAAKqR,YAwB1B,OA7BqC3E,EAAAA,EAAAA,GAQnCmb,EAAAA,UAAAA,KAAAA,SAAKnK,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAE3B,GACa,MAAX5J,EAAK,IACM,MAAXA,EAAK,IAC8B,oBAA5BA,EAAK,GAAG0D,iBACoB,oBAA5B1D,EAAK,GAAG0D,gBAEf,OAAO,KAET,IAAM/0B,EAASqxB,EAAK,GAAG0D,gBACrB1D,EAAK,GACa,MAAlB,KAAKzC,UAAoB,KAAKA,UAAUrrB,mBAAgB3G,GAE1D,OAAc,MAAVoD,GAAkBA,EAAOojC,UACpBpjC,EAAOijB,IAEPjjB,GAGb,EA7BA,CAAqCyqB,EAAAA,YAAxBpyB,EAAAA,gBAAAA,goBC/Nb,cAEA,0EAAuD,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAAvD,CAA8BQ,EAAAA,yBAAjBpyB,EAAAA,SAAAA,EAEb,8EAAyD,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAAzD,CAAgCQ,EAAAA,yBAAnBpyB,EAAAA,WAAAA,EAEb,8EAAkE,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAAlE,CAAyCQ,EAAAA,yBAA5BpyB,EAAAA,oBAAAA,ynBCLb,cAEA,SAEA,aAKE,WAAYklB,GACV,GAAoB,MAAhBA,EAAK8nB,QAAiB,CACxB,IAAMn0B,GAAK,WAAMqM,EAAK8nB,UAClB,iBAAY9nB,EAAK8nB,SACnB,KAAKhU,KAAOngB,EAEZ,KAAKogB,IAAMpgB,EAGK,MAAhBqM,EAAK+nB,UACP,KAAKA,QAAU/nB,EAAK+nB,SA4B1B,OAxBEna,EAAAA,UAAAA,QAAAA,SAAQ8P,GACN,GAAoB,MAAhB,KAAKqK,QAAiB,CAExB,IAAMC,EAAY,KAAK/c,KAAKyS,GAE5B,OADAA,EAAIyG,cAAc8D,qBAAqB,KAAKF,QAASC,GAC9CA,EAEP,OAAO,KAAK/c,KAAKyS,IAIrB9P,EAAAA,UAAAA,KAAAA,SAAK+W,GACH,OAAO,MAGT/W,EAAAA,UAAAA,SAAAA,SAAS8P,GACP,OAAiB,MAAb,KAAK5J,KACA,KAAKA,KAAKryB,KAAI,YAAO,SAAIm8B,QAAQF,MACnB,MAAZ,KAAK3J,IACP,KAAKA,IAAI6J,QAAQF,GAEjB,MAGb,EA3CA,GAAa5iC,EAAAA,WAAAA,EA6Cb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKH,KAAOA,IAMhB,OAX6C0M,EAAAA,EAAAA,GAQ3Cwb,EAAAA,UAAAA,KAAAA,SAAKvD,GACH,MAAM,IAAIvlC,MAAM,oCAA6B,KAAK4gB,KAAK2D,QAE3D,EAXA,CAA6CiK,GAAhC9yB,EAAAA,wBAAAA,2gBClDb2ycAYEvxB,OAAAA,eAAAA,EAAAA,WAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAXAwoB,EAAAA,YAYAjsC,OAAAA,eAAAA,EAAAA,UAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAXAwoB,EAAAA,WAYAjsC,OAAAA,eAAAA,EAAAA,UAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAXAwoB,EAAAA,WAYAjsC,OAAAA,eAAAA,EAAAA,mBAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAXAwoB,EAAAA,oBAYAjsC,OAAAA,eAAAA,EAAAA,cAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAXAwoB,EAAAA,eAYAjsC,OAAAA,eAAAA,EAAAA,aAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAXAwoB,EAAAA,cAYAjsC,OAAAA,eAAAA,EAAAA,WAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAXAwoB,EAAAA,YAYAjsC,OAAAA,eAAAA,EAAAA,aAAAA,CAAAH,YAAAA,EAAA4jB,IAAAA,WAAA,OAXAwoB,EAAAA,60BCtCF,cACA,UAEA,SAIA,cAQE,WAAYnoB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKioB,SAAWpoB,EAAKqoB,SACrBloB,EAAKmoB,WAAatoB,EAAKsoB,WACvBnoB,EAAKooB,aAAevoB,EAAKuoB,aACzBpoB,EAAK9F,OAAQ,WAAM2F,EAAK3F,OACxB8F,EAAKqoB,aAAexoB,EAAKwoB,aACzBroB,EAAKsoB,WAAY,WAAMzoB,EAAKyoB,aA4DhC,OA3E8B/b,EAAAA,EAAAA,GAkB5Bgc,EAAAA,UAAAA,KAAAA,SAAKhL,SAAL,OAGQiL,EAAe,KACnBP,SAAU,KAAKA,UACX,KAAKG,aAAe,CAAEA,aAAc,KAAKA,cAAiB,IAC1D,KAAKC,aAAe,CAAEA,aAAc,KAAKA,cAAiB,IAGhE,GAAI,KAAKnuB,MAAO,CACd,IAAMuuB,EAA+C,KAAKvuB,MAAMujB,QAAQF,GAExE,GAAqB,MAAjBkL,EACF,MAAO,GAGTD,EAAgBtuB,MAAQuuB,EAGtB,KAAKH,YACPE,EAAgBF,UAAY,KAAKA,UAAU7K,QAAQF,IAGjD,KAAK4K,aACPK,EAAgBL,WAAa,KAAKA,YAGpC,IAAItjB,EAAU0Y,EAAIzY,YACG,MAAnB,KAAKqjB,WAAqB,KAAKA,WAAa,KAAKF,SACjDO,GAkBF,OAfIA,EAAgBtuB,QAClB2K,EAAUA,EAAQK,QAAO,SAACrP,GAAW,SAAK6yB,uBAAuB7yB,EAAG2yB,EAAgBtuB,WAGlFsuB,EAAgBF,WAAa,KAAKD,eACpCxjB,EAAUA,EAAQK,QAAO,SAACrP,GAAM,MAC9B,OAAyB,QAAzB,IAAgByyB,iBAASlW,IAAAA,OAAA,EAAAA,EAAEhT,SAASvJ,EAAE8yB,kBAAkB3oB,EAAKqoB,mBAI7DptC,MAAMG,QAAQypB,IAChB,IAAI+jB,kBAAiBnpC,KAAIqC,MAAAswB,EAAIvN,GAE7B0Y,EAAIqL,iBAAiBnpC,KAAKolB,GAErBA,GAGT0jB,EAAAA,UAAAA,uBAAAA,SAAuBM,EAAa3uB,GAApC,WACE,OAAI,iBAAYA,GACNA,EAAgBoJ,MAAK,YAAK,SAAE+gB,SAASwE,EAAO5lC,QAAQ+c,EAAKooB,kBAE1DluB,EAAMmqB,SAASwE,EAAO5lC,QAAQ,KAAKmlC,gBAGhD,EA3EA,CAA8Brb,EAAAA,YAAjBpyB,EAAAA,SAAAA,6lBCPb,cACA,SACA,UAEA,SAEA,aAIE,WAAYklB,GACV,KAAKpiB,KAAOoiB,EAAKpiB,KACjB,KAAKX,OAAQ,WAAM+iB,EAAK/iB,OAK5B,OAHEgsC,EAAAA,UAAAA,KAAAA,SAAKvL,GACH,OAAqB,MAAd,KAAKzgC,MAAgB,KAAKA,MAAM2gC,QAAQF,QAAOr+B,GAE1D,EAXA,GAaA,cAIE,WAAY2gB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK+oB,UAAYlpB,EAAKkpB,UACtB/oB,EAAKkB,QAAUrB,EAAKqB,QAAQ5f,KAAI,SAACgiC,GAAe,WAAIwF,EAAQxF,QAmBhE,OA1B8B/W,EAAAA,EAAAA,GAU5Byc,EAAAA,UAAAA,KAAAA,SAAKzL,GAEH,IADA,IAAMt8B,EAAW,GACA,WAAKigB,QAALuJ,EAAAA,EAAAA,OAAAA,IAAc,CAA1B,IAAMvB,EAAE,KACXjoB,EAAIioB,EAAGzrB,MAAQyrB,EAAG4B,KAAKyS,GAEzB,OAAQ,KAAKwL,WACX,IAAK,qCACH,OAAO,IAAI5N,EAAAA,SAASl6B,EAAInE,MAAOmE,EAAIiU,MACrC,IAAK,iCACH,OAAO,IAAIyW,EAAAA,KAAK1qB,EAAIuD,KAAMvD,EAAI8kB,OAAQ9kB,EAAIwe,QAASxe,EAAI+kB,SACzD,IAAK,oCACH,OAAO,IAAI2F,EAAAA,QAAQ1qB,EAAIiZ,MAAOjZ,EAAI+kB,SACpC,QACE,OAAO/kB,IAGf,EA1BA,CAA8B8rB,EAAAA,YAAjBpyB,EAAAA,SAAAA,22CCnBb,cACA,SACA,UACA,UACA,aAEA,SAEA,cAQE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK0F,UAAY7F,EAAK6F,UACtB1F,EAAKipB,qBAAsB,WAAMppB,EAAKopB,qBACtCjpB,EAAK2F,WAAa9F,EAAK8F,WACvB3F,EAAKkpB,sBAAuB,WAAMrpB,EAAKqpB,sBACvClpB,EAAKuF,KAAM,WAAM1F,EAAK0F,KACtBvF,EAAKyF,MAAO,WAAM5F,EAAK4F,QAkC3B,OAjD8B8G,EAAAA,EAAAA,GAoB5BxwB,OAAAA,eAAIonB,EAAAA,UAAA,aAAU,KAAd,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,SAAKoa,GACH,IAUItF,EAVE+C,EAAW,KAAKzV,IAAIkY,QAAQF,GAC5BtC,EAAY,KAAKxV,KAAKgY,QAAQF,GAC9B7X,EACc,MAAlB,KAAKA,UACD,KAAKA,UACL,KAAKujB,qBAAuB,KAAKA,oBAAoBxL,QAAQF,GAC7D5X,EACe,MAAnB,KAAKA,WACD,KAAKA,WACL,KAAKujB,sBAAwB,KAAKA,qBAAqBzL,QAAQF,GAarE,OAXgB,MAAZvC,GAAiC,MAAbC,IAElB,KAAK1V,IAAI4jB,iBAAqD,uBAAlC,KAAK5jB,IAAI4jB,gBAAgB3lB,KACvDyU,EAAmB,KAAK1S,IAAI4jB,gBAAgB1rC,KAE5C,KAAKgoB,KAAK0jB,iBACyB,uBAAnC,KAAK1jB,KAAK0jB,gBAAgB3lB,OAE1ByU,EAAmB,KAAKxS,KAAK0jB,gBAAgB1rC,OAG1C,IAAI2rC,EAAMjmB,SAAS6X,EAAUC,EAAWvV,EAAWC,EAAYsS,IAE1E,EAjDA,CAA8BlL,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAwDbA,EAAAA,WAAA,SAA2B0uC,EAAennC,EAAWgvB,GACnD,OAAOmY,EAASrQ,SAAS92B,EAAMgvB,IAIjCv2B,EAAAA,WAAA,SAA2B0uC,EAAeC,EAAkBpY,GAC1D,OAAOmY,EAASjqB,SAASkqB,EAAapY,IAIxCv2B,EAAAA,iBAAA,SAAiC0uC,EAAeC,EAAkBpY,GAChE,OAAOmY,EAASE,iBAAiBD,EAAapY,IAIhDv2B,EAAAA,QAAA,SAAwB+L,EAAQ0T,EAAQ8W,GACtC,OAAOxqB,EAAEkrB,MAAMxX,EAAG8W,IAIpBv2B,EAAAA,SAAA,SAAyB+L,EAAQ0T,EAAQ8W,GACvC,OAAOxqB,EAAEirB,OAAOvX,EAAG8W,IAGrB,kBAGE,WAAYrR,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhB2BqtB,EAAAA,EAAAA,GAQzBid,EAAAA,UAAAA,KAAAA,SAAKjM,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAE2yB,MAAMjf,EAAG,KAAK8W,WAEhB,MAGb,EAhBA,CAA2BnE,EAAAA,YAAdpyB,EAAAA,MAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhBgCqtB,EAAAA,EAAAA,GAQ9Bkd,EAAAA,UAAAA,KAAAA,SAAKlM,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAEg0B,WAAWtgB,EAAG,KAAK8W,WAErB,MAGb,EAhBA,CAAgCnE,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhBiCqtB,EAAAA,EAAAA,GAQ/Bmd,EAAAA,UAAAA,KAAAA,SAAKnM,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAE+zB,YAAYrgB,EAAG,KAAK8W,WAEtB,MAGb,EAhBA,CAAiCnE,EAAAA,YAApBpyB,EAAAA,YAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhB8BqtB,EAAAA,EAAAA,GAQ5Bod,EAAAA,UAAAA,KAAAA,SAAKpM,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAE0yB,SAAShf,EAAG,KAAK8W,WAEnB,MAGb,EAhBA,CAA8BnE,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhBmCqtB,EAAAA,EAAAA,GAQjCqd,EAAAA,UAAAA,KAAAA,SAAKrM,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAE2zB,cAAcjgB,EAAG,KAAK8W,WAExB,MAGb,EAhBA,CAAmCnE,EAAAA,YAAtBpyB,EAAAA,cAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhBoCqtB,EAAAA,EAAAA,GAQlCsd,EAAAA,UAAAA,KAAAA,SAAKtM,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAEyzB,eAAe/f,EAAG,KAAK8W,WAEzB,MAGb,EAhBA,CAAoCnE,EAAAA,YAAvBpyB,EAAAA,eAAAA,EAmBbA,EAAAA,QAAA,SAAwB+L,EAAQ0T,GAC9B,OAAO1T,EAAEojC,MAAM1vB,IAIjBzf,EAAAA,SAAA,SAAyB+L,EAAQ0T,GAC/B,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAEqjC,OAAO3vB,GAET,MAKXzf,EAAAA,YAAA,SAA4B+L,EAAQ0T,GAClC,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAEsjC,UAAU5vB,GAEZ,MAIX,kBACE,WAAYyF,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAUf,OAZ2B0M,EAAAA,EAAAA,GAKzB0d,EAAAA,UAAAA,KAAAA,SAAK1M,GACH,IAAM8L,EAAW,KAAKzV,IAAI6J,QAAQF,GAClC,OAAgB,MAAZ8L,EACK,KAEFA,EAASa,SAEpB,EAZA,CAA2Bnd,EAAAA,YAAdpyB,EAAAA,MAAAA,EAcb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAUf,OAZ0B0M,EAAAA,EAAAA,GAKxB4d,EAAAA,UAAAA,KAAAA,SAAK5M,GACH,IAAM8L,EAAW,KAAKzV,IAAI6J,QAAQF,GAClC,OAAgB,MAAZ8L,EACK,KAEFA,EAASe,QAEpB,EAZA,CAA0Brd,EAAAA,YAAbpyB,EAAAA,KAAAA,EAcb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAef,OAjB2B0M,EAAAA,EAAAA,GAKzB8d,EAAAA,UAAAA,KAAAA,SAAK9M,GACH,IAAM8L,EAAW,KAAKzV,IAAI6J,QAAQF,GAClC,GAAgB,MAAZ8L,EACF,OAAO,KAET,IAAM/O,EAAQ+O,EAAS/O,QAKvB,OAHIA,GAASA,EAAMlJ,YAAckJ,EAAM95B,OAAO8pC,EAAAA,sBAC5ChQ,EAAMjY,eAAiBkb,EAAI1K,qBAEtByH,GAEX,EAjBA,CAA2BvN,EAAAA,YAAdpyB,EAAAA,MAAAA,EAmBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAef,OAjByB0M,EAAAA,EAAAA,GAKvBge,EAAAA,UAAAA,KAAAA,SAAKhN,GACH,IAAM8L,EAAW,KAAKzV,IAAI6J,QAAQF,GAClC,GAAgB,MAAZ8L,EACF,OAAO,KAET,IAAM9O,EAAM8O,EAAS9O,MAKrB,OAHIA,GAAOA,EAAInJ,YAAcmJ,EAAI/5B,OAAO8pC,EAAAA,sBACtC/P,EAAIlY,eAAiBkb,EAAI1K,qBAEpB0H,GAEX,EAjBA,CAAyBxN,EAAAA,YAAZpyB,EAAAA,IAAAA,EAmBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhB4BqtB,EAAAA,EAAAA,GAQ1Bie,EAAAA,UAAAA,KAAAA,SAAKjN,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAE+jC,OAAOrwB,EAAG,KAAK8W,WAEjB,MAGb,EAhBA,CAA4BnE,EAAAA,YAAfpyB,EAAAA,OAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhB0BqtB,EAAAA,EAAAA,GAQxBme,EAAAA,UAAAA,KAAAA,SAAKnN,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAEikC,KAAKvwB,EAAG,KAAK8W,WAEf,MAGb,EAhBA,CAA0BnE,EAAAA,YAAbpyB,EAAAA,KAAAA,EAmGb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAuOf,OAzO4B0M,EAAAA,EAAAA,GAK1Bqe,EAAAA,UAAAA,KAAAA,SAAKrN,GAEH,IAAIsN,EAAYC,EACZ,EAAmB,KAAKxK,SAAS/C,GAAhCwN,EAAS,KAAEC,EAAG,KAEd/vC,MAAMG,QAAQ2vC,KACjBA,EAAY,CAACA,IAEf,IAAMvnB,EA9FV,SAA0BunB,GAIxB,IAFA,IAAIvnB,EAAO,KAEQ,QAAAiH,EAAAA,EAAAA,OAAAA,IAAW,CAAzB,IAAMwgB,EAAI,KACb,GAAY,MAARA,IAIY,MAAZA,EAAK1lB,KAA4B,MAAb0lB,EAAKxlB,MAA7B,CAMA,IAAMF,EAAkB,MAAZ0lB,EAAK1lB,IAAc0lB,EAAK1lB,IAAM0lB,EAAKxlB,KACzCA,EAAoB,MAAbwlB,EAAKxlB,KAAewlB,EAAKxlB,KAAOwlB,EAAK1lB,IAElD,GAAIA,EAAIqQ,QAAUrQ,EAAIqQ,UAAYnQ,EAAKmQ,QAAUnQ,EAAKmQ,SAAU,CAC9D,GAAY,MAARpS,EAEG,IAAa,SAATA,EACT,SAEA,MAAO,WAJPA,EAAO,YAQJ,IACJ+B,EAAI6L,YAAc3L,EAAK2L,cACvB7L,EAAI6L,YAAc7L,EAAI4L,UACtB1L,EAAK2L,YAAc3L,EAAK0L,QACzB,CACA,GAAY,MAAR3N,GAAyB,SAATA,EAEb,IAAa,aAATA,EACT,SAEA,MAAO,WAJPA,EAAO,gBAMJ,GAAI+B,EAAI4L,QAAU1L,EAAK0L,OAAQ,CACpC,GAAY,MAAR3N,EAEG,IAAa,SAATA,GAA4B,aAATA,EAC5B,SAEA,MAAO,WAJPA,EAAO,YAMJ,GAAI+B,EAAI4S,YAAc1S,EAAK0S,WAAY,CAC5C,GAAY,MAAR3U,EAEG,IAAa,aAATA,EACT,SAEA,MAAO,WAJPA,EAAO,gBAMJ,GAAI5R,OAAO/S,UAAU0mB,IAAQ3T,OAAO/S,UAAU4mB,GAAO,CAC1D,GAAY,MAARjC,EAEG,IAAa,YAATA,GAA+B,YAATA,EAC/B,SAEA,MAAO,WAJPA,EAAO,cAMJ,IAAmB,kBAAR+B,GAAoC,kBAATE,EAU3C,MAAO,WATP,GAAY,MAARjC,GAAyB,YAATA,EAEb,IAAa,YAATA,EACT,SAEA,MAAO,WAJPA,EAAO,YAYb,OAAOA,EAgBQ0nB,CAAiBH,GAC9B,GAAa,aAATvnB,EACF,MAAM,IAAIvkB,MAAM,gDAElB,GAAY,MAARukB,EACF,OAAO,KAKT,GAAyB,KADzBunB,EAAYI,EAAkBJ,EAAWC,IAC3BlwC,OACZ,MAAO,GAGT,GAAI,CAAC,OAAQ,OAAQ,YAAYskB,SAASoE,GACxCsnB,EAAiB,KAAKM,oBACtBP,EAAa,SAACxB,GAAkB,WAAIlO,EAAAA,SAAS,EAAGkO,EAAS9jB,IAAIyL,sBACxD,GAAI,CAAC,YAAY5R,SAASoE,GAC/BsnB,EAAiB,KAAKO,uBACtBR,EAAa,SAACxB,GAAkB,WAAIlO,EAAAA,SAAS,EAAGkO,EAAS9jB,IAAIrQ,WACxD,KAAI,CAAC,UAAW,WAAWkK,SAASoE,GAIzC,MAAM,IAAIvkB,MAAM,yCAHhB6rC,EAAiB,KAAKQ,sBACtBT,EAAa,SAACU,GAAmB,WAAIpQ,EAAAA,SAAS,EAAG,MAMnD,IADA,IAAMtP,EAAU,GACO,QAAApB,EAAAA,EAAAA,OAAAA,IAAW,CAA7B,IAAM4e,EAAQ,KACjB,GAAgB,MAAZA,EAAJ,CAIA,GAAoB,MAAhBA,EAAS9jB,KAAgC,MAAjB8jB,EAAS5jB,KACnC,OAAO,KAGI,aAATjC,IAEF6lB,EAAS9jB,IAAM8jB,EAAS9jB,IAAI8L,cAC5BgY,EAAS5jB,KAAO4jB,EAAS5jB,KAAK4L,eAGhC2Z,EAAa,MAAPA,EAAcA,EAAMH,EAAWxB,GACrC,IAAM7L,EAAQsN,EAAevtC,KAAK,KAAM8rC,EAAU2B,GAClD,GAAc,OAAVxN,EACF,OAAO,KAET3R,EAAQpsB,KAAIqC,MAAZ,EAAiB07B,GAAS,KAG5B,OAAO3R,GAGT+e,EAAAA,UAAAA,oBAAAA,SAAoBvB,EAAe2B,GAUjC,GATAA,EAAI91B,MAAO,0BAAqB81B,EAAI91B,MAEnB,SAAb81B,EAAI91B,OACN81B,EAAIluC,OAAS,EACbkuC,EAAI91B,KAAO,QAKRm0B,EAAS9jB,IAAI/nB,YAAYkzB,OAAOtR,SAAS4rB,EAAI91B,MAChD,OAAO,KAKT,GAAoB,MAAhBm0B,EAAS9jB,KAAgC,MAAjB8jB,EAAS5jB,KACnC,OAAO,KAGT,IAAIF,EAAM8jB,EAAS3jB,UAAY2jB,EAAS9jB,IAAM8jB,EAAS9jB,IAAI0d,YACvDxd,EAAO4jB,EAAS1jB,WAAa0jB,EAAS5jB,KAAO4jB,EAAS5jB,KAAK2d,cAC/D,GAAI7d,EAAIqM,MAAMnM,GACZ,MAAO,GAET,GAAI4jB,EAAS9jB,IAAIimB,cAAcR,EAAI91B,OAASm0B,EAAS5jB,KAAK+lB,cAAcR,EAAI91B,MAC1E,MAAO,GAGT,IAAIu2B,EAAclmB,EACZsG,EAAU,GAEhBtG,EAAM,KAAKmmB,oBAAoBnmB,EAAKylB,EAAI91B,MACxCuQ,EAAO,KAAKimB,oBAAoBjmB,EAAMulB,EAAI91B,MAI1C,IAFA,IAAIy2B,EAAeF,EAAYvrC,IAAI8qC,EAAIluC,MAAOkuC,EAAI91B,MAAMkuB,cACpDwI,EAAgB,IAAIxC,EAAMjmB,SAASsoB,EAAaE,GAAc,GAAM,GACjEC,EAAcnmB,KAAKgM,aAAahM,IACrCoG,EAAQpsB,KAAKmsC,GAEbD,GADAF,EAAcA,EAAYvrC,IAAI8qC,EAAIluC,MAAOkuC,EAAI91B,OAClBhV,IAAI8qC,EAAIluC,MAAOkuC,EAAI91B,MAAMkuB,cACpDwI,EAAgB,IAAIxC,EAAMjmB,SAASsoB,EAAaE,GAAc,GAAM,GAGtE,OAAO9f,GAGT+e,EAAAA,UAAAA,oBAAAA,SAAoB9tC,EAAYoY,GAI9B,IADA,IAAI22B,GAAiB,EACD,QAAMruC,YAAYkzB,OAAlBjG,EAAAA,EAAAA,OAAAA,IAA0B,CAAzC,IAAM5J,EAAK,KACVgrB,IACF/uC,EAAM+jB,GAAS,MAEbA,IAAU3L,IAEZ22B,GAAiB,GAGrB,OAAO/uC,GAGT8tC,EAAAA,UAAAA,uBAAAA,SAAuBvB,EAAe2B,GAEpC,IAAIc,EACE91B,GAAM,kBAAaqzB,EAAS9jB,IAAIrQ,KAAM81B,EAAI91B,MAG9C42B,EAFS,MAAP91B,GAAeA,EAAM,EAERg1B,EAAI91B,KAEJm0B,EAAS9jB,IAAIrQ,KAE9B,IAAM62B,GAAY,iBAAY1C,EAAS9jB,IAAIzoB,MAAOusC,EAAS9jB,IAAIrQ,KAAM42B,GAC/DE,GAAa,iBAAY3C,EAAS5jB,KAAK3oB,MAAOusC,EAAS5jB,KAAKvQ,KAAM42B,GAClEG,GAAY,iBAAYjB,EAAIluC,MAAOkuC,EAAI91B,KAAM42B,GAGnD,GAAmB,MAAbC,GAAmC,MAAdC,GAAmC,MAAbC,EAC/C,OAAO,KAWT,IARA,IAAMpgB,EAAU,KAAKqgB,wBACnBH,EACAC,EACA3C,EAAS3jB,UACT2jB,EAAS1jB,WACTsmB,GAGiB,QAAAxhB,EAAAA,EAAAA,OAAAA,IAAS,CAAvB,IAAMwgB,EAAI,KACbA,EAAK1lB,IAAM,IAAI4V,EAAAA,SAAS8P,EAAK1lB,IAAKumB,GAClCb,EAAKxlB,KAAO,IAAI0V,EAAAA,SAAS8P,EAAKxlB,KAAMqmB,GAEtC,OAAOjgB,GAGT+e,EAAAA,UAAAA,sBAAAA,SAAsBvB,EAAe2B,GACnC,MAAiB,MAAbA,EAAI91B,MAA6B,KAAb81B,EAAI91B,KACnB,KAEF,KAAKg3B,wBACV7C,EAAS9jB,IACT8jB,EAAS5jB,KACT4jB,EAAS3jB,UACT2jB,EAAS1jB,WACTqlB,EAAIluC,QAIR8tC,EAAAA,UAAAA,wBAAAA,SACErlB,EACAE,EACAC,EACAC,EACAwmB,GAIA,IAAMC,EAAeD,EAAS7uC,WAAW8hB,SAAS,KAC5CitB,EAAmBD,EAAe,EAAI,EAW5C,GATA7mB,EAAMG,EAAYH,GAAM,eAAUA,GAClCE,EAAOE,EAAaF,GAAO,iBAAYA,IAKvCF,EAAM+mB,EAAgB/mB,EAAK8mB,KAC3B5mB,EAAO6mB,EAAgB7mB,EAAM4mB,IAG3B,MAAO,GAET,GAAW,MAAP9mB,GAAuB,MAARE,EACjB,MAAO,GAGT,IAAM8mB,EAAcH,EAAe,KAAa,EAG9C7mB,IAAQE,GACR7T,OAAO/S,UAAU0mB,IACjB3T,OAAO/S,UAAU4mB,KAChB7T,OAAO/S,UAAUstC,KAElB1mB,EAAO3iB,YAAY2iB,EAAO,GAAG+mB,QAAQH,KAGvC,IAAIZ,EAAclmB,EACZsG,EAAU,GAEhB,GAAIsgB,EAAW1mB,EAAOF,EAAMgnB,EAC1B,MAAO,GAIT,IAFA,IAAIZ,EAAe7oC,YAAY2oC,EAAcU,EAAWI,GAAaC,QAAQH,IACzET,EAAgB,IAAIxC,EAAMjmB,SAASsoB,EAAaE,GAAc,GAAM,GACjEC,EAAcnmB,MAAQA,GAC3BoG,EAAQpsB,KAAKmsC,GACbH,EAAc3oC,YAAY2oC,EAAcU,GAAUK,QAAQH,IAC1DV,EAAe7oC,YAAY2oC,EAAcU,EAAWI,GAAaC,QAAQH,IACzET,EAAgB,IAAIxC,EAAMjmB,SAASsoB,EAAaE,GAAc,GAAM,GAGtE,OAAO9f,GAEX,EAzOA,CAA4BkB,EAAAA,YAAfpyB,EAAAA,OAAAA,EA2Ob,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAQf,OAV8B0M,EAAAA,EAAAA,GAK5BkgB,EAAAA,UAAAA,KAAAA,SAAKlP,GAEG,MAAwB,KAAK+C,SAAS/C,GAC5C,OAAO4N,EADS,KAAU,OAG9B,EAVA,CAA8Bpe,EAAAA,YAY9B,SAASoe,EAAkBJ,EAAgB2B,GAGzC,IADA,IAAMC,EAAiB,GACA,QAAAliB,EAAAA,EAAAA,OAAAA,IAAW,CAA7B,IAAM4e,EAAQ,KAED,MAAZA,GACFsD,EAAeltC,KAAK4pC,EAASvX,QAKjC,GAAiB,MAAbiZ,EACF,OAAO,KACF,GAAI4B,EAAe7xC,QAAU,EAClC,OAAO6xC,EAKS,MAAZD,IACFA,EAAWC,EAAe,GAAGtR,gBAI/BsR,EAAevoC,MAAK,SAAUsC,EAAG0T,GAC/B,GAAI1T,EAAE6e,KAA+B,oBAAjB7e,EAAE6e,IAAIoM,OAAuB,CAC/C,GAAa,MAATvX,EAAEmL,KAAe7e,EAAE6e,IAAIoM,OAAOvX,EAAEmL,KAClC,OAAQ,EAEV,GAAa,MAATnL,EAAEmL,KAAe7e,EAAE6e,IAAIqM,MAAMxX,EAAEmL,KACjC,OAAO,OAEJ,GAAa,MAAT7e,EAAE6e,KAAwB,MAATnL,EAAEmL,IAAa,CACzC,GAAI7e,EAAE6e,IAAMnL,EAAEmL,IACZ,OAAQ,EAEV,GAAI7e,EAAE6e,IAAMnL,EAAEmL,IACZ,OAAO,MAEJ,IAAa,MAAT7e,EAAE6e,KAAwB,MAATnL,EAAEmL,IAC5B,OAAO,EACF,GAAa,MAAT7e,EAAE6e,KAAwB,MAATnL,EAAEmL,IAC5B,OAAQ,EAGV,GAAI7e,EAAE+e,MAAiC,oBAAlB/e,EAAE+e,KAAKkM,OAAuB,CACjD,GAAc,MAAVvX,EAAEqL,MAAgB/e,EAAE+e,KAAKkM,OAAOvX,EAAEqL,MACpC,OAAQ,EAEV,GAAI/e,EAAE+e,KAAKmM,MAAMxX,EAAEqL,MACjB,OAAO,OAEJ,GAAc,MAAV/e,EAAE+e,MAA0B,MAAVrL,EAAEqL,KAAc,CAC3C,GAAI/e,EAAE+e,KAAOrL,EAAEqL,KACb,OAAQ,EAEV,GAAI/e,EAAE+e,KAAOrL,EAAEqL,KACb,OAAO,MAEJ,IAAc,MAAV/e,EAAE+e,MAA0B,MAAVrL,EAAEqL,KAC7B,OAAQ,EACH,GAAc,MAAV/e,EAAE+e,MAA0B,MAAVrL,EAAEqL,KAC7B,OAAO,EAET,OAAO,KAQT,IAJA,IAAMmnB,EAAqB,GACvBlmC,EAAIimC,EAAe/f,QACnBxS,EAAIuyB,EAAe/f,QAEhBxS,GACDA,EAAEmL,KAAwC,oBAA1BnL,EAAEmL,IAAI8R,iBAEV,MAAV3wB,EAAE+e,KAAe/e,EAAE+e,KAAKiM,YAAYtX,EAAEmL,UAAOrmB,IAEjC,MAAVkb,EAAEqL,MAAgBrL,EAAEqL,KAAKmM,MAAMlrB,EAAE+e,SACnC/e,EAAE+e,KAAOrL,EAAEqL,OAGF,MAAV/e,EAAE+e,KAAe/e,EAAE+e,KAAK4R,gBAAgBjd,EAAEmL,IAAKmnB,EAASx3B,MAAMuQ,UAAOvmB,IACtEwtC,EAAS5vC,MAET4J,EAAE+e,KAAOrL,EAAEqL,MAEXmnB,EAAmBntC,KAAKiH,GACxBA,EAAI0T,GAEGA,EAAEmL,KAAqC,oBAAvBnL,EAAEmL,IAAIkM,aACjB,MAAV/qB,EAAE+e,MAAgBrL,EAAEmL,IAAIkM,cAAa,gBAAW/qB,EAAE+e,KAAMinB,KAC5C,MAAVtyB,EAAEqL,MAAgBrL,EAAEqL,KAAKmM,MAAMlrB,EAAE+e,SACnC/e,EAAE+e,KAAOrL,EAAEqL,OAGbmnB,EAAmBntC,KAAKiH,GACxBA,EAAI0T,GAGFA,EAAEmL,IAAM7e,EAAE+e,MAAQinB,EAAS5vC,OACzBsd,EAAEqL,KAAO/e,EAAE+e,MAAkB,MAAVrL,EAAEqL,QACvB/e,EAAE+e,KAAOrL,EAAEqL,OAGbmnB,EAAmBntC,KAAKiH,GACxBA,EAAI0T,GAGRA,EAAIuyB,EAAe/f,QAGrB,OADAggB,EAAmBntC,KAAKiH,GACjBkmC,EAIX,SAASN,EAAgBO,EAAcC,GAGrC,IAAMC,EAAK,IAAIh3B,OAAO,qBAAuB+2B,IAAkB,GAAK,OACpE,OAAOhqC,WAAW+pC,EAAQvvC,WAAW2P,MAAM8/B,GAAI,IAnIpCpyC,EAAAA,SAAAA,uGC5nBb,cAUA,aAYE,WAAYklB,EAAWmtB,GACrB,KAAK3P,OAASxd,EAEd,IAAMotB,EAAaptB,EAAKglB,QAAQqI,QAAUrtB,EAAKglB,QAAQqI,OAAOC,KAAQ,GACtE,KAAKD,OAASD,EACX/nB,QAAO,SAACpd,GAAW,MAAsB,WAAtB,EAAEslC,mBACrB9rC,KAAI,SAACwG,GACJ,MAAO,CAAErK,KAAMqK,EAAEslC,gBAAiB3tB,QAAS3X,EAAE2X,YAGjD,IAAM4tB,EAAaxtB,EAAKglB,QAAQyI,YAAcztB,EAAKglB,QAAQyI,WAAWH,KAAQ,GAC9E,KAAKG,WAAa,GAClB,IAAoB,YAAA7iB,EAAAA,EAAAA,OAAAA,IAAW,CAA1B,IAAM8iB,EAAK,KACd,KAAKD,WAAWC,EAAM9vC,MAAQ,IAAI+vC,EAAAA,aAAaD,GAGjD,IAAME,EAAU5tB,EAAKglB,QAAQ6I,aAAe7tB,EAAKglB,QAAQ6I,YAAYP,KAAQ,GAC7E,KAAKQ,YAAc,GACnB,IAAyB,YAAAvb,EAAAA,EAAAA,OAAAA,IAAQ,CAA5B,IAAMwb,EAAU,KACnB,KAAKD,YAAYC,EAAWnwC,MAAQ,IAAI+vC,EAAAA,cAAcI,GAGxD,IAAMC,EAAUhuB,EAAKglB,QAAQnZ,WAAa7L,EAAKglB,QAAQnZ,UAAUyhB,KAAQ,GACzE,KAAKW,UAAY,GACjB,IAAuB,YAAA7X,EAAAA,EAAAA,OAAAA,IAAQ,CAA1B,IAAM2N,EAAQ,KACjB,KAAKkK,UAAUlK,EAASnmC,MAAQ,IAAI+vC,EAAAA,YAAY5J,GAGlD,IAAMmK,EAAYluB,EAAKglB,QAAQ3qB,OAAS2F,EAAKglB,QAAQ3qB,MAAMizB,KAAQ,GACnE,KAAKjzB,MAAQ,GACb,IAAmB,YAAAgc,EAAAA,EAAAA,OAAAA,IAAU,CAAxB,IAAM1xB,EAAI,KACb,KAAK0V,MAAM1V,EAAK/G,MAAQ,IAAI+vC,EAAAA,QAAQhpC,GAGtC,IAAMwpC,EAAenuB,EAAKglB,QAAQoJ,UAAYpuB,EAAKglB,QAAQoJ,SAASd,KAAQ,GAC5E,KAAKc,SAAW,GAChB,IAAsB,YAAA9X,EAAAA,EAAAA,OAAAA,IAAa,CAA9B,IAAM+X,EAAO,KAChB,KAAKD,SAASC,EAAQzwC,MAAQ,IAAI+vC,EAAAA,WAAWU,GAG/C,IAAMC,EAAYtuB,EAAKglB,QAAQuJ,YAAcvuB,EAAKglB,QAAQuJ,WAAWjB,KAAQ,GAC7E,KAAKkB,YAAc,GACnB,KAAKC,UAAY,GACjB,IAAmB,YAAA7wB,EAAAA,EAAAA,OAAAA,IAAU,CAAxB,IAAM8wB,EAAI,KACK,gBAAdA,EAAK/qB,MACF,KAAK8qB,UAAUC,EAAK9wC,QACvB,KAAK6wC,UAAUC,EAAK9wC,MAAQ,IAE9B,KAAK6wC,UAAUC,EAAK9wC,MAAMgC,KAAK,IAAI+tC,EAAAA,YAAYe,KAE/C,KAAKF,YAAYE,EAAK9wC,MAAQ,IAAI+vC,EAAAA,cAAce,GAIpD,IAAMC,EAAY3uB,EAAKglB,QAAQzlB,UAAYS,EAAKglB,QAAQzlB,SAAS+tB,KAAQ,GACzE,KAAK/tB,SAAW,GAChB,IAAmB,YAAAgX,EAAAA,EAAAA,OAAAA,IAAU,CAAxB,IAAMqY,EAAI,KACTzB,IACF,KAAK5tB,SAASqvB,EAAKrB,iBAAmBJ,EAAe0B,QAAQD,EAAKE,KAAMF,EAAKhvB,UAKjF,IAAK,IAAMmvB,KAAa,KAAKxvB,SAC3B,GAAI,KAAKA,SAASwvB,IAAc,KAAKxvB,SAASwvB,GAAWjB,YACvD,IAAK,IAAMkB,KAAc,KAAKzvB,SAASwvB,GAAWjB,YAChD,KAAKA,YAAYkB,GAAc,KAAKzvB,SAASwvB,GAAWjB,YAAYkB,GAwC9E,OAlCEthB,EAAAA,UAAAA,YAAAA,SAAYzF,GACV,OAAO,KAAKwmB,UAAUxmB,IAGxByF,EAAAA,UAAAA,IAAAA,SAAIzF,GACF,OACE,KAAKumB,YAAYvmB,IAAe,KAAK1I,SAAS0I,IAAe,KAAKgnB,YAAYhnB,IAIlFyF,EAAAA,UAAAA,YAAAA,SAAYzF,EAAoBmc,GAC9B,OAAkC,MAA9B,KAAK6J,UAAUhmB,GACV,KAAKgmB,UAAUhmB,GAEa,MAA9B,KAAK1I,SAAS6kB,GACjB,KAAK7kB,SAAS6kB,GAAa6J,UAAUhmB,QACrC5oB,GAGNquB,EAAAA,UAAAA,cAAAA,SAAczF,GACZ,OAAO,KAAK6lB,YAAY7lB,IAG1ByF,EAAAA,UAAAA,QAAAA,SAAQzF,GACN,OAAO,KAAK5N,MAAM4N,IAGpByF,EAAAA,UAAAA,WAAAA,SAAWzF,GACT,OAAO,KAAKmmB,SAASnmB,IAGvByF,EAAAA,UAAAA,aAAAA,SAAa9vB,GACX,OAAO,KAAK6vC,WAAW7vC,IAE3B,EAtHA,GAAa9C,EAAAA,QAAAA,syBCXb,cACA,SACA,UACA,UAGA,cAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKM,UAAW,WAAMT,EAAKqB,UAAY,KAU3C,OAf0BqL,EAAAA,EAAAA,GAQxBxwB,OAAAA,eAAIgzC,EAAAA,UAAA,SAAM,KAAV,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,SAAKxR,GACH,OAAO,KAAKjd,SAAShf,KAAI,YAAQ,SAAKm8B,QAAQF,OAElD,EAfA,CAA0BxQ,EAAAA,YAAbpyB,EAAAA,KAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb4B0M,EAAAA,EAAAA,GAK1ByiB,EAAAA,UAAAA,KAAAA,SAAKzR,GACH,IAAM1O,EAAO,KAAKyR,SAAS/C,GAE3B,QAAI1O,GACKA,EAAKvL,MAAK,SAACphB,GAAc,OAAQ,MAAR,MAItC,EAbA,CAA4B6qB,EAAAA,YAAfpyB,EAAAA,OAAAA,EAoBbA,EAAAA,QAAA,SAAwB+L,EAAQ0T,GAE9B,OAAO60B,EADUC,EAAWxoC,EAAE1E,OAAOoY,MAKvCzf,EAAAA,SAAA,SAAyB+L,EAAQ0T,GAG/B,OADgB60B,EADCC,EAAWxoC,IAEbwe,QAAO,YAAQ,OAACiqB,EAAW/0B,EAAGlY,GAAM,OAIrDvH,EAAAA,YAAA,SAA4B+L,EAAQ0T,GAGlC,OADgB60B,EADCC,EAAWxoC,IAEbwe,QAAO,YAAQ,SAAW9K,EAAGlY,GAAM,OAIpD,8EAAoD,OAAzBqqB,EAAAA,EAAAA,GAAyB,EAApD,CAA2BQ,EAAAA,yBAAdpyB,EAAAA,MAAAA,EAGb,8EAAqD,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAArD,CAA4BQ,EAAAA,yBAAfpyB,EAAAA,OAAAA,EAEb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAfmC0M,EAAAA,EAAAA,GAKjC6iB,EAAAA,UAAAA,KAAAA,SAAK7R,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,GAAeA,EAAI94B,OAAS,EAC9B,MAAM,IAAImE,MAAM,gEACX,OAAW,MAAP20B,GAA8B,IAAfA,EAAI94B,OACrB84B,EAAI,GAEJ,MAGb,EAfA,CAAmC7G,EAAAA,YAAtBpyB,EAAAA,cAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb4B0M,EAAAA,EAAAA,GAK1B8iB,EAAAA,UAAAA,KAAAA,SAAK9R,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,CAACA,GAED,IAGb,EAbA,CAA4B7G,EAAAA,YAAfpyB,EAAAA,OAAAA,EAeb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKqd,QAAS,WAAMxd,EAAKwd,QACzBrd,EAAKkB,SAAU,WAAMrB,EAAKqB,WAuB9B,OA9B6BqL,EAAAA,EAAAA,GAU3B+iB,EAAAA,UAAAA,KAAAA,SAAK/R,GACH,IAAIgS,EACEC,EAAM,KAAKnS,OAAOI,QAAQF,GAC1BrU,EAAK,KAAKhI,QAAQuc,QAAQF,GAChC,GAAW,MAAPiS,GAAqB,MAANtmB,EACjB,OAAO,KAET,IAAK,IAAInuB,EAAI,EAAGA,EAAIy0C,EAAI10C,OAAQC,IAAK,CACnC,IAAM00C,EAAMD,EAAIz0C,GAChB,IAAI,YAAO00C,EAAKvmB,GAAK,CACnBqmB,EAAQx0C,EACR,OAGJ,OAAa,MAATw0C,EACKA,GAEC,GAGd,EA9BA,CAA6BxiB,EAAAA,YAmC7B,SAAgBoiB,EAAWO,EAAkBxtC,EAAWytC,GACtD,YADsD,QAAAA,GAAAA,GAC/CD,EAAUpsB,MACf,SAACpC,GAAiB,mBAAOA,EAAShf,IAAUytC,GAA8B,MAAXzuB,GAA2B,MAARhf,KAKtF,SAAgB0tC,EAAW/gB,EAAWghB,GACpC,OAAOA,EAAQlf,OAAM,SAAC5rB,GAAW,SAAW8pB,EAAM9pB,MA3CvCpK,EAAAA,QAAAA,EAmCbA,EAAAA,WAAAA,EAOAA,EAAAA,WAAAA,EAKAA,EAAAA,iBAAA,SAAiCk0B,EAAWghB,GAC1C,OAAOhhB,EAAK/zB,OAAS+0C,EAAQ/0C,QAAU80C,EAAW/gB,EAAMghB,IAI1D,8EAAsD,OAAzBtjB,EAAAA,EAAAA,GAAyB,EAAtD,CAA6BQ,EAAAA,yBAAhBpyB,EAAAA,QAAAA,EAEb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb6B0M,EAAAA,EAAAA,GAK3BujB,EAAAA,UAAAA,KAAAA,SAAKvS,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAI,iBAAY3J,IAASA,EAAcjD,OAAM,YAAK,wBAAY5rB,MACpD6uB,EAAc/xB,QAAO,SAACkD,EAAGwyB,GAAM,SAAEv1B,OAAOu1B,KAAI,IAE7C3D,GAGb,EAbA,CAA6B7G,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAUf,OAZ8B0M,EAAAA,EAAAA,GAK5BwjB,EAAAA,UAAAA,KAAAA,SAAKxS,GACH,IAAMj7B,EAAS,KAAKg+B,SAAS/C,GAC7B,OAAc,MAAVj7B,EACK,KAEF4sC,EAAW5sC,IAEtB,EAZA,CAA8ByqB,EAAAA,YAc9B,SAASmiB,EAAWrgB,GAClB,IAAMmhB,EAAkB,GAOxB,OANAnhB,EAAKxsB,SAAQ,YACG2tC,EAASrf,OAAM,YAAY,QAAC,YAAOzuB,EAAM+tC,OAErDD,EAASvwC,KAAKyC,MAGX+sC,EAAqBe,GAG9B,SAASf,EAAqBpgB,GAI5B,IAFA,IAAIqhB,GAAiB,EACfC,EAAU,GACG,QAAA1lB,EAAAA,EAAAA,OAAAA,IAAM,CAApB,IAAMvoB,EAAI,KACA,OAATA,EACFiuC,EAAQ1wC,KAAKyC,GACK,OAATA,GAAkBguC,IAC3BC,EAAQ1wC,KAAKyC,GACbguC,GAAiB,GAGrB,OAAOC,EArCIx1C,EAAAA,SAAAA,EAyCb,8EAAsD,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAAtD,CAA6BQ,EAAAA,yBAAhBpyB,EAAAA,QAAAA,EAEb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKqd,QAAS,WAAMxd,EAAKwd,UAW7B,OAhB2B9Q,EAAAA,EAAAA,GAQzB6jB,EAAAA,UAAAA,KAAAA,SAAK7S,GACH,IAAMiS,EAAM,KAAKnS,OAAOvS,KAAKyS,GAC7B,OAAW,MAAPiS,IAAe,iBAAYA,IAAQA,EAAI10C,OAAS,EAC3C00C,EAAI,GAEJ,MAGb,EAhBA,CAA2BziB,EAAAA,YAAdpyB,EAAAA,MAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKqd,QAAS,WAAMxd,EAAKwd,UAW7B,OAhB0B9Q,EAAAA,EAAAA,GAQxB8jB,EAAAA,UAAAA,KAAAA,SAAK9S,GACH,IAAMiS,EAAM,KAAKnS,OAAOvS,KAAKyS,GAC7B,OAAW,MAAPiS,IAAe,iBAAYA,IAAQA,EAAI10C,OAAS,EAC3C00C,EAAIA,EAAI10C,OAAS,GAEjB,MAGb,EAhBA,CAA0BiyB,EAAAA,YAAbpyB,EAAAA,KAAAA,EAkBb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKqd,QAAS,WAAMxd,EAAKwd,QACzBrd,EAAKswB,YAAa,WAAMzwB,EAAKywB,YAC7BtwB,EAAKuwB,UAAW,WAAM1wB,EAAK0wB,YAiB/B,OA1B2BhkB,EAAAA,EAAAA,GAYzBikB,EAAAA,UAAAA,KAAAA,SAAKjT,GACH,IAAMiS,EAAM,KAAKnS,OAAOvS,KAAKyS,GAC7B,GAAW,MAAPiS,IAAe,iBAAYA,GAAM,CACnC,IAAMc,EAAa,KAAKA,WAAWxlB,KAAKyS,GAClCgT,EAAW,KAAKA,SAASzlB,KAAKyS,GAC9BjD,EAAsB,MAAdgW,EAAqBA,EAAa,EAC1C/V,EAAkB,MAAZgW,EAAmBA,EAAWf,EAAI10C,OAC9C,OAAmB,IAAf00C,EAAI10C,QAAgBw/B,EAAQ,GAAKC,EAAM,GAAKA,EAAMD,EAC7C,GAEFkV,EAAI7yC,MAAM29B,EAAOC,GAE1B,OAAO,MAEX,EA1BA,CAA2BxN,EAAAA,YAAdpyB,EAAAA,MAAAA,+pBCvPb,IAEA,cAmBE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK+hB,UAAYliB,EAAKkiB,UACtB/hB,EAAKljB,MAAQ+iB,EAAK/iB,QAMtB,OA5B6ByvB,EAAAA,EAAAA,GAIpBkX,EAAAA,KAAP,SAAY5jB,GACV,OAAQA,EAAKkiB,WACX,IAAK,oCACH,OAAO,IAAI0O,EAAe5wB,GAC5B,IAAK,oCACH,OAAO,IAAI6wB,EAAe7wB,GAC5B,IAAK,oCACH,OAAO,IAAI8wB,EAAe9wB,GAC5B,IAAK,mCACH,OAAO,IAAI+wB,EAAc/wB,GAC3B,QACE,OAAO,IAAI4jB,EAAQ5jB,KAUzB4jB,EAAAA,UAAAA,KAAAA,SAAKe,GACH,OAAO,KAAK1nC,OAEhB,EA5BA,CAFA,QAE6BiwB,YAAhBpyB,EAAAA,QAAAA,EAgCb,kBACE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKljB,MAAuB,SAAfkjB,EAAKljB,QAYtB,OAfoCyvB,EAAAA,EAAAA,GAQlCxwB,OAAAA,eAAI00C,EAAAA,UAAA,mBAAgB,KAApB,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,SAAKjM,GACH,OAAO,KAAK1nC,OAEhB,EAfA,CAAoC2mC,GAAvB9oC,EAAAA,eAAAA,EAiBb,kBACE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKljB,MAAQ4S,SAASsQ,EAAKljB,MAAO,MAYtC,OAfoCyvB,EAAAA,EAAAA,GAQlCxwB,OAAAA,eAAI20C,EAAAA,UAAA,mBAAgB,KAApB,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,SAAKlM,GACH,OAAO,KAAK1nC,OAEhB,EAfA,CAAoC2mC,GAAvB9oC,EAAAA,eAAAA,EAiBb,kBACE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKljB,MAAQgG,WAAWkd,EAAKljB,SAYjC,OAfoCyvB,EAAAA,EAAAA,GAQlCxwB,OAAAA,eAAI40C,EAAAA,UAAA,mBAAgB,KAApB,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,SAAKnM,GACH,OAAO,KAAK1nC,OAEhB,EAfA,CAAoC2mC,GAAvB9oC,EAAAA,eAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAfmC0M,EAAAA,EAAAA,GAOjCxwB,OAAAA,eAAI60C,EAAAA,UAAA,kBAAe,KAAnB,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,SAAKpM,GAEH,OAAO,KAAK1nC,MAAM+R,QAAQ,OAAQ,KAAKA,QAAQ,OAAQ,MAE3D,EAfA,CAAmC40B,GAAtB9oC,EAAAA,cAAAA,4nBCtFb,cACA,UAGA,cACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OARyB0M,EAAAA,EAAAA,GAKvBskB,EAAAA,UAAAA,KAAAA,SAAKtT,GACH,OAAO5R,EAAAA,iBAAiBmN,IAAGh3B,MAApB,mBAAwB,KAAKw+B,SAAS/C,KAEjD,EARA,CAAyBxQ,EAAAA,YAAZpyB,EAAAA,IAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OARwB0M,EAAAA,EAAAA,GAKtBukB,EAAAA,UAAAA,KAAAA,SAAKvT,GACH,OAAO5R,EAAAA,iBAAiB6O,GAAE14B,MAAnB,mBAAuB,KAAKw+B,SAAS/C,KAEhD,EARA,CAAwBxQ,EAAAA,YAAXpyB,EAAAA,GAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OARyB0M,EAAAA,EAAAA,GAKvBwkB,EAAAA,UAAAA,KAAAA,SAAKxT,GACH,OAAO5R,EAAAA,iBAAiBoN,IAAI,KAAKuH,SAAS/C,KAE9C,EARA,CAAyBxQ,EAAAA,YAAZpyB,EAAAA,IAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OARyB0M,EAAAA,EAAAA,GAKvBykB,EAAAA,UAAAA,KAAAA,SAAKzT,GACH,OAAO5R,EAAAA,iBAAiBslB,IAAGnvC,MAApB,mBAAwB,KAAKw+B,SAAS/C,KAEjD,EARA,CAAyBxQ,EAAAA,YAAZpyB,EAAAA,IAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OAR4B0M,EAAAA,EAAAA,GAK1B2kB,EAAAA,UAAAA,KAAAA,SAAK3T,GACH,OAAO,IAAS,KAAK+C,SAAS/C,IAElC,EARA,CAA4BxQ,EAAAA,YAAfpyB,EAAAA,OAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OAR6B0M,EAAAA,EAAAA,GAK3B4kB,EAAAA,UAAAA,KAAAA,SAAK5T,GACH,OAAO,IAAU,KAAK+C,SAAS/C,IAEnC,EARA,CAA6BxQ,EAAAA,YAAhBpyB,EAAAA,QAAAA,4lBCrDb,cACA,SAEA,cAOE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKqd,QAAS,WAAMxd,EAAKwd,QACzBrd,EAAKgmB,WAAY,WAAMnmB,EAAKmmB,WAC5BhmB,EAAKxb,MAAO,WAAMqb,EAAKrb,MACvBwb,EAAKoxB,UAAW,WAAMvxB,EAAKuxB,UAC3BpxB,EAAKhW,SAAU,WAAM6V,EAAK7V,WAiB9B,OA9B6BuiB,EAAAA,EAAAA,GAgB3B8kB,EAAAA,UAAAA,KAAAA,SAAK9T,GACH,IAAMF,EAAS,KAAKA,OAAOI,QAAQF,GAEnC,GADkB,KAAKyI,UAAUvI,QAAQF,GAC1B,CACb,IAAM/4B,EAAO,KAAKA,KAAKi5B,QAAQF,GACzB6T,EAAW,KAAKA,SAAS3T,QAAQF,GACjCvzB,EAAU,KAAKA,QAAQyzB,QAAQF,GAC/B+T,EAAW/T,EAAIgU,qBACjBD,GAA0C,oBAAvBA,EAASE,WAC9BF,EAASE,UAAUnU,EAAQ74B,EAAM4sC,EAAUpnC,GAG/C,OAAOqzB,GAEX,EA9BA,CAA6BtQ,EAAAA,YAAhBpyB,EAAAA,QAAAA,6mBCHb,cAEA,cACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OAR0B0M,EAAAA,EAAAA,GAKxBklB,EAAAA,UAAAA,KAAAA,SAAKjN,GACH,OAAO,MAEX,EARA,CAA0BzX,EAAAA,YAAbpyB,EAAAA,KAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAMf,OAR4B0M,EAAAA,EAAAA,GAK1BmlB,EAAAA,UAAAA,KAAAA,SAAKnU,GACH,OAA6B,MAAtB,KAAK+C,SAAS/C,IAEzB,EARA,CAA4BxQ,EAAAA,YAAfpyB,EAAAA,OAAAA,EAUb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAsBf,OAxB8B0M,EAAAA,EAAAA,GAK5BolB,EAAAA,UAAAA,KAAAA,SAAKpU,GACH,GAAI,KAAK5J,KACP,IAAkB,eAAKA,KAALlJ,EAAAA,EAAAA,OAAAA,IAAW,CAAxB,IACGnoB,EADM,KACOm7B,QAAQF,GAE3B,GAAyB,IAArB,KAAK5J,KAAK74B,QAAgBG,MAAMG,QAAQkH,GAAS,CACnD,IAAMJ,EAAOI,EAAOqf,MAAK,YAAQ,OAAQ,MAAR,KACjC,GAAY,MAARzf,EACF,OAAOA,OAGT,GAAc,MAAVI,EACF,OAAOA,EAKf,OAAO,MAEX,EAxBA,CAA8ByqB,EAAAA,YAAjBpyB,EAAAA,SAAAA,00CCtBb,cACA,UACA,UACA,UACA,UACA,aACA,aACA,aAGA,cACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb2B0M,EAAAA,EAAAA,GAKzBqlB,EAAAA,UAAAA,KAAAA,SAAKrU,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,OAAe,MAAX5J,EAAK,IAAyB,MAAXA,EAAK,GACnB,KAGFke,EAAAA,OAAM/vC,WAAA,EAAI6xB,IAErB,EAbA,CAA2B5G,EAAAA,YAAdpyB,EAAAA,MAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAfgC0M,EAAAA,EAAAA,GAK9BulB,EAAAA,UAAAA,KAAAA,SAAKvU,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,GAED,MAAL1T,GAAkB,MAAL0T,IAGf,gBAAW1T,EAAG0T,IAG3B,EAfA,CAAgC2S,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb8B0M,EAAAA,EAAAA,GAK5BwlB,EAAAA,UAAAA,KAAAA,SAAKxU,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,OAAe,MAAX5J,EAAK,IAAyB,MAAXA,EAAK,GACnB,KAGFkF,EAAAA,iBAAiBE,IAAI8Y,EAAAA,OAAM/vC,WAAA,EAAI,KAAKw+B,SAAS/C,MAExD,EAbA,CAA8BxQ,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAyBf,OA3B2B0M,EAAAA,EAAAA,GAKzBylB,EAAAA,UAAAA,KAAAA,SAAKzU,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,GAAS,MAAL1T,GAAkB,MAAL0T,EACf,OAAO,KAAK63B,eAAiB,GAAK,KAEpC,GAAS,MAALvrC,GAAkB,MAAL0T,EAAW,CAC1B,IAAM83B,EAAUxrC,GAAK0T,EACrB,OAAI,iBAAY83B,GACPA,EAEA,KAIX,QADY,iBAAYxrC,GAAKyrC,EAAOC,GACzBC,QAAQ3rC,EAAG0T,IAGxB43B,EAAAA,UAAAA,aAAAA,iBACE,OAAgB,QAAT,OAAKre,YAAIvB,IAAAA,OAAA,EAAAA,EAAE9O,MAAK,YACrB,OAA8B,MAAvBsQ,EAAIuV,iBAAwD,sBAA7BvV,EAAIuV,gBAAgB3lB,SAGhE,EA3BA,CAA2BuJ,EAAAA,YAAdpyB,EAAAA,MAAAA,EA6Bb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAcf,OAhB4B0M,EAAAA,EAAAA,GAK1B+lB,EAAAA,UAAAA,KAAAA,SAAK/U,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,EACK,KAEA,MAAL0T,GACK,iBAAY1T,GAAKA,EAAI,OAElB,iBAAYA,GAAKyrC,EAAOC,GACzBG,SAAS7rC,EAAG0T,IAE3B,EAhBA,CAA4B2S,EAAAA,YAAfpyB,EAAAA,OAAAA,EAkBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb+B0M,EAAAA,EAAAA,GAK7BimB,EAAAA,UAAAA,KAAAA,SAAKjV,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR,OAEG,iBAAY1T,GAAKyrC,EAAOC,GACzBK,YAAY/rC,EAAG0T,IAE9B,EAbA,CAA+B2S,EAAAA,YAAlBpyB,EAAAA,UAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAf6B0M,EAAAA,EAAAA,GAK3BmmB,EAAAA,UAAAA,KAAAA,SAAKnV,GACG,MAAmB,KAAK+C,SAAS/C,GAAhCoK,EAAO,KAAE4H,EAAK,KACrB,OAAe,MAAX5H,GAA4B,MAAT4H,GAGnBA,EAAQ,GAAKA,GAAS5H,EAAQ7sC,OAFzB,KAKF6sC,EAAQ4H,IAEnB,EAfA,CAA6BxiB,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAiBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAc7E,OAnBwBqtB,EAAAA,EAAAA,GAQtBomB,EAAAA,UAAAA,KAAAA,SAAKpV,GACG,MAAoB,KAAK+C,SAAS/C,GAAjCr7B,EAAI,KAAEwtC,EAAS,KACtB,OAAY,MAARxtC,EACK,KAEQ,MAAbwtC,KAGQ,iBAAYA,GAAayC,EAAOC,GACjCjD,WAAWO,EAAWxtC,EAAM,KAAKgvB,YAEhD,EAnBA,CAAwBnE,EAAAA,YAAXpyB,EAAAA,GAAAA,EAqBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAc7E,OAnB8BqtB,EAAAA,EAAAA,GAQ5BqmB,EAAAA,UAAAA,KAAAA,SAAKrV,GACG,MAAoB,KAAK+C,SAAS/C,GAAjCmS,EAAS,KAAExtC,EAAI,KACtB,OAAiB,MAAbwtC,IAGQ,MAARxtC,EACK,OAEG,iBAAYwtC,GAAayC,EAAOC,GACjCjD,WAAWO,EAAWxtC,EAAM,KAAKgvB,aAEhD,EAnBA,CAA8BnE,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAqBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhB8BqtB,EAAAA,EAAAA,GAQ5BsmB,EAAAA,UAAAA,KAAAA,SAAKtV,GACG,MAAyB,KAAK+C,SAAS/C,GAAtCmS,EAAS,KAAEoD,EAAS,KAC3B,OAAiB,MAAbpD,GAAkC,MAAboD,EAChB,OAEG,iBAAYpD,GAAayC,EAAOC,GACjCxC,WAAWF,EAAWoD,EAAW,KAAK5hB,YAErD,EAhBA,CAA8BnE,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhBgCqtB,EAAAA,EAAAA,GAQ9BwmB,EAAAA,UAAAA,KAAAA,SAAKxV,GACG,MAAyB,KAAK+C,SAAS/C,GAAtCuV,EAAS,KAAEpD,EAAS,KAC3B,OAAiB,MAAbA,GAAkC,MAAboD,EAChB,OAEG,iBAAYpD,GAAayC,EAAOC,GACjCxC,WAAWF,EAAWoD,EAAW,KAAK5hB,YAErD,EAhBA,CAAgCnE,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhBoCqtB,EAAAA,EAAAA,GAQlCymB,EAAAA,UAAAA,KAAAA,SAAKzV,GACG,MAAyB,KAAK+C,SAAS/C,GAAtCmS,EAAS,KAAEoD,EAAS,KAC3B,OAAiB,MAAbpD,GAAkC,MAAboD,EAChB,OAEG,iBAAYpD,GAAayC,EAAOC,GACjCa,iBAAiBvD,EAAWoD,EAAW,KAAK5hB,YAE3D,EAhBA,CAAoCnE,EAAAA,YAAvBpyB,EAAAA,eAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhBsCqtB,EAAAA,EAAAA,GAQpC2mB,EAAAA,UAAAA,KAAAA,SAAK3V,GACG,MAAyB,KAAK+C,SAAS/C,GAAtCuV,EAAS,KAAEpD,EAAS,KAC3B,OAAiB,MAAbA,GAAkC,MAAboD,EAChB,OAEG,iBAAYpD,GAAayC,EAAOC,GACjCa,iBAAiBvD,EAAWoD,EAAW,KAAK5hB,YAE3D,EAhBA,CAAsCnE,EAAAA,YAAzBpyB,EAAAA,iBAAAA,EAkBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAf4B0M,EAAAA,EAAAA,GAK1B4mB,EAAAA,UAAAA,KAAAA,SAAK5V,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACKA,EAAI94B,OACgC,sBAAlC,KAAK84B,IAAIuV,gBAAgB3lB,KAC3B,EAEA,MAGb,EAfA,CAA4BuJ,EAAAA,YAAfpyB,EAAAA,OAAAA,EAiBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhB2BqtB,EAAAA,EAAAA,GAQzB6mB,EAAAA,UAAAA,KAAAA,SAAK7V,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR,MAEG1T,aAAa2sC,EAAAA,SAAWjnB,EAAKgmB,GAC9BkB,QAAQ5sC,EAAG0T,EAAG,KAAK8W,YAElC,EAhBA,CAA2BnE,EAAAA,YAAdpyB,EAAAA,MAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAA8B,MAAlBrR,EAAKqR,UAAoBrR,EAAKqR,UAAUrrB,mBAAgB3G,IAW7E,OAhB4BqtB,EAAAA,EAAAA,GAQ1BgnB,EAAAA,UAAAA,KAAAA,SAAKhW,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR,MAEG1T,aAAa2sC,EAAAA,SAAWjnB,EAAKgmB,GAC9BoB,SAAS9sC,EAAG0T,EAAG,KAAK8W,YAEnC,EAhBA,CAA4BnE,EAAAA,YAAfpyB,EAAAA,OAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAAYrR,EAAKqR,YAW1B,OAhB4B3E,EAAAA,EAAAA,GAQ1BknB,EAAAA,UAAAA,KAAAA,SAAKlW,GACG,MAAS,KAAK+C,SAAS/C,GAAtB72B,EAAC,KAAE0T,EAAC,KACX,OAAS,MAAL1T,GAAkB,MAAL0T,EACR1T,EAAE4qB,OAAOlX,EAAqB,MAAlB,KAAK8W,UAAoB,KAAKA,UAAUrrB,mBAAgB3G,GAEpE,MAGb,EAhBA,CAA4B6tB,EAAAA,YAAfpyB,EAAAA,OAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAAYrR,EAAKqR,YAW1B,OAhBiC3E,EAAAA,EAAAA,GAQ/BmnB,EAAAA,UAAAA,KAAAA,SAAKnW,GACG,MAAW,KAAK+C,SAAS/C,GAAxBoW,EAAE,KAAEC,EAAE,KACb,OAAU,MAAND,GAAoB,MAANC,EACTD,EAAGjiB,YAAYkiB,EAAsB,MAAlB,KAAK1iB,UAAoB,KAAKA,UAAUrrB,mBAAgB3G,GAE3E,MAGb,EAhBA,CAAiC6tB,EAAAA,YAApBpyB,EAAAA,YAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKkR,UAAYrR,EAAKqR,YAW1B,OAhBkC3E,EAAAA,EAAAA,GAQhCsnB,EAAAA,UAAAA,KAAAA,SAAKtW,GACG,MAAW,KAAK+C,SAAS/C,GAAxBoW,EAAE,KAAEC,EAAE,KACb,OAAU,MAAND,GAAoB,MAANC,EACTD,EAAGliB,aAAamiB,EAAsB,MAAlB,KAAK1iB,UAAoB,KAAKA,UAAUrrB,mBAAgB3G,GAE5E,MAGb,EAhBA,CAAkC6tB,EAAAA,YAArBpyB,EAAAA,aAAAA,EAmBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAiBf,OAnB+B0M,EAAAA,EAAAA,GAK7BunB,EAAAA,UAAAA,KAAAA,SAAKvW,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EACF,OAAO,KAKT,IAAKA,EAAImgB,kBACP,MAAM,IAAI90C,MAAM,uCAGlB,OAAO20B,EAAImgB,qBAEf,EAnBA,CAA+BhnB,EAAAA,YAAlBpyB,EAAAA,UAAAA,gnBCtWb,cACA,SAEA,cAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAKg0B,SAAU,WAAMn0B,EAAKm0B,SAC1Bh0B,EAAKi0B,uBAAyBp0B,EAAKo0B,yBAgBvC,OAzBkC1nB,EAAAA,EAAAA,GAYhC2nB,EAAAA,UAAAA,KAAAA,SAAK3W,GAEH,GAAIA,QAAqCr+B,IAA9Bq+B,EAAI+P,WAAW,KAAK7vC,MAC7B,OAAO8/B,EAAI+P,WAAW,KAAK7vC,MAEtB,QAA0CyB,IAAtCq+B,EAAI4W,mBAAmB,KAAK12C,MAAqB,CAC1D,IAAM22C,EAAc7W,EAAI4W,mBAAmB,KAAK12C,MAChD,OAA8B,MAAvB22C,EAAYJ,QAAkBI,EAAYJ,QAAQvW,QAAQF,GAAO6W,EAE/C,MAAhB,KAAKJ,SACd,KAAKA,QAAQvW,QAAQF,IAG3B,EAzBA,CAAkCxQ,EAAAA,YAArBpyB,EAAAA,aAAAA,EA2Bb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAK6kB,QAAUhlB,EAAKokB,cAQxB,OAfkC1X,EAAAA,EAAAA,GAUhC8nB,EAAAA,UAAAA,KAAAA,SAAK9W,GAEH,IAAMgQ,GADNhQ,EAAM,KAAKsH,QAAUtH,EAAIyH,kBAAkB,KAAKH,SAAWtH,GACzC+W,aAAa,KAAK72C,MACpC,OAAgB,MAAT8vC,EAAgBA,EAAM9P,QAAQF,QAAOr+B,GAEhD,EAfA,CAAkC6tB,EAAAA,YAArBpyB,EAAAA,aAAAA,snCC/Bb,cACA,aAKA,cAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKljB,MAAQgG,WAAW+c,EAAK/iB,OAC7BkjB,EAAK9K,KAAO2K,EAAK3K,OAMrB,OAb8BqX,EAAAA,EAAAA,GAU5B6B,EAAAA,UAAAA,KAAAA,SAAKoW,GACH,OAAO,IAAIpY,EAAGgC,SAAS,KAAKtxB,MAAO,KAAKoY,OAE5C,EAbA,CAA8B6X,EAAAA,YAAjBpyB,EAAAA,SAAAA,+uBCNb,cACA,UACA,UACA,UACA,SAEA,EAIE,SAAYklB,GACV,KAAK00B,MAAQ10B,EAAK00B,MAClB,KAAKC,YAAa,WAAM30B,EAAK20B,aANpB75C,EAAAA,mBAAAA,EAUb,MAIE,SAAYklB,GACV,KAAKiI,WAAajI,EAAKiI,WACvB,KAAK0sB,YAAa,WAAM30B,EAAK20B,aANpB75C,EAAAA,UAAAA,EAUb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKu0B,MAAQ10B,EAAK00B,MAClBv0B,EAAKw0B,YAAa,WAAM30B,EAAK20B,YAC7Bx0B,EAAKy0B,UAAW,WAAM50B,EAAK40B,YAc/B,OAvB0BloB,EAAAA,EAAAA,GAWxBmoB,EAAAA,UAAAA,KAAAA,SAAKnX,GAAL,WACM1Y,EAAU,KAAK2vB,WAAW/W,QAAQF,GAStC,OARK,iBAAY1Y,KACfA,EAAU,CAACA,IAEGA,EAAQvjB,KAAI,SAACwZ,GAC3B,IAAM65B,EAAWpX,EAAIqX,eAErB,OADAD,EAAS9sB,IAAI7H,EAAKu0B,MAAOz5B,GAClBkF,EAAKy0B,SAAShX,QAAQkX,MAEhBrxB,MAAK,SAACve,GAAW,aAEpC,EAvBA,CAA0BgoB,EAAAA,YAAbpyB,EAAAA,KAAAA,EAyBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAKf,OAP6B0M,EAAAA,EAAAA,GAI3BsoB,EAAAA,UAAAA,KAAAA,SAAKtX,GACH,OAAQrZ,EAAAA,UAAM4G,KAAIvtB,KAAA,KAACggC,IAEvB,EAPA,CAA6BmX,GAAhB/5C,EAAAA,QAAAA,EAUb,8EAAmD,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAAnD,CAA0BQ,EAAAA,yBAAbpyB,EAAAA,KAAAA,EAEb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK80B,UAAYj1B,EAAKi1B,UACtB90B,EAAK+0B,UAA+B,QAAnB/0B,EAAK80B,WAA0C,cAAnB90B,EAAK80B,WAA6B,EAAI,EACnF90B,EAAKg1B,YAA+B,EAAlBh1B,EAAK+0B,YAoB3B,OA7BiCxoB,EAAAA,EAAAA,GAc/B0oB,EAAAA,UAAAA,KAAAA,SAAK1X,EAAc72B,EAAQ0T,GACzB,OAAI1T,IAAM0T,EACD,EACE1T,EAAEyxB,YAAc/d,EAAE+d,WACvBzxB,EAAEirB,OAAOvX,GACJ,KAAK26B,UAEL,KAAKC,WAELtuC,EAAI0T,EACN,KAAK26B,UAEL,KAAKC,YAGlB,EA7BA,CAAiCjoB,EAAAA,YAApBpyB,EAAAA,YAAAA,EA+Bb,kBAME,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKw0B,YAAa,WAAM30B,EAAK20B,YAC7Bx0B,EAAK80B,UAAYj1B,EAAKi1B,UACtB90B,EAAK+0B,UAA+B,QAAnB/0B,EAAK80B,WAA0C,cAAnB90B,EAAK80B,WAA6B,EAAI,EACnF90B,EAAKg1B,YAA+B,EAAlBh1B,EAAK+0B,YAqB3B,OAhCkCxoB,EAAAA,EAAAA,GAgBhC2oB,EAAAA,UAAAA,KAAAA,SAAK3X,EAAc72B,EAAQ0T,GACzB,IAAI+6B,EAAO5X,EAAIqX,aAAaluC,GACtB0uC,EAAQ,KAAKZ,WAAW/W,QAAQ0X,GACtCA,EAAO5X,EAAIqX,aAAax6B,GACxB,IAAMi7B,EAAQ,KAAKb,WAAW/W,QAAQ0X,GAEtC,OAAIC,IAAUC,GAAmB,MAATD,GAA0B,MAATC,EAChC,EACW,MAATD,GAA0B,MAATC,EACV,MAATD,EAAgB,KAAKL,UAAY,KAAKC,WACpCI,EAAMjd,YAAckd,EAAMld,WAC5Bid,EAAMzjB,OAAO0jB,GAAS,KAAKN,UAAY,KAAKC,WAE5CI,EAAQC,EAAQ,KAAKN,UAAY,KAAKC,YAGnD,EAhCA,CAAkCjoB,EAAAA,YAArBpyB,EAAAA,aAAAA,EAkCb,kBACE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKw0B,YAAa,WAAM,CACtB/2C,KAAMoiB,EAAK8uB,KACXnrB,KAAM,oBAGZ,OAR8B+I,EAAAA,EAAAA,GAQ9B,EARA,CAA8B2oB,GAAjBv6C,EAAAA,SAAAA,EAUb,MAIE,SAAYklB,GACV,KAAK20B,YAAa,WAAM30B,EAAK20B,YAC7B,KAAKxE,SAA4B,MAAjBnwB,EAAKmwB,UAAmBnwB,EAAKmwB,UANpCr1C,EAAAA,aAAAA,EAUb,iBAGE,WAAYklB,GACV,KAAKy1B,IAAK,WAAc,MAARz1B,EAAeA,EAAKy1B,QAAKp2C,GAkB7C,OAfEq2C,EAAAA,UAAAA,KAAAA,SAAKhY,EAAcxU,GAAnB,WACE,GAAI,KAAKusB,GACP,OAAOvsB,EAAO3kB,MAAK,SAACsC,EAAQ0T,GAE1B,IADA,IAAIo7B,EAAQ,EACO,QAAKF,GAAL7qB,EAAAA,EAAAA,OAAAA,IAAS,CAG1B,GAAc,KADd+qB,EAFa,KAEA1qB,KAAKyS,EAAK72B,EAAG0T,IAExB,MAGJ,OAAOo7B,MAIf,EAtBA,GAAa76C,EAAAA,WAAAA,EAwBb,IAUA,cAME,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK8H,WAAajI,EAAKiI,WACvB9H,EAAKw0B,YAAa,WAAM30B,EAAK20B,YAC7Bx0B,EAAKy1B,SAAW51B,EAAK41B,UAAW,WAAM51B,EAAK41B,UAAY,KACvDz1B,EAAKgwB,SAA4B,MAAjBnwB,EAAKmwB,UAAmBnwB,EAAKmwB,WAYjD,OAvB8BzjB,EAAAA,EAAAA,GAc5BmpB,EAAAA,UAAAA,UAAAA,SAAUC,EAAqBpY,GAA/B,WACMqY,EAAkC,MAAjB,KAAKH,SAAmB,KAAKA,SAAS3qB,KAAKyS,GAAO,KAMvE,OALAoY,EAAetzC,SAAQ,SAACwzC,GACtB,IAAMjB,EAAerX,EAAIqX,aAAaiB,GACtCjB,EAAa/sB,IAAI7H,EAAK8H,WAAY8tB,GAClCA,EAAiB51B,EAAKw0B,WAAW1pB,KAAK8pB,MAEjCgB,GAEX,EAvBA,CAA8B7oB,EAAAA,YAyB9B,cAUE,WAAYlN,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK81B,QAAU,IAAIC,EAAYl2B,EAAKwd,OAAO/7B,KAAI,SAACf,GAAW,WAAIy1C,EAAmBz1C,OAClFyf,EAAKi2B,WAAyB,MAAZp2B,EAAKq2B,IAAcr2B,EAAKq2B,IAAI50C,KAAI,SAAC9B,GAAW,WAAI22C,EAAU32C,MAAM,GAClFwgB,EAAKo2B,aAAoC,MAArBv2B,EAAKu2B,cAAuB,WAAMv2B,EAAKu2B,cAAgB,GAC3Ep2B,EAAKq2B,OAAQ,WAAMx2B,EAAKw2B,OACxBr2B,EAAKs2B,aAA8B,MAAfz2B,EAAK02B,OAAiB,IAAIC,EAAa32B,EAAK02B,QAAU,KAC1Ev2B,EAAKy2B,gBAAoC,MAAlB52B,EAAK62B,UAAoB,IAAIhB,EAAgB71B,EAAK62B,WAAa,KACtF12B,EAAK22B,QAAU32B,EAAK81B,QAAQa,UAC5B32B,EAAK42B,WAA0B,MAAb/2B,EAAKzb,KAAe,IAAImxC,EAAW11B,EAAKzb,MAAQ,OAuDtE,OA1E2BmoB,EAAAA,EAAAA,GAsBzBsqB,EAAAA,UAAAA,WAAAA,WACE,OAA4B,MAAxB,KAAKJ,iBAA4D,MAAjC,KAAKA,gBAAgBzG,SAChD,KAAKyG,gBAAgBzG,SACE,MAArB,KAAKsG,cAAsD,MAA9B,KAAKA,aAAatG,UACjD,KAAKsG,aAAatG,UAK7B6G,EAAAA,UAAAA,KAAAA,SAAKtZ,GAAL,WACMoY,EAAwB,GAoC5B,OAnCA,KAAKG,QAAQzzC,QAAQk7B,GAAK,SAACuZ,GACzB,IAAkB,YAAKb,WAALxrB,EAAAA,EAAAA,OAAAA,IAAiB,CAA9B,IAAM0iB,EAAG,KACZ2J,EAAKjvB,IAAIslB,EAAIrlB,WAAYqlB,EAAIqH,WAAW/W,QAAQqZ,IAGlD,IAAMC,EAAY/2B,EAAKo2B,aAAa90C,KAAI,YACtC,IAAM01C,EAAYF,EAAKlC,eACvB,OAAOqC,EAAIxZ,QAAQuZ,MAGrB,IADe,aAAQD,MAAe/2B,EAAKq2B,OAAQr2B,EAAKq2B,MAAM5Y,QAAQqZ,IAEpE,GAAyB,MAArB92B,EAAKs2B,aAAsB,CAC7B,IAAM5pC,EAAMsT,EAAKs2B,aAAa9B,WAAW/W,QAAQqZ,GACjDnB,EAAel2C,KAAKiN,QAEQ,IAAxBsT,EAAK22B,QAAQ77C,QAAwC,MAAxBklB,EAAKy2B,gBACpCd,EAAel2C,KAAKq3C,EAAKt3B,IAAIQ,EAAK22B,QAAQ,KAE1ChB,EAAel2C,KAAKq3C,EAAKI,mBAM7B,KAAKC,eACPxB,EA7FiB,SAAUyB,GAC/B,IAAMC,EAAe,GAMrB,OALAD,EAAM/0C,SAAQ,YACPg1C,EAAM/zB,MAAK,YAAK,mBAAOve,EAAGwyB,OAC7B8f,EAAM53C,KAAKsF,MAGRsyC,EAsFcC,CAAe3B,IAGN,MAAxB,KAAKc,kBACPd,EAAiB,KAAKc,gBAAgBC,UAAUf,EAAgBpY,IAG3C,MAAnB,KAAKqZ,YACP,KAAKA,WAAWxyC,KAAKm5B,EAAKoY,GAExB,KAAKG,QAAQyB,eAAyC,MAAxB,KAAKd,gBAC9Bd,EAEAA,EAAe,IAG5B,EA1EA,CAA2B5oB,EAAAA,YAAdpyB,EAAAA,MAAAA,EA4Eb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,OAMrB,OAX8B8uB,EAAAA,EAAAA,GAQ5BirB,EAAAA,UAAAA,KAAAA,SAAKja,GACH,OAAc,MAAPA,EAAcA,EAAI/d,IAAI,KAAK/hB,WAAQyB,GAE9C,EAXA,CAA8B6tB,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAab,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAEf,OAJiC0M,EAAAA,EAAAA,GAIjC,EAJA,CAAiCirB,GAApB78C,EAAAA,YAAAA,EAQb,iBAOE,WAAYm7C,GACV,KAAKA,QAAUA,EACf,KAAKvB,MAAQ,KAAKuB,QAAQ,GAAGvB,MAC7B,KAAKC,WAAa,KAAKsB,QAAQ,GAAGtB,WAClC,KAAK9xB,QAAS,EACV,KAAKozB,QAAQh7C,OAAS,IACxB,KAAKmxB,KAAO,IAAI8pB,EAAY,KAAKD,QAAQn5C,MAAM,KA8BrD,OA1BEo5C,EAAAA,UAAAA,QAAAA,WACE,IAAIrvC,EAAI,CAAC,KAAK6tC,OAId,OAHI,KAAKtoB,OACPvlB,EAAIA,EAAE1E,OAAO,KAAKiqB,KAAK0qB,YAElBjwC,GAGTqvC,EAAAA,UAAAA,YAAAA,WACE,OAAO,KAAKrzB,QAAW,KAAKuJ,MAAQ,KAAKA,KAAKsrB,eAGhDxB,EAAAA,UAAAA,QAAAA,SAAQxY,EAAc73B,GAAtB,WACMmf,EAAU,KAAK2vB,WAAW/W,QAAQF,GAGtC,OAFA,KAAK7a,QAAS,iBAAYmC,IAC1BA,EAAU,KAAKnC,OAASmC,EAAU,CAACA,IACpBvjB,KAAI,SAACwZ,GAClB,IAAMg8B,EAAO,IAAI9pB,EAAAA,QAAQuQ,GAEzB,OADAuZ,EAAKjvB,IAAI7H,EAAKu0B,MAAOz5B,GACjBkF,EAAKiM,KACAjM,EAAKiM,KAAK5pB,QAAQy0C,EAAMpxC,GAExBA,EAAKoxC,OAIpB,EA3CA,onCChTA,cACA,SACA,aAGA,cAIE,WAAYj3B,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,KACX,GAAsB,MAAlBA,EAAK0c,UACP,MAAM,IAAIt9B,MAAM,2DAKlB,GAHE+gB,EAAKuc,UAAY,IAAIpB,EAAAA,SAAStb,EAAK0c,UAAUz/B,MAAO+iB,EAAK0c,UAAUrnB,MAG7C,MAApB2K,EAAK2c,YACP,MAAM,IAAIv9B,MAAM,oEAEhB+gB,EAAKwc,YAAc,IAAIrB,EAAAA,SAAStb,EAAK2c,YAAY1/B,MAAO+iB,EAAK2c,YAAYtnB,QAO/E,OAtB2BqX,EAAAA,EAAAA,GAmBzB8B,EAAAA,UAAAA,KAAAA,SAAKmW,GACH,OAAO,IAAIpY,EAAGiC,MAAM,KAAKkO,UAAW,KAAKC,cAE7C,EAtBA,CAA2BzP,EAAAA,YAAdpyB,EAAAA,MAAAA,2qBCJb,cACA,SAGA,cAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAKy3B,QAAU53B,EAAK43B,QACpBz3B,EAAKw0B,YAAa,WAAM30B,EAAK20B,cAOjC,OAhBmCjoB,EAAAA,EAAAA,GAWjCmrB,EAAAA,UAAAA,KAAAA,SAAKna,GACH,IAAMzgC,EAA2B,MAAnB,KAAK03C,WAAqB,KAAKA,WAAW/W,QAAQF,QAAOr+B,EAEvE,OADAq+B,EAAIyG,cAAcnc,IAAI,KAAKpqB,KAAMX,GAC1BA,GAEX,EAhBA,CAAmCiwB,EAAAA,YAAtBpyB,EAAAA,cAAAA,EAkBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAK6kB,QAAUhlB,EAAKokB,cAUxB,OAjBmC1X,EAAAA,EAAAA,GASjCorB,EAAAA,UAAAA,KAAAA,SAAKpa,GAEH,IAAIzgC,GADJygC,EAAM,KAAKsH,QAAUtH,EAAIyH,kBAAkB,KAAKH,SAAWtH,GAC3C/d,IAAI,KAAK/hB,MAIzB,OAHIX,aAAiBiwB,EAAAA,aACnBjwB,EAAQA,EAAM2gC,QAAQF,IAEjBzgC,GAEX,EAjBA,CAAmCiwB,EAAAA,YAAtBpyB,EAAAA,cAAAA,EAmBb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAKw0B,YAAa,WAAM30B,EAAK20B,YAC7Bx0B,EAAKstB,WAAaztB,EAAK8nB,UAK3B,OAdiCpb,EAAAA,EAAAA,GAW/BqrB,EAAAA,UAAAA,KAAAA,SAAKpT,GACH,OAAO,MAEX,EAdA,CAAiCzX,EAAAA,YAApBpyB,EAAAA,YAAAA,EAgBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAK6kB,QAAUhlB,EAAKokB,cAsDxB,OA7DiC1X,EAAAA,EAAAA,GAU/BiX,EAAAA,UAAAA,KAAAA,SAAKjG,GACH,IAAIsa,EAAcb,EAClB,GAAI,KAAKnS,QAAS,CAChB,IAAMiT,EAAMva,EAAI/d,IAAI,KAAKqlB,SACzBgT,EAAeC,EAAMA,EAAIhJ,YAAY,KAAKrxC,WAAQyB,EAClD,IAAM64C,EAASxa,EAAIyH,kBAAkB,KAAKH,SAC1CmS,EAAYe,EAASA,EAAOnD,oBAAiB11C,OAE7C24C,EAAeta,EAAI/d,IAAI,KAAK/hB,MAC5Bu5C,EAAYzZ,EAAIqX,eAElB,IAAMjhB,EAAO,KAAK2M,SAAS/C,GA6B3B,IA1BAsa,EAAeA,EAAa3yB,QAAO,SAACpf,GAAW,SAAEwnC,WAAWxyC,SAAW64B,EAAK74B,WAE3DA,OAAS,IACxB+8C,EAAeA,EAAa3yB,QAAO,SAACpf,GAElC,IADA,IAAImH,GAAQ,EACHlS,EAAI,EAAGA,EAAI44B,EAAK74B,QAAUmS,EAAOlS,IACxC,GAAgB,OAAZ44B,EAAK54B,GAAa,CACpB,IAAIi9C,EAAuBlyC,EAAEwnC,WAAWvyC,GAAGi9C,qBACf,MAAxBA,GAA+D,MAA/BlyC,EAAEwnC,WAAWvyC,GAAGk9C,cAElDD,EAAuB,CACrBv6C,KAAMqI,EAAEwnC,WAAWvyC,GAAGk9C,YACtBz0B,KAAM,uBAGVvW,EAAQswB,EAAI2a,qBAAqBvkB,EAAK54B,GAAIi9C,GAG9C,OAAO/qC,MAIP4qC,EAAa/8C,OAIW,IAAxB+8C,EAAa/8C,OACf,MAAM,IAAImE,MAAM,sDAKlB,IADA,IAAMk5C,EAAcN,EAAaA,EAAa/8C,OAAS,GAC9CC,EAAI,EAAGA,EAAIo9C,EAAY7K,WAAWxyC,OAAQC,IACjDi8C,EAAUnvB,IAAIswB,EAAY7K,WAAWvyC,GAAG0C,KAAMk2B,EAAK54B,IAErD,OAAOo9C,EAAY3D,WAAW/W,QAAQuZ,IAE1C,EA7DA,CAAiCjqB,EAAAA,YAApBpyB,EAAAA,YAAAA,EA+Db,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,OAMrB,OAXgC8uB,EAAAA,EAAAA,GAQ9B6rB,EAAAA,UAAAA,KAAAA,SAAK7a,GACH,OAAOA,EAAI/d,IAAI,KAAK/hB,OAExB,EAXA,CAAgCsvB,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAab,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKviB,KAAOoiB,EAAKpiB,KACjBuiB,EAAK6kB,QAAUhlB,EAAKokB,cAkCxB,OAzCmC1X,EAAAA,EAAAA,GASjC8rB,EAAAA,UAAAA,KAAAA,SAAK9a,GAIH,IAAMua,EAAM,KAAKjT,QAAUtH,EAAI/d,IAAI,KAAKqlB,cAAW3lC,EAC/CwN,EAAMorC,EAAMA,EAAIt4B,IAAI,KAAK/hB,MAAQ8/B,EAAI/d,IAAI,KAAK/hB,MAClD,GAAW,MAAPiP,EAAa,CACf,IAAMoU,EAAQ,KAAKrjB,KAAKub,MAAM,KAE9B,GAAW,OADXtM,EAAM6wB,EAAI/d,IAAIsB,EAAM,MACDA,EAAMhmB,OAAS,EAAG,CAEnC,IADA,IAAIw9C,EAAW5rC,EACI,QAAM/P,MAAM,GAAZ8tB,EAAAA,EAAAA,OAAAA,IAAgB,CAA9B,IAAM8tB,EAAI,KAGTC,OAAI,EACQ,MAAZF,QAEWp5C,KADbs5C,EAAOF,EAASC,KACkC,oBAAjBD,EAAS94B,MACxCg5B,EAAOF,EAAS94B,IAAI+4B,IAGxBD,EAAWE,aAAgBC,SAAWD,EAAKj7C,KAAK+6C,GAAYE,EAE9D9rC,EAAM4rC,GAGV,OAAI5rC,aAAe+rC,SACV/rC,EAAInP,KAAKggC,EAAI2Z,gBAEbxqC,GAGb,EAzCA,CAAmCqgB,EAAAA,YAAtBpyB,EAAAA,cAAAA,gvBCtIb,cAEA,SAEA,cACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAbiC0M,EAAAA,EAAAA,GAK/BmsB,EAAAA,UAAAA,KAAAA,SAAKnb,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,OAAI5J,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACjB,KAEA4uB,EAAK9xB,QAAO,SAACkD,EAAQwyB,GAAW,SAAIA,MAGjD,EAbA,CAAiCxK,EAAAA,YAApBpyB,EAAAA,YAAAA,EAeb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKqd,QAAS,WAAMxd,EAAKwd,QACzBrd,EAAK24B,WAAY,WAAM94B,EAAK84B,aAiBhC,OAxB6BpsB,EAAAA,EAAAA,GAU3BqsB,EAAAA,UAAAA,KAAAA,SAAKrb,GACH,IAAMF,EAAS,KAAKA,OAAOI,QAAQF,GAC7Bob,EAA8B,MAAlB,KAAKA,UAAoB,KAAKA,UAAUlb,QAAQF,GAAO,GACzE,GAAc,MAAVF,EACF,OAAO,KAEP,IAAMwb,EAAgBxb,EAAOnY,QAAO,SAACngB,GAAW,OAAK,MAAL,KAChD,OAA6B,IAAzB8zC,EAAc/9C,OACT,KAEA+9C,EAAc54C,KAAK04C,IAIlC,EAxBA,CAA6B5rB,EAAAA,YAAhBpyB,EAAAA,QAAAA,EA0Bb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK84B,eAAgB,WAAMj5B,EAAKi5B,eAChC94B,EAAK24B,WAAY,WAAM94B,EAAK84B,aAWhC,OAlB2BpsB,EAAAA,EAAAA,GAUzBwsB,EAAAA,UAAAA,KAAAA,SAAKxb,GACH,IAAMub,EAAgB,KAAKA,cAAcrb,QAAQF,GAC3Cob,EAAY,KAAKA,UAAUlb,QAAQF,GACzC,OAAIub,GAAiBH,EACZG,EAAc9/B,MAAM2/B,GAEtBG,EAAgB,CAACA,GAAiB,MAE7C,EAlBA,CAA2B/rB,EAAAA,YAAdpyB,EAAAA,MAAAA,EAoBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK84B,eAAgB,WAAMj5B,EAAKi5B,eAChC94B,EAAKg5B,kBAAmB,WAAMn5B,EAAKm5B,oBAWvC,OAlBoCzsB,EAAAA,EAAAA,GAUlC0sB,EAAAA,UAAAA,KAAAA,SAAK1b,GACH,IAAMub,EAAgB,KAAKA,cAAcrb,QAAQF,GAC3Cyb,EAAmB,KAAKA,iBAAiBvb,QAAQF,GACvD,OAAIub,GAAiBE,EACZF,EAAc9/B,MAAM,IAAIjD,OAAOijC,IAEjCF,EAAgB,CAACA,GAAiB,MAE7C,EAlBA,CAAoC/rB,EAAAA,YAAvBpyB,EAAAA,eAAAA,EAsBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb2B0M,EAAAA,EAAAA,GAKzB2sB,EAAAA,UAAAA,KAAAA,SAAK3b,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACKA,EAAIpS,cAEJ,MAGb,EAbA,CAA2BuL,EAAAA,YAAdpyB,EAAAA,MAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb2B0M,EAAAA,EAAAA,GAKzB4sB,EAAAA,UAAAA,KAAAA,SAAK5b,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACKA,EAAI/tB,cAEJ,MAGb,EAbA,CAA2BknB,EAAAA,YAAdpyB,EAAAA,MAAAA,EAiBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKo5B,SAAU,WAAMv5B,EAAKu5B,SAC1Bp5B,EAAK8S,QAAS,WAAMjT,EAAKiT,UAY7B,OAnBgCvG,EAAAA,EAAAA,GAU9B8sB,EAAAA,UAAAA,KAAAA,SAAK9b,GACH,IAAM6b,EAAU,KAAKA,QAAQ3b,QAAQF,GAC/BzK,EAAS,KAAKA,OAAO2K,QAAQF,GACnC,OAAe,MAAX6b,GAA6B,MAAVtmB,EACd,KAEAA,EAAO7hB,QAAQmoC,IAG5B,EAnBA,CAAgCrsB,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAqBb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKo5B,SAAU,WAAMv5B,EAAKu5B,SAC1Bp5B,EAAK8S,QAAS,WAAMjT,EAAKiT,UAY7B,OAnBoCvG,EAAAA,EAAAA,GAUlC+sB,EAAAA,UAAAA,KAAAA,SAAK/b,GACH,IAAM6b,EAAU,KAAKA,QAAQ3b,QAAQF,GAC/BzK,EAAS,KAAKA,OAAO2K,QAAQF,GACnC,OAAe,MAAX6b,GAA6B,MAAVtmB,EACd,KAEAA,EAAO3e,YAAYilC,IAGhC,EAnBA,CAAoCrsB,EAAAA,YAAvBpyB,EAAAA,eAAAA,EAqBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb6B0M,EAAAA,EAAAA,GAK3BgtB,EAAAA,UAAAA,KAAAA,SAAKhc,GACG,MAAoB,KAAK+C,SAAS/C,GAAjCzK,EAAM,KAAEsmB,EAAO,KACtB,OAAc,MAAVtmB,GAA6B,MAAXsmB,EACb,KAGF,IAAIrjC,OAAO,IAAMqjC,EAAU,KAAK17C,KAAKo1B,IAEhD,EAbA,CAA6B/F,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAeb,kBAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAKw5B,aAAc,WAAM35B,EAAK25B,aAC9Bx5B,EAAKswB,YAAa,WAAMzwB,EAAKywB,YAC7BtwB,EAAKllB,QAAS,WAAM+kB,EAAI,UAqB5B,OA9B+B0M,EAAAA,EAAAA,GAY7BktB,EAAAA,UAAAA,KAAAA,SAAKlc,GACH,IAAMic,EAAc,KAAKA,YAAY/b,QAAQF,GACvC+S,EAAa,KAAKA,WAAW7S,QAAQF,GACrCziC,EAAwB,MAAf,KAAKA,OAAiB,KAAKA,OAAO2iC,QAAQF,GAAO,KAEhE,OACiB,MAAfic,GACc,MAAdlJ,GACAA,EAAa,GACbA,GAAckJ,EAAY1+C,OAEnB,KACY,MAAVA,EACF0+C,EAAY1qC,OAAOwhC,EAAYx1C,GAE/B0+C,EAAY1qC,OAAOwhC,IAGhC,EA9BA,CAA+BvjB,EAAAA,YAAlBpyB,EAAAA,UAAAA,EAgCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAbgC0M,EAAAA,EAAAA,GAK9BmtB,EAAAA,UAAAA,KAAAA,SAAKnc,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,OAAI5J,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACjB,KAEA4uB,EAAK,GAAGh3B,MAAM,EAAGg3B,EAAK,GAAG74B,UAAY64B,EAAK,IAGvD,EAbA,CAAgC5G,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb8B0M,EAAAA,EAAAA,GAK5BotB,EAAAA,UAAAA,KAAAA,SAAKpc,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,OAAI5J,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACjB,KAEY,KAAZ4uB,EAAK,IAAaA,EAAK,GAAGh3B,OAAOg3B,EAAK,GAAG74B,UAAY64B,EAAK,IAGvE,EAbA,CAA8B5G,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAboC0M,EAAAA,EAAAA,GAKlCqtB,EAAAA,UAAAA,KAAAA,SAAKrc,GACH,IAAM5J,EAAO,KAAK2M,SAAS/C,GAC3B,OAAI5J,EAAKrQ,MAAK,SAACve,GAAW,OAAK,MAAL,KACjB,KAEA4uB,EAAK,GAAG9kB,QAAQ,IAAIkH,OAAO4d,EAAK,GAAI,KAAMA,EAAK,KAG5D,EAbA,CAAoC5G,EAAAA,YAAvBpyB,EAAAA,eAAAA,6oBC7Ob,cACA,SAEA,cAKE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK65B,MAAQh6B,EAAKg6B,MAClB75B,EAAKqd,QAAS,WAAMxd,EAAKwd,QACzBrd,EAAK2uB,KAAO9uB,EAAK8uB,OAwBrB,OAjC8BpiB,EAAAA,EAAAA,GAY5ButB,EAAAA,UAAAA,KAAAA,SAAKvc,GACH,IAAIt8B,EAAoB,MAAd,KAAK44C,MAAgBtc,EAAI/d,IAAI,KAAKq6B,OAAS,KAAKxc,OACtDp8B,aAAe8rB,EAAAA,aACjB9rB,EAAMA,EAAIw8B,QAAQF,IAEpB,IAAI7wB,EAAMqtC,EAAsB94C,EAAK,KAAK0tC,MAC1C,GAAW,MAAPjiC,EAAa,CAGf,IAFA,IACI4rC,EAAWr3C,EACI,MAFL,KAAK0tC,KAAK31B,MAAM,KAEXyR,EAAAA,EAAAA,OAAAA,IAAO,CAArB,IACG+tB,EAAOuB,EAAsBzB,EADtB,MAEbA,EAAWE,aAAgBC,SAAWD,EAAKj7C,KAAK+6C,GAAYE,EAE9D9rC,EAAkB,MAAZ4rC,EAAmBA,EAAW,KAEtC,OAAI5rC,aAAe+rC,SACV/rC,EAAInP,KAAK0D,GAETyL,GAGb,EAjCA,CAA8BqgB,EAAAA,YAmC9B,SAASgtB,EAAsB94C,EAAU0tC,GACvC,IAAIjiC,EAOJ,OANW,MAAPzL,QAEU/B,KADZwN,EAAMzL,EAAI0tC,KACkC,oBAAZ1tC,EAAIue,MAClC9S,EAAMzL,EAAIue,IAAImvB,IAGXjiC,EA3CI/R,EAAAA,SAAAA,EA8Cb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,KACLS,EAA2B,MAAhBT,EAAKqB,QAAkBrB,EAAKqB,QAAU,UACvDlB,EAAKM,SAAWA,EAAShf,KAAI,SAAC4nB,GAC5B,MAAO,CACLzrB,KAAMyrB,EAAGzrB,KACTX,OAAO,WAAMosB,EAAGpsB,aAgBxB,OAzB2ByvB,EAAAA,EAAAA,GAczBxwB,OAAAA,eAAIi+C,EAAAA,UAAA,UAAO,KAAX,WACE,OAAO,mCAGTA,EAAAA,UAAAA,KAAAA,SAAKzc,GAEH,IADA,IAAM7wB,EAAW,GACA,WAAK4T,SAALmK,EAAAA,EAAAA,OAAAA,IAAe,CAA3B,IAAMvB,EAAE,KACXxc,EAAIwc,EAAGzrB,MAAoB,MAAZyrB,EAAGpsB,MAAgBosB,EAAGpsB,MAAM2gC,QAAQF,QAAOr+B,EAE5D,OAAOwN,GAEX,EAzBA,CAA2BqgB,EAAAA,YAAdpyB,EAAAA,MAAAA,EA2Bb,8EAA2D,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAA3D,CAAkCQ,EAAAA,yBAArBpyB,EAAAA,aAAAA,EAEb,8EAAqE,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAArE,CAA4CQ,EAAAA,yBAA/BpyB,EAAAA,uBAAAA,igCC7Eb,cACA,UACA,UACA,SACA,UACA,UACA,UACA,UAIA,cAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACPA,EAAKspB,gBACPnpB,EAAKmpB,gBAAkBtpB,EAAKspB,gBACnBtpB,EAAKo6B,SAEdj6B,EAAKmpB,gBAAkB,CACrB1rC,KAAMoiB,EAAKo6B,OACXz2B,KAAM,uBAGVxD,EAAKk6B,OAAwB,MAAfr6B,EAAKq6B,QAAiBr6B,EAAKq6B,SAoB7C,OAnCwB3tB,EAAAA,EAAAA,GAkBtB4tB,EAAAA,UAAAA,KAAAA,SAAK5c,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAE1B,GAAW,MAAP3J,EACF,OAAO,KAET,GAAI2J,EAAI2a,qBAAqBtkB,EAAK,KAAKuV,iBAErC,OAAOvV,EACF,GAAI,KAAKsmB,OAAQ,CACtB,IAAME,EAAgBC,EAAkBC,EAAmB1mB,IACrD2mB,EAAeF,EAAkB,KAAKlR,iBAC5C,MAAM,IAAIlqC,MAAM,sBAAem7C,EAAa,QAAAp4C,OAAOu4C,IAEnD,OAAO,MAGb,EAnCA,CAAwBxtB,EAAAA,YAAXpyB,EAAAA,GAAAA,EAqCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAef,OAjB+B0M,EAAAA,EAAAA,GAK7BiuB,EAAAA,UAAAA,KAAAA,SAAKjd,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EAAa,CACf,IAAM6mB,EAAS7mB,EAAIt2B,WAAWuI,cAC9B,GAAI,CAAC,OAAQ,IAAK,MAAO,IAAK,KAAKuZ,SAASq7B,GAC1C,OAAO,EACF,GAAI,CAAC,QAAS,IAAK,KAAM,IAAK,KAAKr7B,SAASq7B,GACjD,OAAO,EAGX,OAAO,MAEX,EAjBA,CAA+B1tB,EAAAA,YAAlBpyB,EAAAA,UAAAA,EAmBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb+B0M,EAAAA,EAAAA,GAK7BmuB,EAAAA,UAAAA,KAAAA,SAAKnd,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,IAAI+mB,EAAAA,QAAQ,CAAC/mB,GAAMA,EAAI5N,SAEvB,MAGb,EAbA,CAA+B+G,EAAAA,YAAlBpyB,EAAAA,UAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAf4B0M,EAAAA,EAAAA,GAK1BquB,EAAAA,UAAAA,KAAAA,SAAKrd,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,KACEA,EAAIxC,WACNwC,EAAIzR,UAEJkxB,EAAAA,KAAKnxB,MAAM0R,EAAIt2B,aAG5B,EAfA,CAA4ByvB,EAAAA,YAAfpyB,EAAAA,OAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAaf,OAfgC0M,EAAAA,EAAAA,GAK9BsuB,EAAAA,UAAAA,KAAAA,SAAKtd,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACK,KACEA,EAAIzC,OACNyC,EAAIvC,cAEJgiB,EAAAA,SAASnxB,MAAM0R,EAAIt2B,aAGhC,EAfA,CAAgCyvB,EAAAA,YAAnBpyB,EAAAA,WAAAA,EAiBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAmBf,OArB+B0M,EAAAA,EAAAA,GAK7BuuB,EAAAA,UAAAA,KAAAA,SAAKvd,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EAAa,CACf,GAAIA,EAAImH,cAAe,CACrB,IAAMxV,GAAM,2BAAsBziB,WAAW8wB,EAAIrO,IAAIjoB,aAC/CmoB,GAAO,2BAAsB3iB,WAAW8wB,EAAInO,KAAKnoB,aACvD,OAAO,IAAIo4B,EAAAA,YAAYnQ,EAAKE,GAE5B,IAAMonB,GAAU,2BAAsB/pC,WAAW8wB,EAAIt2B,aACrD,IAAI,oBAAeuvC,GACjB,OAAOA,EAIb,OAAO,MAEX,EArBA,CAA+B9f,EAAAA,YAAlBpyB,EAAAA,UAAAA,EAuBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAef,OAjB+B0M,EAAAA,EAAAA,GAK7BwuB,EAAAA,UAAAA,KAAAA,SAAKxd,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAmB,kBAAR3J,EAAkB,CAC3B,IAAMonB,EAAUtrC,SAASkkB,GACzB,IAAI,oBAAeonB,GACjB,OAAOA,OAEJ,GAAmB,mBAARpnB,EAChB,OAAOA,EAAM,EAAI,EAEnB,OAAO,MAEX,EAjBA,CAA+B7G,EAAAA,YAAlBpyB,EAAAA,UAAAA,EAmBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAsBf,OAxBgC0M,EAAAA,EAAAA,GAK9B0uB,EAAAA,UAAAA,KAAAA,SAAK1d,GACH,OAAO,KAAK2d,aAAa,KAAK5a,SAAS/C,KAGzC0d,EAAAA,UAAAA,aAAAA,SAAavuC,GACX,OAAW,MAAPA,EACK,KACiB,kBAARA,EACT,IAAIyuB,EAAAA,SAASzuB,EAAK,KAChBA,EAAI+vB,QAEN/vB,EAAI6vB,UAAUF,UAAU3vB,EAAI8vB,aAC1B9vB,EAAIquB,cACN,IAAIrF,EAAAA,YAAY,KAAKwlB,aAAaxuC,EAAI6Y,KAAM,KAAK21B,aAAaxuC,EAAI+Y,QAGlE,mBAAc/Y,EAAIpP,aAG/B,EAxBA,CAAgCyvB,EAAAA,YAAnBpyB,EAAAA,WAAAA,EA0Bb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAgCf,OAlC6B0M,EAAAA,EAAAA,GAK3B4uB,EAAAA,UAAAA,KAAAA,SAAK5d,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EAAa,CAEf,IAAI4I,OAAW,EAAED,OAAS,EAC1B,IAEE,IAAM6e,EAAmBxnB,EACtBt2B,WACA2P,MAAM,2DACT,GAAwB,MAApBmuC,EACF,OAAO,KAET7e,GAAY,mBAAc6e,EAAiB,IAC3C5e,GAAc,mBAAc4e,EAAiB,IAC7C,MAAOx6B,GAGP,OAAO,KAGT,OAAiB,MAAb2b,GAAoC,MAAfC,EAChB,KAEF,IAAI6e,EAAAA,MAAM9e,EAAWC,GAE5B,OAAO,MAGb,EAlCA,CAA6BzP,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAoCb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAWf,OAb8B0M,EAAAA,EAAAA,GAK5B+uB,EAAAA,UAAAA,KAAAA,SAAK/d,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,OAAW,MAAP3J,EACKA,EAAIt2B,WAEJ,MAGb,EAbA,CAA8ByvB,EAAAA,YAAjBpyB,EAAAA,SAAAA,EAeb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAgDf,OAlD4B0M,EAAAA,EAAAA,GAK1BgvB,EAAAA,UAAAA,KAAAA,SAAKhe,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAW,MAAP3J,EAAa,CACf,IAAM4nB,EAAa5nB,EAAIt2B,WAGjBy1B,EAAU,iFAAiFjI,KAC/F0wB,GAEF,GAAe,MAAXzoB,EACF,OAAO,KAET,IAAII,EAAaJ,EAAQ,GACrBK,EAAeL,EAAQ,GACvBM,EAAeN,EAAQ,GAE3B,GAAa,MAATI,EAAe,CACjB,GAAIA,EAAQ,GAAKA,EAAQ,GACvB,OAAO,KAETA,EAAQzjB,SAASyjB,EAAO,IAE1B,GAAe,MAAXC,EAAiB,CACnB,GAAIA,EAAU,GAAKA,EAAU,GAC3B,OAAO,KAETA,EAAU1jB,SAAS0jB,EAAS,IAE9B,GAAe,MAAXC,EAAiB,CACnB,GAAIA,EAAU,GAAKA,EAAU,GAC3B,OAAO,KAETA,EAAU3jB,SAAS2jB,EAAS,IAE9B,IAAIC,EAAoBP,EAAQ,GAMhC,OALoB,MAAhBO,IACFA,EAAe5jB,UAAS,gCAA2B4jB,KAI9C,IAAI+f,EAAAA,SAAS,EAAG,EAAG,EAAGlgB,EAAOC,EAASC,EAASC,EAAc,MAEpE,OAAO,MAGb,EAlDA,CAA4BvG,EAAAA,YAAfpyB,EAAAA,OAAAA,EAoDb,kBAIE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,QACpB3nB,EAAKy7B,OAAS57B,EAAK47B,SA2BvB,OAlC6BlvB,EAAAA,EAAAA,GAU3BmvB,EAAAA,UAAAA,KAAAA,SAAKne,GACH,OAAQ,KAAKke,QACX,IAAK,oCACH,OAAO,IAAIjB,EAAU,CAAEh3B,KAAM,YAAamkB,QAAS,KAAKA,UAAWlK,QAAQF,GAC7E,IAAK,oCACH,OAAO,IAAImd,EAAU,CAAEl3B,KAAM,YAAamkB,QAAS,KAAKA,UAAWlK,QAAQF,GAC7E,IAAK,oCACH,OAAO,IAAIud,EAAU,CAAEt3B,KAAM,YAAamkB,QAAS,KAAKA,UAAWlK,QAAQF,GAC7E,IAAK,oCACH,OAAO,IAAIwd,EAAU,CAAEv3B,KAAM,YAAamkB,QAAS,KAAKA,UAAWlK,QAAQF,GAC7E,IAAK,mCACH,OAAO,IAAI+d,EAAS,CAAE93B,KAAM,WAAYmkB,QAAS,KAAKA,UAAWlK,QAAQF,GAC3E,IAAK,qCACH,OAAO,IAAI0d,EAAW,CAAEz3B,KAAM,aAAcmkB,QAAS,KAAKA,UAAWlK,QAAQF,GAC/E,IAAK,qCACH,OAAO,IAAIsd,EAAW,CAAEr3B,KAAM,aAAcmkB,QAAS,KAAKA,UAAWlK,QAAQF,GAC/E,IAAK,iCACH,OAAO,IAAIqd,EAAO,CAAEp3B,KAAM,SAAUmkB,QAAS,KAAKA,UAAWlK,QAAQF,GACvE,IAAK,iCACH,OAAO,IAAIge,EAAO,CAAE/3B,KAAM,SAAUmkB,QAAS,KAAKA,UAAWlK,QAAQF,GACvE,QACE,OAAO,KAAK+C,SAAS/C,KAG7B,EAlCA,CAA6BxQ,EAAAA,YAAhBpyB,EAAAA,QAAAA,EAoCb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBuCpb,EAAAA,EAAAA,GAQrCovB,EAAAA,UAAAA,KAAAA,SAAKpe,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBpB,EAAW,KAAK7S,QAASpK,IAGvD,EAhBA,CAAuCxQ,EAAAA,YAA1BpyB,EAAAA,kBAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBoCpb,EAAAA,EAAAA,GAQlCsvB,EAAAA,UAAAA,KAAAA,SAAKte,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBhB,EAAQ,KAAKjT,QAASpK,IAGpD,EAhBA,CAAoCxQ,EAAAA,YAAvBpyB,EAAAA,eAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBwCpb,EAAAA,EAAAA,GAQtCuvB,EAAAA,UAAAA,KAAAA,SAAKve,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBf,EAAY,KAAKlT,QAASpK,IAGxD,EAhBA,CAAwCxQ,EAAAA,YAA3BpyB,EAAAA,mBAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBuCpb,EAAAA,EAAAA,GAQrCwvB,EAAAA,UAAAA,KAAAA,SAAKxe,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBd,EAAW,KAAKnT,QAASpK,IAGvD,EAhBA,CAAuCxQ,EAAAA,YAA1BpyB,EAAAA,kBAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBuCpb,EAAAA,EAAAA,GAQrCyvB,EAAAA,UAAAA,KAAAA,SAAKze,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBb,EAAW,KAAKpT,QAASpK,IAGvD,EAhBA,CAAuCxQ,EAAAA,YAA1BpyB,EAAAA,kBAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBwCpb,EAAAA,EAAAA,GAQtC0vB,EAAAA,UAAAA,KAAAA,SAAK1e,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBX,EAAY,KAAKtT,QAASpK,IAGxD,EAhBA,CAAwCxQ,EAAAA,YAA3BpyB,EAAAA,mBAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBqCpb,EAAAA,EAAAA,GAQnC2vB,EAAAA,UAAAA,KAAAA,SAAK3e,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBT,EAAS,KAAKxT,QAASpK,IAGrD,EAhBA,CAAqCxQ,EAAAA,YAAxBpyB,EAAAA,gBAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBsCpb,EAAAA,EAAAA,GAQpC4vB,EAAAA,UAAAA,KAAAA,SAAK5e,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBN,EAAU,KAAK3T,QAASpK,IAGtD,EAhBA,CAAsCxQ,EAAAA,YAAzBpyB,EAAAA,iBAAAA,EAkBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACXG,EAAK2nB,QAAU9nB,EAAK8nB,UAWxB,OAhBoCpb,EAAAA,EAAAA,GAQlC6vB,EAAAA,UAAAA,KAAAA,SAAK7e,GAEH,OAAsB,OADA,KAAK+C,SAAS/C,GAE3B,KAEAqe,EAAiBL,EAAQ,KAAK5T,QAASpK,IAGpD,EAhBA,CAAoCxQ,EAAAA,YAkBpC,SAAS6uB,EAAiBS,EAAiB1U,EAAcpK,GACvD,IAEE,OAAa,MADC,IAAI8e,EAAW,CAAE74B,KAAM64B,EAAW5+C,KAAMkqC,QAASA,IAAWlK,QAAQF,GAMlF,MAAO3c,GACP,OAAO,GA3BEjmB,EAAAA,eAAAA,EA+Bb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAef,OAjBqC0M,EAAAA,EAAAA,GAKnC+vB,EAAAA,UAAAA,KAAAA,SAAK/e,GACG,MAAsB,KAAK+C,SAAS/C,GAAnCgf,EAAQ,KAAEx0C,EAAO,KAExB,GAAgB,MAAZw0C,GAA+B,MAAXx0C,EACtB,IACE,OAAOw0C,EAASvc,YAAYj4B,GAC5B,MAAO6Y,GAEP,OAAO,OAIf,EAjBA,CAAqCmM,EAAAA,YAAxBpyB,EAAAA,gBAAAA,EAmBb,kBACE,WAAYklB,UACVqE,EAAAA,KAAAA,KAAMrE,IAAK,KAgBf,OAlBwC0M,EAAAA,EAAAA,GAKtCiwB,EAAAA,UAAAA,KAAAA,SAAKjf,GACG,MAAsB,KAAK+C,SAAS/C,GAAnCgf,EAAQ,KAAEx0C,EAAO,KAExB,GAAgB,MAAZw0C,GAA+B,MAAXx0C,EACtB,IAEE,OADAw0C,EAASvc,YAAYj4B,IACd,EACP,MAAO6Y,GACP,OAAO,EAGX,OAAO,MAEX,EAlBA,CAAwCmM,EAAAA,YAA3BpyB,EAAAA,mBAAAA,EAoBb,kBAGE,WAAYklB,GAAZ,MACEqE,EAAAA,KAAAA,KAAMrE,IAAK,YACPA,EAAK48B,gBACPz8B,EAAKy8B,gBAAkB58B,EAAK48B,gBACnB58B,EAAK68B,SAEd18B,EAAKy8B,gBAAkB,CACrBh/C,KAAMoiB,EAAK68B,OACXl5B,KAAM,yBAgBd,OA3BwB+I,EAAAA,EAAAA,GAgBtBowB,EAAAA,UAAAA,KAAAA,SAAKpf,GACH,IAAM3J,EAAM,KAAK0M,SAAS/C,GAC1B,GAAY,OAAR3J,EACF,OAAO,EAET,GAAuB,oBAAZA,EAAIgpB,MAAuBC,EAAa,KAAKJ,iBAEtD,MAAM,IAAIx9C,MAAM,oEAA6D,KAAK2oC,UAEpF,OAAOrK,EAAI2a,qBAAqBtkB,EAAK,KAAK6oB,kBAE9C,EA3BA,CAAwB1vB,EAAAA,YA6BxB,SAAS8vB,EAAaC,GACpB,OAAQA,EAAKt5B,MACX,IAAK,qBACH,OAAOs5B,EAAKr/C,KAAKmmB,WAAW,8BAC9B,IAAK,oBACH,OAAOi5B,EAAaC,EAAK33B,aAC3B,IAAK,qBACH,OAAO23B,EAAK57B,QAAQyP,OAAM,SAACxU,GAAW,SAAaA,EAAEgJ,gBACvD,IAAK,wBACH,OAAO03B,EAAaC,EAAKt3B,WAC3B,IAAK,sBACH,OAAOs3B,EAAKv7B,OAAOoP,OAAM,SAACzd,GAAW,SAAaA,MACpD,QACE,OAAO,GAIb,SAASmnC,EAAkByC,GACzB,GAAoB,kBAATA,EACT,OAAOA,EACF,GAAY,MAARA,GAA6B,MAAbA,EAAKt5B,KAC9B,MAAO,GAET,OAAQs5B,EAAKt5B,MACX,IAAK,qBACH,OAAOs5B,EAAKr/C,KACd,IAAK,oBACH,MAAO,eAAQ48C,EAAkByC,EAAK33B,aAAY,KACpD,IAAK,qBACH,MAAO,gBAAS23B,EAAK57B,QAClB5f,KAAI,SAAC6a,GAAW,gBAAGA,EAAE1e,KAAI,KAAAuE,OAAIq4C,EAAkBl+B,EAAEgJ,iBACjDllB,KAAK,MAAK,KACf,IAAK,wBACH,MAAO,mBAAYo6C,EAAkByC,EAAKt3B,WAAU,KACtD,IAAK,sBACH,MAAO,iBAAUs3B,EAAKv7B,OAAOjgB,KAAI,SAAC4R,GAAW,SAAkBA,MAAIjT,KAAK,MAAK,KAC/E,QACE,OAAOZ,KAAKC,UAAUw9C,IAI5B,SAASxC,EAAmB5tC,GAC1B,GAAW,MAAPA,EACF,MAAO,OAET,IAAM+W,EAA8C,oBAAvB/W,EAAI2W,gBAAiC3W,EAAI2W,iBACtE,GAAII,GAAiBA,EAAc3oB,OAAS,EAC1C,OAAO2oB,EAAc,GAChB,GAAmB,mBAAR/W,EAChB,MAAO,CAAE8W,KAAM,qBAAsB/lB,KAAM,qCACtC,GAAmB,kBAARiP,GAAoBzH,KAAK4qB,MAAMnjB,KAASA,EAExD,MAAO,CAAE8W,KAAM,qBAAsB/lB,KAAM,qCACtC,GAAmB,kBAARiP,EAChB,MAAO,CAAE8W,KAAM,qBAAsB/lB,KAAM,qCACtC,GAAmB,kBAARiP,EAChB,MAAO,CAAE8W,KAAM,qBAAsB/lB,KAAM,oCACtC,GAAIiP,EAAIqwB,UACb,MAAO,CAAEvZ,KAAM,qBAAsB/lB,KAAM,qCACtC,GAAIiP,EAAIowB,OACb,MAAO,CAAEtZ,KAAM,qBAAsB/lB,KAAM,kCACtC,GAAIiP,EAAIykB,OACb,MAAO,CAAE3N,KAAM,qBAAsB/lB,KAAM,kCACtC,GAAIiP,EAAIkpB,QAAUlpB,EAAIkpB,SAC3B,MAAO,CAAEpS,KAAM,qBAAsB/lB,KAAM,kCACtC,GAAIiP,EAAI0kB,WACb,MAAO,CAAE5N,KAAM,qBAAsB/lB,KAAM,sCACtC,GAAIiP,EAAIyrB,WACb,MAAO,CAAE3U,KAAM,qBAAsB/lB,KAAM,sCACtC,GAAIxC,MAAMG,QAAQsR,GAAM,CAE7B,IACMqwC,EADiB9hD,MAAMuB,KAAK,IAAI4jB,IAAI1T,EAAIpL,KAAI,YAAK,YAAKhC,UAAUg7C,EAAmB0C,SAC5D17C,KAAI,YAAM,MAAC,KAAK5D,KAAKu/C,GAAM59C,KAAK6iB,MAAM+6B,GAAMA,KACzE,MAAO,CACLz5B,KAAM,oBACN2B,YAA6B,GAAhB43B,EAAMjiD,OAAciiD,EAAM,GAAK,CAAEv5B,KAAM,sBAAuBjC,OAAQw7B,IAEhF,OAAIrwC,EAAI4Y,WACN,CACL9B,KAAM,wBACNgC,UAAW9Y,EAAI8Y,WAEO,kBAAR9Y,GAAoB3Q,OAAO6F,KAAK8K,GAAK5R,OAAS,EACvD,CACL0oB,KAAM,qBACNtC,QAASnlB,OAAO6F,KAAK8K,GAAKpL,KAAI,YAAK,MAAC,CAAE7D,KAAMyP,EAAGiY,YAAam1B,EAAmB5tC,EAAIQ,SAGhF,UArHIvS,EAAAA,GAAAA,EAwHb,8EAAoE,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAApE,CAA2CQ,EAAAA,yBAA9BpyB,EAAAA,sBAAAA,EACb,8EAAgE,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAAhE,CAAuCQ,EAAAA,yBAA1BpyB,EAAAA,kBAAAA,EACb,8EAAiE,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAAjE,CAAwCQ,EAAAA,yBAA3BpyB,EAAAA,mBAAAA,EACb,8EAAiE,OAAzB4xB,EAAAA,EAAAA,GAAyB,EAAjE,CAAwCQ,EAAAA,yBAA3BpyB,EAAAA,mBAAAA,0pCCtpBb,cACA,UACA,aACA,UAIA,aAgBE,WACEuiD,EACAC,EACAC,EACAC,EACAC,GAEA,KAAKJ,OAASA,EACd,KAAKC,aAAeA,EACpB,KAAKjG,eAAiB,GACtB,KAAKqG,gBAAkB,GACvB,KAAKC,gBAAkB,GACvB,KAAK5U,iBAAmB,GAExB,KAAK6U,gBAA2B,OAAXL,QAAW,IAAX,IAAe,IACpC,KAAKA,YAAcA,GAAe,GAClC,KAAKC,kBAAoBA,EACzB,KAAKC,gBAAkBA,EA0X3B,OAvXEvhD,OAAAA,eAAI2xB,EAAAA,UAAA,aAAU,KAAd,WACE,OAAO,KAAK0vB,aAAgB,KAAKF,QAAU,KAAKA,OAAO5P,gBAGzD,SAAeoQ,GACb,KAAKD,gBAAgBC,GACrB,KAAKN,YAAcM,mCAGrB3hD,OAAAA,eAAI2xB,EAAAA,UAAA,cAAW,KAAf,WACE,OAAO,KAAKyvB,cAAiB,KAAKD,QAAU,KAAKA,OAAOrZ,iBAG1D,SAAgB8Z,GACd,KAAKR,aAAeQ,mCAGtBjwB,EAAAA,UAAAA,eAAAA,SAAegwB,GAEb,OADA,KAAKpQ,WAAaoQ,GAAU,GACrB,MAGThwB,EAAAA,UAAAA,gBAAAA,SAAgBiwB,GAEd,OADA,KAAK9Z,YAAc8Z,EACZ,MAGTjwB,EAAAA,UAAAA,YAAAA,WACE,OAAI,KAAKwvB,OACA,KAAKA,OAAOlZ,cAEZ,MAIXtW,EAAAA,UAAAA,YAAAA,SAAY9I,EAAwB4jB,GAClC,OAAO,KAAK0U,QAAU,KAAKA,OAAOp4B,YAAYF,EAAS4jB,IAGzD9a,EAAAA,UAAAA,aAAAA,SAAawpB,QAAA,QAAAA,EAAAA,IACX,IAAM3Z,EAAM,IAAI7P,EAAQ,MAExB,OADA6P,EAAI2Z,eAAiBA,EACd3Z,GAGT7P,EAAAA,UAAAA,kBAAAA,SAAkBmX,GAChB,OAAO,KAAKqY,QAAU,KAAKA,OAAOlY,kBAAkBH,IAGtDnX,EAAAA,UAAAA,kBAAAA,SAAkBka,GAChB,OAAO,KAAKsV,QAAU,KAAKA,OAAOU,kBAAkBhW,IAGtDla,EAAAA,UAAAA,aAAAA,SAAajwB,GACX,OAAO,KAAKy/C,QAAU,KAAKA,OAAO5I,aAAa72C,IAGjDiwB,EAAAA,UAAAA,mBAAAA,SAAmBjwB,GACjB,GAAI,KAAKy/C,OACP,OAAoC,MAAhC,KAAKA,OAAO5P,WAAW7vC,GAClB,KAAKy/C,OAAO5P,WAAW7vC,GAEvB,KAAKy/C,OAAO/I,mBAAmB12C,IAK5CiwB,EAAAA,UAAAA,kBAAAA,WACE,GAA8B,MAA1B,KAAK2vB,kBACP,OAAO,KAAKA,kBAAkBh7B,eACzB,GAAI,KAAK66B,QAA2C,MAAjC,KAAKA,OAAOrqB,kBACpC,OAAO,KAAKqqB,OAAOrqB,oBAEnB,MAAM,IAAIqN,EAAAA,UAAU,oCAIxBxS,EAAAA,UAAAA,qBAAAA,WACE,GAA8B,MAA1B,KAAK2vB,kBACP,OAAO,KAAKA,kBACP,GAAI,KAAKH,QAA8C,MAApC,KAAKA,OAAOzX,qBACpC,OAAO,KAAKyX,OAAOzX,uBAEnB,MAAM,IAAIvF,EAAAA,UAAU,uCAIxBxS,EAAAA,UAAAA,mBAAAA,WACE,OAA4B,MAAxB,KAAK4vB,gBACA,KAAKA,gBACH,KAAKJ,QAA4C,MAAlC,KAAKA,OAAO3L,mBAC7B,KAAK2L,OAAO3L,qBAEZ,IAAIpkB,EAAAA,qBAIfO,EAAAA,UAAAA,YAAAA,SAAYjwB,EAAconC,GACxB,OAAO,KAAKqY,QAAU,KAAKA,OAAO/Y,YAAY1mC,EAAMonC,IAGtDnX,EAAAA,UAAAA,cAAAA,SAAcjwB,GACZ,OAAO,KAAKy/C,QAAU,KAAKA,OAAOtY,cAAcnnC,IAGlDiwB,EAAAA,UAAAA,QAAAA,SAAQjwB,GACN,OAAO,KAAKy/C,QAAU,KAAKA,OAAOj6C,QAAQxF,IAG5CiwB,EAAAA,UAAAA,WAAAA,SAAWjwB,GACT,OAAO,KAAKy/C,QAAU,KAAKA,OAAO9X,WAAW3nC,IAG/CiwB,EAAAA,UAAAA,IAAAA,SAAI5F,GAGF,MAA+C,qBAApC,KAAKovB,eAAepvB,GACtB,KAAKovB,eAAepvB,GACH,UAAfA,EACF,KAAKovB,eAEU,MAAf,KAAKgG,QAAkB,KAAKA,OAAO19B,IAAIsI,IAIlD4F,EAAAA,UAAAA,IAAAA,SAAI5F,EAAoBhrB,GACtB,KAAKo6C,eAAepvB,GAAchrB,GAGpC4wB,EAAAA,UAAAA,qBAAAA,SAAqBka,EAAiB9qC,GAEpC,IAAMygC,EAAM,KAAKigB,gBAAgB5V,IACrB,IAARrK,GAAyB,OAARA,QAAwBr+B,IAARq+B,GAAoC,IAAfA,EAAIziC,SAC5D,KAAK0iD,gBAAgB5V,GAAW9qC,IAIpC4wB,EAAAA,UAAAA,iBAAAA,SAAiBka,GACf,OAAO,KAAK4V,gBAAgB5V,IAK9Bla,EAAAA,UAAAA,eAAAA,WACE,IAAMmwB,EAAsB,GAM5B,IAAK,IAAMC,KAJXD,EAAe,KAAKX,OAAO7f,OAAOwH,QAAQ/c,WAAWhF,IAAM,GAC3D+6B,EAAe,KAAKX,OAAO7f,OAAOwH,QAAQ/c,WAAWhF,IAAM,KAAK06B,gBAG1C,KAAKD,gBAAiB,CAC1C,IAAMzF,EAAM,KAAKyF,gBAAgBO,GACjC,KAAKC,uBAAuBjG,EAAK+F,GAEnC,OAAOA,GAITnwB,EAAAA,UAAAA,uBAAAA,SAAuBoqB,EAAU+F,GAAjC,WAGkE,MAA5DA,EAAe/F,EAAIjT,QAAQxH,OAAOwH,QAAQ/c,WAAWhF,IACvD,KAAKk7B,2BACHH,EACA/F,EAAIjT,QAAQxH,OAAOwH,QAAQ/c,WAAWhF,GACtCg1B,EAAI0F,iBAGNK,EAAe/F,EAAIjT,QAAQxH,OAAOwH,QAAQ/c,WAAWhF,IAAMg1B,EAAI0F,gBAGjEzhD,OAAOgtB,OAAO+uB,EAAIyF,iBAAiBl7C,SAAQ,YACzC2d,EAAK+9B,uBAAuBE,EAAYJ,OAM5CnwB,EAAAA,UAAAA,2BAAAA,SAA2BmwB,EAAqBK,EAAmBC,GACjE,IAAK,IAAMvW,KAAWuW,EAAgB,CACpC,IAAMC,EAAgBD,EAAevW,GAC/ByW,EAAiBR,EAAeK,GAAWtW,IAG5B,IAAnByW,GACmB,OAAnBA,QACmBn/C,IAAnBm/C,GAC0B,IAA1BA,EAAevjD,SAEf+iD,EAAeK,GAAWtW,GAAWwW,KAK3C1wB,EAAAA,UAAAA,gBAAAA,SAAgBgwB,GACd,IAAK,IAAMY,KAASZ,EAAQ,CAC1B,IAAMa,EAAOb,EAAOY,GACdE,EAAO,KAAKlK,aAAagK,GAC/B,GAAY,MAARC,EACF,OAEF,GAAoB,qBAATC,EACT,OACK,GAC0B,MAA/BA,EAAKvK,yBACJ,KAAKiE,qBAAqBqG,EAAMC,EAAKvK,wBAEtC,MAAM,IAAIh1C,MAAM,+BAAwBq/C,EAAK,oBACxC,GAAuB,MAAnBE,EAAI,UAAwB,KAAKC,oBAAoBF,EAAMC,EAAI,SACxE,MAAM,IAAIv/C,MAAM,+BAAwBq/C,EAAK,oBAGjD,OAAO,GAGT5wB,EAAAA,UAAAA,qBAAAA,SAAqBhhB,EAAUowC,GAC7B,OAAQA,EAAKt5B,MACX,IAAK,qBACH,OAAO,KAAKk7B,0BAA0BhyC,EAAKowC,GAC7C,IAAK,oBACH,OAAO,KAAK6B,yBAAyBjyC,EAAKowC,GAC5C,IAAK,qBACH,OAAO,KAAK8B,0BAA0BlyC,EAAKowC,GAC7C,IAAK,wBACH,OAAO,KAAK+B,6BAA6BnyC,EAAKowC,GAChD,IAAK,sBACH,OAAO,KAAKgC,2BAA2BpyC,EAAKowC,GAC9C,QACE,OAAO,IAIbpvB,EAAAA,UAAAA,yBAAAA,SAAyBhhB,EAAUowC,GAAnC,WACE,OACE,iBAAYpwC,IAASA,EAAcikB,OAAM,YAAK,SAAKunB,qBAAqBnzC,EAAG+3C,EAAK33B,iBAIpFuI,EAAAA,UAAAA,0BAAAA,SAA0BhhB,EAAUowC,GAApC,WAEE,OACS,MAAPpwC,GACe,kBAARA,KACN,iBAAYA,KACZA,EAAI4Y,aACJ5Y,EAAIqwB,YACJrwB,EAAIowB,SACJpwB,EAAI0kB,aACJ1kB,EAAIykB,SACJzkB,EAAIyrB,YACL2kB,EAAK57B,QAAQyP,OACX,SAAC5rB,GACC,MAAuB,qBAAhB2H,EAAI3H,EAAEtH,OACbuiB,EAAKk4B,qBAAqBxrC,EAAI3H,EAAEtH,MAAOsH,EAAEogB,iBAKjDuI,EAAAA,UAAAA,6BAAAA,SAA6BhhB,EAAUowC,GACrC,OACEpwC,EAAI4Y,aACQ,MAAX5Y,EAAI6Y,KAAe,KAAK2yB,qBAAqBxrC,EAAI6Y,IAAKu3B,EAAKt3B,cAC/C,MAAZ9Y,EAAI+Y,MAAgB,KAAKyyB,qBAAqBxrC,EAAI+Y,KAAMq3B,EAAKt3B,aAIlEkI,EAAAA,UAAAA,2BAAAA,SAA2BhhB,EAAUowC,GAArC,WACE,OAAOA,EAAKv7B,OAAO+B,MAAK,SAACpQ,GAAW,SAAKglC,qBAAqBxrC,EAAKwG,OAGrEwa,EAAAA,UAAAA,0BAAAA,SAA0BhhB,EAAUowC,GAClC,GAAW,MAAPpwC,EACF,OAAO,EAET,OAAQowC,EAAKr/C,MACX,IAAK,oCACH,MAAsB,mBAARiP,EAChB,IAAK,oCACH,MAAsB,kBAARA,EAChB,IAAK,oCACH,MAAsB,kBAARA,GAAoBzH,KAAK4qB,MAAMnjB,KAASA,EACxD,IAAK,mCACH,MAAsB,kBAARA,EAChB,IAAK,oCACH,OAAOA,GAAOA,EAAIqwB,UACpB,IAAK,iCACH,OAAOrwB,GAAOA,EAAIowB,OACpB,IAAK,qCACH,OAAOpwB,GAAOA,EAAI0kB,WACpB,IAAK,iCACH,OAAO1kB,GAAOA,EAAIykB,OACpB,IAAK,qCACH,OAAOzkB,GAAOA,EAAIyrB,WACpB,IAAK,iCACH,OAAOzrB,GAAOA,EAAIkpB,QAAUlpB,EAAIkpB,SAClC,QAEE,MAAuB,oBAAZlpB,EAAIkwC,IACNlwC,EAAIkwC,IAAIE,IAOb7hD,MAAMG,QAAQsR,KAAQA,EAAI4Y,aAcpCoI,EAAAA,UAAAA,oBAAAA,SAAoBhhB,EAAUqyC,GAC5B,OAAIA,EAAKC,iBACe,mBAARtyC,EACLqyC,EAAKE,iBACQ,kBAARvyC,EACLqyC,EAAKG,iBACQ,kBAARxyC,GAAoBzH,KAAK4qB,MAAMnjB,KAASA,EAC7CqyC,EAAKI,gBACQ,kBAARzyC,EACLqyC,EAAKjiB,OACPpwB,GAAOA,EAAIowB,OACTiiB,EAAKhiB,UACPrwB,GAAOA,EAAIqwB,UACTgiB,EAAKnpB,QAAUmpB,EAAKnpB,SACtBlpB,GAAOA,EAAIkpB,QAAUlpB,EAAIkpB,SACvBmpB,EAAK5tB,OACPzkB,GAAOA,EAAIykB,OACT4tB,EAAK3tB,WACP1kB,GAAOA,EAAI0kB,WACT2tB,EAAK5mB,WACPzrB,GAAOA,EAAIyrB,WACT4mB,EAAKr8B,OACP,KAAK08B,wBAAwB1yC,EAAKqyC,GAChCA,EAAKM,QACP,KAAKC,yBAAyB5yC,EAAKqyC,IACjCA,EAAKz5B,YACP,KAAKi6B,4BAA4B7yC,EAAKqyC,IAKjDrxB,EAAAA,UAAAA,wBAAAA,SAAwBhhB,EAAUmiB,GAAlC,WACE,OACE,iBAAYniB,IAASA,EAAcikB,OAAM,YAAK,SAAK8tB,oBAAoB15C,EAAG8pB,EAAKvO,SAAS,QAI5FoN,EAAAA,UAAAA,yBAAAA,SAAyBhhB,EAAU8yC,GAAnC,WACE,MACiB,kBAAR9yC,KACN,iBAAYA,IACb8yC,EAAIl/B,SAASqQ,OACX,SAAC5rB,GACC,MAAuB,qBAAhB2H,EAAI3H,EAAEtH,OAAyBuiB,EAAKy+B,oBAAoB/xC,EAAI3H,EAAEtH,MAAOsH,EAAEjI,WAKtF4wB,EAAAA,UAAAA,4BAAAA,SAA4BhhB,EAAUwW,GACpC,IAAMsC,EAAuB,MAAXtC,EAAIqC,IAAcrC,EAAIqC,IAAMrC,EAAIuC,KAClD,OACE/Y,EAAI4Y,aACQ,MAAX5Y,EAAI6Y,KAAe,KAAKk5B,oBAAoB/xC,EAAI6Y,IAAKC,MACzC,MAAZ9Y,EAAI+Y,MAAgB,KAAKg5B,oBAAoB/xC,EAAI+Y,KAAMD,KAG9D,EA3ZA,GAAa7qB,EAAAA,QAAAA,EA6Zb,kBACE,WACSkqC,EACA4a,EACP5b,EACAyJ,EACA+P,EACAC,QADA,QAAAD,EAAiCtZ,EAAG9hB,SAASujB,WAAW,IAAIrX,YAC5D,QAAAmvB,EAAAA,IAAuCnwB,EAAAA,qBANzC,MAQEjJ,EAAAA,KAAAA,KAAM2gB,EAAShB,EAAayJ,EAAY+P,EAAmBC,IAAgB,YAPpEt9B,EAAAA,QAAAA,EACAA,EAAAA,QAAAA,IA0CX,OA7CoCuM,EAAAA,EAAAA,GAYlCoB,EAAAA,UAAAA,YAAAA,WACE,OAAO,MAGTA,EAAAA,UAAAA,kBAAAA,SAAkBkX,GAUhB,OATqC,MAAjC,KAAK0Y,gBAAgB1Y,KACvB,KAAK0Y,gBAAgB1Y,GAAW,IAAIlX,EAClC,KAAKnO,IAAIqlB,GACT,KAAK4a,QACL,KAAK5b,YACL,KAAKyJ,WACL,KAAK+P,oBAGF,KAAKE,gBAAgB1Y,IAG9BlX,EAAAA,UAAAA,kBAAAA,SAAkBia,GAUhB,OATqC,MAAjC,KAAK4V,gBAAgB5V,KACvB,KAAK4V,gBAAgB5V,GAAW,IAAIja,EAClC,KAAKnO,IAAIooB,GACT,KAAK6X,QACL,KAAK5b,YACL,KAAKyJ,WACL,KAAK+P,oBAGF,KAAKG,gBAAgB5V,IAG9Bja,EAAAA,UAAAA,YAAAA,SAAY/I,EAAc4jB,GACxB,OAAO,KAAKiX,SAAW,KAAKA,QAAQ36B,YAAYF,EAAS4jB,IAE7D,EA7CA,CAAoC9a,GAAvB/yB,EAAAA,eAAAA,EA+Cb,kBACE,WACSkqC,EACAhZ,EACPgY,EACAyJ,EACA+P,EACAC,QADA,QAAAD,EAAiCtZ,EAAG9hB,SAASujB,WAAW,IAAIrX,YAC5D,QAAAmvB,EAAAA,IAAuCnwB,EAAAA,qBANzC,MAQEjJ,EAAAA,KAAAA,KAAM2gB,EAAShB,EAAayJ,EAAY+P,EAAmBC,IAAgB,YAPpEt9B,EAAAA,QAAAA,EACAA,EAAAA,QAAAA,IAkCX,OArCuCuM,EAAAA,EAAAA,GAYrCqB,EAAAA,UAAAA,YAAAA,WACE,OAAO,MAGTA,EAAAA,UAAAA,YAAAA,SAAY8xB,GACV,MAAM,IAAIxf,EAAAA,UAAU,gEAGtBtS,EAAAA,UAAAA,kBAAAA,SAAkB+xB,GAChB,MAAM,IAAIzf,EAAAA,UAAU,0EAGtBtS,EAAAA,UAAAA,IAAAA,SAAI9F,GAEF,OAAI,KAAKovB,eAAepvB,GACf,KAAKovB,eAAepvB,GAGzB,KAAK+c,QAAQ/c,IAAoD,eAArC,KAAK+c,QAAQ/c,GAAY2vB,QAChD,KAAK5S,QAAQwJ,YAAYvmB,GAI3B/rB,OAAOgtB,OAAO,KAAK8C,QAAQ+zB,gBAAgBt+C,KAAI,SAACu+C,GAAY,SAAG/3B,OAE1E,EArCA,CAAuC4F,GAA1B/yB,EAAAA,kBAAAA,wGCndb,cACA,UACA,UAKA,aACE,WACSkqC,EACAhB,EACAyJ,EACAgQ,QAAA,QAAAA,EAAAA,IAAuCnwB,EAAAA,qBAHvC,eACA,mBACA,kBACA,uBAuFX,OApFEU,EAAAA,UAAAA,YAAAA,SAAYiqB,GAEV,OADA,KAAKjT,QAAUiT,EACR,MAGTjqB,EAAAA,UAAAA,eAAAA,SAAe6vB,GAEb,OADA,KAAKpQ,WAAuB,MAAVoQ,EAAiBA,EAAS,GACrC,MAGT7vB,EAAAA,UAAAA,gBAAAA,SAAgB8vB,GAEd,OADA,KAAK9Z,YAAc8Z,EACZ,MAGT9vB,EAAAA,UAAAA,oBAAAA,SAAoBiyB,GAElB,OADA,KAAKxC,gBAAkBwC,EAChB,MAGTjyB,EAAAA,UAAAA,gBAAAA,SAAgB2mB,EAAiBuL,EAA6B1C,SACtDxnC,EAAI,IAAIqX,EAAAA,QACRqhB,EAAO,KAAK1J,QAAQwJ,YAAYmG,GACtC,GAAY,MAARjG,EACF,KAAOwR,EAAcngC,kBAAkB,CACrC,IAAMogC,EAAc,IAAIhzB,EAAAA,eACtB,KAAK6X,QACLkb,EAAcngC,iBACd,KAAKikB,YACL,KAAKyJ,WACL+P,EACA,KAAKC,iBAEPznC,EAAEoqC,qBAAqBD,IAAW5tB,EAAAA,IAAKoiB,GAAajG,EAAK9Q,QAAQuiB,GAAY5tB,IAC7E2tB,EAActzB,cAGlB,OAAO5W,GAGTgY,EAAAA,UAAAA,KAAAA,SAAKkyB,EAA6B1C,GAChC,IAAMxnC,EAAI,KAAKqqC,qBAAqBH,EAAe1C,GAC7C8C,EAAoB,IAAInzB,EAAAA,kBAC5B,KAAK6X,QACLhvB,EACA,KAAKguB,YACL,KAAKyJ,WACL+P,EACA,KAAKC,iBAED8C,EAAiB,GACvB,IAAK,IAAMnkD,KAAO,KAAK4oC,QAAQwJ,YAAa,CAC1C,IAAME,EAAO,KAAK1J,QAAQwJ,YAAYpyC,GACjB,eAAjBsyC,EAAKkJ,UACP2I,EAAUnkD,GAAOsyC,EAAKzjB,KAAKq1B,IAI/B,OADAtqC,EAAEwqC,wBAAwBD,GACnBvqC,GAGTgY,EAAAA,UAAAA,qBAAAA,SAAqBkyB,EAA6B1C,GAEhD,IADA,IAAMxnC,EAAI,IAAIqX,EAAAA,QACP6yB,EAAcngC,kBAAkB,CACrC,IAAMogC,EAAc,IAAIhzB,EAAAA,eACtB,KAAK6X,QACLkb,EAAcngC,iBACd,KAAKikB,YACL,KAAKyJ,WACL+P,EACA,KAAKC,iBAED8C,EAAiB,GACvB,IAAK,IAAMnkD,KAAO,KAAK4oC,QAAQwJ,YAAa,CAC1C,IAAME,EAAO,KAAK1J,QAAQwJ,YAAYpyC,GACjB,YAAjBsyC,EAAKkJ,UACP2I,EAAUnkD,GAAOsyC,EAAK9Q,QAAQuiB,IAGlCnqC,EAAEoqC,qBAAqBD,EAAaI,GACpCL,EAActzB,cAEhB,OAAO5W,GAEX,EA5FA,GAAalb,EAAAA,SAAAA,0ICPb,+BAIA,OAHEqzB,EAAAA,UAAAA,UAAAA,SAAUsyB,EAAcC,EAAeC,EAAmBC,KAG5D,EAJA,GAAa9lD,EAAAA,oBAAAA,EAMb,iBACE,WAAmB+lD,QAAA,QAAAA,GAAAA,GAAA,wBAWrB,OATE3yB,EAAAA,UAAAA,UAAAA,SAAUsP,EAAa74B,EAAc4sC,EAAkBpnC,GAErD,IAAM22C,EAAqB,UAAbvP,EAAuB9mC,QAAQsW,MAAQtW,QAAQpF,IACzD07C,EAAU,UAAGxP,EAAQ,OAAApvC,OAAMwC,EAAI,MAAAxC,OAAKgI,GACvB,UAAbonC,GAAwB,KAAKsP,mBAC/BE,GAAW,2BAAoBvhD,KAAKC,UAAU+9B,GAAO,YAEvDsjB,EAAMC,IAEV,EAZA,GAAajmD,EAAAA,uBAAAA,0GCNb,cAEA,aAIE,WAAYwG,GACV,KAAKA,KAAOA,EACZ,KAAK0/C,UAAY5lD,MAAMuB,KAAKT,OAAOgtB,OAAO5nB,IAqB9C,OAlBEqsB,EAAAA,UAAAA,QAAAA,SAAQmhB,EAAclvB,GACpB,IAAkB,eAAKohC,UAALp2B,EAAAA,EAAAA,OAAAA,IAAgB,CAA7B,IAAMqtB,EAAG,KACZ,GAAIA,EAAIjT,SAAWiT,EAAIjT,QAAQ/c,WAAY,CACnC,MAA0CgwB,EAAIjT,QAAQ/c,WAApDhF,EAAE,KAAEiD,EAAM,SAAW+6B,EAAc,UAG3C,GAAInS,IAFe,UAAG5oB,EAAM,KAAA/jB,OAAI8gB,IAEL6rB,IAAS7rB,EAAI,CACtC,IAAIrD,EAKF,OAAO,IAAIoN,EAAAA,QAAQirB,EAAK,MAJxB,GAAIgJ,IAAmBrhC,EACrB,OAAO,IAAIoN,EAAAA,QAAQirB,EAAK,UAStC,EA3BA,GAAan9C,EAAAA,WAAAA,qUCFb,iBAME,aACE,KAAKilD,eAAiB,GACtB,KAAKmB,kBAAoB,GACzB,KAAKC,yBAA2B,GAChC,KAAKC,wBAA0B,GA+BnC,OA3BEllD,OAAAA,eAAI+xB,EAAAA,UAAA,mBAAgB,KAApB,WACE,MAAO,GAAG9rB,OAAMF,MAAT,GAAc/F,OAAOgtB,OAAO,KAAKk4B,2DAG1CnzB,EAAAA,UAAAA,qBAAAA,SAAqBkyB,EAAkBI,GAAvC,WACQr8C,EAAIi8C,EAAYP,QAIhByB,EAA+B,oBAAZn9C,EAAEo9C,MAAuBp9C,EAAEo9C,QAAUp9C,EAAE+e,KAGhE,KAAK88B,eAAesB,GAAad,EAGjC,KAAKY,yBAAyBE,GAAalB,EAAYoB,iBAGvD,KAAKH,wBAAwBC,GAAUrtB,EAAAA,GAAOmsB,EAAYpX,kBAAgB,GAC1E7sC,OAAOgtB,OAAOi3B,EAAYzC,iBAAiBl7C,SAAQ,SAACk7B,UAClD,IAAK0jB,wBAAwBC,IAAWzhD,KAAIqC,MAAAswB,EAAImL,EAAIqL,sBAIxD9a,EAAAA,UAAAA,wBAAAA,SAAwBsyB,GACtB,KAAKW,kBAAoBX,GAE7B,EAzCA,GAAazlD,EAAAA,QAAAA,mkBCAb2yB,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,MAAAA,0VCHA,cAEA,SAAS+zB,EAAW36C,EAAQ0T,GAC1B,MAAoB,kBAAN1T,GAA+B,kBAAN0T,EAGzC,SAASknC,EAAW56C,EAAQ0T,GAC1B,MAAoB,kBAAN1T,GAA+B,kBAAN0T,EAGzC,SAASmnC,EAAyB76C,EAAQ0T,GACxC,OACG1T,GAAKA,EAAE0qB,YAAchX,GAAKA,EAAEgX,YAC5B1qB,GAAKA,EAAEyqB,QAAU/W,GAAKA,EAAE+W,QACxBzqB,GAAKA,EAAEyxB,YAAc/d,GAAKA,EAAE+d,WAIjC,SAAS4C,EAAch2B,GACrB,OAAOA,aAAa4mB,EAAAA,YA8GtB,SAAS61B,EAAkBC,EAAcC,GACvC,MAAO,CAACD,EAASC,GAASpgD,KAAI,YAAO,MAAC,GAAGhE,SAASC,KAAK0D,MAGzD,SAAS0gD,EAAyBC,EAAeC,EAAeC,GAC9D,OACEF,EAAO9mD,SAAW+mD,EAAO/mD,QACzB8mD,EAAOjxB,OAAM,SAACzuB,EAAMnH,GAAM,SAAmBmH,EAAM2/C,EAAO9mD,OAI9D,SAASgnD,EAAer7C,EAAQ0T,EAAQ0nC,GACtC,OAMkCJ,EANbtnC,aAMDqnC,EANF/6C,GAOgBlJ,aAAeikD,aAAmBC,EAAQlkD,aAG9E,SAAkCkJ,EAAQ0T,EAAQ0nC,GAChD,IAAIE,EACEC,EAAQC,EAAkBx7C,GAAGtC,OAC7B+9C,EAAQD,EAAkB9nC,GAAGhW,OAE/Bg+C,GAAmB,EAGrBJ,IADEC,EAAMnnD,SAAWqnD,EAAMrnD,SAAUmnD,EAAMtxB,OAAM,SAAC7zB,EAAOyyC,GAAU,WAAU4S,EAAM5S,QACzD0S,EAAMtxB,OAAM,YAElC,GAAc,MAAVjqB,EAAEzK,IAA0B,MAAVme,EAAEne,GACtB,OAAO,EAET,IAAMomD,EAAmBP,EAAmBp7C,EAAEzK,GAAMme,EAAEne,IAItD,OAHyB,OAArBomD,IACFD,GAAmB,GAEdC,KAMX,GAAID,EACF,OAAO,KAET,OAAOJ,EAjCAM,CAAyB57C,EAAG0T,EAAG0nC,GAGxC,IAAsBL,EAAcC,EAiCpC,SAASQ,EAAkBK,GACzB,OAAOxmD,OAAO6F,KAAK2gD,GAAQr9B,QAAO,YAAK,SAGrBs9B,EAHiCD,EAAOr1C,cAIlCurC,UAAwC,sBAA5B,GAAGn7C,SAASC,KAAKilD,IADvD,IAAoBA,KAIpB,SAAgBhiD,EAAOkG,EAAQ0T,GAE7B,GAAS,MAAL1T,GAAkB,MAAL0T,EACf,OAAO,KAIT,GAAI1T,GAAKA,EAAEyxB,WACT,OAAOzxB,EAAElG,OAAO4Z,GAIlB,GAAI1T,GAAKA,EAAE+1B,QACT,OAAO/1B,EAAElG,OAAO4Z,GAWlB,GAPI1T,aAAailB,EAAAA,YACfvR,EAAIuR,EAAAA,YAAYnvB,KAAK4d,GACZA,aAAauR,EAAAA,cACtBjlB,EAAIilB,EAAAA,YAAYnvB,KAAKkK,IAIC,oBAAbA,EAAElG,OACX,OAAOkG,EAAElG,OAAO4Z,GAIlB,UACU1T,WAAa0T,GAAkB,kBAAN1T,GACpB,kBAANA,GACM,mBAANA,EAEP,OAAOA,IAAM0T,EAIT,MAAmBonC,EAAkB96C,EAAG0T,GAAvCqoC,EAAM,KACb,GAAIA,IADiB,KAEnB,OAAO,EAGT,OAAQA,GACN,IAAK,gBAEH,OAAO/7C,EAAEotB,YAAc1Z,EAAE0Z,UAC3B,IAAK,kBAEH,MAAO,CAAC,SAAU,SAAU,aAAc,aAAanD,OAAM,YAAK,SAAE5sB,KAAOqW,EAAErW,MAC/E,IAAK,iBACH,OACE2C,EAAEuK,QAAQ,OAAS,GACnBvK,EAAEuK,aAAQ/R,IAAc,GACxBkb,EAAEnJ,QAAQ,OAAS,GACnBmJ,EAAEnJ,aAAQ/R,IAAc,EAEjB,KAEFyiD,EAAyBj7C,EAAG0T,EAAG5Z,GACxC,IAAK,kBACH,OAAOuhD,EAAer7C,EAAG0T,EAAG5Z,GAC9B,IAAK,oBACH,OAAOkG,EAAEpJ,aAAe8c,EAAE9c,WAI9B,OAAO,EAzOT3C,EAAAA,SAAA,SAAyB+L,EAAQ0T,EAAQ8W,GACvC,OAAImwB,EAAW36C,EAAG0T,IAAMknC,EAAW56C,EAAG0T,GAC7B1T,EAAI0T,EACFmnC,EAAyB76C,EAAG0T,GAC9B1T,EAAEirB,OAAOvX,EAAG8W,GACV6J,EAAcr0B,GAChBA,EAAEgyB,SAASte,GACT2gB,EAAc3gB,GAChBuR,EAAAA,YAAYnvB,KAAKkK,GAAGgyB,SAASte,GAE7B,MAIXzf,EAAAA,iBAAA,SAAiC+L,EAAQ0T,EAAQ8W,GAC/C,OAAImwB,EAAW36C,EAAG0T,IAAMknC,EAAW56C,EAAG0T,GAC7B1T,GAAK0T,EACHmnC,EAAyB76C,EAAG0T,GAC9B1T,EAAE+qB,aAAarX,EAAG8W,GAChB6J,EAAcr0B,GAChBA,EAAE+xB,iBAAiBre,GACjB2gB,EAAc3gB,GAChBuR,EAAAA,YAAYnvB,KAAKkK,GAAG+xB,iBAAiBre,GAErC,MAIXzf,EAAAA,YAAA,SAA4B+L,EAAQ0T,EAAQ8W,GAC1C,OAAImwB,EAAW36C,EAAG0T,IAAMknC,EAAW56C,EAAG0T,GAC7B1T,EAAI0T,EACFmnC,EAAyB76C,EAAG0T,GAC9B1T,EAAEkrB,MAAMxX,EAAG8W,GACT6J,EAAcr0B,GAChBA,EAAEkyB,YAAYxe,GACZ2gB,EAAc3gB,GAChBuR,EAAAA,YAAYnvB,KAAKkK,GAAGkyB,YAAYxe,GAEhC,MAIXzf,EAAAA,oBAAA,SAAoC+L,EAAQ0T,EAAQ8W,GAClD,OAAImwB,EAAW36C,EAAG0T,IAAMknC,EAAW56C,EAAG0T,GAC7B1T,GAAK0T,EACHmnC,EAAyB76C,EAAG0T,GAC9B1T,EAAEgrB,YAAYtX,EAAG8W,GACf6J,EAAcr0B,GAChBA,EAAEiyB,oBAAoBve,GACpB2gB,EAAc3gB,GAChBuR,EAAAA,YAAYnvB,KAAKkK,GAAGiyB,oBAAoBve,GAExC,MAIXzf,EAAAA,WAAA,SAAgB+nD,EAAWh8C,EAAQ0T,GACjC,GAAS,MAAL1T,GAAkB,MAAL0T,EACf,OAAO,EAET,GAAS,MAAL1T,GAAkB,MAAL0T,EACf,OAAO,EAGT,IAmCcmoC,EAnCH77C,GAoCG29B,UAAuC,oBAApBke,EAAOle,SAnCtC,OAsCoCnV,EAtCP9U,EAAH1T,EAuCf29B,SAASnV,GADxB,IAAwCA,EAJxBqzB,EA9Bd,GAAI77C,EAAEyxB,WACJ,OAAOzxB,EAAElG,OAAO4Z,GAIlB,GAA4B,oBAAjB1T,EAAEg8C,WACX,OAAOh8C,EAAEg8C,WAAWtoC,GAGhB,MAAmBonC,EAAkB96C,EAAG0T,GAAvCqoC,EAAM,KAAEE,EAAM,KAErB,OAAQF,GACN,IAAK,iBACH,OAAOd,EAAyBj7C,EAAG0T,EAAGsoC,GACxC,IAAK,kBACH,OAAOX,EAAer7C,EAAG0T,EAAGsoC,GAC9B,IAAK,kBAEH,GAAe,oBAAXC,EAIF,OAFAj8C,EAAIA,EAAEmI,QAAQ,MAAO,KACrBuL,EAAIA,EAAEvL,QAAQ,MAAO,KACwC,IAAtDnI,EAAEk8C,cAAcxoC,EAAG,KAAM,CAAEyoC,YAAa,SAKrD,OAAOriD,EAAOkG,EAAG0T,IAsEnBzf,EAAAA,OAAAA,ghCC3LA,cAEA,UAQA,UAyDA,SAAgBmoD,EAAe9H,GAC7B,OAAI/0C,MAAM+0C,OAGNA,EAAUrgD,EAAAA,kBAGVqgD,EAAUrgD,EAAAA,gBAMhB,SAAgBooD,EAAelW,GAC7B,OAAI5mC,MAAM4mC,OAGNA,EAAUlyC,EAAAA,oBAGVkyC,EAAUlyC,EAAAA,kBA3EHA,EAAAA,cAAgBsK,KAAKG,IAAI,EAAG,IAAM,EAClCzK,EAAAA,cAAgBsK,KAAKG,KAAK,EAAG,IAC7BzK,EAAAA,gBAAkB,KAClBA,EAAAA,iBAAmB,KACnBA,EAAAA,0BAA4BsK,KAAKG,IAAI,IAAK,GAC1CzK,EAAAA,mBAAqB04C,EAAAA,mBACrB14C,EAAAA,mBAAqB04C,EAAAA,mBACrB14C,EAAAA,eAAiB04C,EAAAA,eACjB14C,EAAAA,eAAiB04C,EAAAA,eACjB14C,EAAAA,eAAiB04C,EAAAA,eACjB14C,EAAAA,eAAiB04C,EAAAA,eAE9B14C,EAAAA,sBAAA,SAAgB6lC,EAAsB1jC,GACpC,GAAa,MAATA,EACF,OAAO,EAET,GAAIA,EAAMq7B,YACR,IAAK4qB,EAAejmD,EAAMA,OACxB,OAAO,OAEJ,GAAIA,EAAM84B,QAAU94B,EAAM84B,SAAU,CACzC,GAAI94B,EAAM80B,MAAMj3B,EAAAA,gBACd,OAAO,EAET,GAAImC,EAAM60B,OAAOh3B,EAAAA,gBACf,OAAO,OAEJ,GAAImC,EAAMs0B,WAAY,CAC3B,GAAIt0B,EAAM80B,MAAMj3B,EAAAA,oBACd,OAAO,EAET,GAAImC,EAAM60B,OAAOh3B,EAAAA,oBACf,OAAO,OAEJ,GAAImC,EAAMq0B,OAAQ,CACvB,GAAIr0B,EAAM80B,MAAMj3B,EAAAA,gBACd,OAAO,EAET,GAAImC,EAAM60B,OAAOh3B,EAAAA,gBACf,OAAO,OAEJ,GAAIiX,OAAO/S,UAAU/B,IAC1B,IAAKgmD,EAAehmD,GAClB,OAAO,MAEJ,IAAIA,EAAMi+B,cACf,OAAOyF,EAAsB1jC,EAAMyoB,MAAQib,EAAsB1jC,EAAM2oB,MAEvE,IAAKs9B,EAAejmD,GAClB,OAAO,EAGX,OAAO,GAGTnC,EAAAA,eAAAA,EAaAA,EAAAA,eAAAA,EAaAA,EAAAA,sBAAA,SAAsCkyC,GACpC,IAAImW,EAAgBnW,EAAQvvC,WAI5B,IAAoC,IAAhC0lD,EAAc/xC,QAAQ,KACxB,OAAO47B,EAGT,IAAMoW,EAAqBD,EAAchqC,MAAM,KACzCkqC,EAAgBD,EAAmB,GAIzC,OAHqB,MAAjBC,GAAyBA,EAAcpoD,OAAS,IAClDkoD,EAAgBC,EAAmB,GAAK,IAAMA,EAAmB,GAAG3wC,UAAU,EAAG,IAE5ExP,WAAWkgD,IAGpB,8EAAkD,OAAXz2B,EAAAA,EAAAA,GAAW,EAAlD,CAAuC2T,EAAAA,WA0GvC,SAAgBijB,EAAoBz2C,GAClC,GAAmB,kBAARA,EACT,OAAIkF,OAAO/S,UAAU6N,GACZ/R,EAAAA,cAEAA,EAAAA,gBAEJ,GAAI+R,GAAOA,EAAIkpB,QAAUlpB,EAAIkpB,SAClC,OAAqB,OAAdj7B,EAAAA,qBAAc,IAAd,sBAAc,EAAd,iBAAgBm3B,OAClB,GAAIplB,GAAOA,EAAI0kB,WACpB,OAAyB,OAAlBz2B,EAAAA,yBAAkB,IAAlB,0BAAkB,EAAlB,qBAAoBm3B,OACtB,GAAIplB,GAAOA,EAAIykB,OACpB,OAAqB,OAAdx2B,EAAAA,qBAAc,IAAd,sBAAc,EAAd,iBAAgBm3B,OAClB,GAAIplB,GAAOA,EAAIyrB,WAAY,CAChC,IAAM0D,EAAOnvB,EAAI3L,QAEjB,OADA86B,EAAK/+B,MAAQqmD,EAAoBtnB,EAAK/+B,OAC/B++B,EAEP,OAAO,KA6BX,SAAgBunB,EAAoB12C,GAClC,GAAmB,kBAARA,EACT,OAAIkF,OAAO/S,UAAU6N,GACZ/R,EAAAA,cAEAA,EAAAA,gBAEJ,GAAI+R,GAAOA,EAAIkpB,QAAUlpB,EAAIkpB,SAClC,OAAqB,OAAdj7B,EAAAA,qBAAc,IAAd,sBAAc,EAAd,iBAAgBm3B,OAClB,GAAIplB,GAAOA,EAAI0kB,WACpB,OAAyB,OAAlBz2B,EAAAA,yBAAkB,IAAlB,0BAAkB,EAAlB,qBAAoBm3B,OACtB,GAAIplB,GAAOA,EAAIykB,OACpB,OAAqB,OAAdx2B,EAAAA,qBAAc,IAAd,sBAAc,EAAd,iBAAgBm3B,OAClB,GAAIplB,GAAOA,EAAIyrB,WAAY,CAChC,IAAM0D,EAAOnvB,EAAI3L,QAEjB,OADA86B,EAAK/+B,MAAQsmD,EAAoBvnB,EAAK/+B,OAC/B++B,EAEP,OAAO,KA3KElhC,EAAAA,kBAAAA,EAEbA,EAAAA,UAAA,SAAgBsoC,EAAUv2B,GACxB,GAAmB,kBAARA,EAAkB,CAC3B,GAAIkF,OAAO/S,UAAU6N,GAAM,CACzB,GAAIA,GAAO/R,EAAAA,cACT,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAM,EAGf,GAAIA,GAAO/R,EAAAA,gBACT,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAM/R,EAAAA,0BAGZ,GAAI+R,GAAOA,EAAIkpB,QAAUlpB,EAAIkpB,SAAU,CAC5C,GAAIlpB,EAAI4kB,OAAO32B,EAAAA,gBACb,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAIu2B,YAER,GAAIv2B,GAAOA,EAAI0kB,WAAY,CAChC,GAAI1kB,EAAI4kB,OAAO32B,EAAAA,oBACb,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAIu2B,YAER,GAAIv2B,GAAOA,EAAIykB,OAAQ,CAC5B,GAAIzkB,EAAI4kB,OAAO32B,EAAAA,gBACb,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAIu2B,YAER,GAAIv2B,GAAOA,EAAIquB,cAAe,CAEnC,IAAMtV,EAAQ,WACZ,IACE,OAAOwd,EAAUv2B,EAAI+Y,MACrB,MAAOtJ,GACP,OAAOzP,EAAI+Y,MAJD,GAOd,OAAO,IAAIiQ,EAAAA,YAAYuN,EAAUv2B,EAAI6Y,KAAME,GACtC,GAAI/Y,GAAOA,EAAIyrB,WAAY,CAChC,IAAMkrB,EAAO32C,EAAI3L,QAEjB,OADAsiD,EAAKvmD,MAAQmmC,EAAUv2B,EAAI5P,OACpBumD,EACF,GAAW,MAAP32C,EACT,OAAO,MAIX/R,EAAAA,YAAA,SAAgByoC,EAAY12B,GAC1B,GAAmB,kBAARA,EAAkB,CAC3B,GAAIkF,OAAO/S,UAAU6N,GAAM,CACzB,GAAIA,GAAO/R,EAAAA,cACT,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAM,EAGf,GAAIA,GAAO/R,EAAAA,gBACT,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAM/R,EAAAA,0BAGZ,GAAI+R,GAAOA,EAAIkpB,QAAUlpB,EAAIkpB,SAAU,CAC5C,GAAIlpB,EAAI4kB,OAAO32B,EAAAA,gBACb,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAI02B,cAER,GAAI12B,GAAOA,EAAI0kB,WAAY,CAChC,GAAI1kB,EAAI4kB,OAAO32B,EAAAA,oBACb,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAI02B,cAER,GAAI12B,GAAOA,EAAIykB,OAAQ,CAC5B,GAAIzkB,EAAI4kB,OAAO32B,EAAAA,gBACb,MAAM,IAAIuoC,EAEV,OAAOx2B,EAAI02B,cAER,GAAI12B,GAAOA,EAAIquB,cAAe,CAEnC,IAAMxV,EAAO,WACX,IACE,OAAO6d,EAAY12B,EAAI6Y,KACvB,MAAOpJ,GACP,OAAOzP,EAAI6Y,KAJF,GAOb,OAAO,IAAImQ,EAAAA,YAAYnQ,EAAK6d,EAAY12B,EAAI+Y,OACvC,GAAI/Y,GAAOA,EAAIyrB,WAAY,CAChC,IAAMmrB,EAAO52C,EAAI3L,QAEjB,OADAuiD,EAAKxmD,MAAQsmC,EAAY12B,EAAI5P,OACtBwmD,EACF,GAAW,MAAP52C,EACT,OAAO,MAIX/R,EAAAA,oBAAAA,EAsBAA,EAAAA,gBAAA,SAAgC6oB,EAAc+/B,GAC5C,OAAQ//B,GACN,IAAK,oCACH,OAAO7oB,EAAAA,cACT,IAAK,oCACH,OAAOA,EAAAA,gBACT,IAAK,qCACH,OAAyB,OAAlBA,EAAAA,yBAAkB,IAAlB,0BAAkB,EAAlB,qBAAoBm3B,OAC7B,IAAK,iCACH,OAAqB,OAAdn3B,EAAAA,qBAAc,IAAd,sBAAc,EAAd,iBAAgBm3B,OACzB,IAAK,iCACH,OAAqB,OAAdn3B,EAAAA,qBAAc,IAAd,sBAAc,EAAd,iBAAgBm3B,OACzB,IAAK,qCACH,GAAwB,MAApByxB,EAEF,OAAO,KAET,IAAMC,EAASD,EAAiBxiD,QAEhC,OADAyiD,EAAO1mD,MAAQqmD,EAAoBK,EAAO1mD,OACnC0mD,EAGX,OAAO,MAGT7oD,EAAAA,oBAAAA,EAsBAA,EAAAA,gBAAA,SAAgC6oB,EAAc+/B,GAC5C,OAAQ//B,GACN,IAAK,oCACH,OAAO7oB,EAAAA,cACT,IAAK,oCACH,OAAOA,EAAAA,gBACT,IAAK,qCACH,OAAyB,OAAlBA,EAAAA,yBAAkB,IAAlB,0BAAkB,EAAlB,qBAAoBm3B,OAC7B,IAAK,iCACH,OAAqB,OAAdn3B,EAAAA,qBAAc,IAAd,sBAAc,EAAd,iBAAgBm3B,OACzB,IAAK,iCACH,OAAqB,OAAdn3B,EAAAA,qBAAc,IAAd,sBAAc,EAAd,iBAAgBm3B,OACzB,IAAK,qCACH,GAAwB,MAApByxB,EAEF,OAAO,KAET,IAAME,EAASF,EAAiBxiD,QAEhC,OADA0iD,EAAO3mD,MAAQsmD,EAAoBK,EAAO3mD,OACnC2mD,EAGX,OAAO,MAKT9oD,EAAAA,cAAA,SAA8B6oB,EAAc1mB,EAAYuI,GAEtD,GAAmB,qBAARA,GAAgC,KAARA,EACjC,OAAQJ,KAAKue,GAAgC1mB,GAK/C,GAHAA,GAASA,EACTuI,GAAOA,EAEHY,MAAMnJ,IAA2B,kBAARuI,GAAoBA,EAAM,IAAM,EAC3D,OAAOq+C,IAIT,IAAI1G,GADJlgD,EAAQA,EAAMQ,WAAW0b,MAAM,MACjB,IAAMlc,EAAM,GAAKuI,GAAOA,EAKtC,OADA23C,GADAlgD,GAFAA,EAASmI,KAAKue,KAAkC1mB,EAAM,GAAK,IAAMkgD,KAEnD1/C,WAAW0b,MAAM,MACrB,IAAMlc,EAAM,GAAKuI,EAAMA,IACxBvI,EAAM,GAAK,IAAMkgD,IAG5BriD,EAAAA,cAAA,SAA8BmC,GAC5B,OAAOimD,EAAejmD,GAASA,EAAQ,g+BC/UzC,iBACA,UACM6mD,EAAQC,EAAKx7C,aAAazD,cAI1Bk/C,EAAyB,CAC7B7wB,MAAO,MACP1C,KAAM,MACN2C,OAAQ,OACR1C,MAAO,OACPJ,MAAO,KACP2zB,KAAM,KACN5wB,KAAM,IACN1C,IAAK,IACL2C,MAAO,IACPV,KAAM,IACNW,QAAS,MACTV,OAAQ,MACRW,QAAS,IACTV,OAAQ,IACRW,aAAc,KACdV,YAAa,MAKTmxB,EAAyB,CAC7Br9C,EAAG,OACHs9C,IAAK,OACLC,IAAK,OACLzsB,GAAI,QACJ0sB,KAAM,QACNC,KAAM,QACNC,GAAI,OACJ5kD,EAAG,MACHm6B,EAAG,OACH0qB,IAAK,SACL9jD,EAAG,SACH+jD,GAAI,eAMAC,EAAoB,IAAIh9B,IAE9B,SAAgBi9B,EAAUtvC,EAAWuvC,EAAwBC,GAO3D,QAPmC,QAAAD,GAAAA,QAAwB,QAAAC,GAAAA,GACvDD,IACFvvC,EAAOyvC,EAAazvC,IAElBwvC,IACFxvC,EAAO0vC,EAAe1vC,KAEnBqvC,EAAkBv8B,IAAI9S,GAAO,CAChC,IAAM5S,EAASqhD,EAAMl7C,mBAAmByM,GAAM,GAC9C,GAAsB,UAAlB5S,EAAOuiD,OACTN,EAAkB18B,IAAI3S,EAAM,CAAEumB,OAAO,QAChC,CACL,IAAIqpB,EAAM,8BAAuB5vC,EAAI,MACd,MAAnB5S,EAAOyiD,WACTD,GAAO,yBAAkBxiD,EAAOyiD,SAAQ,OAE1CR,EAAkB18B,IAAI3S,EAAM,CAAEumB,OAAO,EAAOzxB,QAAS86C,KAGzD,OAAOP,EAAkB/kC,IAAItK,GAG/B,SAAgB8qB,EAAYh3B,EAAcO,EAAeE,EAAau7C,cAAA,QAAAA,GAAAA,GACpE5yB,EAAqB,CAAC7oB,EAAUE,GAAQnI,IAAI2jD,GAA3C17C,EAAQ,KAAEE,EAAM,KACjB,IAAMnH,EAASqhD,EAAM76C,cAAcm8C,EAAQ17C,GAAWP,EAASi8C,EAAQx7C,IACvE,GAAsB,cAAlBnH,EAAOuiD,OAGX,OAAOG,GAAkB,mBAAc,QAAS1iD,EAAO4iD,OAAQ,GAAK5iD,EAAO4iD,MAkC7E,SAAgBC,EAAqBjwC,GACnC,IAAIkwC,EAOJ,OANIlwC,KAAQ2uC,EAEVuB,EAAWlwC,EAAKrG,QAAQ,KAAM,IACrBqG,KAAQ6uC,IACjBqB,EAAWrB,EAAuB7uC,IAE7BkwC,EA8DT,SAAgBC,EAAmBzpB,EAAYhvB,SAE7C,GADAwlB,EAAiB,CAACwJ,EAAOhvB,GAAOtL,IAAIqjD,GAAnC/oB,EAAK,KAAEhvB,EAAK,MACR43C,EAAU5oB,GAAOH,QAAU+oB,EAAU53C,GAAO6uB,MAC/C,OAAO,KAIT,IAA4B,IAAxBG,EAAM3qB,QAAQ,OAAuC,IAAxBrE,EAAMqE,QAAQ,KAAa,CAK1D,IAAMq0C,EAAiB,IAAI/9B,IAC3BqU,EAAM5iB,MAAM,KAAK3W,SAAQ,SAACkjD,GAClB,MAAoBC,EAAoBD,GAAvCE,EAAQ,KAAEp2C,EAAK,KAChBq2C,GAAoBJ,EAAe9lC,IAAIimC,IAAa,GAAKp2C,EAC/Di2C,EAAez9B,IAAI49B,EAAUC,MAE/B94C,EAAMoM,MAAM,KAAK3W,SAAQ,SAACkjD,GAClB,MAAoBC,EAAoBD,GAAvCE,EAAQ,KAAEp2C,EAAK,KAChBq2C,GAAoBJ,EAAe9lC,IAAIimC,IAAa,GAAKp2C,EAC/Di2C,EAAez9B,IAAI49B,EAAUC,MAO/B,IAAMnpB,EAAYthC,MAAMuB,KAAK8oD,EAAeK,WACzCzgC,QAAO,SAACkN,OAACwzB,EAAI,KAAEv2C,EAAK,KAAM,MAAS,MAAT,GAAgBA,EAAQ,KAClD/N,KAAI,SAAC8wB,OAACwzB,EAAI,KAAEv2C,EAAK,KAAM,gBAAGu2C,GAAI5jD,OAAGqN,EAAQ,EAAIA,EAAQ,OACrDpP,KAAK,KACJu8B,EAAcvhC,MAAMuB,KAAK8oD,EAAeK,WACzCzgC,QAAO,SAACkN,OAACwzB,EAAI,KAAEv2C,EAAK,KAAM,MAAS,MAAT,GAAgBA,EAAQ,KAClD/N,KAAI,SAAC8wB,OAACwzB,EAAI,KAAEv2C,EAAK,KAAM,gBAAGu2C,GAAI5jD,OAAGqN,GAAS,GAAa,EAATA,EAAa,OAC3DpP,KAAK,KAGR,OADAu8B,EAAc,MAAM9+B,KAAK8+B,GAAe,WAAIA,EAAW,KAAMA,EACtDyoB,EAAQ,UAAG1oB,GAASv6B,OAAmB,KAAhBw6B,EAAqB,IAAMA,EAAc,KAIzE,GAAIZ,IAAUhvB,EAEZ,MAAO,IACF,GAAc,MAAVA,EAET,OAAOgvB,EAGDY,EAAc,OAAO9+B,KAAKkP,GAAS,WAAIA,EAAK,KAAMA,EACxD,MAAc,MAAVgvB,EAEK,WAAIY,GAGN,UAAGZ,EAAK,KAAA55B,OAAIw6B,GAMvB,SAASqpB,EAAkB78C,EAAcO,EAAeu8C,GACtD,IAAMC,EAAYP,EAAoBj8C,GAAU,GAC1CE,EAAuB,IAAds8C,EAAkBD,EAAa,UAAGA,GAAU9jD,OAAG+jD,GACxDC,EAAShmB,EAAYh3B,EAASO,EAAUE,GAC9C,OAAiB,MAAVu8C,EAAiB,CAACA,EAAQv8C,GAAU,GAG7C,SAAS+7C,EAAoBtwC,GAE3B,GAAI,OAAOxX,KAAKwX,GACd,MAAO,CAACA,EAAM,GAGZ,OADJA,EAAO+vC,EAAQ/vC,IACUjI,MAAM,0BAA0BtQ,MAAM,GAA1DspD,EAAI,KAAE52C,EAAK,KAOhB,OANY,MAAR42C,GAAyB,KAATA,GAClBA,EAAO52C,EACPA,EAAQ,KACU,MAATA,GAA2B,KAAVA,IAC1BA,EAAQ,KAEH,CAAC42C,EAAMv2C,SAASL,IAGzB,SAASs1C,EAAazvC,GACpB,OAAY,MAARA,GAAiBA,EAAK9L,MAAwB,KAAhB8L,EAAK9L,OAC9B,IAEF8L,EAGT,SAAS0vC,EAAe1vC,GACtB,OAAO2uC,EAAuB3uC,IAASA,EAGzC,SAAS+vC,EAAQ/vC,GACf,OAAO0vC,EAAeD,EAAazvC,IArOrCva,EAAAA,UAAAA,EAsBAA,EAAAA,YAAAA,EASAA,EAAAA,2BAAA,SAA2CghC,EAAWC,EAAYC,EAAWjvB,SAErEs5C,EAAkBtqB,KAASioB,GAA0Bj3C,KAASi3C,EAC9DsC,EAAkB,SAACjxC,GACvB,OAAOgxC,EAAkBf,EAAqBjwC,GAAQA,GAIxD,GADAkd,EAAiB,CAACwJ,EAAOhvB,GAAOtL,KAAI,YAAK,SAAQwG,OAAhD8zB,EAAK,SAAEhvB,EAAK,MAEX,MAAO,CAAC+uB,EAAMC,EAAOC,EAAMjvB,GAE7B,IAAMw5C,EAAYZ,EAAoB5pB,GAAO,GACvCyqB,EAAYb,EAAoB54C,GAAO,GACvC,EAAsBi5C,EAAkBhqB,EAAMjvB,EAAOw5C,GAApDE,EAAO,KAAEC,EAAQ,KACxB,GAAe,MAAXD,EAEF,MAAO,CAAC3qB,EAAMwqB,EAAgBvqB,GAAQC,EAAMsqB,EAAgBv5C,IAG9D,GAAI05C,GAAWzqB,EACb,MAAO,CAACF,EAAMwqB,EAAgBvqB,GAAQ0qB,EAASH,EAAgBI,IAG3D,MAAsBV,EAAkBlqB,EAAMC,EAAOyqB,GAApDG,EAAO,KAAEC,EAAQ,KACxB,OAAe,MAAXD,EAEK,CAAC7qB,EAAMwqB,EAAgBvqB,GAAQ0qB,EAASH,EAAgBI,IAE1D,CAACC,EAASL,EAAgBM,GAAW5qB,EAAMsqB,EAAgBv5C,KAGpEjS,EAAAA,qBAAAA,EAWAA,EAAAA,aAAA,SAA6BihC,EAAYhvB,GACvC,IACE,IAAMsG,EAAI8sB,EAAY,EAAGpE,EAAOhvB,GAChC,OAAIsG,GAAKA,EAAI,EAEJ,EACEA,GAAKA,EAAI,GAEV,EAGH,EACP,MAAOiJ,GACP,OAAO,OAIXxhB,EAAAA,kBAAA,SAAgB+rD,EAAkB9qB,EAAYhvB,SAE5C,GADAwlB,EAAiB,CAACwJ,EAAOhvB,GAAOtL,IAAIqjD,GAAnC/oB,EAAK,KAAEhvB,EAAK,MACR43C,EAAU5oB,GAAOH,QAAU+oB,EAAU53C,GAAO6uB,MAC/C,OAAO,KAIT,GAAIG,EAAM3qB,QAAQ,MAAQ,GAAKrE,EAAMqE,QAAQ,MAAQ,EAAG,CAEtD,IAAM01C,EAAS/qB,EAAM3uB,MAAM,oBACrB25C,EAASh6C,EAAMK,MAAM,oBAI3B,OAAOo4C,EAFQqB,EAAkBC,EAAO,GAAIC,EAAO,IACpCF,EAAkBC,EAAO,GAAIC,EAAO,KAOrD,IAAMC,EAAiB,IAAIt/B,IAe3B,OAda,OAAOqU,EAAM5iB,MAAM,MAAI,GAAKpM,EAAMoM,MAAM,MAAI,GACjD3W,SAAQ,YACR,MAAoBmjD,EAAoBD,GAAvCE,EAAQ,KAAEp2C,EAAK,KACtB,GAAiB,MAAbo2C,GAA8B,IAAVp2C,EAAxB,CAIA,IAAMq2C,GAAoBmB,EAAernC,IAAIimC,IAAa,GAAKp2C,EAC/Dw3C,EAAeh/B,IAAI49B,EAAUC,OAMxBT,EACLhqD,MAAMuB,KAAKqqD,EAAelB,WACvBrkD,KAAI,SAAC8wB,OAACwzB,EAAI,KAAEv2C,EAAK,KAAM,gBAAGu2C,GAAI5jD,OAAGqN,EAAQ,EAAIA,EAAQ,OACrDpP,KAAK,OAIZtF,EAAAA,mBAAAA,mCCzHA,SAAgBmsD,EAA2BC,GAEzC,OAAoBA,EAAW,MAAMz0C,UAAU,EAAG,GAGpD,SAAgB00C,EAA+Bl0B,GAC7C,GAAc,MAAVA,EAAgB,CAClB,IAAIC,EAAUD,EAAO7lB,MAAM,KAC3B,GAAI8lB,GAA8B,IAAnBA,EAAQj4B,OACrB,MAAO,IAGT,IADAi4B,EAAUD,EAAO7lB,MAAM,QACW,IAAnB8lB,EAAQj4B,OACrB,MAAO,IAGX,MAAO,iPAxETH,EAAAA,YAAA,SAA4BssD,GAC1B,OAAOA,EAAO/hC,QAAO,YAAK,OAAK,MAAL,MAG5BvqB,EAAAA,eAAA,SAA+BssD,EAAenS,GAC5C,OAAOmS,EAAO7iD,MAAK,SAACsC,EAAG0T,GACrB,OAAiB,MAAb06B,GAAmC,QAAdA,GAAqC,cAAdA,EACvCpuC,EAAI0T,EAEJA,EAAI1T,MAKjB/L,EAAAA,OAAA,SAAuBmC,GACrB,OAAiB,OAAVA,GAGInC,EAAAA,YACXM,MAAMG,SAAY,YAAS,MAA6B,mBAA5B,GAAGkC,SAASC,KAAKT,IAE/CnC,EAAAA,QAAA,SAAwBssD,GACtB,OAAI,iBAAYA,GACNA,EAAiBt2B,OAAM,YAAK,YAE7Bs2B,GAIXtsD,EAAAA,QAAA,SAAwBssD,GACtB,OAAI,iBAAYA,GACNA,EAAiB3jC,MAAK,YAAK,YAE5B2jC,GAKEtsD,EAAAA,OAASwzB,KAEtBxzB,EAAAA,mCAAA,SAAmDm4B,EAAgBi0B,GAEjE,IAAIG,EACJH,EAAWD,EAA2BC,GAChC,MAAyBj0B,EAAO9Z,MAAM,KAArCmuC,EAAQ,KAAEC,EAAU,KACrBC,EAAoBL,EAA+BI,GAQzD,OANIC,IACFH,EAA8B,MAAdE,EAAqBA,EAAWpuC,MAAMquC,GAAmB,QAAKnoD,GAE3D,MAAjBgoD,IACFA,EAAgB,IAEDC,EAAW,IAAMJ,EAAWM,EAAoBH,GAGnEvsD,EAAAA,2BAAAA,EAKAA,EAAAA,+BAAAA,oBClDA,SAAS2sD,EAAQrmD,GACf,GAAIA,EAAK,OAWX,SAAeA,GACb,IAAK,IAAIhF,KAAOqrD,EAAQlrD,UACtB6E,EAAIhF,GAAOqrD,EAAQlrD,UAAUH,GAE/B,OAAOgF,EAfSsmD,CAAMtmD,GATxBvG,EAAOC,QAAU2sD,EAoCjBA,EAAQlrD,UAAUorD,GAClBF,EAAQlrD,UAAUqrD,iBAAmB,SAASC,EAAOC,GAInD,OAHAxoD,KAAKyoD,WAAazoD,KAAKyoD,YAAc,IACpCzoD,KAAKyoD,WAAWF,GAASvoD,KAAKyoD,WAAWF,IAAU,IACjDjoD,KAAKkoD,GACDxoD,MAaTmoD,EAAQlrD,UAAUyrD,KAAO,SAASH,EAAOC,GACvC,IAAIjrC,EAAOvd,KAGX,SAASqoD,IACP9qC,EAAKorC,IAAIJ,EAAOF,GAChBG,EAAG7lD,MAAM3C,KAAMqd,WAKjB,OATArd,KAAKyoD,WAAazoD,KAAKyoD,YAAc,GAOrCJ,EAAGG,GAAKA,EACRxoD,KAAKqoD,GAAGE,EAAOF,GACRroD,MAaTmoD,EAAQlrD,UAAU0rD,IAClBR,EAAQlrD,UAAU2rD,eAClBT,EAAQlrD,UAAU4rD,mBAClBV,EAAQlrD,UAAU6rD,oBAAsB,SAASP,EAAOC,GAItD,GAHAxoD,KAAKyoD,WAAazoD,KAAKyoD,YAAc,GAGjC,GAAKprC,UAAU1hB,OAEjB,OADAqE,KAAKyoD,WAAa,GACXzoD,KAIT,IAUI+oD,EAVAC,EAAYhpD,KAAKyoD,WAAWF,GAChC,IAAKS,EAAW,OAAOhpD,KAGvB,GAAI,GAAKqd,UAAU1hB,OAEjB,cADOqE,KAAKyoD,WAAWF,GAChBvoD,KAKT,IAAK,IAAIpE,EAAI,EAAGA,EAAIotD,EAAUrtD,OAAQC,IAEpC,IADAmtD,EAAKC,EAAUptD,MACJ4sD,GAAMO,EAAGP,KAAOA,EAAI,CAC7BQ,EAAUlnC,OAAOlmB,EAAG,GACpB,MAGJ,OAAOoE,MAWTmoD,EAAQlrD,UAAUgsD,KAAO,SAASV,GAChCvoD,KAAKyoD,WAAazoD,KAAKyoD,YAAc,GACrC,IAAIj0B,EAAO,GAAGh3B,MAAMY,KAAKif,UAAW,GAChC2rC,EAAYhpD,KAAKyoD,WAAWF,GAEhC,GAAIS,EAEF,IAAK,IAAIptD,EAAI,EAAGF,GADhBstD,EAAYA,EAAUxrD,MAAM,IACI7B,OAAQC,EAAIF,IAAOE,EACjDotD,EAAUptD,GAAG+G,MAAM3C,KAAMw0B,GAI7B,OAAOx0B,MAWTmoD,EAAQlrD,UAAUisD,UAAY,SAASX,GAErC,OADAvoD,KAAKyoD,WAAazoD,KAAKyoD,YAAc,GAC9BzoD,KAAKyoD,WAAWF,IAAU,IAWnCJ,EAAQlrD,UAAUksD,aAAe,SAASZ,GACxC,QAAUvoD,KAAKkpD,UAAUX,GAAO5sD,uCC3IlC,IAOIytD,EAPAC,EAAuB,kBAAZ3sC,QAAuBA,QAAU,KAC5C4sC,EAAeD,GAAwB,oBAAZA,EAAE1mD,MAC7B0mD,EAAE1mD,MACF,SAAsBrG,EAAQitD,EAAU/0B,GACxC,OAAO8kB,SAASr8C,UAAU0F,MAAMvE,KAAK9B,EAAQitD,EAAU/0B,IAKzD40B,EADEC,GAA0B,oBAAdA,EAAEG,QACCH,EAAEG,QACV5sD,OAAO6sD,sBACC,SAAwBntD,GACvC,OAAOM,OAAO0Q,oBAAoBhR,GAC/BuG,OAAOjG,OAAO6sD,sBAAsBntD,KAGxB,SAAwBA,GACvC,OAAOM,OAAO0Q,oBAAoBhR,IAQtC,IAAIotD,EAAcj3C,OAAO3L,OAAS,SAAqBnJ,GACrD,OAAOA,IAAUA,GAGnB,SAASgsD,IACPA,EAAaC,KAAKxrD,KAAK4B,MAEzBzE,EAAOC,QAAUmuD,EACjBpuD,EAAOC,QAAQktD,KAwYf,SAAcmB,EAASvrD,GACrB,OAAO,IAAIwrD,SAAQ,SAAUva,EAASwa,GACpC,SAASC,EAAcp/C,GACrBi/C,EAAQjB,eAAetqD,EAAM2rD,GAC7BF,EAAOn/C,GAGT,SAASq/C,IAC+B,oBAA3BJ,EAAQjB,gBACjBiB,EAAQjB,eAAe,QAASoB,GAElCza,EAAQ,GAAG/xC,MAAMY,KAAKif,YAGxB6sC,EAA+BL,EAASvrD,EAAM2rD,EAAU,CAAEvB,MAAM,IACnD,UAATpqD,GAMR,SAAuCurD,EAASM,EAASC,GAC7B,oBAAfP,EAAQxB,IACjB6B,EAA+BL,EAAS,QAASM,EAASC,GAPxDC,CAA8BR,EAASG,EAAe,CAAEtB,MAAM,QArZpEiB,EAAaA,aAAeA,EAE5BA,EAAa1sD,UAAUqtD,aAAUvqD,EACjC4pD,EAAa1sD,UAAUstD,aAAe,EACtCZ,EAAa1sD,UAAUutD,mBAAgBzqD,EAIvC,IAAI0qD,EAAsB,GAE1B,SAASC,EAAcvY,GACrB,GAAwB,oBAAbA,EACT,MAAM,IAAI/1C,UAAU,0EAA4E+1C,GAsCpG,SAASwY,EAAiB9oD,GACxB,YAA2B9B,IAAvB8B,EAAK2oD,cACAb,EAAac,oBACf5oD,EAAK2oD,cAmDd,SAASI,EAAatuD,EAAQ+nB,EAAM8tB,EAAU0Y,GAC5C,IAAIn/B,EACAo/B,EACAC,EA1HsBC,EAgJ1B,GApBAN,EAAcvY,QAGCpyC,KADf+qD,EAASxuD,EAAOguD,UAEdQ,EAASxuD,EAAOguD,QAAU1tD,OAAOioB,OAAO,MACxCvoB,EAAOiuD,aAAe,SAIKxqD,IAAvB+qD,EAAOG,cACT3uD,EAAO2sD,KAAK,cAAe5kC,EACf8tB,EAASA,SAAWA,EAASA,SAAWA,GAIpD2Y,EAASxuD,EAAOguD,SAElBS,EAAWD,EAAOzmC,SAGHtkB,IAAbgrD,EAEFA,EAAWD,EAAOzmC,GAAQ8tB,IACxB71C,EAAOiuD,kBAeT,GAbwB,oBAAbQ,EAETA,EAAWD,EAAOzmC,GAChBwmC,EAAU,CAAC1Y,EAAU4Y,GAAY,CAACA,EAAU5Y,GAErC0Y,EACTE,EAAS3/C,QAAQ+mC,GAEjB4Y,EAASzqD,KAAK6xC,IAIhBzmB,EAAIi/B,EAAiBruD,IACb,GAAKyuD,EAASpvD,OAAS+vB,IAAMq/B,EAASG,OAAQ,CACpDH,EAASG,QAAS,EAGlB,IAAIhxC,EAAI,IAAIpa,MAAM,+CACEirD,EAASpvD,OAAS,IAAM27B,OAAOjT,GADjC,qEAIlBnK,EAAE5b,KAAO,8BACT4b,EAAE2vC,QAAUvtD,EACZ4d,EAAEmK,KAAOA,EACTnK,EAAEixC,MAAQJ,EAASpvD,OA7KGqvD,EA8KH9wC,EA7KnB/O,SAAWA,QAAQigD,MAAMjgD,QAAQigD,KAAKJ,GAiL1C,OAAO1uD,EAcT,SAAS+uD,IACP,IAAKrrD,KAAKsrD,MAGR,OAFAtrD,KAAK1D,OAAOssD,eAAe5oD,KAAKqkB,KAAMrkB,KAAKurD,QAC3CvrD,KAAKsrD,OAAQ,EACY,IAArBjuC,UAAU1hB,OACLqE,KAAKmyC,SAAS/zC,KAAK4B,KAAK1D,QAC1B0D,KAAKmyC,SAASxvC,MAAM3C,KAAK1D,OAAQ+gB,WAI5C,SAASmuC,EAAUlvD,EAAQ+nB,EAAM8tB,GAC/B,IAAIsZ,EAAQ,CAAEH,OAAO,EAAOC,YAAQxrD,EAAWzD,OAAQA,EAAQ+nB,KAAMA,EAAM8tB,SAAUA,GACjFtZ,EAAUwyB,EAAYhpD,KAAKopD,GAG/B,OAFA5yB,EAAQsZ,SAAWA,EACnBsZ,EAAMF,OAAS1yB,EACRA,EA0HT,SAAS6yB,EAAWpvD,EAAQ+nB,EAAMsnC,GAChC,IAAIb,EAASxuD,EAAOguD,QAEpB,QAAevqD,IAAX+qD,EACF,MAAO,GAET,IAAIc,EAAad,EAAOzmC,GACxB,YAAmBtkB,IAAf6rD,EACK,GAEiB,oBAAfA,EACFD,EAAS,CAACC,EAAWzZ,UAAYyZ,GAAc,CAACA,GAElDD,EAsDT,SAAyBlwD,GAEvB,IADA,IAAIiF,EAAM,IAAI5E,MAAML,EAAIE,QACfC,EAAI,EAAGA,EAAI8E,EAAI/E,SAAUC,EAChC8E,EAAI9E,GAAKH,EAAIG,GAAGu2C,UAAY12C,EAAIG,GAElC,OAAO8E,EA1DLmrD,CAAgBD,GAAcE,EAAWF,EAAYA,EAAWjwD,QAoBpE,SAASowD,EAAc1nC,GACrB,IAAIymC,EAAS9qD,KAAKsqD,QAElB,QAAevqD,IAAX+qD,EAAsB,CACxB,IAAIc,EAAad,EAAOzmC,GAExB,GAA0B,oBAAfunC,EACT,OAAO,EACF,QAAmB7rD,IAAf6rD,EACT,OAAOA,EAAWjwD,OAItB,OAAO,EAOT,SAASmwD,EAAWrwD,EAAKyC,GAEvB,IADA,IAAIy0B,EAAO,IAAI72B,MAAMoC,GACZtC,EAAI,EAAGA,EAAIsC,IAAKtC,EACvB+2B,EAAK/2B,GAAKH,EAAIG,GAChB,OAAO+2B,EA4CT,SAASu3B,EAA+BL,EAASvrD,EAAM6zC,EAAUiY,GAC/D,GAA0B,oBAAfP,EAAQxB,GACb+B,EAAM1B,KACRmB,EAAQnB,KAAKpqD,EAAM6zC,GAEnB0X,EAAQxB,GAAG/pD,EAAM6zC,OAEd,IAAwC,oBAA7B0X,EAAQvB,iBAYxB,MAAM,IAAIlsD,UAAU,6EAA+EytD,GATnGA,EAAQvB,iBAAiBhqD,GAAM,SAAS0tD,EAAav3B,GAG/C21B,EAAM1B,MACRmB,EAAQf,oBAAoBxqD,EAAM0tD,GAEpC7Z,EAAS1d,OAhaf73B,OAAOC,eAAe8sD,EAAc,sBAAuB,CACzDltD,YAAY,EACZ4jB,IAAK,WACH,OAAOoqC,GAET/hC,IAAK,SAAS+L,GACZ,GAAmB,kBAARA,GAAoBA,EAAM,GAAKi1B,EAAYj1B,GACpD,MAAM,IAAIw3B,WAAW,kGAAoGx3B,EAAM,KAEjIg2B,EAAsBh2B,KAI1Bk1B,EAAaC,KAAO,gBAEG7pD,IAAjBC,KAAKsqD,SACLtqD,KAAKsqD,UAAY1tD,OAAO8gB,eAAe1d,MAAMsqD,UAC/CtqD,KAAKsqD,QAAU1tD,OAAOioB,OAAO,MAC7B7kB,KAAKuqD,aAAe,GAGtBvqD,KAAKwqD,cAAgBxqD,KAAKwqD,oBAAiBzqD,GAK7C4pD,EAAa1sD,UAAUivD,gBAAkB,SAAyBhuD,GAChE,GAAiB,kBAANA,GAAkBA,EAAI,GAAKwrD,EAAYxrD,GAChD,MAAM,IAAI+tD,WAAW,gFAAkF/tD,EAAI,KAG7G,OADA8B,KAAKwqD,cAAgBtsD,EACd8B,MAST2pD,EAAa1sD,UAAUkvD,gBAAkB,WACvC,OAAOxB,EAAiB3qD,OAG1B2pD,EAAa1sD,UAAUgsD,KAAO,SAAc5kC,GAE1C,IADA,IAAImQ,EAAO,GACF54B,EAAI,EAAGA,EAAIyhB,UAAU1hB,OAAQC,IAAK44B,EAAKl0B,KAAK+c,UAAUzhB,IAC/D,IAAIwwD,EAAoB,UAAT/nC,EAEXymC,EAAS9qD,KAAKsqD,QAClB,QAAevqD,IAAX+qD,EACFsB,EAAWA,QAA4BrsD,IAAjB+qD,EAAOrpC,WAC1B,IAAK2qC,EACR,OAAO,EAGT,GAAIA,EAAS,CACX,IAAIC,EAGJ,GAFI73B,EAAK74B,OAAS,IAChB0wD,EAAK73B,EAAK,IACR63B,aAAcvsD,MAGhB,MAAMusD,EAGR,IAAIzhD,EAAM,IAAI9K,MAAM,oBAAsBusD,EAAK,KAAOA,EAAGxhD,QAAU,IAAM,KAEzE,MADAD,EAAI0tC,QAAU+T,EACRzhD,EAGR,IAAIu/C,EAAUW,EAAOzmC,GAErB,QAAgBtkB,IAAZoqD,EACF,OAAO,EAET,GAAuB,oBAAZA,EACTb,EAAaa,EAASnqD,KAAMw0B,OAE5B,KAAI94B,EAAMyuD,EAAQxuD,OACdutD,EAAY4C,EAAW3B,EAASzuD,GACpC,IAASE,EAAI,EAAGA,EAAIF,IAAOE,EACzB0tD,EAAaJ,EAAUttD,GAAIoE,KAAMw0B,GAGrC,OAAO,GAiETm1B,EAAa1sD,UAAUqvD,YAAc,SAAqBjoC,EAAM8tB,GAC9D,OAAOyY,EAAa5qD,KAAMqkB,EAAM8tB,GAAU,IAG5CwX,EAAa1sD,UAAUorD,GAAKsB,EAAa1sD,UAAUqvD,YAEnD3C,EAAa1sD,UAAUsvD,gBACnB,SAAyBloC,EAAM8tB,GAC7B,OAAOyY,EAAa5qD,KAAMqkB,EAAM8tB,GAAU,IAqBhDwX,EAAa1sD,UAAUyrD,KAAO,SAAcrkC,EAAM8tB,GAGhD,OAFAuY,EAAcvY,GACdnyC,KAAKqoD,GAAGhkC,EAAMmnC,EAAUxrD,KAAMqkB,EAAM8tB,IAC7BnyC,MAGT2pD,EAAa1sD,UAAUuvD,oBACnB,SAA6BnoC,EAAM8tB,GAGjC,OAFAuY,EAAcvY,GACdnyC,KAAKusD,gBAAgBloC,EAAMmnC,EAAUxrD,KAAMqkB,EAAM8tB,IAC1CnyC,MAIb2pD,EAAa1sD,UAAU2rD,eACnB,SAAwBvkC,EAAM8tB,GAC5B,IAAIziB,EAAMo7B,EAAQ2B,EAAU7wD,EAAG8wD,EAK/B,GAHAhC,EAAcvY,QAGCpyC,KADf+qD,EAAS9qD,KAAKsqD,SAEZ,OAAOtqD,KAGT,QAAaD,KADb2vB,EAAOo7B,EAAOzmC,IAEZ,OAAOrkB,KAET,GAAI0vB,IAASyiB,GAAYziB,EAAKyiB,WAAaA,EACb,MAAtBnyC,KAAKuqD,aACTvqD,KAAKsqD,QAAU1tD,OAAOioB,OAAO,cAEtBimC,EAAOzmC,GACVymC,EAAOlC,gBACT5oD,KAAKipD,KAAK,iBAAkB5kC,EAAMqL,EAAKyiB,UAAYA,SAElD,GAAoB,oBAATziB,EAAqB,CAGrC,IAFA+8B,GAAY,EAEP7wD,EAAI8zB,EAAK/zB,OAAS,EAAGC,GAAK,EAAGA,IAChC,GAAI8zB,EAAK9zB,KAAOu2C,GAAYziB,EAAK9zB,GAAGu2C,WAAaA,EAAU,CACzDua,EAAmBh9B,EAAK9zB,GAAGu2C,SAC3Bsa,EAAW7wD,EACX,MAIJ,GAAI6wD,EAAW,EACb,OAAOzsD,KAEQ,IAAbysD,EACF/8B,EAAKjC,QAiIf,SAAmBiC,EAAM0gB,GACvB,KAAOA,EAAQ,EAAI1gB,EAAK/zB,OAAQy0C,IAC9B1gB,EAAK0gB,GAAS1gB,EAAK0gB,EAAQ,GAC7B1gB,EAAKrX,MAlIGs0C,CAAUj9B,EAAM+8B,GAGE,IAAhB/8B,EAAK/zB,SACPmvD,EAAOzmC,GAAQqL,EAAK,SAEQ3vB,IAA1B+qD,EAAOlC,gBACT5oD,KAAKipD,KAAK,iBAAkB5kC,EAAMqoC,GAAoBva,GAG1D,OAAOnyC,MAGb2pD,EAAa1sD,UAAU0rD,IAAMgB,EAAa1sD,UAAU2rD,eAEpDe,EAAa1sD,UAAU4rD,mBACnB,SAA4BxkC,GAC1B,IAAI6kC,EAAW4B,EAAQlvD,EAGvB,QAAemE,KADf+qD,EAAS9qD,KAAKsqD,SAEZ,OAAOtqD,KAGT,QAA8BD,IAA1B+qD,EAAOlC,eAUT,OATyB,IAArBvrC,UAAU1hB,QACZqE,KAAKsqD,QAAU1tD,OAAOioB,OAAO,MAC7B7kB,KAAKuqD,aAAe,QACMxqD,IAAjB+qD,EAAOzmC,KACY,MAAtBrkB,KAAKuqD,aACTvqD,KAAKsqD,QAAU1tD,OAAOioB,OAAO,aAEtBimC,EAAOzmC,IAEXrkB,KAIT,GAAyB,IAArBqd,UAAU1hB,OAAc,CAC1B,IACImB,EADA2F,EAAO7F,OAAO6F,KAAKqoD,GAEvB,IAAKlvD,EAAI,EAAGA,EAAI6G,EAAK9G,SAAUC,EAEjB,oBADZkB,EAAM2F,EAAK7G,KAEXoE,KAAK6oD,mBAAmB/rD,GAK1B,OAHAkD,KAAK6oD,mBAAmB,kBACxB7oD,KAAKsqD,QAAU1tD,OAAOioB,OAAO,MAC7B7kB,KAAKuqD,aAAe,EACbvqD,KAKT,GAAyB,oBAFzBkpD,EAAY4B,EAAOzmC,IAGjBrkB,KAAK4oD,eAAevkC,EAAM6kC,QACrB,QAAkBnpD,IAAdmpD,EAET,IAAKttD,EAAIstD,EAAUvtD,OAAS,EAAGC,GAAK,EAAGA,IACrCoE,KAAK4oD,eAAevkC,EAAM6kC,EAAUttD,IAIxC,OAAOoE,MAoBb2pD,EAAa1sD,UAAUisD,UAAY,SAAmB7kC,GACpD,OAAOqnC,EAAW1rD,KAAMqkB,GAAM,IAGhCslC,EAAa1sD,UAAU2vD,aAAe,SAAsBvoC,GAC1D,OAAOqnC,EAAW1rD,KAAMqkB,GAAM,IAGhCslC,EAAaoC,cAAgB,SAASlC,EAASxlC,GAC7C,MAAqC,oBAA1BwlC,EAAQkC,cACVlC,EAAQkC,cAAc1nC,GAEtB0nC,EAAc3tD,KAAKyrD,EAASxlC,IAIvCslC,EAAa1sD,UAAU8uD,cAAgBA,EAiBvCpC,EAAa1sD,UAAU4vD,WAAa,WAClC,OAAO7sD,KAAKuqD,aAAe,EAAInB,EAAeppD,KAAKsqD,SAAW,mCCtahE/uD,EAAOC,QAAUiX,OAAOq6C,UAAY,SAAUnvD,GAC7C,QAA0B,kBAAVA,GAAsBA,IAAUA,GAASA,IAAUovD,EAAAA,GAAYpvD,KAAWovD,EAAAA,0BCD3F,IAAID,EAAWrtD,EAAQ,MACvBlE,EAAOC,QAAUiX,OAAO/S,WAAa,SAAS6N,GAC5C,MAAsB,kBAARA,GACZu/C,EAASv/C,IACTzH,KAAK4qB,MAAMnjB,KAASA,mzECDlBy/C,EAAAA,SAAAA,qEAAAA,CAAAA,EAAmBltD,QAKZmtD,EAAb,YACE,WAAYC,GAAQ,OAClBC,EAAAA,KAAAA,KAAAA,qBAA2BD,EAAOE,cADhB,KADtB,OAAAC,EAAAA,EAAAA,GAAA,GAA0CL,GAS7BM,EAAb,YACE,WAAYJ,GAAQ,OAClBK,EAAAA,KAAAA,KAAAA,qBAA2BL,EAAOE,cADhB,KADtB,OAAAC,EAAAA,EAAAA,GAAA,GAA0CL,GAS7BQ,EAAb,YACE,WAAYN,GAAQ,OAClBO,EAAAA,KAAAA,KAAAA,qBAA2BP,EAAOE,cADhB,KADtB,OAAAC,EAAAA,EAAAA,GAAA,GAA0CL,GAS7BU,EAAb,qEAAAL,EAAAA,EAAAA,GAAA,GAAmDL,GAKtCW,EAAb,YACE,WAAY53C,GAAM,OAChB63C,EAAAA,KAAAA,KAAAA,gBAAsB73C,IADN,KADpB,OAAAs3C,EAAAA,EAAAA,GAAA,GAAsCL,GASzBa,EAAb,qEAAAR,EAAAA,EAAAA,GAAA,GAA0CL,GAK7Bc,EAAb,YACE,aAAc,OACZC,EAAAA,KAAAA,KAAM,8BADM,KADhB,OAAAV,EAAAA,EAAAA,GAAA,GAAyCL,GCpDnC9uD,EAAI,UACRkD,EAAI,QACJ+4B,EAAI,OAEO6zB,EAAa,CACxB78B,KAAMjzB,EACNkzB,MAAOlzB,EACPmzB,IAAKnzB,GAGM+vD,EAAW,CACtB98B,KAAMjzB,EACNkzB,MAAOhwB,EACPiwB,IAAKnzB,GAGMgwD,EAAwB,CACnC/8B,KAAMjzB,EACNkzB,MAAOhwB,EACPiwB,IAAKnzB,EACL6yB,QAAS3vB,GAGE+sD,EAAY,CACvBh9B,KAAMjzB,EACNkzB,MAAO+I,EACP9I,IAAKnzB,GAGMkwD,EAAY,CACvBj9B,KAAMjzB,EACNkzB,MAAO+I,EACP9I,IAAKnzB,EACL6yB,QAASoJ,GAGEk0B,EAAc,CACzB/6B,KAAMp1B,EACNq1B,OAAQr1B,GAGGowD,EAAoB,CAC/Bh7B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,GAGGqwD,EAAyB,CACpCj7B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,EACRswD,aAAcptD,GAGHqtD,EAAwB,CACnCn7B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,EACRswD,aAAcr0B,GAGHu0B,EAAiB,CAC5Bp7B,KAAMp1B,EACNq1B,OAAQr1B,EACRywD,QAAQ,GAMGC,EAAuB,CAClCt7B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,EACRywD,QAAQ,GAMGE,EAA4B,CACvCv7B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,EACRywD,QAAQ,EACRH,aAAcptD,GAMH0tD,EAA2B,CACtCx7B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,EACRywD,QAAQ,EACRH,aAAcr0B,GAMH40B,EAAiB,CAC5B59B,KAAMjzB,EACNkzB,MAAOlzB,EACPmzB,IAAKnzB,EACLo1B,KAAMp1B,EACNq1B,OAAQr1B,GAMG8wD,EAA8B,CACzC79B,KAAMjzB,EACNkzB,MAAOlzB,EACPmzB,IAAKnzB,EACLo1B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,GAGG+wD,EAAe,CAC1B99B,KAAMjzB,EACNkzB,MAAOhwB,EACPiwB,IAAKnzB,EACLo1B,KAAMp1B,EACNq1B,OAAQr1B,GAGGgxD,EAA4B,CACvC/9B,KAAMjzB,EACNkzB,MAAOhwB,EACPiwB,IAAKnzB,EACLo1B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,GAGGixD,EAA4B,CACvCh+B,KAAMjzB,EACNkzB,MAAOhwB,EACPiwB,IAAKnzB,EACL6yB,QAAS3vB,EACTkyB,KAAMp1B,EACNq1B,OAAQr1B,GAGGkxD,EAAgB,CAC3Bj+B,KAAMjzB,EACNkzB,MAAO+I,EACP9I,IAAKnzB,EACLo1B,KAAMp1B,EACNq1B,OAAQr1B,EACRswD,aAAcptD,GAGHiuD,EAA6B,CACxCl+B,KAAMjzB,EACNkzB,MAAO+I,EACP9I,IAAKnzB,EACLo1B,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,EACRswD,aAAcptD,GAGHkuD,EAAgB,CAC3Bn+B,KAAMjzB,EACNkzB,MAAO+I,EACP9I,IAAKnzB,EACL6yB,QAASoJ,EACT7G,KAAMp1B,EACNq1B,OAAQr1B,EACRswD,aAAcr0B,GAGHo1B,EAA6B,CACxCp+B,KAAMjzB,EACNkzB,MAAO+I,EACP9I,IAAKnzB,EACL6yB,QAASoJ,EACT7G,KAAMp1B,EACNq1B,OAAQr1B,EACRs1B,OAAQt1B,EACRswD,aAAcr0B,GC/KhB,SAAgBq1B,EAAYxxD,GAC1B,MAAoB,qBAANA,EAGhB,SAAgByxD,EAASzxD,GACvB,MAAoB,kBAANA,EAGhB,SAAgB0B,EAAU1B,GACxB,MAAoB,kBAANA,GAAkBA,EAAI,IAAM,EAa5C,SAAgB0xD,IACd,IACE,MAAuB,qBAATC,MAAwBA,KAAKC,eAC3C,MAAO5yC,GACP,OAAO,GAIX,SAAgB6yC,IACd,OAAQL,EAAYG,KAAKC,eAAe3yD,UAAU6yD,eAGpD,SAAgBC,IACd,IACE,MAAuB,qBAATJ,QAA0BA,KAAKK,mBAC7C,MAAOhzC,GACP,OAAO,GAUX,SAAgBizC,EAAOx0D,EAAK06C,EAAI+Z,GAC9B,GAAmB,IAAfz0D,EAAIE,OAGR,OAAOF,EAAIiH,QAAO,SAACytD,EAAMzxC,GACvB,IAAM0xC,EAAO,CAACja,EAAGz3B,GAAOA,GACxB,OAAKyxC,GAEMD,EAAQC,EAAK,GAAIC,EAAK,MAAQD,EAAK,GACrCA,EAFAC,IAMR,MAAM,GAGX,SAAgBC,EAAKvuD,EAAKW,GACxB,OAAOA,EAAKC,QAAO,SAAC6E,EAAGwG,GAErB,OADAxG,EAAEwG,GAAKjM,EAAIiM,GACJxG,IACN,IAGL,SAAgB6F,EAAetL,EAAKwuD,GAClC,OAAO1zD,OAAOK,UAAUmQ,eAAehP,KAAK0D,EAAKwuD,GAKnD,SAAgBC,GAAeC,EAAOC,EAAQC,GAC5C,OAAOhxD,EAAU8wD,IAAUA,GAASC,GAAUD,GAASE,EAQzD,SAAgBp4B,GAAS+qB,EAAOnlD,QAAO,IAAPA,IAAAA,EAAI,GAClC,IAAMgD,EAAQmiD,EAAQ,EAAI,IAAM,GAC1B/mD,EAAS4E,GAAiB,EAATmiD,EAAaA,EASpC,MAAO,GAAGniD,GANN5E,EAAO6B,WAAWxC,OAASuC,GACnB,IAAIyyD,OAAOzyD,GAAK5B,GAAQkB,OAAOU,GAEhC5B,EAAO6B,YAMpB,SAAgByyD,GAAaj9B,GAC3B,OAAI67B,EAAY77B,IAAsB,OAAXA,GAA8B,KAAXA,OAC5C,EAEOpjB,SAASojB,EAAQ,IAI5B,SAAgBk9B,GAAYC,GAE1B,IAAItB,EAAYsB,IAA0B,OAAbA,GAAkC,KAAbA,EAAlD,CAGE,IAAMnqD,EAAkC,IAA9BhD,WAAW,KAAOmtD,GAC5B,OAAOhrD,KAAK4qB,MAAM/pB,IAItB,SAAgBoqD,GAAQC,EAAQC,EAAQC,QAAoB,IAApBA,IAAAA,GAAa,GACnD,IAAM9K,EAAS,KAAH,IAAG,GAAM6K,GAErB,OADYC,EAAaprD,KAAKqrD,MAAQrrD,KAAKi2B,OAC5Bi1B,EAAS5K,GAAUA,EAKpC,SAAgBgL,GAAWjgC,GACzB,OAAOA,EAAO,IAAM,IAAMA,EAAO,MAAQ,GAAKA,EAAO,MAAQ,GAG/D,SAAgBkgC,GAAWlgC,GACzB,OAAOigC,GAAWjgC,GAAQ,IAAM,IAGlC,SAAgBkC,GAAYlC,EAAMC,GAChC,IAAMkgC,EArDR,SAAyB1rD,EAAG1H,GAC1B,OAAO0H,EAAI1H,EAAI4H,KAAK4qB,MAAM9qB,EAAI1H,GAoDbqzD,CAASngC,EAAQ,EAAG,IAAM,EAG3C,OAAiB,IAAbkgC,EACKF,GAHGjgC,GAAQC,EAAQkgC,GAAY,IAGT,GAAK,GAE3B,CAAC,GAAI,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIA,EAAW,GAKzE,SAAgBE,GAAa1vD,GAC3B,IAAIzB,EAAI2uB,KAAKyiC,IACX3vD,EAAIqvB,KACJrvB,EAAIsvB,MAAQ,EACZtvB,EAAIuvB,IACJvvB,EAAIwxB,KACJxxB,EAAIyxB,OACJzxB,EAAI0xB,OACJ1xB,EAAI2xB,aAQN,OAJI3xB,EAAIqvB,KAAO,KAAOrvB,EAAIqvB,MAAQ,IAChC9wB,EAAI,IAAI2uB,KAAK3uB,IACXqxD,eAAerxD,EAAEu0B,iBAAmB,OAEhCv0B,EAGV,SAAgBsxD,GAAgBC,GAC9B,IAAMC,GACDD,EACC9rD,KAAK4qB,MAAMkhC,EAAW,GACtB9rD,KAAK4qB,MAAMkhC,EAAW,KACtB9rD,KAAK4qB,MAAMkhC,EAAW,MACxB,EACFE,EAAOF,EAAW,EAClBG,GAAMD,EAAOhsD,KAAK4qB,MAAMohC,EAAO,GAAKhsD,KAAK4qB,MAAMohC,EAAO,KAAOhsD,KAAK4qB,MAAMohC,EAAO,MAAQ,EACzF,OAAc,IAAPD,GAAmB,IAAPE,EAAW,GAAK,GAGrC,SAAgBC,GAAe7gC,GAC7B,OAAIA,EAAO,GACFA,EACKA,EAAO,GAAK,KAAOA,EAAO,IAAOA,EAKjD,SAAgB8gC,GAAcnU,EAAIoU,EAAcC,EAAQC,QAAiB,IAAjBA,IAAAA,EAAW,MACjE,IAAMtuC,EAAO,IAAIkL,KAAK8uB,GACpBuU,EAAW,CACT1D,QAAQ,EACRx9B,KAAM,UACNC,MAAO,UACPC,IAAK,UACLiC,KAAM,UACNC,OAAQ,WAGR6+B,IACFC,EAASD,SAAWA,GAGtB,IAAME,EAAW11D,OAAO4Q,OAAO,CAAEghD,aAAc0D,GAAgBG,GAC7DE,EAAO7C,IAET,GAAI6C,GAAQ1C,IAAoB,CAC9B,IAAM2C,EAAS,IAAI7C,KAAKC,eAAeuC,EAAQG,GAC5CxC,cAAchsC,GACdtB,MAAK,SAAAkJ,GAAC,MAA6B,iBAAzBA,EAAErH,KAAK3d,iBACpB,OAAO8rD,EAASA,EAAO70D,MAAQ,KAC1B,GAAI40D,EAAM,CAEf,IAAME,EAAU,IAAI9C,KAAKC,eAAeuC,EAAQE,GAAUt6B,OAAOjU,GAIjE,OAHa,IAAI6rC,KAAKC,eAAeuC,EAAQG,GAAUv6B,OAAOjU,GAC1C3Q,UAAUs/C,EAAQ92D,QACnB+T,QAAQ,eAAgB,IAG3C,OAAO,KAKX,SAAgBgjD,GAAaC,EAAYC,GACvC,IAAIC,EAAUtiD,SAASoiD,EAAY,IAG/BlgD,OAAO3L,MAAM+rD,KACfA,EAAU,GAGZ,IAAMC,EAASviD,SAASqiD,EAAc,KAAO,EAE7C,OAAiB,GAAVC,GADUA,EAAU,GAAKj2D,OAAOm2D,GAAGF,GAAU,IAAMC,EAASA,GAMrE,SAAgBE,GAASr1D,GACvB,IAAMs1D,EAAexgD,OAAO9U,GAC5B,GAAqB,mBAAVA,GAAiC,KAAVA,GAAgB8U,OAAO3L,MAAMmsD,GAC7D,MAAM,IAAIpF,EAAJ,sBAA+ClwD,GACvD,OAAOs1D,EAGT,SAAgBC,GAAgBpxD,EAAKqxD,EAAYC,GAC/C,IAAMC,EAAa,GACnB,IAAK,IAAM1qD,KAAK7G,EACd,GAAIsL,EAAetL,EAAK6G,GAAI,CAC1B,GAAIyqD,EAAYthD,QAAQnJ,IAAM,EAAG,SACjC,IAAMk1C,EAAI/7C,EAAI6G,GACd,QAAU5I,IAAN89C,GAAyB,OAANA,EAAY,SACnCwV,EAAWF,EAAWxqD,IAAMqqD,GAASnV,GAGzC,OAAOwV,EAGT,SAAgBC,GAAa5gC,EAAQqF,GACnC,IAAM/D,EAAQluB,KAAKqrD,MAAMrrD,KAAK6xB,IAAIjF,EAAS,KACzCuB,EAAUnuB,KAAKqrD,MAAMrrD,KAAK6xB,IAAIjF,EAAS,KACvC6gC,EAAO7gC,GAAU,EAAI,IAAM,IAE7B,OAAQqF,GACN,IAAK,QACH,MAAO,GAAGw7B,EAAOj7B,GAAStE,EAAO,GAAjC,IAAuCsE,GAASrE,EAAS,GAC3D,IAAK,SACH,MAAO,GAAGs/B,EAAOv/B,GAAQC,EAAU,EAAVA,IAAkBA,EAAY,IACzD,IAAK,SACH,MAAO,GAAGs/B,EAAOj7B,GAAStE,EAAO,GAAKsE,GAASrE,EAAS,GAC1D,QACE,MAAM,IAAIg4B,WAAJ,gBAA+Bl0B,EAA/B,yCAIZ,SAAgBy7B,GAAW1xD,GACzB,OAAOuuD,EAAKvuD,EAAK,CAAC,OAAQ,SAAU,SAAU,gBAGhD,IAAa2xD,GAAY,qEChSzB,SAAStzD,GAAU2B,GACjB,OAAO5B,KAAKC,UAAU2B,EAAKlF,OAAO6F,KAAKX,GAAKmD,QAO9C,IAAayuD,GAAa,CACxB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGWC,GAAc,CACzB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGWC,GAAe,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEpF,SAAgB9/B,GAAOn4B,GACrB,OAAQA,GACN,IAAK,SACH,MAAO,GAAP,OAAWi4D,IACb,IAAK,QACH,MAAO,GAAP,OAAWD,IACb,IAAK,OACH,MAAO,GAAP,OAAWD,IACb,IAAK,UACH,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MACnE,IAAK,UACH,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5E,QACE,OAAO,MAIb,IAAaG,GAAe,CAC1B,SACA,UACA,YACA,WACA,SACA,WACA,UAGWC,GAAgB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE3DC,GAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE7D,SAAgBC,GAASr4D,GACvB,OAAQA,GACN,IAAK,SACH,MAAO,GAAP,OAAWo4D,IACb,IAAK,QACH,MAAO,GAAP,OAAWD,IACb,IAAK,OACH,MAAO,GAAP,OAAWD,IACb,IAAK,UACH,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxC,QACE,OAAO,MAIb,IAAaI,GAAY,CAAC,KAAM,MAEnBC,GAAW,CAAC,gBAAiB,eAE7BC,GAAY,CAAC,KAAM,MAEnBC,GAAa,CAAC,IAAK,KAEhC,SAAgBC,GAAK14D,GACnB,OAAQA,GACN,IAAK,SACH,MAAO,GAAP,OAAWy4D,IACb,IAAK,QACH,MAAO,GAAP,OAAWD,IACb,IAAK,OACH,MAAO,GAAP,OAAWD,IACb,QACE,OAAO,MCtGb,SAASI,GAAgBC,EAAQC,GAE/B,IADA,IACA,EADIpzD,EAAI,GACR,IAAoBmzD,KAApB,aAA4B,KAAjBE,EAAiB,QACtBA,EAAMC,QACRtzD,GAAKqzD,EAAMlnD,IAEXnM,GAAKozD,EAAcC,EAAMlnD,KAG7B,OAAOnM,EAGT,IAAMuzD,GAAyB,CAC7BC,EAAGC,EACHC,GAAID,EACJE,IAAKF,EACLG,KAAMH,EACNzwC,EAAGywC,EACHI,GAAIJ,EACJK,IAAKL,EACLM,KAAMN,EACNO,EAAGP,EACHQ,GAAIR,EACJS,IAAKT,EACLU,KAAMV,EACNluD,EAAGkuD,EACHW,GAAIX,EACJY,IAAKZ,EACLa,KAAMb,EACNz2C,EAAGy2C,EACHc,GAAId,EACJe,IAAKf,EACLgB,KAAMhB,GAOaiB,GAAAA,WA2CnB,WAAY3D,EAAQ4D,GAClB/1D,KAAKgsB,KAAO+pC,EACZ/1D,KAAKg2D,IAAM7D,EACXnyD,KAAKi2D,UAAY,OA7CZpxC,OAAP,SAAcstC,EAAQnmC,GACpB,YAD+B,IAAXA,IAAAA,EAAO,IACpB,IAAI8pC,EAAU3D,EAAQnmC,MAGxBkqC,YAAP,SAAmB9hC,GAKjB,IAJA,IAAI7G,EAAU,KACZ4oC,EAAc,GACdC,GAAY,EACR7B,EAAS,GACN34D,EAAI,EAAGA,EAAIw4B,EAAIz4B,OAAQC,IAAK,CACnC,IAAMmY,EAAIqgB,EAAIvzB,OAAOjF,GACX,MAANmY,GACEoiD,EAAYx6D,OAAS,GACvB44D,EAAOj0D,KAAK,CAAEo0D,QAAS0B,EAAW7oD,IAAK4oD,IAEzC5oC,EAAU,KACV4oC,EAAc,GACdC,GAAaA,GACJA,GAEAriD,IAAMwZ,EADf4oC,GAAepiD,GAIXoiD,EAAYx6D,OAAS,GACvB44D,EAAOj0D,KAAK,CAAEo0D,SAAS,EAAOnnD,IAAK4oD,IAErCA,EAAcpiD,EACdwZ,EAAUxZ,GAQd,OAJIoiD,EAAYx6D,OAAS,GACvB44D,EAAOj0D,KAAK,CAAEo0D,QAAS0B,EAAW7oD,IAAK4oD,IAGlC5B,KAGFI,uBAAP,SAA8BF,GAC5B,OAAOE,GAAuBF,+BAShC4B,wBAAAA,SAAwBzxB,EAAI5Y,GAK1B,OAJuB,OAAnBhsB,KAAKi2D,YACPj2D,KAAKi2D,UAAYj2D,KAAKg2D,IAAIM,qBAEjBt2D,KAAKi2D,UAAUM,YAAY3xB,EAAIhoC,OAAO4Q,OAAO,GAAIxN,KAAKgsB,KAAMA,IAC7D+L,YAGZy+B,eAAAA,SAAe5xB,EAAI5Y,GAEjB,YAF4B,IAAXA,IAAAA,EAAO,IACbhsB,KAAKg2D,IAAIO,YAAY3xB,EAAIhoC,OAAO4Q,OAAO,GAAIxN,KAAKgsB,KAAMA,IACvD+L,YAGZ0+B,oBAAAA,SAAoB7xB,EAAI5Y,GAEtB,YAFiC,IAAXA,IAAAA,EAAO,IAClBhsB,KAAKg2D,IAAIO,YAAY3xB,EAAIhoC,OAAO4Q,OAAO,GAAIxN,KAAKgsB,KAAMA,IACvD8jC,mBAGZ4G,gBAAAA,SAAgB9xB,EAAI5Y,GAElB,YAF6B,IAAXA,IAAAA,EAAO,IACdhsB,KAAKg2D,IAAIO,YAAY3xB,EAAIhoC,OAAO4Q,OAAO,GAAIxN,KAAKgsB,KAAMA,IACvD0qC,qBAGZ7vD,IAAAA,SAAI3I,EAAG0G,GAEL,QAFY,IAAPA,IAAAA,EAAI,GAEL5E,KAAKgsB,KAAK2qC,YACZ,OAAOr+B,GAASp6B,EAAG0G,GAGrB,IAAMonB,EAAOpvB,OAAO4Q,OAAO,GAAIxN,KAAKgsB,MAMpC,OAJIpnB,EAAI,IACNonB,EAAK4qC,MAAQhyD,GAGR5E,KAAKg2D,IAAIa,gBAAgB7qC,GAAM+L,OAAO75B,MAG/C44D,yBAAAA,SAAyBlyB,EAAIxQ,GAAK,WAC1B2iC,EAA0C,OAA3B/2D,KAAKg2D,IAAIgB,cAC5BC,EACEj3D,KAAKg2D,IAAIkB,gBAA8C,YAA5Bl3D,KAAKg2D,IAAIkB,gBAAgCrH,IACtEl8B,EAAS,SAAC3H,EAAMmrC,GAAP,OAAmBt2C,EAAKm1C,IAAImB,QAAQvyB,EAAI5Y,EAAMmrC,IACvD7D,EAAe,SAAAtnC,GACb,OAAI4Y,EAAGwyB,eAA+B,IAAdxyB,EAAGlS,QAAgB1G,EAAKqrC,OACvC,IAGFzyB,EAAGtQ,QAAUsQ,EAAGzN,KAAKm8B,aAAa1uB,EAAGkZ,GAAI9xB,EAAK+L,QAAU,IAEjEu/B,EAAW,kBACTP,EDjCR,SAAoCnyB,GAClC,OAAOqvB,GAAUrvB,EAAGtR,KAAO,GAAK,EAAI,GCiC1BikC,CAA4B3yB,GAC5BjR,EAAO,CAAEL,KAAM,UAAWq7B,QAAQ,GAAQ,cAChDv9B,EAAQ,SAACz1B,EAAQ67D,GAAT,OACNT,ED7BR,SAAiCnyB,EAAIjpC,GACnC,OAAOm4B,GAAOn4B,GAAQipC,EAAGxT,MAAQ,GC6BvBmmC,CAAyB3yB,EAAIjpC,GAC7Bg4B,EAAO6jC,EAAa,CAAEpmC,MAAOz1B,GAAW,CAAEy1B,MAAOz1B,EAAQ01B,IAAK,WAAa,UACjFN,EAAU,SAACp1B,EAAQ67D,GAAT,OACRT,EDrCR,SAAmCnyB,EAAIjpC,GACrC,OAAOq4D,GAASr4D,GAAQipC,EAAG7T,QAAU,GCqC3BwmC,CAA2B3yB,EAAIjpC,GAC/Bg4B,EACE6jC,EAAa,CAAEzmC,QAASp1B,GAAW,CAAEo1B,QAASp1B,EAAQy1B,MAAO,OAAQC,IAAK,WAC1E,YAURomC,EAAM,SAAA97D,GAAM,OACVo7D,ED5CR,SAA+BnyB,EAAIjpC,GACjC,OAAO04D,GAAK14D,GAAQipC,EAAGzT,KAAO,EAAI,EAAI,GC2CjBomC,CAAuB3yB,EAAIjpC,GAAUg4B,EAAO,CAAE8jC,IAAK97D,GAAU,QAmLhF,OAAO24D,GAAgBwB,EAAUI,YAAY9hC,IAlL3B,SAAAqgC,GAEd,OAAQA,GAEN,IAAK,IACH,OAAO5zC,EAAKha,IAAI+9B,EAAGnR,aACrB,IAAK,IAEL,IAAK,MACH,OAAO5S,EAAKha,IAAI+9B,EAAGnR,YAAa,GAElC,IAAK,IACH,OAAO5S,EAAKha,IAAI+9B,EAAGpR,QACrB,IAAK,KACH,OAAO3S,EAAKha,IAAI+9B,EAAGpR,OAAQ,GAE7B,IAAK,IACH,OAAO3S,EAAKha,IAAI+9B,EAAGrR,QACrB,IAAK,KACH,OAAO1S,EAAKha,IAAI+9B,EAAGrR,OAAQ,GAE7B,IAAK,IACH,OAAO1S,EAAKha,IAAI+9B,EAAGtR,KAAO,KAAO,EAAI,GAAKsR,EAAGtR,KAAO,IACtD,IAAK,KACH,OAAOzS,EAAKha,IAAI+9B,EAAGtR,KAAO,KAAO,EAAI,GAAKsR,EAAGtR,KAAO,GAAI,GAC1D,IAAK,IACH,OAAOzS,EAAKha,IAAI+9B,EAAGtR,MACrB,IAAK,KACH,OAAOzS,EAAKha,IAAI+9B,EAAGtR,KAAM,GAE3B,IAAK,IAEH,OAAOggC,EAAa,CAAEv7B,OAAQ,SAAUs/B,OAAQx2C,EAAKmL,KAAKqrC,SAC5D,IAAK,KAEH,OAAO/D,EAAa,CAAEv7B,OAAQ,QAASs/B,OAAQx2C,EAAKmL,KAAKqrC,SAC3D,IAAK,MAEH,OAAO/D,EAAa,CAAEv7B,OAAQ,SAAUs/B,OAAQx2C,EAAKmL,KAAKqrC,SAC5D,IAAK,OAEH,OAAOzyB,EAAGzN,KAAKugC,WAAW9yB,EAAGkZ,GAAI,CAAE/lB,OAAQ,QAASo6B,OAAQtxC,EAAKm1C,IAAI7D,SACvE,IAAK,QAEH,OAAOvtB,EAAGzN,KAAKugC,WAAW9yB,EAAGkZ,GAAI,CAAE/lB,OAAQ,OAAQo6B,OAAQtxC,EAAKm1C,IAAI7D,SAEtE,IAAK,IAEH,OAAOvtB,EAAG+yB,SAEZ,IAAK,IACH,OAAOL,IAET,IAAK,IACH,OAAOL,EAAuBtjC,EAAO,CAAEtC,IAAK,WAAa,OAASxQ,EAAKha,IAAI+9B,EAAGvT,KAChF,IAAK,KACH,OAAO4lC,EAAuBtjC,EAAO,CAAEtC,IAAK,WAAa,OAASxQ,EAAKha,IAAI+9B,EAAGvT,IAAK,GAErF,IAAK,IAaL,IAAK,IAEH,OAAOxQ,EAAKha,IAAI+9B,EAAG7T,SAZrB,IAAK,MAEH,OAAOA,EAAQ,SAAS,GAC1B,IAAK,OAEH,OAAOA,EAAQ,QAAQ,GACzB,IAAK,QAEH,OAAOA,EAAQ,UAAU,GAK3B,IAAK,MAEH,OAAOA,EAAQ,SAAS,GAC1B,IAAK,OAEH,OAAOA,EAAQ,QAAQ,GACzB,IAAK,QAEH,OAAOA,EAAQ,UAAU,GAE3B,IAAK,IAEH,OAAOkmC,EACHtjC,EAAO,CAAEvC,MAAO,UAAWC,IAAK,WAAa,SAC7CxQ,EAAKha,IAAI+9B,EAAGxT,OAClB,IAAK,KAEH,OAAO6lC,EACHtjC,EAAO,CAAEvC,MAAO,UAAWC,IAAK,WAAa,SAC7CxQ,EAAKha,IAAI+9B,EAAGxT,MAAO,GACzB,IAAK,MAEH,OAAOA,EAAM,SAAS,GACxB,IAAK,OAEH,OAAOA,EAAM,QAAQ,GACvB,IAAK,QAEH,OAAOA,EAAM,UAAU,GAEzB,IAAK,IAEH,OAAO6lC,EACHtjC,EAAO,CAAEvC,MAAO,WAAa,SAC7BvQ,EAAKha,IAAI+9B,EAAGxT,OAClB,IAAK,KAEH,OAAO6lC,EACHtjC,EAAO,CAAEvC,MAAO,WAAa,SAC7BvQ,EAAKha,IAAI+9B,EAAGxT,MAAO,GACzB,IAAK,MAEH,OAAOA,EAAM,SAAS,GACxB,IAAK,OAEH,OAAOA,EAAM,QAAQ,GACvB,IAAK,QAEH,OAAOA,EAAM,UAAU,GAEzB,IAAK,IAEH,OAAO6lC,EAAuBtjC,EAAO,CAAExC,KAAM,WAAa,QAAUtQ,EAAKha,IAAI+9B,EAAGzT,MAClF,IAAK,KAEH,OAAO8lC,EACHtjC,EAAO,CAAExC,KAAM,WAAa,QAC5BtQ,EAAKha,IAAI+9B,EAAGzT,KAAKhzB,WAAWX,OAAO,GAAI,GAC7C,IAAK,OAEH,OAAOy5D,EACHtjC,EAAO,CAAExC,KAAM,WAAa,QAC5BtQ,EAAKha,IAAI+9B,EAAGzT,KAAM,GACxB,IAAK,SAEH,OAAO8lC,EACHtjC,EAAO,CAAExC,KAAM,WAAa,QAC5BtQ,EAAKha,IAAI+9B,EAAGzT,KAAM,GAExB,IAAK,IAEH,OAAOsmC,EAAI,SACb,IAAK,KAEH,OAAOA,EAAI,QACb,IAAK,QACH,OAAOA,EAAI,UACb,IAAK,KACH,OAAO52C,EAAKha,IAAI+9B,EAAGgtB,SAASzzD,WAAWX,OAAO,GAAI,GACpD,IAAK,OACH,OAAOqjB,EAAKha,IAAI+9B,EAAGgtB,SAAU,GAC/B,IAAK,IACH,OAAO/wC,EAAKha,IAAI+9B,EAAGgzB,YACrB,IAAK,KACH,OAAO/2C,EAAKha,IAAI+9B,EAAGgzB,WAAY,GACjC,IAAK,IACH,OAAO/2C,EAAKha,IAAI+9B,EAAGizB,SACrB,IAAK,MACH,OAAOh3C,EAAKha,IAAI+9B,EAAGizB,QAAS,GAC9B,IAAK,IAEH,OAAOh3C,EAAKha,IAAI+9B,EAAGkzB,SACrB,IAAK,KAEH,OAAOj3C,EAAKha,IAAI+9B,EAAGkzB,QAAS,GAC9B,IAAK,IACH,OAAOj3C,EAAKha,IAAIf,KAAK4qB,MAAMkU,EAAGkZ,GAAK,MACrC,IAAK,IACH,OAAOj9B,EAAKha,IAAI+9B,EAAGkZ,IACrB,QACE,OAxLO,SAAA2W,GACX,IAAMsB,EAAaD,EAAUnB,uBAAuBF,GACpD,OAAIsB,EACKl1C,EAAKw1C,wBAAwBzxB,EAAImxB,GAEjCtB,EAmLEsD,CAAWtD,UAO5BuD,yBAAAA,SAAyBC,EAAK7jC,GAAK,IAqBf8jC,EArBe,OAC3BC,EAAe,SAAA1D,GACjB,OAAQA,EAAM,IACZ,IAAK,IACH,MAAO,cACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,OACT,IAAK,IACH,MAAO,MACT,IAAK,IACH,MAAO,QACT,IAAK,IACH,MAAO,OACT,QACE,OAAO,OAWb2D,EAAStC,EAAUI,YAAY9hC,GAC/BikC,EAAaD,EAAO11D,QAClB,SAAC41D,EAAD,OAAU5D,EAAV,EAAUA,QAASnnD,EAAnB,EAAmBA,IAAnB,OAA8BmnD,EAAU4D,EAAQA,EAAMz1D,OAAO0K,KAC7D,IAEFgrD,EAAYN,EAAIO,QAAJP,MAAAA,EAAeI,EAAWl2D,IAAIg2D,GAAcpyC,QAAO,SAAA3B,GAAC,OAAIA,MACtE,OAAOkwC,GAAgB8D,GAdLF,EAc2BK,EAdjB,SAAA9D,GACxB,IAAMgE,EAASN,EAAa1D,GAC5B,OAAIgE,EACKxzC,EAAKpe,IAAIqxD,EAAO73C,IAAIo4C,GAAShE,EAAM94D,QAEnC84D,QA3UIqB,GC3CA4C,GAAAA,WACnB,WAAYxL,EAAQyL,GAClB34D,KAAKktD,OAASA,EACdltD,KAAK24D,YAAcA,qBAGrBvL,UAAAA,WACE,OAAIptD,KAAK24D,YACG34D,KAAKktD,OAAf,KAA0BltD,KAAK24D,YAExB34D,KAAKktD,UAVGwL,GCMAE,GAAAA,oDAqCnBlB,WAAAA,SAAW5Z,EAAI9xB,GACb,MAAM,IAAI8hC,KAWZwF,aAAAA,SAAaxV,EAAI/lB,GACf,MAAM,IAAI+1B,KASZp7B,OAAAA,SAAOorB,GACL,MAAM,IAAIgQ,KASZzsD,OAAAA,SAAOw3D,GACL,MAAM,IAAI/K,mCA/DV,MAAM,IAAIA,+BASV,MAAM,IAAIA,oCASV,MAAM,IAAIA,kCAsDV,MAAM,IAAIA,QA/EO8K,GCHjBE,GAAY,KAMKC,GAAAA,SAAAA,uFA8BnBrB,WAAAA,SAAW5Z,EAAX,GACE,OAAOmU,GAAcnU,EADY,EAAlB/lB,OAAkB,EAAVo6B,WAKzBmB,aAAAA,SAAaxV,EAAI/lB,GACf,OAAOu7B,GAAatzD,KAAK0yB,OAAOorB,GAAK/lB,MAIvCrF,OAAAA,SAAOorB,GACL,OAAQ,IAAI9uB,KAAK8uB,GAAIpqB,uBAIvBryB,OAAAA,SAAOw3D,GACL,MAA0B,UAAnBA,EAAUx0C,sCAhCjB,MAAO,qCAKP,OAAIqrC,KACK,IAAIC,KAAKC,gBAAiB8G,kBAAkBtE,SACvC,0CAKd,OAAO,kCAyBP,OAAO,qCA1CP,OAHkB,OAAd0G,KACFA,GAAY,IAAIC,GAEXD,SATUC,CAAkBH,ICNjCI,GAAgBpiD,OAAO,IAAI68C,GAAUv1B,OAAf,KAExB+6B,GAAW,GAiBf,IAAMC,GAAY,CAChB/nC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLiC,KAAM,EACNC,OAAQ,EACRC,OAAQ,GAwBV,IAAI2lC,GAAgB,GAKCC,GAAAA,SAAAA,GA8DnB,WAAY96D,GAAM,aAChBuiB,EAAAA,EAAAA,KAAAA,OAAAA,MAEK82C,SAAWr5D,EAEhBuiB,EAAKyb,MAAQ88B,EAASC,YAAY/6D,GALlB,WAzDXumB,OAAP,SAAcvmB,GAIZ,OAHK66D,GAAc76D,KACjB66D,GAAc76D,GAAQ,IAAI86D,EAAS96D,IAE9B66D,GAAc76D,MAOhBg7D,WAAP,WACEH,GAAgB,GAChBF,GAAW,MAWNM,iBAAP,SAAwBn4D,GACtB,SAAUA,IAAKA,EAAE0M,MAAMkrD,QAWlBK,YAAP,SAAmBliC,GACjB,IAEE,OADA,IAAIw4B,KAAKC,eAAe,QAAS,CAAEwC,SAAUj7B,IAAQY,UAC9C,EACP,MAAO/a,GACP,OAAO,MAMJw8C,eAAP,SAAsBC,GACpB,GAAIA,EAAW,CACb,IAAM3rD,EAAQ2rD,EAAU3rD,MAAM,8BAC9B,GAAIA,EACF,OAAQ,GAAKyC,SAASzC,EAAM,IAGhC,OAAO,iCA2BT4pD,WAAAA,SAAW5Z,EAAX,GACE,OAAOmU,GAAcnU,EADY,EAAlB/lB,OAAkB,EAAVo6B,OACkBnyD,KAAK1B,SAIhDg1D,aAAAA,SAAaxV,EAAI/lB,GACf,OAAOu7B,GAAatzD,KAAK0yB,OAAOorB,GAAK/lB,MAIvCrF,OAAAA,SAAOorB,GACL,IAAMh6B,EAAO,IAAIkL,KAAK8uB,GAEtB,GAAIh3C,MAAMgd,GAAO,OAAOygC,IAElB,IAxJOptB,EAwJPuiC,GAxJOviC,EAwJOn3B,KAAK1B,KAvJtB26D,GAAS9hC,KACZ8hC,GAAS9hC,GAAQ,IAAIw4B,KAAKC,eAAe,QAAS,CAChDjB,QAAQ,EACRyD,SAAUj7B,EACVhG,KAAM,UACNC,MAAO,UACPC,IAAK,UACLiC,KAAM,UACNC,OAAQ,UACRC,OAAQ,aAGLylC,GAAS9hC,IA2IR,EACuCuiC,EAAI5J,cAzHrD,SAAqB4J,EAAK51C,GAGxB,IAFA,IAAM61C,EAAYD,EAAI5J,cAAchsC,GAClC81C,EAAS,GACFh+D,EAAI,EAAGA,EAAI+9D,EAAUh+D,OAAQC,IAAK,OACjB+9D,EAAU/9D,GAA1ByoB,EADiC,EACjCA,KAAM1mB,EAD2B,EAC3BA,MACZk8D,EAAMX,GAAU70C,GAEbmrC,EAAYqK,KACfD,EAAOC,GAAOtpD,SAAS5S,EAAO,KAGlC,OAAOi8D,EA+GCE,CAAYJ,EAAK51C,GAjI3B,SAAqB41C,EAAK51C,GAClB,IAAA61C,EAAYD,EAAI3hC,OAAOjU,GAAMpU,QAAQ,UAAW,IACpD8iD,EAAS,0CAA0C7mC,KAAKguC,GACrDI,EAAgDvH,EAF/C,GAEOwH,EAAwCxH,EAF/C,GAGN,MAAO,CAD8CA,EAF/C,GAGSuH,EAAQC,EAD8BxH,EAF/C,GAE+CA,EAF/C,GAE+CA,EAF/C,IAiIEyH,CAAYP,EAAK51C,GAFpBqN,EADG,KACGC,EADH,KACUC,EADV,KACeiC,EADf,KAiBF4mC,GAAQp2C,EACNq2C,EAAOD,EAAO,IAEpB,OAbc1I,GAAa,CACzBrgC,KAAAA,EACAC,MAAAA,EACAC,IAAAA,EACAiC,KANwB,KAATA,EAAc,EAAIA,EAOjCC,OAZI,KAaJC,OAbI,KAcJC,YAAa,KAKfymC,GAAQC,GAAQ,EAAIA,EAAO,IAAOA,IAC3B,OAIT94D,OAAAA,SAAOw3D,GACL,MAA0B,SAAnBA,EAAUx0C,MAAmBw0C,EAAUv6D,OAAS0B,KAAK1B,sCAtD5D,MAAO,oCAKP,OAAO0B,KAAK23D,2CAKZ,OAAO,kCAiDP,OAAO33D,KAAKs8B,YAnIK88B,CAAiBR,ICtDlCE,GAAY,KAMKsB,GAAAA,SAAAA,GAuCnB,WAAY1nC,GAAQ,aAClB7R,EAAAA,EAAAA,KAAAA,OAAAA,MAEKw5C,MAAQ3nC,EAHK,WAtBbx2B,SAAP,SAAgBw2B,GACd,OAAkB,IAAXA,EAAe0nC,EAAgBjiC,YAAc,IAAIiiC,EAAgB1nC,MAWnE4nC,eAAP,SAAsBl5D,GACpB,GAAIA,EAAG,CACL,IAAMsV,EAAItV,EAAE0M,MAAM,yCAClB,GAAI4I,EACF,OAAO,IAAI0jD,EAAgB1H,GAAah8C,EAAE,GAAIA,EAAE,KAGpD,OAAO,kDA3BP,OAHkB,OAAdoiD,KACFA,GAAY,IAAIsB,EAAgB,IAE3BtB,kCA+CTpB,WAAAA,WACE,OAAO13D,KAAK1B,QAIdg1D,aAAAA,SAAaxV,EAAI/lB,GACf,OAAOu7B,GAAatzD,KAAKq6D,MAAOtiC,MASlCrF,OAAAA,WACE,OAAO1yB,KAAKq6D,SAIdh5D,OAAAA,SAAOw3D,GACL,MAA0B,UAAnBA,EAAUx0C,MAAoBw0C,EAAUwB,QAAUr6D,KAAKq6D,uCA9B9D,MAAO,qCAKP,OAAsB,IAAfr6D,KAAKq6D,MAAc,MAAnB,MAAiC/G,GAAatzD,KAAKq6D,MAAO,4CAejE,OAAO,kCAeP,OAAO,QAlFUD,CAAwBxB,ICHxB2B,GAAAA,SAAAA,GACnB,WAAY5C,GAAU,aACpB92C,EAAAA,EAAAA,KAAAA,OAAAA,MAEK82C,SAAWA,EAHI,oCAsBtBD,WAAAA,WACE,OAAO,QAITpE,aAAAA,WACE,MAAO,MAIT5gC,OAAAA,WACE,OAAO6xB,OAITljD,OAAAA,WACE,OAAO,mCA9BP,MAAO,uCAKP,OAAOrB,KAAK23D,2CAKZ,OAAO,kCAyBP,OAAO,QA5CU4C,CAAoB3B,ICFzC,SAOgB4B,GAAcnX,EAAOoX,GACnC,IAAI/nC,EACJ,GAAI88B,EAAYnM,IAAoB,OAAVA,EACxB,OAAOoX,EACF,GAAIpX,aAAiBuV,GAC1B,OAAOvV,EACF,GTUa,kBSVAA,EAAQ,CAC1B,IAAMqX,EAAUrX,EAAM38C,cACtB,MAAgB,UAAZg0D,EAA4BD,EACX,QAAZC,GAAiC,QAAZA,EAA0BN,GAAgBjiC,YAClB,OAA5CzF,EAAS0mC,GAASI,eAAenW,IAElC+W,GAAgBl+D,SAASw2B,GACvB0mC,GAASG,iBAAiBmB,GAAiBtB,GAASv0C,OAAOw+B,GAC1D+W,GAAgBE,eAAeI,IAAY,IAAIH,GAAYlX,GAClE,OAAIoM,EAASpM,GACX+W,GAAgBl+D,SAASmnD,GACN,kBAAVA,GAAsBA,EAAM3wB,QAAkC,kBAAjB2wB,EAAM3wB,OAG5D2wB,EAEA,IAAIkX,GAAYlX,GC3B3B,IAAIsX,GAAM,kBAAM3rC,KAAK2rC,OACnBF,GAAc,KACdG,GAAgB,KAChBC,GAAyB,KACzBC,GAAwB,KACxBC,IAAiB,EAKEC,GAAAA,kCAoHZC,YAAP,WACEC,GAAO5B,aACPF,GAASE,kDAhHT,OAAOqB,iBAUMz8D,GACby8D,GAAMz8D,0CAQN,OAAO88D,EAASP,YAAYn8D,mBAOH69B,GAIvBs+B,GAHGt+B,EAGWq+B,GAAcr+B,GAFd,yCAWhB,OAAOs+B,IAAe1B,GAAU78D,+CAQhC,OAAO0+D,iBAOgBzI,GACvByI,GAAgBzI,iDAQhB,OAAO0I,iBAOyBM,GAChCN,GAAyBM,gDAQzB,OAAOL,iBAOwB5D,GAC/B4D,GAAwB5D,yCAQxB,OAAO6D,iBAOiB32C,GACxB22C,GAAiB32C,QA7GA42C,GCTjBI,GAAc,GAClB,SAASC,GAAaC,EAAWtvC,QAAW,IAAXA,IAAAA,EAAO,IACtC,IAAMlvB,EAAMoD,KAAKC,UAAU,CAACm7D,EAAWtvC,IACnC0tC,EAAM0B,GAAYt+D,GAKtB,OAJK48D,IACHA,EAAM,IAAI/J,KAAKC,eAAe0L,EAAWtvC,GACzCovC,GAAYt+D,GAAO48D,GAEdA,EAGT,IAAI6B,GAAe,GAWnB,IAAIC,GAAe,GACnB,SAASC,GAAaH,EAAWtvC,QAAW,IAAXA,IAAAA,EAAO,IAAI,MACRA,EAAjB0vC,GADyB,EAClCjV,yIADkC,cAEpC3pD,EAAMoD,KAAKC,UAAU,CAACm7D,EAAWI,IACnCC,EAAMH,GAAa1+D,GAKvB,OAJK6+D,IACHA,EAAM,IAAIhM,KAAKK,mBAAmBsL,EAAWtvC,GAC7CwvC,GAAa1+D,GAAO6+D,GAEfA,EAGT,IAAIC,GAAiB,KAiFrB,SAASC,GAAU7F,EAAKr6D,EAAQmgE,EAAWC,EAAWC,GACpD,IAAMz8B,EAAOy2B,EAAIgB,YAAY8E,GAE7B,MAAa,UAATv8B,EACK,KACW,OAATA,EACFw8B,EAAUpgE,GAEVqgE,EAAOrgE,OAqBZsgE,GAAAA,WACJ,WAAY1J,EAAMoE,EAAa3qC,GAI7B,GAHAhsB,KAAK42D,MAAQ5qC,EAAK4qC,OAAS,EAC3B52D,KAAK0wB,MAAQ1E,EAAK0E,QAAS,GAEtBimC,GAAejH,IAAW,CAC7B,IAAM2C,EAAW,CAAE6J,aAAa,GAC5BlwC,EAAK4qC,MAAQ,IAAGvE,EAAS8J,qBAAuBnwC,EAAK4qC,OACzD52D,KAAK27D,IA5IX,SAAsBL,EAAWtvC,QAAW,IAAXA,IAAAA,EAAO,IACtC,IAAMlvB,EAAMoD,KAAKC,UAAU,CAACm7D,EAAWtvC,IACnC2vC,EAAMJ,GAAaz+D,GAKvB,OAJK6+D,IACHA,EAAM,IAAIhM,KAAKyM,aAAad,EAAWtvC,GACvCuvC,GAAaz+D,GAAO6+D,GAEfA,EAqIQU,CAAa9J,EAAMF,uBAIlCt6B,OAAAA,SAAOn8B,GACL,GAAIoE,KAAK27D,IAAK,CACZ,IAAMtB,EAAQr6D,KAAK0wB,MAAQ5qB,KAAK4qB,MAAM90B,GAAKA,EAC3C,OAAOoE,KAAK27D,IAAI5jC,OAAOsiC,GAIvB,OAAO/hC,GADOt4B,KAAK0wB,MAAQ5qB,KAAK4qB,MAAM90B,GAAKm1D,GAAQn1D,EAAG,GAC/BoE,KAAK42D,UAnB5BqF,GA4BAK,GAAAA,WACJ,WAAY13B,EAAI2tB,EAAMvmC,GAIpB,IAAImQ,EACJ,GAJAn8B,KAAKgsB,KAAOA,EACZhsB,KAAK0vD,QAAUA,IAGX9qB,EAAGzN,KAAKolC,WAAav8D,KAAK0vD,QAAS,CAOrC,IAAM8M,EAAkB53B,EAAGlS,OAAS,IAAjB,EACb+pC,EAAUD,GAAa,EAAbA,WAA4BA,EAA5BA,UAAoDA,EAC9DE,EAAwBtD,GAASC,YAAYoD,GACjC,IAAd73B,EAAGlS,QAAgBgqC,GACrBvgC,EAAIsgC,EACJz8D,KAAK4kC,GAAKA,IASVzI,EAAI,MACAnQ,EAAKwiC,aACPxuD,KAAK4kC,GAAKA,EAEV5kC,KAAK4kC,GAAmB,IAAdA,EAAGlS,OAAekS,EAAK9hB,GAAS65C,WAAW/3B,EAAGkZ,GAAiB,GAAZlZ,EAAGlS,OAAc,UAGxD,UAAjBkS,EAAGzN,KAAK9S,KACjBrkB,KAAK4kC,GAAKA,GAEV5kC,KAAK4kC,GAAKA,EACVzI,EAAIyI,EAAGzN,KAAK74B,MAGd,GAAI0B,KAAK0vD,QAAS,CAChB,IAAM2C,EAAWz1D,OAAO4Q,OAAO,GAAIxN,KAAKgsB,MACpCmQ,IACFk2B,EAASD,SAAWj2B,GAEtBn8B,KAAK05D,IAAM2B,GAAa9I,EAAMF,+BAIlCt6B,OAAAA,WACE,GAAI/3B,KAAK0vD,QACP,OAAO1vD,KAAK05D,IAAI3hC,OAAO/3B,KAAK4kC,GAAGvN,YAE/B,IAAMulC,EVlEZ,SAA6BC,GAG3B,IAaEC,EAAe,6BACjB,OAFQ38D,GAZSkwD,EAAKwM,EAAa,CAC/B,UACA,MACA,OACA,QACA,MACA,OACA,SACA,SACA,eACA,aAKF,KAAK18D,GAAU00D,GACb,MAAO,WACT,KAAK10D,GAAU00D,GACb,MAAO,cACT,KAAK10D,GAAU00D,GACb,MAAO,mBACT,KAAK10D,GAAU00D,GACb,MAAO,eACT,KAAK10D,GAAU00D,GACb,MAAO,qBACT,KAAK10D,GAAU00D,GACb,MAAO,SACT,KAAK10D,GAAU00D,GACb,MAAO,YACT,KAAK10D,GAAU00D,GAEf,KAAK10D,GAAU00D,GACb,MAAO,SACT,KAAK10D,GAAU00D,GACb,MAAO,QACT,KAAK10D,GAAU00D,GACb,MAAO,WACT,KAAK10D,GAAU00D,GAEf,KAAK10D,GAAU00D,GACb,MAAO,QACT,KAAK10D,GAAU00D,GACb,MAAO,mBACT,KAAK10D,GAAU00D,GACb,MAAO,sBACT,KAAK10D,GAAU00D,GACb,MAAO,uBACT,KAAK10D,GAAU00D,GACb,OAAOiI,EACT,KAAK38D,GAAU00D,GACb,MAAO,sBACT,KAAK10D,GAAU00D,GACb,MAAO,yBACT,KAAK10D,GAAU00D,GACb,MAAO,0BACT,KAAK10D,GAAU00D,GACb,MAAO,0BACT,KAAK10D,GAAU00D,GACb,MAAO,gCACT,QACE,OAAOiI,GUGavF,CAAqBv3D,KAAKgsB,MAC5CgqC,EAAMkF,GAAOr2C,OAAO,SACtB,OAAOixC,GAAUjxC,OAAOmxC,GAAKc,yBAAyB92D,KAAK4kC,GAAIg4B,MAInE9M,cAAAA,WACE,OAAI9vD,KAAK0vD,SAAWG,IACX7vD,KAAK05D,IAAI5J,cAAc9vD,KAAK4kC,GAAGvN,YAI/B,MAIXq/B,gBAAAA,WACE,OAAI12D,KAAK0vD,QACA1vD,KAAK05D,IAAIhD,kBAET,CACLvE,OAAQ,QACRgJ,gBAAiB,OACjBjE,eAAgB,cA7ElBoF,GAsFAS,GAAAA,WACJ,WAAYxK,EAAMyK,EAAWhxC,GAC3BhsB,KAAKgsB,KAAOpvB,OAAO4Q,OAAO,CAAEyvD,MAAO,QAAUjxC,IACxCgxC,GAAajN,MAChB/vD,KAAKk9D,IAAMzB,GAAalJ,EAAMvmC,+BAIlC+L,OAAAA,SAAOozB,EAAOp1C,GACZ,OAAI/V,KAAKk9D,IACAl9D,KAAKk9D,IAAInlC,OAAOozB,EAAOp1C,GVrJpC,SAAmCA,EAAMo1C,EAAOgS,EAAoBC,QAAgB,IAApCD,IAAAA,EAAU,eAA0B,IAAhBC,IAAAA,GAAS,GAC3E,IAAMh1D,EAAQ,CACZyrB,MAAO,CAAC,OAAQ,OAChBwpC,SAAU,CAAC,UAAW,QACtBvpC,OAAQ,CAAC,QAAS,OAClB9C,MAAO,CAAC,OAAQ,OAChB+C,KAAM,CAAC,MAAO,MAAO,QACrBC,MAAO,CAAC,OAAQ,OAChBC,QAAS,CAAC,SAAU,QACpBC,QAAS,CAAC,SAAU,SAGhBopC,GAA8D,IAAnD,CAAC,QAAS,UAAW,WAAWxrD,QAAQiE,GAEzD,GAAgB,SAAZonD,GAAsBG,EAAU,CAClC,IAAMC,EAAiB,SAATxnD,EACd,OAAQo1C,GACN,KAAK,EACH,OAAOoS,EAAQ,WAAH,QAAwBn1D,EAAM2N,GAAM,GAClD,KAAM,EACJ,OAAOwnD,EAAQ,YAAH,QAAyBn1D,EAAM2N,GAAM,GACnD,KAAK,EACH,OAAOwnD,EAAQ,QAAH,QAAqBn1D,EAAM2N,GAAM,IAKnD,IAAMynD,EAAW5gE,OAAOm2D,GAAG5H,GAAQ,IAAMA,EAAQ,EAC/CsS,EAAW33D,KAAK6xB,IAAIwzB,GACpBuS,EAAwB,IAAbD,EACXE,EAAWv1D,EAAM2N,GACjB6nD,EAAUR,EACNM,EACEC,EAAS,GACTA,EAAS,IAAMA,EAAS,GAC1BD,EACEt1D,EAAM2N,GAAM,GACZA,EACR,OAAOynD,EAAcC,EAAN,IAAkBG,EAAlB,aAAwCH,EAAxC,IAAoDG,EUiHxDrG,CAA2BxhD,EAAMo1C,EAAOnrD,KAAKgsB,KAAKmxC,QAA6B,SAApBn9D,KAAKgsB,KAAKixC,UAIhFnN,cAAAA,SAAc3E,EAAOp1C,GACnB,OAAI/V,KAAKk9D,IACAl9D,KAAKk9D,IAAIpN,cAAc3E,EAAOp1C,GAE9B,MApBPgnD,GA6Be7B,GAAAA,WAyBnB,WAAY/I,EAAQ0L,EAAW3G,EAAgB4G,GAAiB,MAvQlE,SAA2BC,GASzB,IAAMC,EAASD,EAAUjsD,QAAQ,OACjC,IAAgB,IAAZksD,EACF,MAAO,CAACD,GAER,IAAIE,EACEC,EAAUH,EAAU5qD,UAAU,EAAG6qD,GACvC,IACEC,EAAU5C,GAAa0C,GAAWrH,kBAClC,MAAO15C,GACPihD,EAAU5C,GAAa6C,GAASxH,kBAN7B,MASiCuH,EAEtC,MAAO,CAACC,EAXH,EASG/C,gBATH,EASoBgD,UAmP2CC,CAAkBjM,GAA/EkM,EADuD,KACzCC,EADyC,KAClBC,EADkB,KAG9Dv+D,KAAKmyD,OAASkM,EACdr+D,KAAKm7D,gBAAkB0C,GAAaS,GAAyB,KAC7Dt+D,KAAKk3D,eAAiBA,GAAkBqH,GAAwB,KAChEv+D,KAAKuyD,KAlPT,SAA0BwL,EAAW5C,EAAiBjE,GACpD,OAAIxH,IACEwH,GAAkBiE,GACpB4C,GAAa,KAET7G,IACF6G,GAAa,OAAO7G,GAGlBiE,IACF4C,GAAa,OAAO5C,GAEf4C,GAEAA,EAGF,GAiOKS,CAAiBx+D,KAAKmyD,OAAQnyD,KAAKm7D,gBAAiBn7D,KAAKk3D,gBAErEl3D,KAAKy+D,cAAgB,CAAE1mC,OAAQ,GAAIy/B,WAAY,IAC/Cx3D,KAAK0+D,YAAc,CAAE3mC,OAAQ,GAAIy/B,WAAY,IAC7Cx3D,KAAK2+D,cAAgB,KACrB3+D,KAAK4+D,SAAW,GAEhB5+D,KAAK89D,gBAAkBA,EACvB99D,KAAK6+D,kBAAoB,OAtCpBC,SAAP,SAAgB9yC,GACd,OAAOkvC,EAAOr2C,OAAOmH,EAAKmmC,OAAQnmC,EAAKmvC,gBAAiBnvC,EAAKkrC,eAAgBlrC,EAAK+yC,gBAG7El6C,OAAP,SAAcstC,EAAQgJ,EAAiBjE,EAAgB6H,QAAqB,IAArBA,IAAAA,GAAc,GACnE,IAAMjB,EAAkB3L,GAAU6I,GAASJ,cAK3C,OAAO,IAAIM,EAHC4C,IAAoBiB,EAAc,QApQlD,WACE,GAAInD,GACF,OAAOA,GACF,GAAIlM,IAAW,CACpB,IAAMsP,GAAc,IAAIrP,KAAKC,gBAAiB8G,kBAAkBvE,OAGhE,OADAyJ,GAAkBoD,GAA+B,QAAhBA,EAAkCA,EAAV,QAIzD,OADApD,GAAiB,QA2PuCqD,IACnC9D,GAAmBH,GAASH,uBAC7B3D,GAAkB8D,GAASF,sBACegD,MAGzDxE,WAAP,WACEsC,GAAiB,KACjBR,GAAc,GACdG,GAAe,GACfC,GAAe,MAGV3kC,WAAP,YAAoE,iBAAJ,GAAI,EAAhDs7B,EAAgD,EAAhDA,OAAQgJ,EAAwC,EAAxCA,gBAAiBjE,EAAuB,EAAvBA,eAC3C,OAAOgE,EAAOr2C,OAAOstC,EAAQgJ,EAAiBjE,+BA4BhDF,YAAAA,SAAY8E,QAAkB,IAAlBA,IAAAA,GAAY,GACtB,IACEoD,EADWxP,KACMG,IACjBsP,EAAen/D,KAAKg9D,YACpBoC,GAC4B,OAAzBp/D,KAAKm7D,iBAAqD,SAAzBn7D,KAAKm7D,mBACd,OAAxBn7D,KAAKk3D,gBAAmD,YAAxBl3D,KAAKk3D,gBAE1C,OAAKgI,GAAYC,GAAgBC,GAAoBtD,GAEzCoD,GAAWC,GAAgBC,EAC9B,KAEA,OAJA,WAQXx9D,MAAAA,SAAMy9D,GACJ,OAAKA,GAAoD,IAA5CziE,OAAO0Q,oBAAoB+xD,GAAM1jE,OAGrCu/D,EAAOr2C,OACZw6C,EAAKlN,QAAUnyD,KAAK89D,gBACpBuB,EAAKlE,iBAAmBn7D,KAAKm7D,gBAC7BkE,EAAKnI,gBAAkBl3D,KAAKk3D,eAC5BmI,EAAKN,cAAe,GANf/+D,QAWXs/D,cAAAA,SAAcD,GACZ,YADuB,IAAXA,IAAAA,EAAO,IACZr/D,KAAK4B,MAAMhF,OAAO4Q,OAAO,GAAI6xD,EAAM,CAAEN,aAAa,QAG3DzI,kBAAAA,SAAkB+I,GAChB,YAD2B,IAAXA,IAAAA,EAAO,IAChBr/D,KAAK4B,MAAMhF,OAAO4Q,OAAO,GAAI6xD,EAAM,CAAEN,aAAa,QAG3DjrC,OAAAA,SAAOn4B,EAAQo8B,EAAgB+jC,GAAkB,WAC/C,YAD+C,IAAlC/jC,IAAAA,GAAS,QAAyB,IAAlB+jC,IAAAA,GAAY,GAClCD,GAAU77D,KAAMrE,EAAQmgE,EAAWvE,IAAgB,WACxD,IAAMhF,EAAOx6B,EAAS,CAAE3G,MAAOz1B,EAAQ01B,IAAK,WAAc,CAAED,MAAOz1B,GACjE4jE,EAAYxnC,EAAS,SAAW,aAIlC,OAHKlX,EAAK69C,YAAYa,GAAW5jE,KAC/BklB,EAAK69C,YAAYa,GAAW5jE,GA3RpC,SAAmBgL,GAEjB,IADA,IAAMw+C,EAAK,GACFvpD,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAMgpC,EAAK9hB,GAAS08C,IAAI,KAAM5jE,EAAG,GACjCupD,EAAG7kD,KAAKqG,EAAEi+B,IAEZ,OAAOugB,EAqRqCsa,EAAU,SAAA76B,GAAE,OAAI/jB,EAAKs2C,QAAQvyB,EAAI2tB,EAAM,aAExE1xC,EAAK69C,YAAYa,GAAW5jE,SAIvCq4D,SAAAA,SAASr4D,EAAQo8B,EAAgB+jC,GAAkB,WACjD,YADiD,IAAlC/jC,IAAAA,GAAS,QAAyB,IAAlB+jC,IAAAA,GAAY,GACpCD,GAAU77D,KAAMrE,EAAQmgE,EAAWvE,IAAkB,WAC1D,IAAMhF,EAAOx6B,EACP,CAAEhH,QAASp1B,EAAQw1B,KAAM,UAAWC,MAAO,OAAQC,IAAK,WACxD,CAAEN,QAASp1B,GACf4jE,EAAYxnC,EAAS,SAAW,aAMlC,OALK9S,EAAKw5C,cAAcc,GAAW5jE,KACjCspB,EAAKw5C,cAAcc,GAAW5jE,GA/RtC,SAAqBgL,GAEnB,IADA,IAAMw+C,EAAK,GACFvpD,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMgpC,EAAK9hB,GAAS08C,IAAI,KAAM,GAAI,GAAK5jE,GACvCupD,EAAG7kD,KAAKqG,EAAEi+B,IAEZ,OAAOugB,EAyRuCua,EAAY,SAAA96B,GAAE,OACpD3f,EAAKkyC,QAAQvyB,EAAI2tB,EAAM,eAGpBttC,EAAKw5C,cAAcc,GAAW5jE,SAIzCs4D,UAAAA,SAAU6H,GAAkB,WAC1B,YAD0B,IAAlBA,IAAAA,GAAY,GACbD,GACL77D,UACAD,EACA+7D,GACA,kBAAMvE,MACN,WAGE,IAAK3xC,EAAK+4C,cAAe,CACvB,IAAMpM,EAAO,CAAEj/B,KAAM,UAAWq7B,QAAQ,GACxC/oC,EAAK+4C,cAAgB,CAAC77C,GAAS08C,IAAI,KAAM,GAAI,GAAI,GAAI18C,GAAS08C,IAAI,KAAM,GAAI,GAAI,KAAKr9D,KACnF,SAAAyiC,GAAE,OAAIhf,EAAKuxC,QAAQvyB,EAAI2tB,EAAM,gBAIjC,OAAO3sC,EAAK+4C,oBAKlBtK,KAAAA,SAAK14D,EAAQmgE,GAAkB,WAC7B,YAD6B,IAAlBA,IAAAA,GAAY,GAChBD,GAAU77D,KAAMrE,EAAQmgE,EAAWvE,IAAc,WACtD,IAAMhF,EAAO,CAAEkF,IAAK97D,GAUpB,OANKgkE,EAAKf,SAASjjE,KACjBgkE,EAAKf,SAASjjE,GAAU,CAACmnB,GAAS08C,KAAK,GAAI,EAAG,GAAI18C,GAAS08C,IAAI,KAAM,EAAG,IAAIr9D,KAAI,SAAAyiC,GAAE,OAChF+6B,EAAKxI,QAAQvyB,EAAI2tB,EAAM,WAIpBoN,EAAKf,SAASjjE,SAIzBw7D,QAAAA,SAAQvyB,EAAIytB,EAAU3wC,GACpB,IAEEk+C,EAFS5/D,KAAKu2D,YAAY3xB,EAAIytB,GACjBvC,gBACMttC,MAAK,SAAAkJ,GAAC,OAAIA,EAAErH,KAAK3d,gBAAkBgb,KACxD,OAAOk+C,EAAWA,EAASjiE,MAAQ,QAGrCk5D,gBAAAA,SAAgB7qC,GAGd,YAHyB,IAAXA,IAAAA,EAAO,IAGd,IAAIiwC,GAAoBj8D,KAAKuyD,KAAMvmC,EAAK2qC,aAAe32D,KAAK6/D,YAAa7zC,MAGlFuqC,YAAAA,SAAY3xB,EAAIytB,GACd,YAD6B,IAAfA,IAAAA,EAAW,IAClB,IAAIiK,GAAkB13B,EAAI5kC,KAAKuyD,KAAMF,MAG9CyN,aAAAA,SAAa9zC,GACX,YADsB,IAAXA,IAAAA,EAAO,IACX,IAAI+wC,GAAiB/8D,KAAKuyD,KAAMvyD,KAAKg9D,YAAahxC,MAG3DgxC,UAAAA,WACE,MACkB,OAAhBh9D,KAAKmyD,QACyB,UAA9BnyD,KAAKmyD,OAAOzrD,eACXgpD,KAAa,IAAIC,KAAKC,eAAe5vD,KAAKuyD,MAAMmE,kBAAkBvE,OAAO1tC,WAAW,YAIzFpjB,OAAAA,SAAOqwB,GACL,OACE1xB,KAAKmyD,SAAWzgC,EAAMygC,QACtBnyD,KAAKm7D,kBAAoBzpC,EAAMypC,iBAC/Bn7D,KAAKk3D,iBAAmBxlC,EAAMwlC,uDAxVpC,IAA6BlB,EA+MzB,OAJ8B,MAA1Bh2D,KAAK6+D,oBACP7+D,KAAK6+D,qBA5MkB7I,EA4MsBh2D,MA3MzCm7D,iBAA2C,SAAxBnF,EAAImF,mBAIH,SAAxBnF,EAAImF,kBACHnF,EAAI7D,QACL6D,EAAI7D,OAAO1tC,WAAW,OACrBirC,KAAqF,SAAxE,IAAIC,KAAKC,eAAeoG,EAAIzD,MAAMmE,kBAAkByE,kBAuM7Dn7D,KAAK6+D,wBA/CK3D,GChRrB,SAAS6E,KAA2B,2BAATC,EAAS,yBAATA,EAAS,GAAA3iD,UAAAA,GAClC,IAAM4iD,EAAOD,EAAQt9D,QAAO,SAACiE,EAAG+P,GAAJ,OAAU/P,EAAI+P,EAAEwnB,SAAQ,IACpD,OAAOtnB,OAAO,IAAIqpD,EAAL,KAGf,SAASC,KAAiC,2BAAZC,EAAY,yBAAZA,EAAY,GAAA9iD,UAAAA,GACxC,OAAO,SAAAqO,GAAC,OACNy0C,EACGz9D,QACC,WAAmC09D,GAAO,IAAxCC,EAAwC,KAA5BC,EAA4B,KAAhBC,EAAgB,OACdH,EAAG10C,EAAG60C,GAAzBhzD,EADiC,KAC5B4pB,EAD4B,KACtBzY,EADsB,KAExC,MAAO,CAAC9hB,OAAO4Q,OAAO6yD,EAAY9yD,GAAM+yD,GAAcnpC,EAAMzY,KAE9D,CAAC,GAAI,KAAM,IAEZlhB,MAAM,EAAG,IAGhB,SAASulB,GAAM3hB,GACb,GAAS,MAALA,EACF,MAAO,CAAC,KAAM,MAFa,2BAAVo/D,EAAU,iCAAVA,EAAU,KAAAnjD,UAAAA,GAK7B,IAAK,IAAL,MAAiCmjD,EAAjC,eAA2C,YAA/BC,EAA+B,KAAxBC,EAAwB,KACnCh1C,EAAI+0C,EAAM90C,KAAKvqB,GACrB,GAAIsqB,EACF,OAAOg1C,EAAUh1C,GAGrB,MAAO,CAAC,KAAM,MAGhB,SAASi1C,KAAqB,2BAANl+D,EAAM,yBAANA,EAAM,GAAA4a,UAAAA,GAC5B,OAAO,SAACvP,EAAOyyD,GACb,IACI3kE,EADE8E,EAAM,GAGZ,IAAK9E,EAAI,EAAGA,EAAI6G,EAAK9G,OAAQC,IAC3B8E,EAAI+B,EAAK7G,IAAMg1D,GAAa9iD,EAAMyyD,EAAS3kE,IAE7C,MAAO,CAAC8E,EAAK,KAAM6/D,EAAS3kE,IAKhC,IAAMglE,GAAc,kCAClBC,GAAmB,sDACnBC,GAAelqD,OAAO,GAAGiqD,GAAiB3iC,OAAS0iC,GAAY1iC,OAA1C,KACrB6iC,GAAwBnqD,OAAO,OAAOkqD,GAAa5iC,OAArB,MAI9B8iC,GAAqBL,GAAY,WAAY,aAAc,WAC3DM,GAAwBN,GAAY,OAAQ,WAE5CO,GAAetqD,OACViqD,GAAiB3iC,OADD,QACe0iC,GAAY1iC,OAD3B,KACsCu1B,GAAUv1B,OADhD,OAGrBijC,GAAwBvqD,OAAO,OAAOsqD,GAAahjC,OAArB,MAEhC,SAASkjC,GAAItzD,EAAO+rD,EAAKwH,GACvB,IAAM31C,EAAI5d,EAAM+rD,GAChB,OAAOrK,EAAY9jC,GAAK21C,EAAWzQ,GAAallC,GAGlD,SAAS41C,GAAcxzD,EAAOyyD,GAO5B,MAAO,CANM,CACXpvC,KAAMiwC,GAAItzD,EAAOyyD,GACjBnvC,MAAOgwC,GAAItzD,EAAOyyD,EAAS,EAAG,GAC9BlvC,IAAK+vC,GAAItzD,EAAOyyD,EAAS,EAAG,IAGhB,KAAMA,EAAS,GAG/B,SAASgB,GAAezzD,EAAOyyD,GAQ7B,MAAO,CAPM,CACXvsC,MAAOotC,GAAItzD,EAAOyyD,EAAQ,GAC1BtsC,QAASmtC,GAAItzD,EAAOyyD,EAAS,EAAG,GAChCrsC,QAASktC,GAAItzD,EAAOyyD,EAAS,EAAG,GAChCpsC,aAAc08B,GAAY/iD,EAAMyyD,EAAS,KAG7B,KAAMA,EAAS,GAG/B,SAASiB,GAAiB1zD,EAAOyyD,GAC/B,IAAMkB,GAAS3zD,EAAMyyD,KAAYzyD,EAAMyyD,EAAS,GAC9CmB,EAAahP,GAAa5kD,EAAMyyD,EAAS,GAAIzyD,EAAMyyD,EAAS,IAE9D,MAAO,CAAC,GADCkB,EAAQ,KAAOrH,GAAgBl+D,SAASwlE,GAC/BnB,EAAS,GAG7B,SAASoB,GAAgB7zD,EAAOyyD,GAE9B,MAAO,CAAC,GADKzyD,EAAMyyD,GAAUnH,GAASv0C,OAAO/W,EAAMyyD,IAAW,KAC5CA,EAAS,GAK7B,IAAMqB,GAAchrD,OAAO,MAAMiqD,GAAiB3iC,OAAxB,KAIpB2jC,GAAc,8JAEpB,SAASC,GAAmBh0D,GAAO,IAE/B1M,EASE0M,EAX6B,GAG/Bi0D,EAQEj0D,EAX6B,GAI/Bk0D,EAOEl0D,EAX6B,GAK/Bm0D,EAMEn0D,EAX6B,GAM/Bo0D,EAKEp0D,EAX6B,GAO/Bq0D,EAIEr0D,EAX6B,GAQ/Bs0D,EAGEt0D,EAX6B,GAS/Bu0D,EAEEv0D,EAX6B,GAU/Bw0D,EACEx0D,EAX6B,GAa3By0D,EAA6B,MAATnhE,EAAE,GACtBohE,EAAkBH,GAA8B,MAAjBA,EAAU,GAEzCI,EAAc,SAAC57D,EAAK67D,GAAN,gBAAMA,IAAAA,GAAQ,QACxB3iE,IAAR8G,IAAsB67D,GAAU77D,GAAO07D,IAAuB17D,EAAMA,GAEtE,MAAO,CACL,CACEgtB,MAAO4uC,EAAY7R,GAAamR,IAChCjuC,OAAQ2uC,EAAY7R,GAAaoR,IACjChxC,MAAOyxC,EAAY7R,GAAaqR,IAChCluC,KAAM0uC,EAAY7R,GAAasR,IAC/BluC,MAAOyuC,EAAY7R,GAAauR,IAChCluC,QAASwuC,EAAY7R,GAAawR,IAClCluC,QAASuuC,EAAY7R,GAAayR,GAA0B,OAAdA,GAC9CluC,aAAcsuC,EAAY5R,GAAYyR,GAAkBE,KAQ9D,IAAMG,GAAa,CACjBC,IAAK,EACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,KAGP,SAASC,GAAYC,EAAYvB,EAASC,EAAUE,EAAQC,EAASC,EAAWC,GAC9E,IAAMl/D,EAAS,CACbguB,KAAyB,IAAnB4wC,EAAQpmE,OAAeq2D,GAAepB,GAAamR,IAAYnR,GAAamR,GAClF3wC,MAAOmmC,GAAoBzlD,QAAQkwD,GAAY,EAC/C3wC,IAAKu/B,GAAasR,GAClB5uC,KAAMs9B,GAAauR,GACnB5uC,OAAQq9B,GAAawR,IAWvB,OARIC,IAAWl/D,EAAOqwB,OAASo9B,GAAayR,IACxCiB,IACFngE,EAAO4tB,QACLuyC,EAAW3nE,OAAS,EAChB47D,GAAqBzlD,QAAQwxD,GAAc,EAC3C/L,GAAsBzlD,QAAQwxD,GAAc,GAG7CngE,EAIT,IAAMogE,GAAU,kMAEhB,SAASC,GAAe11D,GAAO,IAiBzB4kB,EAdA4wC,EAWEx1D,EAduB,GAIzBo0D,EAUEp0D,EAduB,GAKzBk0D,EASEl0D,EAduB,GAMzBi0D,EAQEj0D,EAduB,GAOzBq0D,EAOEr0D,EAduB,GAQzBs0D,EAMEt0D,EAduB,GASzBu0D,EAKEv0D,EAduB,GAUzB21D,EAIE31D,EAduB,GAWzB41D,EAGE51D,EAduB,GAYzB6kD,EAEE7kD,EAduB,IAazB8kD,EACE9kD,EAduB,IAe3B3K,EAASkgE,GAAYC,EAAYvB,EAASC,EAAUE,EAAQC,EAASC,EAAWC,GAWlF,OAPE3vC,EADE+wC,EACOd,GAAWc,GACXC,EACA,EAEAhR,GAAaC,EAAYC,GAG7B,CAACzvD,EAAQ,IAAIi3D,GAAgB1nC,IAatC,IAAMixC,GAAU,6HACdC,GAAS,uJACTC,GAAQ,4HAEV,SAASC,GAAoBh2D,GAAO,IACzBw1D,EAAwEx1D,EAD/C,GACbo0D,EAA4Dp0D,EAD/C,GACLk0D,EAAoDl0D,EAD/C,GAGlC,MAAO,CADIu1D,GAAYC,EAD0Dx1D,EAD/C,GAEUk0D,EAAUE,EAD2Bp0D,EAD/C,GAC+CA,EAD/C,GAC+CA,EAD/C,IAGlBssD,GAAgBjiC,aAGlC,SAAS4rC,GAAaj2D,GAAO,IAClBw1D,EAAwEx1D,EADtD,GACNk0D,EAA4Dl0D,EADtD,GACIo0D,EAAkDp0D,EADtD,GACYq0D,EAA0Cr0D,EADtD,GACqBs0D,EAAiCt0D,EADtD,GACgCu0D,EAAsBv0D,EADtD,GAG3B,MAAO,CADIu1D,GAAYC,EAD0Dx1D,EADtD,GAEiBk0D,EAAUE,EAAQC,EAASC,EAAWC,GAClEjI,GAAgBjiC,aAGlC,IAAM6rC,GAA+BjE,GAvLrB,8CAuLiDgB,IAC3DkD,GAAgClE,GAvLrB,8BAuLkDgB,IAC7DmD,GAAmCnE,GAvLrB,mBAuLqDgB,IACnEoD,GAAuBpE,GAAee,IAEtCsD,GAA6BlE,GACjCoB,GACAC,GACAC,IAEI6C,GAA8BnE,GAClCc,GACAO,GACAC,IAEI8C,GAA+BpE,GACnCe,GACAM,GACAC,IAEI+C,GAA0BrE,GAAkBqB,GAAgBC,IAiClE,IAAMgD,GAAqBtE,GAAkBqB,IAM7C,IAAMkD,GAA+B1E,GA7OrB,wBA6OiDoB,IAC3DuD,GAAuB3E,GAAemB,IAEtCyD,GAAqCzE,GACzCoB,GACAC,GACAC,GACAG,IAEIiD,GAAkC1E,GACtCqB,GACAC,GACAG,ICtTF,IAGMkD,GAAiB,CACnB7zC,MAAO,CACL+C,KAAM,EACNC,MAAO,IACPC,QAAS,MACTC,QAAS,OACTC,aAAc,QAEhBJ,KAAM,CACJC,MAAO,GACPC,QAAS,KACTC,QAAS,MACTC,aAAc,OAEhBH,MAAO,CAAEC,QAAS,GAAIC,QAAS,KAASC,aAAc,MACtDF,QAAS,CAAEC,QAAS,GAAIC,aAAc,KACtCD,QAAS,CAAEC,aAAc,MAE3B2wC,GAAeloE,OAAO4Q,OACpB,CACEqmB,MAAO,CACLwpC,SAAU,EACVvpC,OAAQ,GACR9C,MAAO,GACP+C,KAAM,IACNC,MAAO,KACPC,QAAS,OACTC,QAAS,QACTC,aAAc,SAEhBkpC,SAAU,CACRvpC,OAAQ,EACR9C,MAAO,GACP+C,KAAM,GACNC,MAAO,KACPC,QAAS,OACTC,QAAS,QACTC,aAAc,SAEhBL,OAAQ,CACN9C,MAAO,EACP+C,KAAM,GACNC,MAAO,IACPC,QAAS,MACTC,QAAS,OACTC,aAAc,SAGlB0wC,IAEFE,GAAqB,SACrBC,GAAsB,UACtBC,GAAiBroE,OAAO4Q,OACtB,CACEqmB,MAAO,CACLwpC,SAAU,EACVvpC,OAAQ,GACR9C,MAAO+zC,QACPhxC,KAAMgxC,GACN/wC,MAAO+wC,QACP9wC,QAAS8wC,SACT7wC,QAAS6wC,SAA+B,GACxC5wC,aAAc4wC,SAA+B,GAAK,KAEpD1H,SAAU,CACRvpC,OAAQ,EACR9C,MAAO+zC,UACPhxC,KAAMgxC,UACN/wC,MAAQ+wC,SACR9wC,QAAU8wC,SACV7wC,QAAU6wC,SAA+B,GAAM,EAC/C5wC,aAAe4wC,mBAEjBjxC,OAAQ,CACN9C,MAAOg0C,mBACPjxC,KAAMixC,GACNhxC,MAAOgxC,QACP/wC,QAAS+wC,QACT9wC,QAAS8wC,QACT7wC,aAAc6wC,YAGlBH,IAIEK,GAAe,CACnB,QACA,WACA,SACA,QACA,OACA,QACA,UACA,UACA,gBAGIC,GAAeD,GAAa1nE,MAAM,GAAG4nE,UAG3C,SAASxjE,GAAMq2D,EAAKoH,EAAMgG,QAAe,IAAfA,IAAAA,GAAQ,GAEhC,IAAMC,EAAO,CACX17C,OAAQy7C,EAAQhG,EAAKz1C,OAAShtB,OAAO4Q,OAAO,GAAIyqD,EAAIruC,OAAQy1C,EAAKz1C,QAAU,IAC3EosC,IAAKiC,EAAIjC,IAAIp0D,MAAMy9D,EAAKrJ,KACxBuP,mBAAoBlG,EAAKkG,oBAAsBtN,EAAIsN,oBAErD,OAAO,IAAIC,GAASF,GAQtB,SAASG,GAAQC,EAAQC,EAASv7D,EAAUw7D,EAAOt7D,GACjD,IAAMu7D,EAAOH,EAAOp7D,GAAQF,GAC1B7M,EAAMooE,EAAQv7D,GAAYy7D,EAG1BC,IAFWhgE,KAAKytD,KAAKh2D,KAASuI,KAAKytD,KAAKqS,EAAMt7D,MAGb,IAAlBs7D,EAAMt7D,IAAiBxE,KAAK6xB,IAAIp6B,IAAQ,EAX3D,SAAmBW,GACjB,OAAOA,EAAI,EAAI4H,KAAK4qB,MAAMxyB,GAAK4H,KAAK6qB,KAAKzyB,GAUoB6nE,CAAUxoE,GAAOuI,KAAKqrD,MAAM5zD,GACzFqoE,EAAMt7D,IAAWw7D,EACjBH,EAAQv7D,IAAa07D,EAAQD,MA8BVL,GAAAA,WAInB,WAAYzjE,GACV,IAAMikE,EAAyC,aAA9BjkE,EAAOwjE,qBAAqC,EAI7DvlE,KAAK4pB,OAAS7nB,EAAO6nB,OAIrB5pB,KAAKg2D,IAAMj0D,EAAOi0D,KAAOkF,GAAOr2C,SAIhC7kB,KAAKulE,mBAAqBS,EAAW,WAAa,SAIlDhmE,KAAKimE,QAAUlkE,EAAOkkE,SAAW,KAIjCjmE,KAAK0lE,OAASM,EAAWf,GAAiBH,GAI1C9kE,KAAKkmE,iBAAkB,IAYlBvJ,WAAP,SAAkBxR,EAAOn/B,GACvB,OAAOw5C,EAAS3uC,WAAWj6B,OAAO4Q,OAAO,CAAE2mB,aAAcg3B,GAASn/B,OAqB7D6K,WAAP,SAAkB/0B,GAChB,GAAW,MAAPA,GAA8B,kBAARA,EACxB,MAAM,IAAI+rD,EAAJ,gEAEM,OAAR/rD,EAAe,cAAgBA,IAIrC,OAAO,IAAI0jE,EAAS,CAClB57C,OAAQspC,GAAgBpxD,EAAK0jE,EAASW,cAAe,CACnD,SACA,kBACA,qBACA,SAEFnQ,IAAKkF,GAAOrkC,WAAW/0B,GACvByjE,mBAAoBzjE,EAAIyjE,wBAiBrBa,QAAP,SAAeC,EAAMr6C,GAAM,MDmC7B,SAAiC5qB,GAC/B,OAAO2hB,GAAM3hB,EAAG,CAACygE,GAAaC,KCnCXwE,CAAiBD,GAA3B7T,EADkB,KAEzB,GAAIA,EAAQ,CACV,IAAM1wD,EAAMlF,OAAO4Q,OAAOglD,EAAQxmC,GAClC,OAAOw5C,EAAS3uC,WAAW/0B,GAE3B,OAAO0jE,EAASS,QAAQ,aAAjBT,cAA6Ca,EAA7C,qCAmBJE,YAAP,SAAmBF,EAAMr6C,GAAM,MDgBjC,SAAiC5qB,GAC/B,OAAO2hB,GAAM3hB,EAAG,CAACwgE,GAAa4C,KChBXgC,CAAiBH,GAA3B7T,EADsB,KAE7B,GAAIA,EAAQ,CACV,IAAM1wD,EAAMlF,OAAO4Q,OAAOglD,EAAQxmC,GAClC,OAAOw5C,EAAS3uC,WAAW/0B,GAE3B,OAAO0jE,EAASS,QAAQ,aAAjBT,cAA6Ca,EAA7C,qCAUJJ,QAAP,SAAe/Y,EAAQyL,GACrB,QADyC,IAApBA,IAAAA,EAAc,OAC9BzL,EACH,MAAM,IAAIW,EAAqB,oDAGjC,IAAMoY,EAAU/Y,aAAkBwL,GAAUxL,EAAS,IAAIwL,GAAQxL,EAAQyL,GAEzE,GAAIqC,GAASD,eACX,MAAM,IAAIvN,EAAqByY,GAE/B,OAAO,IAAIT,EAAS,CAAES,QAAAA,OAOnBE,cAAP,SAAqBpwD,GACnB,IAAMs9C,EAAa,CACjBliC,KAAM,QACN0C,MAAO,QACPikC,QAAS,WACTuF,SAAU,WACVjsC,MAAO,SACP0C,OAAQ,SACR6wB,KAAM,QACN3zB,MAAO,QACPK,IAAK,OACL0C,KAAM,OACNT,KAAM,QACNU,MAAO,QACPT,OAAQ,UACRU,QAAS,UACTT,OAAQ,UACRU,QAAS,UACTT,YAAa,eACbU,aAAc,gBACdpe,EAAOA,EAAKrP,cAAgBqP,GAE9B,IAAKs9C,EAAY,MAAM,IAAI1F,EAAiB53C,GAE5C,OAAOs9C,KAQFoT,WAAP,SAAkBzoE,GAChB,OAAQA,GAAKA,EAAEkoE,kBAAoB,8BAwCrCQ,SAAAA,SAAStyC,EAAKpI,QAAW,IAAXA,IAAAA,EAAO,IAEnB,IAAM26C,EAAU/pE,OAAO4Q,OAAO,GAAIwe,EAAM,CACtC0E,OAAsB,IAAf1E,EAAK+P,QAAkC,IAAf/P,EAAK0E,QAEtC,OAAO1wB,KAAKs0B,QACRwhC,GAAUjxC,OAAO7kB,KAAKg2D,IAAK2Q,GAAS3O,yBAAyBh4D,KAAMo0B,GAtY3D,sBAiZdwyC,SAAAA,SAAS56C,GACP,QADkB,IAAXA,IAAAA,EAAO,KACThsB,KAAKs0B,QAAS,MAAO,GAE1B,IAAMmyB,EAAO7pD,OAAO4Q,OAAO,GAAIxN,KAAK4pB,QAOpC,OALIoC,EAAK66C,gBACPpgB,EAAK8e,mBAAqBvlE,KAAKulE,mBAC/B9e,EAAK0U,gBAAkBn7D,KAAKg2D,IAAImF,gBAChC1U,EAAK0L,OAASnyD,KAAKg2D,IAAI7D,QAElB1L,KAaTqgB,MAAAA,WAEE,IAAK9mE,KAAKs0B,QAAS,OAAO,KAE1B,IAAIlzB,EAAI,IAcR,OAbmB,IAAfpB,KAAK6zB,QAAazyB,GAAKpB,KAAK6zB,MAAQ,KACpB,IAAhB7zB,KAAK8zB,QAAkC,IAAlB9zB,KAAKq9D,WAAgBj8D,GAAKpB,KAAK8zB,OAAyB,EAAhB9zB,KAAKq9D,SAAe,KAClE,IAAfr9D,KAAKgxB,QAAa5vB,GAAKpB,KAAKgxB,MAAQ,KACtB,IAAdhxB,KAAK+zB,OAAY3yB,GAAKpB,KAAK+zB,KAAO,KACnB,IAAf/zB,KAAKg0B,OAAgC,IAAjBh0B,KAAKi0B,SAAkC,IAAjBj0B,KAAKk0B,SAAuC,IAAtBl0B,KAAKm0B,eACvE/yB,GAAK,KACY,IAAfpB,KAAKg0B,QAAa5yB,GAAKpB,KAAKg0B,MAAQ,KACnB,IAAjBh0B,KAAKi0B,UAAe7yB,GAAKpB,KAAKi0B,QAAU,KACvB,IAAjBj0B,KAAKk0B,SAAuC,IAAtBl0B,KAAKm0B,eAG7B/yB,GAAK2vD,GAAQ/wD,KAAKk0B,QAAUl0B,KAAKm0B,aAAe,IAAM,GAAK,KACnD,MAAN/yB,IAAWA,GAAK,OACbA,KAmBT2lE,UAAAA,SAAU/6C,GACR,QADmB,IAAXA,IAAAA,EAAO,KACVhsB,KAAKs0B,QAAS,OAAO,KAE1B,IAAM0yC,EAAShnE,KAAKinE,WACpB,GAAID,EAAS,GAAKA,GAAU,MAAU,OAAO,KAE7Ch7C,EAAOpvB,OAAO4Q,OACZ,CACE05D,sBAAsB,EACtBC,iBAAiB,EACjBC,eAAe,EACfrvC,OAAQ,YAEV/L,GAGF,IAAMruB,EAAQqC,KAAKw4D,QAAQ,QAAS,UAAW,UAAW,gBAEtDpkC,EAAsB,UAAhBpI,EAAK+L,OAAqB,OAAS,QAExC/L,EAAKm7C,iBAAqC,IAAlBxpE,EAAMu2B,SAAwC,IAAvBv2B,EAAMw2B,eACxDC,GAAuB,UAAhBpI,EAAK+L,OAAqB,KAAO,MACnC/L,EAAKk7C,sBAA+C,IAAvBvpE,EAAMw2B,eACtCC,GAAO,SAIX,IAAIrtB,EAAMpJ,EAAM+oE,SAAStyC,GAMzB,OAJIpI,EAAKo7C,gBACPrgE,EAAM,IAAMA,GAGPA,KAOTsgE,OAAAA,WACE,OAAOrnE,KAAK8mE,WAOd3oE,SAAAA,WACE,OAAO6B,KAAK8mE,WAOdG,SAAAA,WACE,OAAOjnE,KAAKsnE,GAAG,mBAOjBvqD,QAAAA,WACE,OAAO/c,KAAKinE,cAQdj0C,KAAAA,SAAKvC,GACH,IAAKzwB,KAAKs0B,QAAS,OAAOt0B,KAK1B,IAHA,IAGA,EAHMi4D,EAAMsP,GAAiB92C,GAC3BttB,EAAS,GAEX,IAAgB+hE,MAAhB,aAA8B,KAAnBn3D,EAAmB,SACxBX,EAAe6qD,EAAIruC,OAAQ7b,IAAMX,EAAepN,KAAK4pB,OAAQ7b,MAC/D5K,EAAO4K,GAAKkqD,EAAI53C,IAAItS,GAAK/N,KAAKqgB,IAAItS,IAItC,OAAOnM,GAAM5B,KAAM,CAAE4pB,OAAQzmB,IAAU,MAQzCjC,MAAAA,SAAMuvB,GACJ,IAAKzwB,KAAKs0B,QAAS,OAAOt0B,KAE1B,IAAMi4D,EAAMsP,GAAiB92C,GAC7B,OAAOzwB,KAAKgzB,KAAKilC,EAAIuP,aAUvBC,SAAAA,SAASjf,GACP,IAAKxoD,KAAKs0B,QAAS,OAAOt0B,KAE1B,IADA,IAAMmD,EAAS,GACf,MAAgBvG,OAAO6F,KAAKzC,KAAK4pB,QAAjC,eAA0C,CAArC,IAAM7b,EAAC,KACV5K,EAAO4K,GAAKilD,GAASxK,EAAGxoD,KAAK4pB,OAAO7b,GAAIA,IAE1C,OAAOnM,GAAM5B,KAAM,CAAE4pB,OAAQzmB,IAAU,MAWzCkd,IAAAA,SAAItK,GACF,OAAO/V,KAAKwlE,EAASW,cAAcpwD,OAUrC2S,IAAAA,SAAIkB,GACF,OAAK5pB,KAAKs0B,QAGH1yB,GAAM5B,KAAM,CAAE4pB,OADPhtB,OAAO4Q,OAAOxN,KAAK4pB,OAAQspC,GAAgBtpC,EAAQ47C,EAASW,cAAe,OAF/DnmE,QAW5B0nE,YAAAA,SAAAA,GAAkE,iBAAJ,GAAI,EAApDvV,EAAoD,EAApDA,OAAQgJ,EAA4C,EAA5CA,gBAAiBoK,EAA2B,EAA3BA,mBAEnCv5C,EAAO,CAAEgqC,IADCh2D,KAAKg2D,IAAIp0D,MAAM,CAAEuwD,OAAAA,EAAQgJ,gBAAAA,KAOrC,OAJIoK,IACFv5C,EAAKu5C,mBAAqBA,GAGrB3jE,GAAM5B,KAAMgsB,MAWrBs7C,GAAAA,SAAGvxD,GACD,OAAO/V,KAAKs0B,QAAUt0B,KAAKw4D,QAAQziD,GAAMsK,IAAItK,GAAQwuC,OASvDojB,UAAAA,WACE,IAAK3nE,KAAKs0B,QAAS,OAAOt0B,KAC1B,IAAMkN,EAAOlN,KAAK4mE,WAElB,OA9fJ,SAAyBlB,EAAQx4D,GAC/Bi4D,GAAaziE,QAAO,SAACklE,EAAUr6C,GAC7B,OAAKiiC,EAAYtiD,EAAKqgB,IAMbq6C,GALHA,GACFnC,GAAQC,EAAQx4D,EAAM06D,EAAU16D,EAAMqgB,GAEjCA,KAIR,MAmfDs6C,CAAgB7nE,KAAK0lE,OAAQx4D,GACtBtL,GAAM5B,KAAM,CAAE4pB,OAAQ1c,IAAQ,MAQvCsrD,QAAAA,WAAkB,2BAAPpwD,EAAO,yBAAPA,EAAO,GAAAiV,UAAAA,GAChB,IAAKrd,KAAKs0B,QAAS,OAAOt0B,KAE1B,GAAqB,IAAjBoI,EAAMzM,OACR,OAAOqE,KAGToI,EAAQA,EAAMjG,KAAI,SAAAwG,GAAC,OAAI68D,EAASW,cAAcx9D,MAO9C,IALA,IAGIm/D,EAEJ,EALMC,EAAQ,GACZC,EAAc,GACd96D,EAAOlN,KAAK4mE,WAGd,IAAgB1B,MAAhB,aAA8B,KAAnBn3D,EAAmB,QAC5B,GAAI3F,EAAM0J,QAAQ/D,IAAM,EAAG,CACzB+5D,EAAW/5D,EAEX,IAAIk6D,EAAM,EAGV,IAAK,IAAMC,KAAMF,EACfC,GAAOjoE,KAAK0lE,OAAOwC,GAAIn6D,GAAKi6D,EAAYE,GACxCF,EAAYE,GAAM,EAIhBzY,EAASviD,EAAKa,MAChBk6D,GAAO/6D,EAAKa,IAGd,IAAMnS,EAAIkK,KAAKqrD,MAAM8W,GAKrB,IAAK,IAAME,KAJXJ,EAAMh6D,GAAKnS,EACXosE,EAAYj6D,GAAKk6D,EAAMrsE,EAGJsR,EACbg4D,GAAapzD,QAAQq2D,GAAQjD,GAAapzD,QAAQ/D,IACpD03D,GAAQzlE,KAAK0lE,OAAQx4D,EAAMi7D,EAAMJ,EAAOh6D,QAInC0hD,EAASviD,EAAKa,MACvBi6D,EAAYj6D,GAAKb,EAAKa,IAM1B,IAAK,IAAMjR,KAAOkrE,EACS,IAArBA,EAAYlrE,KACdirE,EAAMD,IACJhrE,IAAQgrE,EAAWE,EAAYlrE,GAAOkrE,EAAYlrE,GAAOkD,KAAK0lE,OAAOoC,GAAUhrE,IAIrF,OAAO8E,GAAM5B,KAAM,CAAE4pB,OAAQm+C,IAAS,GAAMJ,eAQ9CH,OAAAA,WACE,IAAKxnE,KAAKs0B,QAAS,OAAOt0B,KAE1B,IADA,IAAMooE,EAAU,GAChB,MAAgBxrE,OAAO6F,KAAKzC,KAAK4pB,QAAjC,eAA0C,CAArC,IAAM7b,EAAC,KACVq6D,EAAQr6D,IAAM/N,KAAK4pB,OAAO7b,GAE5B,OAAOnM,GAAM5B,KAAM,CAAE4pB,OAAQw+C,IAAW,MA0G1C/mE,OAAAA,SAAOqwB,GACL,IAAK1xB,KAAKs0B,UAAY5C,EAAM4C,QAC1B,OAAO,EAGT,IAAKt0B,KAAKg2D,IAAI30D,OAAOqwB,EAAMskC,KACzB,OAAO,EAST,IAAK,IAAL,MAAgBkP,MAAhB,aAA8B,KAAnBv8D,EAAmB,QAC5B,GAPU0/D,EAOFroE,KAAK4pB,OAAOjhB,GAPN2/D,EAOU52C,EAAM9H,OAAOjhB,UAL1B5I,IAAPsoE,GAA2B,IAAPA,OAAwBtoE,IAAPuoE,GAA2B,IAAPA,EACtDD,IAAOC,GAKZ,OAAO,EARX,IAAYD,EAAIC,EAWhB,OAAO,qCA7eP,OAAOtoE,KAAKs0B,QAAUt0B,KAAKg2D,IAAI7D,OAAS,6CASxC,OAAOnyD,KAAKs0B,QAAUt0B,KAAKg2D,IAAImF,gBAAkB,mCA8WjD,OAAOn7D,KAAKs0B,QAAUt0B,KAAK4pB,OAAOiK,OAAS,EAAI0wB,qCAQ/C,OAAOvkD,KAAKs0B,QAAUt0B,KAAK4pB,OAAOyzC,UAAY,EAAI9Y,mCAQlD,OAAOvkD,KAAKs0B,QAAUt0B,KAAK4pB,OAAOkK,QAAU,EAAIywB,kCAQhD,OAAOvkD,KAAKs0B,QAAUt0B,KAAK4pB,OAAOoH,OAAS,EAAIuzB,iCAQ/C,OAAOvkD,KAAKs0B,QAAUt0B,KAAK4pB,OAAOmK,MAAQ,EAAIwwB,kCAQ9C,OAAOvkD,KAAKs0B,QAAUt0B,KAAK4pB,OAAOoK,OAAS,EAAIuwB,oCAQ/C,OAAOvkD,KAAKs0B,QAAUt0B,KAAK4pB,OAAOqK,SAAW,EAAIswB,oCAQjD,OAAOvkD,KAAKs0B,QAAUt0B,KAAK4pB,OAAOsK,SAAW,EAAIqwB,yCAQjD,OAAOvkD,KAAKs0B,QAAUt0B,KAAK4pB,OAAOuK,cAAgB,EAAIowB,oCAStD,OAAwB,OAAjBvkD,KAAKimE,8CAQZ,OAAOjmE,KAAKimE,QAAUjmE,KAAKimE,QAAQ/Y,OAAS,gDAQ5C,OAAOltD,KAAKimE,QAAUjmE,KAAKimE,QAAQtN,YAAc,WAnpBhC6M,GAorBrB,SAGgB+B,GAAiBgB,GAC/B,GAAI9Y,EAAS8Y,GACX,OAAO/C,GAAS7I,WAAW4L,GACtB,GAAI/C,GAASiB,WAAW8B,GAC7B,OAAOA,EACF,GAA2B,kBAAhBA,EAChB,OAAO/C,GAAS3uC,WAAW0xC,GAE3B,MAAM,IAAI1a,EAAJ,6BACyB0a,EADzB,mBACuDA,GCt2BjE,IAAMC,GAAU,mBAGhB,SAASC,GAAiBttC,EAAOC,GAC/B,OAAKD,GAAUA,EAAM7G,QAET8G,GAAQA,EAAI9G,QAEb8G,EAAMD,EACRnX,GAASiiD,QACd,mBADKjiD,qEAEgEmX,EAAM2rC,QAFtE,YAEyF1rC,EAAI0rC,SAG7F,KAPA9iD,GAASiiD,QAAQ,0BAFjBjiD,GAASiiD,QAAQ,gCAyBPjiD,GAAAA,WAInB,WAAYjiB,GAIV/B,KAAKoB,EAAIW,EAAOo5B,MAIhBn7B,KAAKgd,EAAIjb,EAAOq5B,IAIhBp7B,KAAKimE,QAAUlkE,EAAOkkE,SAAW,KAIjCjmE,KAAK0oE,iBAAkB,IASlBzC,QAAP,SAAe/Y,EAAQyL,GACrB,QADyC,IAApBA,IAAAA,EAAc,OAC9BzL,EACH,MAAM,IAAIW,EAAqB,oDAGjC,IAAMoY,EAAU/Y,aAAkBwL,GAAUxL,EAAS,IAAIwL,GAAQxL,EAAQyL,GAEzE,GAAIqC,GAASD,eACX,MAAM,IAAIzN,EAAqB2Y,GAE/B,OAAO,IAAIjiD,EAAS,CAAEiiD,QAAAA,OAUnB0C,cAAP,SAAqBxtC,EAAOC,GAC1B,IAAMwtC,EAAaC,GAAiB1tC,GAClC2tC,EAAWD,GAAiBztC,GAExB2tC,EAAgBN,GAAiBG,EAAYE,GAEnD,OAAqB,MAAjBC,EACK,IAAI/kD,EAAS,CAClBmX,MAAOytC,EACPxtC,IAAK0tC,IAGAC,KAUJt2C,MAAP,SAAa0I,EAAO1K,GAClB,IAAMwnC,EAAMsP,GAAiB92C,GAC3BmU,EAAKikC,GAAiB1tC,GACxB,OAAOnX,EAAS2kD,cAAc/jC,EAAIA,EAAG5R,KAAKilC,OASrCzlC,OAAP,SAAc4I,EAAK3K,GACjB,IAAMwnC,EAAMsP,GAAiB92C,GAC3BmU,EAAKikC,GAAiBztC,GACxB,OAAOpX,EAAS2kD,cAAc/jC,EAAG1jC,MAAM+2D,GAAMrzB,MAWxCwhC,QAAP,SAAeC,EAAMr6C,GAAM,OACTq6C,GAAQ,IAAIxsD,MAAM,IAAK,GAAhCzY,EADkB,KACf4b,EADe,KAEzB,GAAI5b,GAAK4b,EAAG,CACV,IAAIme,EAAO6tC,EAQP5tC,EAAK6tC,EAPT,IAEED,GADA7tC,EAAQrY,GAASsjD,QAAQhlE,EAAG4qB,IACPsI,QACrB,MAAOtX,GACPgsD,GAAe,EAIjB,IAEEC,GADA7tC,EAAMtY,GAASsjD,QAAQppD,EAAGgP,IACTsI,QACjB,MAAOtX,GACPisD,GAAa,EAGf,GAAID,GAAgBC,EAClB,OAAOjlD,EAAS2kD,cAAcxtC,EAAOC,GAGvC,GAAI4tC,EAAc,CAChB,IAAM/Q,EAAMuN,GAASY,QAAQppD,EAAGgP,GAChC,GAAIisC,EAAI3jC,QACN,OAAOtQ,EAASyO,MAAM0I,EAAO88B,QAE1B,GAAIgR,EAAY,CACrB,IAAMhR,EAAMuN,GAASY,QAAQhlE,EAAG4qB,GAChC,GAAIisC,EAAI3jC,QACN,OAAOtQ,EAASwO,OAAO4I,EAAK68B,IAIlC,OAAOj0C,EAASiiD,QAAQ,aAAjBjiD,cAA6CqiD,EAA7C,qCAQFlgD,WAAP,SAAkBnoB,GAChB,OAAQA,GAAKA,EAAE0qE,kBAAoB,8BAgDrC/sE,OAAAA,SAAOoa,GACL,YAD4B,IAAvBA,IAAAA,EAAO,gBACL/V,KAAKs0B,QAAUt0B,KAAKkpE,WAAL,MAAAlpE,KAAmB,CAAC+V,IAAOsK,IAAItK,GAAQwuC,OAU/D4G,MAAAA,SAAMp1C,GACJ,QAD2B,IAAvBA,IAAAA,EAAO,iBACN/V,KAAKs0B,QAAS,OAAOiwB,IAC1B,IAAMppB,EAAQn7B,KAAKm7B,MAAMjK,QAAQnb,GAC/BqlB,EAAMp7B,KAAKo7B,IAAIlK,QAAQnb,GACzB,OAAOjQ,KAAK4qB,MAAM0K,EAAI5E,KAAK2E,EAAOplB,GAAMsK,IAAItK,IAAS,KAQvDozD,QAAAA,SAAQpzD,GACN,QAAO/V,KAAKs0B,UAAUt0B,KAAKopE,WAAappE,KAAKgd,EAAE9b,MAAM,GAAGioE,QAAQnpE,KAAKoB,EAAG2U,OAO1EqzD,QAAAA,WACE,OAAOppE,KAAKoB,EAAE2b,YAAc/c,KAAKgd,EAAED,aAQrCssD,QAAAA,SAAQC,GACN,QAAKtpE,KAAKs0B,SACHt0B,KAAKoB,EAAIkoE,KAQlBC,SAAAA,SAASD,GACP,QAAKtpE,KAAKs0B,SACHt0B,KAAKgd,GAAKssD,KAQnBzvC,SAAAA,SAASyvC,GACP,QAAKtpE,KAAKs0B,UACHt0B,KAAKoB,GAAKkoE,GAAYtpE,KAAKgd,EAAIssD,MAUxC5gD,IAAAA,SAAAA,GAAyB,iBAAJ,GAAI,EAAnByS,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,IACX,OAAKp7B,KAAKs0B,QACHtQ,EAAS2kD,cAAcxtC,GAASn7B,KAAKoB,EAAGg6B,GAAOp7B,KAAKgd,GADjChd,QAS5BwpE,QAAAA,WAAsB,WACpB,IAAKxpE,KAAKs0B,QAAS,MAAO,GADN,2BAAXm1C,EAAW,yBAAXA,EAAW,GAAApsD,UAAAA,GAUpB,IARA,IAAMqsD,EAASD,EACVtnE,IAAI0mE,IACJ9iD,QAAO,SAAA1lB,GAAC,OAAIwgB,EAAKgZ,SAASx5B,MAC1B4E,OACHynB,EAAU,GACNtrB,EAAMpB,KAANoB,EACJxF,EAAI,EAECwF,EAAIpB,KAAKgd,GAAG,CACjB,IAAM8oD,EAAQ4D,EAAO9tE,IAAMoE,KAAKgd,EAC9B0B,GAAQonD,GAAS9lE,KAAKgd,EAAIhd,KAAKgd,EAAI8oD,EACrCp5C,EAAQpsB,KAAK0jB,EAAS2kD,cAAcvnE,EAAGsd,IACvCtd,EAAIsd,EACJ9iB,GAAK,EAGP,OAAO8wB,KASTi9C,QAAAA,SAAQl5C,GACN,IAAMwnC,EAAMsP,GAAiB92C,GAE7B,IAAKzwB,KAAKs0B,UAAY2jC,EAAI3jC,SAAsC,IAA3B2jC,EAAIqP,GAAG,gBAC1C,MAAO,GAQT,IALI,IAEF5oD,EAFItd,EAAMpB,KAANoB,EACJuU,EAAM,EAGF+W,EAAU,GACTtrB,EAAIpB,KAAKgd,GAAG,CACjB,IAAM8oD,EAAQ9lE,KAAKm7B,MAAMnI,KAAKilC,EAAIwP,UAAS,SAAA7hE,GAAC,OAAIA,EAAI+P,MACpD+I,GAAQonD,GAAS9lE,KAAKgd,EAAIhd,KAAKgd,EAAI8oD,EACnCp5C,EAAQpsB,KAAK0jB,EAAS2kD,cAAcvnE,EAAGsd,IACvCtd,EAAIsd,EACJ/I,GAAO,EAGT,OAAO+W,KAQTk9C,cAAAA,SAAcC,GACZ,OAAK7pE,KAAKs0B,QACHt0B,KAAK2pE,QAAQ3pE,KAAKrE,SAAWkuE,GAAersE,MAAM,EAAGqsE,GADlC,MAS5B5vC,SAAAA,SAASvI,GACP,OAAO1xB,KAAKgd,EAAI0U,EAAMtwB,GAAKpB,KAAKoB,EAAIswB,EAAM1U,KAQ5C8sD,WAAAA,SAAWp4C,GACT,QAAK1xB,KAAKs0B,UACFt0B,KAAKgd,KAAO0U,EAAMtwB,KAQ5B2oE,SAAAA,SAASr4C,GACP,QAAK1xB,KAAKs0B,UACF5C,EAAM1U,KAAOhd,KAAKoB,KAQ5B4oE,QAAAA,SAAQt4C,GACN,QAAK1xB,KAAKs0B,UACHt0B,KAAKoB,GAAKswB,EAAMtwB,GAAKpB,KAAKgd,GAAK0U,EAAM1U,MAQ9C3b,OAAAA,SAAOqwB,GACL,SAAK1xB,KAAKs0B,UAAY5C,EAAM4C,WAIrBt0B,KAAKoB,EAAEC,OAAOqwB,EAAMtwB,IAAMpB,KAAKgd,EAAE3b,OAAOqwB,EAAM1U,OAUvDitD,aAAAA,SAAav4C,GACX,IAAK1xB,KAAKs0B,QAAS,OAAOt0B,KAC1B,IAAMoB,EAAIpB,KAAKoB,EAAIswB,EAAMtwB,EAAIpB,KAAKoB,EAAIswB,EAAMtwB,EAC1C4b,EAAIhd,KAAKgd,EAAI0U,EAAM1U,EAAIhd,KAAKgd,EAAI0U,EAAM1U,EAExC,OAAI5b,GAAK4b,EACA,KAEAgH,EAAS2kD,cAAcvnE,EAAG4b,MAUrC2tB,MAAAA,SAAMjZ,GACJ,IAAK1xB,KAAKs0B,QAAS,OAAOt0B,KAC1B,IAAMoB,EAAIpB,KAAKoB,EAAIswB,EAAMtwB,EAAIpB,KAAKoB,EAAIswB,EAAMtwB,EAC1C4b,EAAIhd,KAAKgd,EAAI0U,EAAM1U,EAAIhd,KAAKgd,EAAI0U,EAAM1U,EACxC,OAAOgH,EAAS2kD,cAAcvnE,EAAG4b,MAS5BktD,MAAP,SAAat+B,GAAW,MACCA,EAAU3mC,MAAK,SAACsC,EAAG0T,GAAJ,OAAU1T,EAAEnG,EAAI6Z,EAAE7Z,KAAGsB,QACzD,WAAmBK,GAAS,IAA1BonE,EAA0B,KAAnB58C,EAAmB,KAC1B,OAAKA,EAEMA,EAAQ0M,SAASl3B,IAASwqB,EAAQu8C,WAAW/mE,GAC/C,CAAConE,EAAO58C,EAAQod,MAAM5nC,IAEtB,CAAConE,EAAMtnE,OAAO,CAAC0qB,IAAWxqB,GAJ1B,CAAConE,EAAOpnE,KAOnB,CAAC,GAAI,OAVAu1D,EADe,KACR8R,EADQ,KAgBtB,OAHIA,GACF9R,EAAMh4D,KAAK8pE,GAEN9R,KAQFxmB,IAAP,SAAWlG,GAQT,IARoB,MAQpB,EAPIzQ,EAAQ,KACVkvC,EAAe,EACX39C,EAAU,GACd8e,EAAOI,EAAUzpC,KAAI,SAAAvG,GAAC,MAAI,CAAC,CAAEqnB,KAAMrnB,EAAEwF,EAAGijB,KAAM,KAAO,CAAEpB,KAAMrnB,EAAEohB,EAAGqH,KAAM,SAI1E,KAHc,EAAAvoB,MAAMmB,WAAU4F,OAAhB,QAA0B2oC,GACtBvmC,MAAK,SAACsC,EAAG0T,GAAJ,OAAU1T,EAAE0b,KAAOhI,EAAEgI,WAE5C,aAAqB,KAAVrnB,EAAU,QAGE,KAFrByuE,GAA2B,MAAXzuE,EAAEyoB,KAAe,GAAK,GAGpC8W,EAAQv/B,EAAEqnB,MAENkY,IAAUA,KAAWv/B,EAAEqnB,MACzByJ,EAAQpsB,KAAK0jB,EAAS2kD,cAAcxtC,EAAOv/B,EAAEqnB,OAG/CkY,EAAQ,MAIZ,OAAOnX,EAASkmD,MAAMx9C,MAQxB6U,WAAAA,WAAyB,kCAAXqK,EAAW,yBAAXA,EAAW,GAAAvuB,UAAAA,GACvB,OAAO2G,EAAS8tB,IAAI,CAAC9xC,MAAM6C,OAAO+oC,IAC/BzpC,KAAI,SAAAvG,GAAC,OAAIqpB,EAAKglD,aAAaruE,MAC3BmqB,QAAO,SAAAnqB,GAAC,OAAIA,IAAMA,EAAEwtE,gBAOzBjrE,SAAAA,WACE,OAAK6B,KAAKs0B,QACH,IAAIt0B,KAAKoB,EAAE0lE,QAAlB,WAA+B9mE,KAAKgd,EAAE8pD,QAAtC,IAD0B0B,MAU5B1B,MAAAA,SAAM96C,GACJ,OAAKhsB,KAAKs0B,QACAt0B,KAAKoB,EAAE0lE,MAAM96C,GAAvB,IAAgChsB,KAAKgd,EAAE8pD,MAAM96C,GADnBw8C,MAU5B8B,UAAAA,WACE,OAAKtqE,KAAKs0B,QACAt0B,KAAKoB,EAAEkpE,YAAjB,IAAgCtqE,KAAKgd,EAAEstD,YADb9B,MAW5BzB,UAAAA,SAAU/6C,GACR,OAAKhsB,KAAKs0B,QACAt0B,KAAKoB,EAAE2lE,UAAU/6C,GAA3B,IAAoChsB,KAAKgd,EAAE+pD,UAAU/6C,GAD3Bw8C,MAW5B9B,SAAAA,SAAS6D,EAAT,GAAiD,kBAAJ,GAAI,GAA1B/wB,UAAAA,OAA0B,MAAd,WAAc,EAC/C,OAAKx5C,KAAKs0B,QACH,GAAGt0B,KAAKoB,EAAEslE,SAAS6D,GAAc/wB,EAAYx5C,KAAKgd,EAAE0pD,SAAS6D,GAD1C/B,MAgB5BU,WAAAA,SAAWnzD,EAAMiW,GACf,OAAKhsB,KAAKs0B,QAGHt0B,KAAKgd,EAAEwZ,KAAKx2B,KAAKoB,EAAG2U,EAAMiW,GAFxBw5C,GAASS,QAAQjmE,KAAKwqE,kBAYjCC,aAAAA,SAAaC,GACX,OAAO1mD,EAAS2kD,cAAc+B,EAAM1qE,KAAKoB,GAAIspE,EAAM1qE,KAAKgd,sCA9ZxD,OAAOhd,KAAKs0B,QAAUt0B,KAAKoB,EAAI,iCAQ/B,OAAOpB,KAAKs0B,QAAUt0B,KAAKgd,EAAI,qCAQ/B,OAA8B,OAAvBhd,KAAKwqE,oDAQZ,OAAOxqE,KAAKimE,QAAUjmE,KAAKimE,QAAQ/Y,OAAS,gDAQ5C,OAAOltD,KAAKimE,QAAUjmE,KAAKimE,QAAQtN,YAAc,WArLhC30C,GCzBA2mD,GAAAA,kCAMZC,OAAP,SAAczzC,QAA6B,IAA7BA,IAAAA,EAAO6jC,GAASP,aAC5B,IAAMoQ,EAAQ/nD,GAAS63C,MACpB3kC,QAAQmB,GACRzO,IAAI,CAAE0I,MAAO,KAEhB,OAAQ+F,EAAKolC,WAAasO,EAAMn4C,SAAWm4C,EAAMniD,IAAI,CAAE0I,MAAO,IAAKsB,UAQ9Do4C,gBAAP,SAAuB3zC,GACrB,OAAOiiC,GAASG,iBAAiBpiC,IAASiiC,GAASC,YAAYliC,MAiB1DqjC,cAAP,SAAqBnX,GACnB,OAAOmX,GAAcnX,EAAO2X,GAASP,gBAoBhC3mC,OAAP,SACEn4B,EADF,QAGE,IAFAA,IAAAA,EAAS,QAET,iBADuF,GACvF,MADEw2D,OAAAA,OACF,MADW,KACX,MADiBgJ,gBAAAA,OACjB,MADmC,KACnC,MADyC4P,OAAAA,OACzC,MADkD,KAClD,MADwD7T,eAAAA,OACxD,MADyE,UACzE,EACA,OAAQ6T,GAAU7P,GAAOr2C,OAAOstC,EAAQgJ,EAAiBjE,IAAiBpjC,OAAOn4B,MAgB5EqvE,aAAP,SACErvE,EADF,QAGE,IAFAA,IAAAA,EAAS,QAET,iBADuF,GACvF,MADEw2D,OAAAA,OACF,MADW,KACX,MADiBgJ,gBAAAA,OACjB,MADmC,KACnC,MADyC4P,OAAAA,OACzC,MADkD,KAClD,MADwD7T,eAAAA,OACxD,MADyE,UACzE,EACA,OAAQ6T,GAAU7P,GAAOr2C,OAAOstC,EAAQgJ,EAAiBjE,IAAiBpjC,OAAOn4B,GAAQ,MAiBpFq4D,SAAP,SAAgBr4D,EAAhB,QAAgG,IAAhFA,IAAAA,EAAS,QAAuE,iBAAJ,GAAI,MAA7Dw2D,OAAAA,OAA6D,MAApD,KAAoD,MAA9CgJ,gBAAAA,OAA8C,MAA5B,KAA4B,MAAtB4P,OACxE,aAD8F,MAAb,KAAa,IAC5E7P,GAAOr2C,OAAOstC,EAAQgJ,EAAiB,OAAOnH,SAASr4D,MAepEsvE,eAAP,SACEtvE,EADF,QAGE,IAFAA,IAAAA,EAAS,QAET,iBAD2D,GAC3D,MADEw2D,OAAAA,OACF,MADW,KACX,MADiBgJ,gBAAAA,OACjB,MADmC,KACnC,MADyC4P,OAEzC,aADA,MADkD,KAClD,IACkB7P,GAAOr2C,OAAOstC,EAAQgJ,EAAiB,OAAOnH,SAASr4D,GAAQ,MAW5Es4D,UAAP,YAAyC,kBAAJ,GAAI,GAAtB9B,OAAAA,OAAsB,MAAb,KAAa,EACvC,OAAO+I,GAAOr2C,OAAOstC,GAAQ8B,eAaxBI,KAAP,SAAY14D,EAAZ,QAAsD,IAA1CA,IAAAA,EAAS,SAAiC,kBAAJ,GAAI,GAAtBw2D,OAAAA,OAAsB,MAAb,KAAa,EACpD,OAAO+I,GAAOr2C,OAAOstC,EAAQ,KAAM,WAAWkC,KAAK14D,MAc9CuvE,SAAP,WACE,IAAI3Y,GAAO,EACT4Y,GAAa,EACbC,GAAQ,EACRC,GAAW,EAEb,GAAI3b,IAAW,CACb6C,GAAO,EACP4Y,EAAatb,IACbwb,EAAWtb,IAEX,IACEqb,EAEkB,qBADhB,IAAIzb,KAAKC,eAAe,KAAM,CAAEwC,SAAU,qBAAsBsE,kBAC7DtE,SACL,MAAOp1C,GACPouD,GAAQ,GAIZ,MAAO,CAAE7Y,KAAAA,EAAM4Y,WAAAA,EAAYC,MAAAA,EAAOC,SAAAA,MAnLjBV,GCTrB,SAASW,GAAQC,EAASC,GACxB,IAAMC,EAAc,SAAA7mC,GAAE,OAClBA,EACGvO,MAAM,EAAG,CAAEC,eAAe,IAC1BpF,QAAQ,OACRnU,WACLooC,EAAKsmB,EAAYD,GAASC,EAAYF,GACxC,OAAOzlE,KAAK4qB,MAAM80C,GAAS7I,WAAWxX,GAAImiB,GAAG,SA0C/C,SAAeoE,GAASH,EAASC,EAAOpjE,EAAO4jB,GAAM,MAvCrD,SAAwBu0C,EAAQiL,EAAOpjE,GAkBrC,IAjBA,IAeIujE,EAAaC,EADXl/C,EAAU,GAGhB,MAjBgB,CACd,CAAC,QAAS,SAACnlB,EAAG0T,GAAJ,OAAUA,EAAEkW,KAAO5pB,EAAE4pB,OAC/B,CAAC,WAAY,SAAC5pB,EAAG0T,GAAJ,OAAUA,EAAE68C,QAAUvwD,EAAEuwD,UACrC,CAAC,SAAU,SAACvwD,EAAG0T,GAAJ,OAAUA,EAAEmW,MAAQ7pB,EAAE6pB,MAA4B,IAAnBnW,EAAEkW,KAAO5pB,EAAE4pB,QACrD,CACE,QACA,SAAC5pB,EAAG0T,GACF,IAAM8Y,EAAOu3C,GAAQ/jE,EAAG0T,GACxB,OAAQ8Y,EAAQA,EAAO,GAAM,IAGjC,CAAC,OAAQu3C,KAMX,eAAsC,YAA1Bv1D,EAA0B,KAApB81D,EAAoB,KACpC,GAAIzjE,EAAM0J,QAAQiE,IAAS,EAAG,OAC5B41D,EAAc51D,EAEd,IAGuB,EAHnB+1D,EAAQD,EAAOtL,EAAQiL,IAC3BI,EAAYrL,EAAOvtC,OAAPutC,EAAAA,IAAexqD,GAAO+1D,EAAtB,KAEIN,GACdjL,EAASA,EAAOvtC,OAAPutC,EAAAA,IAAexqD,GAAO+1D,EAAQ,EAA9B,IACTA,GAAS,GAETvL,EAASqL,EAGXl/C,EAAQ3W,GAAQ+1D,GAIpB,MAAO,CAACvL,EAAQ7zC,EAASk/C,EAAWD,GAIYI,CAAeR,EAASC,EAAOpjE,GAA1Em4D,EAD8C,KACtC7zC,EADsC,KAC7Bk/C,EAD6B,KAClBD,EADkB,KAG7CK,EAAkBR,EAAQjL,EAE1B0L,EAAkB7jE,EAAM2d,QAC5B,SAAApd,GAAC,MAAI,CAAC,QAAS,UAAW,UAAW,gBAAgBmJ,QAAQnJ,IAAM,KAGrE,GAA+B,IAA3BsjE,EAAgBtwE,OAAc,CACT,MAAvB,GAAIiwE,EAAYJ,EACdI,EAAYrL,EAAOvtC,OAAPutC,EAAAA,IAAeoL,GAAc,EAA7B,IAGVC,IAAcrL,IAChB7zC,EAAQi/C,IAAgBj/C,EAAQi/C,IAAgB,GAAKK,GAAmBJ,EAAYrL,IAIxF,IAEgC,EAF1B9vC,EAAW+0C,GAAS3uC,WAAWj6B,OAAO4Q,OAAOkf,EAASV,IAE5D,OAAIigD,EAAgBtwE,OAAS,GACpB,EAAA6pE,GAAS7I,WAAWqP,EAAiBhgD,IACzCwsC,QADI,QACOyT,GACXj5C,KAAKvC,GAEDA,EC7EX,IAAMy7C,GAAmB,CACvBC,KAAM,kBACNC,QAAS,kBACTC,KAAM,kBACNC,KAAM,kBACNC,KAAM,kBACNC,SAAU,kBACVC,KAAM,kBACNC,QAAS,0EACTC,KAAM,kBACNC,KAAM,kBACNC,KAAM,kBACNC,KAAM,kBACNC,KAAM,kBACNC,KAAM,kBACNC,KAAM,kBACNC,KAAM,kBACNC,QAAS,kBACTC,KAAM,kBACNC,KAAM,kBACNC,KAAM,kBACNC,KAAM,OAGFC,GAAwB,CAC5BrB,KAAM,CAAC,KAAM,MACbC,QAAS,CAAC,KAAM,MAChBC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,SAAU,CAAC,MAAO,OAClBC,KAAM,CAAC,KAAM,MACbE,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,QAAS,CAAC,KAAM,MAChBC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,MACbC,KAAM,CAAC,KAAM,OAITG,GAAevB,GAAiBQ,QAAQh9D,QAAQ,WAAY,IAAImK,MAAM,IA0B5E,SAAgB6zD,GAATC,EAAyCC,GAAa,IAAhCzS,EAAgC,EAAhCA,gBAC3B,YAD2D,IAAbyS,IAAAA,EAAS,IAChD,IAAIh3D,OAAJ,GAAcs1D,GAAiB/Q,GAAmB,QAAUyS,GChErE,SAASC,GAAQpN,EAAOqN,GACtB,YADqC,IAAfA,IAAAA,EAAO,SAAAlyE,GAAC,OAAIA,IAC3B,CAAE6kE,MAAAA,EAAOsN,MAAO,gBAAE3sE,EAAF,YAAS0sE,EDsClC,SAA4B/mE,GAC1B,IAAIpJ,EAAQ4S,SAASxJ,EAAK,IAC1B,GAAID,MAAMnJ,GAAQ,CAChBA,EAAQ,GACR,IAAK,IAAI/B,EAAI,EAAGA,EAAImL,EAAIpL,OAAQC,IAAK,CACnC,IAAMyJ,EAAO0B,EAAIinE,WAAWpyE,GAE5B,IAAiD,IAA7CmL,EAAInL,GAAGqyE,OAAO/B,GAAiBQ,SACjC/uE,GAAS8vE,GAAa37D,QAAQ/K,EAAInL,SAElC,IAAK,IAAMkB,KAAO0wE,GAAuB,OACpBA,GAAsB1wE,GAAlCooD,EADgC,KAC3B32C,EAD2B,KAEnClJ,GAAQ6/C,GAAO7/C,GAAQkJ,IACzB5Q,GAAS0H,EAAO6/C,IAKxB,OAAO30C,SAAS5S,EAAO,IAEvB,OAAOA,EC1D4BuwE,CAAY9sE,MAGnD,IACM+sE,GAAc,MADP72C,OAAO82C,aAAa,KAChB,IACXC,GAAoB,IAAIz3D,OAAOu3D,GAAa,KAElD,SAASG,GAAaltE,GAGpB,OAAOA,EAAEsO,QAAQ,MAAO,QAAQA,QAAQ2+D,GAAmBF,IAG7D,SAASI,GAAqBntE,GAC5B,OAAOA,EACJsO,QAAQ,MAAO,IACfA,QAAQ2+D,GAAmB,KAC3B3nE,cAGL,SAAS8nE,GAAMlxE,EAAS6zC,GACtB,OAAgB,OAAZ7zC,EACK,KAEA,CACLmjE,MAAO7pD,OAAOtZ,EAAQ6E,IAAImsE,IAAcxtE,KAAK,MAC7CitE,MAAO,gBAAE3sE,EAAF,YACL9D,EAAQmxE,WAAU,SAAA7yE,GAAC,OAAI2yE,GAAqBntE,KAAOmtE,GAAqB3yE,MAAMu1C,IAKtF,SAASze,GAAO+tC,EAAOiO,GACrB,MAAO,CAAEjO,MAAAA,EAAOsN,MAAO,mBAAcrb,GAAd,YAAkCgc,OAAAA,GAG3D,SAASC,GAAOlO,GACd,MAAO,CAAEA,MAAAA,EAAOsN,MAAO,0BAiJzB,IAAMa,GAA0B,CAC9Bz9C,KAAM,CACJ,UAAW,KACXgsC,QAAS,SAEX/rC,MAAO,CACL+rC,QAAS,IACT,UAAW,KACX0R,MAAO,MACPC,KAAM,QAERz9C,IAAK,CACH8rC,QAAS,IACT,UAAW,MAEbpsC,QAAS,CACP89C,MAAO,MACPC,KAAM,QAERC,UAAW,IACXC,UAAW,IACX17C,KAAM,CACJ6pC,QAAS,IACT,UAAW,MAEb5pC,OAAQ,CACN4pC,QAAS,IACT,UAAW,MAEb3pC,OAAQ,CACN2pC,QAAS,IACT,UAAW,OAsIf,IAAI8R,GAAqB,KAUzB,SAASC,GAAsBza,EAAOtC,GACpC,GAAIsC,EAAMC,QACR,OAAOD,EAGT,IAAMsB,EAAaD,GAAUnB,uBAAuBF,EAAMlnD,KAE1D,IAAKwoD,EACH,OAAOtB,EAGT,IAGM2D,EAHYtC,GAAUjxC,OAAOstC,EAAQ4D,GACnBU,qBAnBnBwY,KACHA,GAAqBnsD,GAAS65C,WAAW,gBAGpCsS,KAiBc9sE,KAAI,SAAAyC,GAAC,OA1J5B,SAAsBw0C,EAAM+Y,EAAQ4D,GAAY,IACtC1xC,EAAgB+0B,EAAhB/0B,KAAM1mB,EAAUy7C,EAAVz7C,MAEd,GAAa,YAAT0mB,EACF,MAAO,CACLqwC,SAAS,EACTnnD,IAAK5P,GAIT,IAAMs/D,EAAQlH,EAAW1xC,GAErB9W,EAAMqhE,GAAwBvqD,GAKlC,MAJmB,kBAAR9W,IACTA,EAAMA,EAAI0vD,IAGR1vD,EACK,CACLmnD,SAAS,EACTnnD,IAAAA,QAHJ,EAyI8B4hE,CAAavqE,EAAGutD,EAAQ4D,MAEtD,OAAIqC,EAAOn4C,cAASlgB,GACX00D,EAGF2D,EAWT,SAAgBgX,GAAkBjd,EAAQ9O,EAAOtrB,GAC/C,IAAMqgC,EATR,SAA2BA,EAAQjG,GAAQ,MACzC,OAAO,EAAAr2D,MAAMmB,WAAU4F,OAAhB,QAA0Bu1D,EAAOj2D,KAAI,SAAAiiB,GAAC,OAAI8qD,GAAsB9qD,EAAG+tC,OAQ3Dkd,CAAkBvZ,GAAUI,YAAYn+B,GAASo6B,GAC9D/pD,EAAQgwD,EAAOj2D,KAAI,SAAAiiB,GAAC,OAzVxB,SAAsBqwC,EAAOuB,GAC3B,IAAMsZ,EAAM5B,GAAW1X,GACrBuZ,EAAM7B,GAAW1X,EAAK,OACtBwZ,EAAQ9B,GAAW1X,EAAK,OACxByZ,EAAO/B,GAAW1X,EAAK,OACvB0Z,EAAMhC,GAAW1X,EAAK,OACtB2Z,EAAWjC,GAAW1X,EAAK,SAC3B4Z,EAAalC,GAAW1X,EAAK,SAC7B6Z,EAAWnC,GAAW1X,EAAK,SAC3B8Z,EAAYpC,GAAW1X,EAAK,SAC5B+Z,EAAYrC,GAAW1X,EAAK,SAC5Bga,EAAYtC,GAAW1X,EAAK,SAC5BtB,EAAU,SAAAtwC,GAAC,MAAK,CAAEq8C,MAAO7pD,QAjBRjZ,EAiB2BymB,EAAE7W,IAfzC5P,EAAM+R,QAAQ,8BAA+B,UAeGq+D,MAAO,yBAAYrZ,SAAS,GAjBrF,IAAqB/2D,GAqIboY,EAnHM,SAAAqO,GACR,GAAIqwC,EAAMC,QACR,OAAOA,EAAQtwC,GAEjB,OAAQA,EAAE7W,KAER,IAAK,IACH,OAAOihE,GAAMxY,EAAI3B,KAAK,SAAS,GAAQ,GACzC,IAAK,KACH,OAAOma,GAAMxY,EAAI3B,KAAK,QAAQ,GAAQ,GAExC,IAAK,IACH,OAAOwZ,GAAQgC,GACjB,IAAK,KAoEL,IAAK,KACH,OAAOhC,GAAQkC,EAAW/d,IAnE5B,IAAK,OAgEL,IAAK,OACH,OAAO6b,GAAQ4B,GA/DjB,IAAK,QACH,OAAO5B,GAAQmC,GACjB,IAAK,SACH,OAAOnC,GAAQ6B,GAEjB,IAAK,IAQL,IAAK,IASL,IAAK,IAYL,IAAK,IAIL,IAAK,IAIL,IAAK,IAEL,IAAK,IAIL,IAAK,IAmBL,IAAK,IACH,OAAO7B,GAAQ8B,GA7DjB,IAAK,KAQL,IAAK,KASL,IAAK,KAQL,IAAK,KAIL,IAAK,KAIL,IAAK,KAML,IAAK,KAIL,IAAK,KAmBL,IAAK,KACH,OAAO9B,GAAQ0B,GA7DjB,IAAK,MACH,OAAOf,GAAMxY,EAAIliC,OAAO,SAAS,GAAM,GAAQ,GACjD,IAAK,OACH,OAAO06C,GAAMxY,EAAIliC,OAAO,QAAQ,GAAM,GAAQ,GAKhD,IAAK,MACH,OAAO06C,GAAMxY,EAAIliC,OAAO,SAAS,GAAO,GAAQ,GAClD,IAAK,OACH,OAAO06C,GAAMxY,EAAIliC,OAAO,QAAQ,GAAO,GAAQ,GAOjD,IAAK,IAyBL,IAAK,IACH,OAAO+5C,GAAQ+B,GAxBjB,IAAK,MAyBL,IAAK,MACH,OAAO/B,GAAQ2B,GACjB,IAAK,IACH,OAAOb,GAAOmB,GAEhB,IAAK,IACH,OAAOtB,GAAMxY,EAAI/B,YAAa,GAYhC,IAAK,IACL,IAAK,IACH,OAAO4Z,GAAQyB,GACjB,IAAK,MACH,OAAOd,GAAMxY,EAAIhC,SAAS,SAAS,GAAO,GAAQ,GACpD,IAAK,OACH,OAAOwa,GAAMxY,EAAIhC,SAAS,QAAQ,GAAO,GAAQ,GACnD,IAAK,MACH,OAAOwa,GAAMxY,EAAIhC,SAAS,SAAS,GAAM,GAAQ,GACnD,IAAK,OACH,OAAOwa,GAAMxY,EAAIhC,SAAS,QAAQ,GAAM,GAAQ,GAElD,IAAK,IACL,IAAK,KACH,OAAOthC,GAAO,IAAI9b,OAAJ,QAAmB+4D,EAASzxC,OAA5B,SAA2CqxC,EAAIrxC,OAA/C,OAA6D,GAC7E,IAAK,MACH,OAAOxL,GAAO,IAAI9b,OAAJ,QAAmB+4D,EAASzxC,OAA5B,KAAuCqxC,EAAIrxC,OAA3C,MAAwD,GAGxE,IAAK,IACH,OAAOywC,GAAO,sBAChB,QACE,OAAOja,EAAQtwC,IAIV6rD,CAAQxb,IAAU,CAC7B+V,cAjLgB,qDAsLlB,OAFAz0D,EAAK0+C,MAAQA,EAEN1+C,EAmNmBm6D,CAAa9rD,EAAG+tC,MACxCge,EAAoB/nE,EAAMoa,MAAK,SAAA4B,GAAC,OAAIA,EAAEomD,iBAExC,GAAI2F,EACF,MAAO,CAAE9sB,MAAAA,EAAO+U,OAAAA,EAAQoS,cAAe2F,EAAkB3F,eACpD,MAvJT,SAAoBpiE,GAElB,MAAO,CAAC,IADGA,EAAMjG,KAAI,SAAAwG,GAAC,OAAIA,EAAE83D,SAAO/9D,QAAO,SAACiE,EAAG+P,GAAJ,OAAa/P,EAAb,IAAkB+P,EAAEwnB,OAApB,MAA+B,IAClE,IAAY91B,GAsJegoE,CAAWhoE,GAApCioE,EADF,KACeC,EADf,KAEH7P,EAAQ7pD,OAAOy5D,EAAa,KAFzB,EAlJT,SAAehtB,EAAOod,EAAO6P,GAC3B,IAAM18C,EAAUyvB,EAAMv1C,MAAM2yD,GAE5B,GAAI7sC,EAAS,CACX,IAAM28C,EAAM,GACRC,EAAa,EACjB,IAAK,IAAM50E,KAAK00E,EACd,GAAIljE,EAAekjE,EAAU10E,GAAI,CAC/B,IAAM4+B,EAAI81C,EAAS10E,GACjB8yE,EAASl0C,EAAEk0C,OAASl0C,EAAEk0C,OAAS,EAAI,GAChCl0C,EAAEk6B,SAAWl6B,EAAEi6B,QAClB8b,EAAI/1C,EAAEi6B,MAAMlnD,IAAI,IAAMitB,EAAEuzC,MAAMn6C,EAAQp2B,MAAMgzE,EAAYA,EAAa9B,KAEvE8B,GAAc9B,EAGlB,MAAO,CAAC96C,EAAS28C,GAEjB,MAAO,CAAC38C,EAAS,IAmIS9lB,CAAMu1C,EAAOod,EAAO6P,GAA3CG,EAHE,KAGU78C,EAHV,OAIcA,EAhIvB,SAA6BA,GAC3B,IAkCIuD,EAsCJ,OAhCEA,EALGq4B,EAAY57B,EAAQ88C,GAEblhB,EAAY57B,EAAQuI,GAGvB,KAFAi9B,GAASv0C,OAAO+O,EAAQuI,GAFxB,IAAIi+B,GAAgBxmC,EAAQ88C,GAOhClhB,EAAY57B,EAAQ+8C,KACvB/8C,EAAQg9C,EAAsB,GAAjBh9C,EAAQ+8C,EAAI,GAAS,GAG/BnhB,EAAY57B,EAAQ4G,KACnB5G,EAAQ4G,EAAI,IAAoB,IAAd5G,EAAQrsB,EAC5BqsB,EAAQ4G,GAAK,GACU,KAAd5G,EAAQ4G,GAA0B,IAAd5G,EAAQrsB,IACrCqsB,EAAQ4G,EAAI,IAIE,IAAd5G,EAAQi9C,GAAWj9C,EAAQwE,IAC7BxE,EAAQwE,GAAKxE,EAAQwE,GAGlBo3B,EAAY57B,EAAQjrB,KACvBirB,EAAQk9C,EAAIjgB,GAAYj9B,EAAQjrB,IAY3B,CATM/L,OAAO6F,KAAKmxB,GAASlxB,QAAO,SAACgU,EAAG3I,GAC3C,IAAMpH,EAhEQ,SAAA8tD,GACd,OAAQA,GACN,IAAK,IACH,MAAO,cACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACL,IAAK,IACH,MAAO,OACT,IAAK,IACH,MAAO,MACT,IAAK,IACH,MAAO,UACT,IAAK,IACL,IAAK,IACH,MAAO,QACT,IAAK,IACH,MAAO,OACT,IAAK,IACL,IAAK,IACH,MAAO,UACT,IAAK,IACH,MAAO,aACT,IAAK,IACH,MAAO,WACT,IAAK,IACH,MAAO,UACT,QACE,OAAO,MAkCDsc,CAAQhjE,GAKlB,OAJIpH,IACF+P,EAAE/P,GAAKitB,EAAQ7lB,IAGV2I,IACN,IAEWygB,GAuDiB65C,CAAoBp9C,GAAW,CAAC,KAAM,MAAhEzwB,EAJE,KAIMg0B,EAJN,KAKL,GAAI/pB,EAAewmB,EAAS,MAAQxmB,EAAewmB,EAAS,KAC1D,MAAM,IAAI85B,EACR,yDAGJ,MAAO,CAAErK,MAAAA,EAAO+U,OAAAA,EAAQqI,MAAAA,EAAOgQ,WAAAA,EAAY78C,QAAAA,EAASzwB,OAAAA,EAAQg0B,KAAAA,GCrZhE,IAAM85C,GAAgB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvEC,GAAa,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAElE,SAASC,GAAep7D,EAAMpY,GAC5B,OAAO,IAAI+6D,GACT,oBADK,iBAEY/6D,EAFZ,oBAEqCA,EAFrC,UAEoDoY,EAFpD,sBAMT,SAASq7D,GAAUjgD,EAAMC,EAAOC,GAC9B,IAAMggD,EAAK,IAAIriD,KAAKA,KAAKyiC,IAAItgC,EAAMC,EAAQ,EAAGC,IAAMigD,YACpD,OAAc,IAAPD,EAAW,EAAIA,EAGxB,SAASE,GAAepgD,EAAMC,EAAOC,GACnC,OAAOA,GAAO+/B,GAAWjgC,GAAQ+/C,GAAaD,IAAe7/C,EAAQ,GAGvE,SAASogD,GAAiBrgD,EAAM0mC,GAC9B,IAAM4Z,EAAQrgB,GAAWjgC,GAAQ+/C,GAAaD,GAC5CS,EAASD,EAAMhD,WAAU,SAAA7yE,GAAC,OAAIA,EAAIi8D,KAEpC,MAAO,CAAEzmC,MAAOsgD,EAAS,EAAGrgD,IADpBwmC,EAAU4Z,EAAMC,IAQ1B,SAAgBC,GAAgBC,GAAS,IAMrChgB,EALMzgC,EAAqBygD,EAArBzgD,KAAMC,EAAewgD,EAAfxgD,MAAOC,EAAQugD,EAARvgD,IACnBwmC,EAAU0Z,GAAepgD,EAAMC,EAAOC,GACtCN,EAAUqgD,GAAUjgD,EAAMC,EAAOC,GAE/BumC,EAAa9xD,KAAK4qB,OAAOmnC,EAAU9mC,EAAU,IAAM,GAavD,OAVI6mC,EAAa,EAEfA,EAAajG,GADbC,EAAWzgC,EAAO,GAETymC,EAAajG,GAAgBxgC,IACtCygC,EAAWzgC,EAAO,EAClBymC,EAAa,GAEbhG,EAAWzgC,EAGNv0B,OAAO4Q,OAAO,CAAEokD,SAAAA,EAAUgG,WAAAA,EAAY7mC,QAAAA,GAAWyiC,GAAWoe,IAGrE,SAAgBC,GAAgBC,GAAU,IAMtC3gD,EALMygC,EAAkCkgB,EAAlClgB,SAAUgG,EAAwBka,EAAxBla,WAAY7mC,EAAY+gD,EAAZ/gD,QAC5BghD,EAAgBX,GAAUxf,EAAU,EAAG,GACvCogB,EAAa3gB,GAAWO,GAEtBiG,EAAuB,EAAbD,EAAiB7mC,EAAUghD,EAAgB,EAGrDla,EAAU,EAEZA,GAAWxG,GADXlgC,EAAOygC,EAAW,GAETiG,EAAUma,GACnB7gD,EAAOygC,EAAW,EAClBiG,GAAWxG,GAAWO,IAEtBzgC,EAAOygC,EAf+B,MAkBjB4f,GAAiBrgD,EAAM0mC,GAAtCzmC,EAlBgC,EAkBhCA,MAAOC,EAlByB,EAkBzBA,IAEf,OAAOz0B,OAAO4Q,OAAO,CAAE2jB,KAAAA,EAAMC,MAAAA,EAAOC,IAAAA,GAAOmiC,GAAWse,IAGxD,SAAgBG,GAAmBC,GAAU,IACnC/gD,EAAqB+gD,EAArB/gD,KACN0mC,EAAU0Z,GAAepgD,EADE+gD,EAAf9gD,MAAe8gD,EAAR7gD,KAGrB,OAAOz0B,OAAO4Q,OAAO,CAAE2jB,KAAAA,EAAM0mC,QAAAA,GAAWrE,GAAW0e,IAGrD,SAAgBC,GAAmBC,GAAa,IACtCjhD,EAAkBihD,EAAlBjhD,KADsC,EAE3BqgD,GAAiBrgD,EADVihD,EAAZva,SACVzmC,EAF0C,EAE1CA,MAAOC,EAFmC,EAEnCA,IAEX,OAAOz0B,OAAO4Q,OAAO,CAAE2jB,KAAAA,EAAMC,MAAAA,EAAOC,IAAAA,GAAOmiC,GAAW4e,IA4BxD,SAAgBC,GAAwBvwE,GACtC,IAAMwwE,EAAY5yE,EAAUoC,EAAIqvB,MAC9BohD,EAAahiB,GAAezuD,EAAIsvB,MAAO,EAAG,IAC1CohD,EAAWjiB,GAAezuD,EAAIuvB,IAAK,EAAGgC,GAAYvxB,EAAIqvB,KAAMrvB,EAAIsvB,QAElE,OAAKkhD,EAEOC,GAEAC,GACHrB,GAAe,MAAOrvE,EAAIuvB,KAF1B8/C,GAAe,QAASrvE,EAAIsvB,OAF5B+/C,GAAe,OAAQrvE,EAAIqvB,MAQtC,SAAgBshD,GAAmB3wE,GAAK,IAC9BwxB,EAAsCxxB,EAAtCwxB,KAAMC,EAAgCzxB,EAAhCyxB,OAAQC,EAAwB1xB,EAAxB0xB,OAAQC,EAAgB3xB,EAAhB2xB,YACxBi/C,EACFniB,GAAej9B,EAAM,EAAG,KACd,KAATA,GAA0B,IAAXC,GAA2B,IAAXC,GAAgC,IAAhBC,EAClDk/C,EAAcpiB,GAAeh9B,EAAQ,EAAG,IACxCq/C,EAAcriB,GAAe/8B,EAAQ,EAAG,IACxCq/C,EAAmBtiB,GAAe98B,EAAa,EAAG,KAEpD,OAAKi/C,EAEOC,EAEAC,GAEAC,GACH1B,GAAe,cAAe19C,GAF9B09C,GAAe,SAAU39C,GAFzB29C,GAAe,SAAU59C,GAFzB49C,GAAe,OAAQ79C,GCxGlC,IAAMk1C,GAAU,mBACVsK,GAAW,OAEjB,SAASC,GAAgB57C,GACvB,OAAO,IAAIuhC,GAAQ,mBAAZ,aAA6CvhC,EAAK74B,KAAlD,sBAIT,SAAS00E,GAAuBpuC,GAI9B,OAHoB,OAAhBA,EAAGktC,WACLltC,EAAGktC,SAAWH,GAAgB/sC,EAAG7wB,IAE5B6wB,EAAGktC,SAKZ,SAASlwE,GAAMg+C,EAAMyf,GACnB,IAAM9xC,EAAU,CACduwB,GAAI8B,EAAK9B,GACT3mB,KAAMyoB,EAAKzoB,KACXpjB,EAAG6rC,EAAK7rC,EACR/V,EAAG4hD,EAAK5hD,EACRg4D,IAAKpW,EAAKoW,IACViQ,QAASrmB,EAAKqmB,SAEhB,OAAO,IAAInjD,GAASlmB,OAAO4Q,OAAO,GAAI+f,EAAS8xC,EAAM,CAAE4T,IAAK1lD,KAK9D,SAAS2lD,GAAUC,EAASn1E,EAAGo1E,GAE7B,IAAIC,EAAWF,EAAc,GAAJn1E,EAAS,IAG5Bs1E,EAAKF,EAAG1gD,OAAO2gD,GAGrB,GAAIr1E,IAAMs1E,EACR,MAAO,CAACD,EAAUr1E,GAIpBq1E,GAAuB,IAAVC,EAAKt1E,GAAU,IAG5B,IAAMu1E,EAAKH,EAAG1gD,OAAO2gD,GACrB,OAAIC,IAAOC,EACF,CAACF,EAAUC,GAIb,CAACH,EAA6B,GAAnBrtE,KAAKo/C,IAAIouB,EAAIC,GAAW,IAAMztE,KAAKyI,IAAI+kE,EAAIC,IAI/D,SAASC,GAAQ11B,EAAIprB,GAGnB,IAAMryB,EAAI,IAAI2uB,KAFd8uB,GAAe,GAATprB,EAAc,KAIpB,MAAO,CACLvB,KAAM9wB,EAAEu0B,iBACRxD,MAAO/wB,EAAEw0B,cAAgB,EACzBxD,IAAKhxB,EAAEy0B,aACPxB,KAAMjzB,EAAE00B,cACRxB,OAAQlzB,EAAE20B,gBACVxB,OAAQnzB,EAAE40B,gBACVxB,YAAapzB,EAAE60B,sBAKnB,SAASu+C,GAAQ3xE,EAAK4wB,EAAQyE,GAC5B,OAAO+7C,GAAU1hB,GAAa1vD,GAAM4wB,EAAQyE,GAI9C,SAASu8C,GAAW9zB,EAAMqY,GACxB,IAAM0b,EAAO/zB,EAAK5hD,EAChBmzB,EAAOyuB,EAAK7rC,EAAEod,KAAOrrB,KAAKqrD,MAAM8G,EAAIpkC,OACpCzC,EAAQwuB,EAAK7rC,EAAEqd,MAAQtrB,KAAKqrD,MAAM8G,EAAInkC,QAAqC,EAA3BhuB,KAAKqrD,MAAM8G,EAAIoF,UAC/DtpD,EAAInX,OAAO4Q,OAAO,GAAIoyC,EAAK7rC,EAAG,CAC5Bod,KAAAA,EACAC,MAAAA,EACAC,IACEvrB,KAAKo/C,IAAItF,EAAK7rC,EAAEsd,IAAKgC,GAAYlC,EAAMC,IACvCtrB,KAAKqrD,MAAM8G,EAAIlkC,MACS,EAAxBjuB,KAAKqrD,MAAM8G,EAAIjnC,SAEnB4iD,EAAcpO,GAAS3uC,WAAW,CAChChD,MAAOokC,EAAIpkC,MAAQ/tB,KAAKqrD,MAAM8G,EAAIpkC,OAClCwpC,SAAUpF,EAAIoF,SAAWv3D,KAAKqrD,MAAM8G,EAAIoF,UACxCvpC,OAAQmkC,EAAInkC,OAAShuB,KAAKqrD,MAAM8G,EAAInkC,QACpC9C,MAAOinC,EAAIjnC,MAAQlrB,KAAKqrD,MAAM8G,EAAIjnC,OAClC+C,KAAMkkC,EAAIlkC,KAAOjuB,KAAKqrD,MAAM8G,EAAIlkC,MAChCC,MAAOikC,EAAIjkC,MACXC,QAASgkC,EAAIhkC,QACbC,QAAS+jC,EAAI/jC,QACbC,aAAc8jC,EAAI9jC,eACjBmzC,GAAG,gBAtBqB,EAyBf4L,GAFF1hB,GAAaz9C,GAEQ4/D,EAAM/zB,EAAKzoB,MAAvC2mB,EAzBwB,KAyBpB9/C,EAzBoB,KAiC7B,OANoB,IAAhB41E,IACF91B,GAAM81B,EAEN51E,EAAI4hD,EAAKzoB,KAAKzE,OAAOorB,IAGhB,CAAEA,GAAAA,EAAI9/C,EAAAA,GAKf,SAAS61E,GAAoBrhB,EAAQshB,EAAY9nD,EAAM+L,EAAQsuC,GAAM,IAC3DrwC,EAAkBhK,EAAlBgK,QAASmB,EAASnL,EAATmL,KACjB,GAAIq7B,GAAyC,IAA/B51D,OAAO6F,KAAK+vD,GAAQ72D,OAAc,CAC9C,IAAMo4E,EAAqBD,GAAc38C,EACvCyoB,EAAO98B,GAAS+T,WACdj6B,OAAO4Q,OAAOglD,EAAQxmC,EAAM,CAC1BmL,KAAM48C,EAEN/9C,aAASj2B,KAGf,OAAOi2B,EAAU4pB,EAAOA,EAAK5pB,QAAQmB,GAErC,OAAOrU,GAASmjD,QACd,IAAIvN,GAAQ,aAAZ,cAAwC2N,EAAxC,yBAAoEtuC,IAO1E,SAASi8C,GAAapvC,EAAI7M,EAAQs/B,GAChC,YAD+C,IAAfA,IAAAA,GAAS,GAClCzyB,EAAGtQ,QACNwhC,GAAUjxC,OAAOq2C,GAAOr2C,OAAO,SAAU,CACvCwyC,OAAAA,EACAV,aAAa,IACZG,yBAAyBlyB,EAAI7M,GAChC,KAKN,SAASk8C,GACPrvC,EADF,GAWE,QAREuiC,gBAAAA,OAQF,aAPED,qBAAAA,OAOF,SANEgN,EAMF,EANEA,cAMF,IALE9M,cAAAA,OAKF,aAJE+M,YAAAA,OAIF,aAHEC,UAAAA,OAGF,aAFEr8C,OAAAA,OAEF,MAFW,WAEX,EACI3D,EAAiB,UAAX2D,EAAqB,OAAS,QAEnCovC,GAAiC,IAAdviC,EAAGpR,QAAmC,IAAnBoR,EAAGnR,cAC5CW,GAAkB,UAAX2D,EAAqB,KAAO,MAC9BmvC,GAA2C,IAAnBtiC,EAAGnR,cAC9BW,GAAO,UAIN+/C,GAAeD,IAAkBE,IACpChgD,GAAO,KAGL+/C,EACF//C,GAAO,IACE8/C,IACT9/C,GAAkB,UAAX2D,EAAqB,MAAQ,MAGtC,IAAIhxB,EAAMitE,GAAapvC,EAAIxQ,GAM3B,OAJIgzC,IACFrgE,EAAM,IAAMA,GAGPA,EAIT,IAAMstE,GAAoB,CACtBjjD,MAAO,EACPC,IAAK,EACLiC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,GAEf6gD,GAAwB,CACtB1c,WAAY,EACZ7mC,QAAS,EACTuC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,GAEf8gD,GAA2B,CACzB1c,QAAS,EACTvkC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,GAIXyxC,GAAe,CAAC,OAAQ,QAAS,MAAO,OAAQ,SAAU,SAAU,eACxEsP,GAAmB,CACjB,WACA,aACA,UACA,OACA,SACA,SACA,eAEFC,GAAsB,CAAC,OAAQ,UAAW,OAAQ,SAAU,SAAU,eAGxE,SAAStO,GAAcpwD,GACrB,IAAMs9C,EAAa,CACjBliC,KAAM,OACN0C,MAAO,OACPzC,MAAO,QACP0C,OAAQ,QACRzC,IAAK,MACL0C,KAAM,MACNT,KAAM,OACNU,MAAO,OACPT,OAAQ,SACRU,QAAS,SACT6jC,QAAS,UACTuF,SAAU,UACV7pC,OAAQ,SACRU,QAAS,SACTT,YAAa,cACbU,aAAc,cACdpD,QAAS,UACTijC,SAAU,UACV0gB,WAAY,aACZC,YAAa,aACbC,YAAa,aACbC,SAAU,WACVC,UAAW,WACXjd,QAAS,WACT9hD,EAAKrP,eAEP,IAAK2sD,EAAY,MAAM,IAAI1F,EAAiB53C,GAE5C,OAAOs9C,EAMT,SAAS0hB,GAAQjzE,EAAKq1B,GAEpB,IAAK,IAAL,MAAgB+tC,MAAhB,aAA8B,KAAnBv8D,EAAmB,QACxB6mD,EAAY1tD,EAAI6G,MAClB7G,EAAI6G,GAAK0rE,GAAkB1rE,IAI/B,IAAMs9D,EAAUoM,GAAwBvwE,IAAQ2wE,GAAmB3wE,GACnE,GAAImkE,EACF,OAAOnjD,GAASmjD,QAAQA,GAGpB,IAAA+O,EAAQha,GAASL,MAAjB,EAEM8Y,GAAQ3xE,EADHq1B,EAAKzE,OAAOsiD,GACU79C,GAApC2mB,EAFG,KAEC9/C,EAFD,KAIN,OAAO,IAAI8kB,GAAS,CAClBg7B,GAAAA,EACA3mB,KAAAA,EACAn5B,EAAAA,IAIJ,SAASi3E,GAAa95C,EAAOC,EAAKpP,GAChC,IAAM+P,IAAQyzB,EAAYxjC,EAAK+P,QAAgB/P,EAAK+P,MAClDhE,EAAS,SAAChkB,EAAGgC,GAGX,OAFAhC,EAAIg9C,GAAQh9C,EAAGgoB,GAAS/P,EAAKkpD,UAAY,EAAI,GAAG,GAC9B95C,EAAI46B,IAAIp0D,MAAMoqB,GAAM8zC,aAAa9zC,GAClC+L,OAAOhkB,EAAGgC,IAE7B81D,EAAS,SAAA91D,GACP,OAAIiW,EAAKkpD,UACF95C,EAAI+tC,QAAQhuC,EAAOplB,GAKV,EAJLqlB,EACJlK,QAAQnb,GACRygB,KAAK2E,EAAMjK,QAAQnb,GAAOA,GAC1BsK,IAAItK,GAGFqlB,EAAI5E,KAAK2E,EAAOplB,GAAMsK,IAAItK,IAIvC,GAAIiW,EAAKjW,KACP,OAAOgiB,EAAO8zC,EAAO7/C,EAAKjW,MAAOiW,EAAKjW,MAGxC,IAAK,IAAL,MAAmBiW,EAAK5jB,SAAxB,aAA+B,KAApB2N,EAAoB,QACvBo1C,EAAQ0gB,EAAO91D,GACrB,GAAIjQ,KAAK6xB,IAAIwzB,IAAU,EACrB,OAAOpzB,EAAOozB,EAAOp1C,GAGzB,OAAOgiB,EAAOoD,EAAQC,GAAO,EAAI,EAAGpP,EAAK5jB,MAAM4jB,EAAK5jB,MAAMzM,OAAS,QAuBhDmnB,GAAAA,WAInB,WAAY/gB,GACV,IAAMo1B,EAAOp1B,EAAOo1B,MAAQ6jC,GAASP,YAEjCwL,EACFlkE,EAAOkkE,UACNxzD,OAAO3L,MAAM/E,EAAO+7C,IAAM,IAAI4a,GAAQ,iBAAmB,QACxDvhC,EAAK7C,QAAkC,KAAxBy+C,GAAgB57C,IAInCn3B,KAAK89C,GAAK0R,EAAYztD,EAAO+7C,IAAMkd,GAASL,MAAQ54D,EAAO+7C,GAE3D,IAAI/pC,EAAI,KACN/V,EAAI,KACN,IAAKioE,EAGH,GAFkBlkE,EAAOkxE,KAAOlxE,EAAOkxE,IAAIn1B,KAAO99C,KAAK89C,IAAM/7C,EAAOkxE,IAAI97C,KAAK91B,OAAO81B,GAErE,OACJ,CAACp1B,EAAOkxE,IAAIl/D,EAAGhS,EAAOkxE,IAAIj1E,GAAlC+V,EADY,KACT/V,EADS,SAER,CACL,IAAMm3E,EAAKh+C,EAAKzE,OAAO1yB,KAAK89C,IAC5B/pC,EAAIy/D,GAAQxzE,KAAK89C,GAAIq3B,GAErBphE,GADAkyD,EAAUxzD,OAAO3L,MAAMiN,EAAEod,MAAQ,IAAIunC,GAAQ,iBAAmB,MAClD,KAAO3kD,EACrB/V,EAAIioE,EAAU,KAAOkP,EAOzBn1E,KAAKo1E,MAAQj+C,EAIbn3B,KAAKg2D,IAAMj0D,EAAOi0D,KAAOkF,GAAOr2C,SAIhC7kB,KAAKimE,QAAUA,EAIfjmE,KAAK8xE,SAAW,KAIhB9xE,KAAK+T,EAAIA,EAIT/T,KAAKhC,EAAIA,EAITgC,KAAKq1E,iBAAkB,IAYlB1a,IAAP,WACE,OAAO,IAAI73C,EAAS,OAsBf2+C,MAAP,SAAatwC,EAAMC,EAAOC,EAAKiC,EAAMC,EAAQC,EAAQC,GACnD,OAAI+7B,EAAYr+B,GACPrO,EAAS63C,MAEToa,GACL,CACE5jD,KAAAA,EACAC,MAAAA,EACAC,IAAAA,EACAiC,KAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAC,YAAAA,GAEFunC,GAASP,gBAwBR+E,IAAP,SAAWruC,EAAMC,EAAOC,EAAKiC,EAAMC,EAAQC,EAAQC,GACjD,OAAI+7B,EAAYr+B,GACP,IAAIrO,EAAS,CAClBg7B,GAAIkd,GAASL,MACbxjC,KAAMijC,GAAgBjiC,cAGjB48C,GACL,CACE5jD,KAAAA,EACAC,MAAAA,EACAC,IAAAA,EACAiC,KAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAC,YAAAA,GAEF2mC,GAAgBjiC,gBAYfkO,WAAP,SAAkBviB,EAAMm6C,QAAc,IAAdA,IAAAA,EAAU,IAChC,IpBrgBmBjgE,EoBqgBb8/C,GpBrgBa9/C,EoBqgBD8lB,EpBpgByB,kBAAtClnB,OAAOK,UAAUkB,SAASC,KAAKJ,GoBogBV8lB,EAAK/G,UAAYwnC,KAC3C,GAAI9xC,OAAO3L,MAAMg3C,GACf,OAAOh7B,EAASmjD,QAAQ,iBAG1B,IAAMqP,EAAY9a,GAAcyD,EAAQ9mC,KAAM6jC,GAASP,aACvD,OAAK6a,EAAUhhD,QAIR,IAAIxR,EAAS,CAClBg7B,GAAIA,EACJ3mB,KAAMm+C,EACNtf,IAAKkF,GAAOrkC,WAAWonC,KANhBn7C,EAASmjD,QAAQ8M,GAAgBuC,OAoBrC3Y,WAAP,SAAkBxoC,EAAc8pC,GAC9B,QAD4C,IAAdA,IAAAA,EAAU,IACnCxO,EAASt7B,GAIP,OAAIA,GAAgB2+C,IAAY3+C,EAAe2+C,GAE7ChwD,EAASmjD,QAAQ,0BAEjB,IAAInjD,EAAS,CAClBg7B,GAAI3pB,EACJgD,KAAMqjC,GAAcyD,EAAQ9mC,KAAM6jC,GAASP,aAC3CzE,IAAKkF,GAAOrkC,WAAWonC,KAVzB,MAAM,IAAIpQ,EAAJ,gEAC4D15B,EAD5D,eACuFA,MAwB1FohD,YAAP,SAAmBrhD,EAAS+pC,GAC1B,QADwC,IAAdA,IAAAA,EAAU,IAC/BxO,EAASv7B,GAGZ,OAAO,IAAIpR,EAAS,CAClBg7B,GAAc,IAAV5pB,EACJiD,KAAMqjC,GAAcyD,EAAQ9mC,KAAM6jC,GAASP,aAC3CzE,IAAKkF,GAAOrkC,WAAWonC,KALzB,MAAM,IAAIpQ,EAAqB,6CAqC5Bh3B,WAAP,SAAkB/0B,GAChB,IAAMwzE,EAAY9a,GAAc14D,EAAIq1B,KAAM6jC,GAASP,aACnD,IAAK6a,EAAUhhD,QACb,OAAOxR,EAASmjD,QAAQ8M,GAAgBuC,IAG1C,IAAMN,EAAQha,GAASL,MACrB6a,EAAeF,EAAU5iD,OAAOsiD,GAChC3hB,EAAaH,GAAgBpxD,EAAKqkE,GAAe,CAC/C,OACA,SACA,iBACA,oBAEFsP,GAAmBjmB,EAAY6D,EAAWwE,SAC1C6d,GAAsBlmB,EAAY6D,EAAWliC,MAC7CwkD,GAAoBnmB,EAAY6D,EAAWjiC,SAAWo+B,EAAY6D,EAAWhiC,KAC7EukD,EAAiBF,GAAsBC,EACvCE,EAAkBxiB,EAAWzB,UAAYyB,EAAWuE,WACpD5B,EAAMkF,GAAOrkC,WAAW/0B,GAQ1B,IAAK8zE,GAAkBH,IAAoBI,EACzC,MAAM,IAAInoB,EACR,uEAIJ,GAAIioB,GAAoBF,EACtB,MAAM,IAAI/nB,EAA8B,0CAG1C,IAGItlD,EACF0tE,EAJIC,EAAcF,GAAoBxiB,EAAWtiC,UAAY6kD,EAK7DI,EAASxC,GAAQwB,EAAOQ,GACtBO,GACF3tE,EAAQosE,GACRsB,EAAgBxB,GAChB0B,EAASrE,GAAgBqE,IAChBP,GACTrtE,EAAQqsE,GACRqB,EAAgBvB,GAChByB,EAAS/D,GAAmB+D,KAE5B5tE,EAAQ88D,GACR4Q,EAAgBzB,IAKlB,IADA,IACA,EADI4B,GAAa,EACjB,IAAgB7tE,KAAhB,aAAuB,KAAZO,EAAY,QAEhB6mD,EADK6D,EAAW1qD,IAInB0qD,EAAW1qD,GADFstE,EACOH,EAAcntE,GAEdqtE,EAAOrtE,GAJvBstE,GAAa,EASjB,IAAMC,EAAqBH,EDnmB/B,SAAmCj0E,GACjC,IAAMwwE,EAAY5yE,EAAUoC,EAAI8vD,UAC9BukB,EAAY5lB,GAAezuD,EAAI81D,WAAY,EAAGjG,GAAgB7vD,EAAI8vD,WAClEwkB,EAAe7lB,GAAezuD,EAAIivB,QAAS,EAAG,GAEhD,OAAKuhD,EAEO6D,GAEAC,GACHjF,GAAe,UAAWrvE,EAAIivB,SAF9BogD,GAAe,OAAQrvE,EAAI6iD,MAF3BwsB,GAAe,WAAYrvE,EAAI8vD,UC8lBhCykB,CAAmBhjB,GACnBoiB,EDvlBV,SAAsC3zE,GACpC,IAAMwwE,EAAY5yE,EAAUoC,EAAIqvB,MAC9BmlD,EAAe/lB,GAAezuD,EAAI+1D,QAAS,EAAGxG,GAAWvvD,EAAIqvB,OAE/D,OAAKmhD,GAEOgE,GACHnF,GAAe,UAAWrvE,EAAI+1D,SAF9BsZ,GAAe,OAAQrvE,EAAIqvB,MCmlB1BolD,CAAsBljB,GACtBgf,GAAwBhf,GAC9B4S,EAAUiQ,GAAsBzD,GAAmBpf,GAErD,GAAI4S,EACF,OAAOnjD,EAASmjD,QAAQA,GAIpB,MAKqBwN,GALTsC,EACZlE,GAAgBxe,GAChBoiB,EACEtD,GAAmB9e,GACnBA,EACsCmiB,EAAcF,GAC1D11B,EAAO,IAAI98B,EAAS,CAClBg7B,GAPE,KAQF3mB,KAAMm+C,EACNt3E,EATE,KAUFg4D,IAAAA,IAIJ,OAAI3C,EAAWtiC,SAAW6kD,GAAkB9zE,EAAIivB,UAAY6uB,EAAK7uB,QACxDjO,EAASmjD,QACd,qBADKnjD,uCAEkCuwC,EAAWtiC,QAF7C,kBAEsE6uB,EAAKknB,SAI7ElnB,KAmBFwmB,QAAP,SAAeC,EAAMr6C,QAAW,IAAXA,IAAAA,EAAO,IAAI,MRlelC,SAA6B5qB,GAC3B,OAAO2hB,GACL3hB,EACA,CAAC4iE,GAA8BI,IAC/B,CAACH,GAA+BI,IAChC,CAACH,GAAkCI,IACnC,CAACH,GAAsBI,KQ6dIiS,CAAanQ,GACxC,OAAOwN,GAFuB,UAEe7nD,EAAM,WAAYq6C,MAiB1DoQ,YAAP,SAAmBpQ,EAAMr6C,QAAW,IAAXA,IAAAA,EAAO,IAAI,MR3etC,SAAiC5qB,GAC/B,OAAO2hB,GA/DT,SAA2B3hB,GAEzB,OAAOA,EACJsO,QAAQ,oBAAqB,KAC7BA,QAAQ,WAAY,KACpBzF,OA0DUysE,CAAkBt1E,GAAI,CAACmiE,GAASC,KQ2ehBmT,CAAiBtQ,GAC5C,OAAOwN,GAF2B,UAEW7nD,EAAM,WAAYq6C,MAkB1DuQ,SAAP,SAAgBvQ,EAAMr6C,QAAW,IAAXA,IAAAA,EAAO,IAAI,MR3fnC,SAA8B5qB,GAC5B,OAAO2hB,GACL3hB,EACA,CAACuiE,GAASG,IACV,CAACF,GAAQE,IACT,CAACD,GAAOE,KQufmB8S,CAAcxQ,GACzC,OAAOwN,GAFwB,UAEc7nD,EAAM,OAAQA,MAiBtDqI,WAAP,SAAkBgyC,EAAMjyC,EAAKpI,GAC3B,QADsC,IAAXA,IAAAA,EAAO,IAC9BwjC,EAAY6W,IAAS7W,EAAYp7B,GACnC,MAAM,IAAIy5B,EAAqB,oDAFK,MAKY7hC,EALZ,IAK9BmmC,OAAAA,OAL8B,MAKrB,KALqB,MAKfgJ,gBAAAA,OALe,MAKG,KALH,IFhZ1C,SAAgChJ,EAAQ9O,EAAOtrB,GAAQ,MACbq3C,GAAkBjd,EAAQ9O,EAAOtrB,GACzE,MAAO,CAF8C,EAC7C50B,OAD6C,EACrCg0B,KADqC,EAC/BqzC,eE0ZYsM,CALhB5b,GAAO4D,SAAS,CAC5B3M,OAAAA,EACAgJ,gBAAAA,EACA4D,aAAa,IAE4CsH,EAAMjyC,GAAhElnB,EAXmC,KAW7B4mE,EAX6B,KAWjB7N,EAXiB,KAYtC,OAAIA,EACKnjD,EAASmjD,QAAQA,GAEjB4N,GAAoB3mE,EAAM4mE,EAAY9nD,EAAnB,UAAmCoI,EAAOiyC,MAOjE0Q,WAAP,SAAkB1Q,EAAMjyC,EAAKpI,GAC3B,YADsC,IAAXA,IAAAA,EAAO,IAC3BlJ,EAASuR,WAAWgyC,EAAMjyC,EAAKpI,MAuBjCgrD,QAAP,SAAe3Q,EAAMr6C,QAAW,IAAXA,IAAAA,EAAO,IAAI,MR1hBlC,SAAyB5qB,GACvB,OAAO2hB,GACL3hB,EACA,CAACqjE,GAA8BE,IAC/B,CAACD,GAAsBE,KQuhBIqS,CAAS5Q,GACpC,OAAOwN,GAFuB,UAEe7nD,EAAM,MAAOq6C,MASrDJ,QAAP,SAAe/Y,EAAQyL,GACrB,QADyC,IAApBA,IAAAA,EAAc,OAC9BzL,EACH,MAAM,IAAIW,EAAqB,oDAGjC,IAAMoY,EAAU/Y,aAAkBwL,GAAUxL,EAAS,IAAIwL,GAAQxL,EAAQyL,GAEzE,GAAIqC,GAASD,eACX,MAAM,IAAI9N,EAAqBgZ,GAE/B,OAAO,IAAInjD,EAAS,CAAEmjD,QAAAA,OASnBh0C,WAAP,SAAkBj0B,GAChB,OAAQA,GAAKA,EAAEq3E,kBAAoB,8BAYrCh1D,IAAAA,SAAItK,GACF,OAAO/V,KAAK+V,MA+UdmhE,mBAAAA,SAAmBlrD,QAAW,IAAXA,IAAAA,EAAO,IAAI,MACkB8pC,GAAUjxC,OACtD7kB,KAAKg2D,IAAIp0D,MAAMoqB,GACfA,GACA0qC,gBAAgB12D,MAClB,MAAO,CAAEmyD,OALmB,EACpBA,OAISgJ,gBALW,EACZA,gBAIkBjE,eALN,EACKiH,aAiBnC9nC,MAAAA,SAAM3D,EAAY1G,GAChB,YAD2B,IAAvB0G,IAAAA,EAAS,QAAc,IAAX1G,IAAAA,EAAO,IAChBhsB,KAAKg2B,QAAQokC,GAAgBl+D,SAASw2B,GAAS1G,MASxDmrD,QAAAA,WACE,OAAOn3E,KAAKg2B,QAAQglC,GAASP,gBAY/BzkC,QAAAA,SAAQmB,EAAR,GAAwE,iBAAJ,GAAI,MAAxDb,cAAAA,OAAwD,aAAjC8gD,iBAAAA,OAAiC,SAEtE,IADAjgD,EAAOqjC,GAAcrjC,EAAM6jC,GAASP,cAC3Bp5D,OAAOrB,KAAKm3B,MACnB,OAAOn3B,KACF,GAAKm3B,EAAK7C,QAEV,CACL,IAAI+iD,EAAQr3E,KAAK89C,GACjB,GAAIxnB,GAAiB8gD,EAAkB,CACrC,IAAME,EAAcngD,EAAKzE,OAAO1yB,KAAK89C,IAEpCu5B,EAAS5D,GADIzzE,KAAK4mE,WACM0Q,EAAangD,GAHD,GAKvC,OAAOv1B,GAAM5B,KAAM,CAAE89C,GAAIu5B,EAAOlgD,KAAAA,IARhC,OAAOrU,EAASmjD,QAAQ8M,GAAgB57C,OAkB5CuwC,YAAAA,SAAAA,GAA8D,iBAAJ,GAAI,EAAhDvV,EAAgD,EAAhDA,OAAQgJ,EAAwC,EAAxCA,gBAAiBjE,EAAuB,EAAvBA,eAErC,OAAOt1D,GAAM5B,KAAM,CAAEg2D,IADTh2D,KAAKg2D,IAAIp0D,MAAM,CAAEuwD,OAAAA,EAAQgJ,gBAAAA,EAAiBjE,eAAAA,SAUxDqgB,UAAAA,SAAUplB,GACR,OAAOnyD,KAAK0nE,YAAY,CAAEvV,OAAAA,OAa5BzpC,IAAAA,SAAIkB,GACF,IAAK5pB,KAAKs0B,QAAS,OAAOt0B,KAE1B,IAqBIw3E,EArBEnkB,EAAaH,GAAgBtpC,EAAQu8C,GAAe,IACxDsR,GACGjoB,EAAY6D,EAAWzB,YACvBpC,EAAY6D,EAAWuE,cACvBpI,EAAY6D,EAAWtiC,SAC1B0kD,GAAmBjmB,EAAY6D,EAAWwE,SAC1C6d,GAAsBlmB,EAAY6D,EAAWliC,MAC7CwkD,GAAoBnmB,EAAY6D,EAAWjiC,SAAWo+B,EAAY6D,EAAWhiC,KAC7EukD,EAAiBF,GAAsBC,EACvCE,EAAkBxiB,EAAWzB,UAAYyB,EAAWuE,WAEtD,IAAKge,GAAkBH,IAAoBI,EACzC,MAAM,IAAInoB,EACR,uEAIJ,GAAIioB,GAAoBF,EACtB,MAAM,IAAI/nB,EAA8B,0CAItC+pB,EACFD,EAAQ3F,GAAgBj1E,OAAO4Q,OAAOmkE,GAAgB3xE,KAAK+T,GAAIs/C,IACrD7D,EAAY6D,EAAWwE,UAGjC2f,EAAQ56E,OAAO4Q,OAAOxN,KAAK4mE,WAAYvT,GAInC7D,EAAY6D,EAAWhiC,OACzBmmD,EAAMnmD,IAAMvrB,KAAKo/C,IAAI7xB,GAAYmkD,EAAMrmD,KAAMqmD,EAAMpmD,OAAQomD,EAAMnmD,OAPnEmmD,EAAQrF,GAAmBv1E,OAAO4Q,OAAOykE,GAAmBjyE,KAAK+T,GAAIs/C,IA5B7D,MAuCMogB,GAAQ+D,EAAOx3E,KAAKhC,EAAGgC,KAAKm3B,MAC5C,OAAOv1B,GAAM5B,KAAM,CAAE89C,GAxCX,KAwCe9/C,EAxCf,UAwDZg1B,KAAAA,SAAKvC,GACH,OAAKzwB,KAAKs0B,QAEH1yB,GAAM5B,KAAM0zE,GAAW1zE,KADlBunE,GAAiB92C,KADHzwB,QAW5BkB,MAAAA,SAAMuvB,GACJ,OAAKzwB,KAAKs0B,QAEH1yB,GAAM5B,KAAM0zE,GAAW1zE,KADlBunE,GAAiB92C,GAAU+2C,WADbxnE,QAe5BkxB,QAAAA,SAAQnb,GACN,IAAK/V,KAAKs0B,QAAS,OAAOt0B,KAC1B,IAAMhC,EAAI,GACR05E,EAAiBlS,GAASW,cAAcpwD,GAC1C,OAAQ2hE,GACN,IAAK,QACH15E,EAAEozB,MAAQ,EAEZ,IAAK,WACL,IAAK,SACHpzB,EAAEqzB,IAAM,EAEV,IAAK,QACL,IAAK,OACHrzB,EAAEs1B,KAAO,EAEX,IAAK,QACHt1B,EAAEu1B,OAAS,EAEb,IAAK,UACHv1B,EAAEw1B,OAAS,EAEb,IAAK,UACHx1B,EAAEy1B,YAAc,EAWpB,GAJuB,UAAnBikD,IACF15E,EAAE+yB,QAAU,GAGS,aAAnB2mD,EAA+B,CACjC,IAAM/G,EAAI7qE,KAAK6qB,KAAK3wB,KAAKoxB,MAAQ,GACjCpzB,EAAEozB,MAAkB,GAATu/C,EAAI,GAAS,EAG1B,OAAO3wE,KAAK0oB,IAAI1qB,MAalB80B,MAAAA,SAAM/c,GAAM,MACV,OAAO/V,KAAKs0B,QACRt0B,KAAKgzB,MAAL,OAAajd,GAAO,EAApB,IACGmb,QAAQnb,GACR7U,MAAM,GACTlB,QAkBN0mE,SAAAA,SAAStyC,EAAKpI,GACZ,YADuB,IAAXA,IAAAA,EAAO,IACZhsB,KAAKs0B,QACRwhC,GAAUjxC,OAAO7kB,KAAKg2D,IAAIsJ,cAActzC,IAAO8qC,yBAAyB92D,KAAMo0B,GAC9Eo0C,MAqBNmP,eAAAA,SAAe3rD,GACb,YADwC,IAA3BA,IAAAA,EAAO6oC,GACb70D,KAAKs0B,QACRwhC,GAAUjxC,OAAO7kB,KAAKg2D,IAAIp0D,MAAMoqB,GAAOA,GAAMwqC,eAAex2D,MAC5DwoE,MAgBNoP,cAAAA,SAAc5rD,GACZ,YADuB,IAAXA,IAAAA,EAAO,IACZhsB,KAAKs0B,QACRwhC,GAAUjxC,OAAO7kB,KAAKg2D,IAAIp0D,MAAMoqB,GAAOA,GAAMyqC,oBAAoBz2D,MACjE,MAgBN8mE,MAAAA,SAAM96C,GACJ,YADe,IAAXA,IAAAA,EAAO,IACNhsB,KAAKs0B,QAIAt0B,KAAKsqE,UAAUt+C,GAAzB,IAAkChsB,KAAK+mE,UAAU/6C,GAHxC,QAcXs+C,UAAAA,SAAAA,GAAwC,kBAAJ,GAAI,GAA5BvyC,OACN3D,EAAiB,gBADiB,MAAnB,WAAmB,GACP,WAAa,aAK5C,OAJIp0B,KAAKmxB,KAAO,OACdiD,EAAM,IAAMA,GAGP4/C,GAAah0E,KAAMo0B,MAQ5ByjD,cAAAA,WACE,OAAO7D,GAAah0E,KAAM,mBAiB5B+mE,UAAAA,SAAAA,GAMQ,iBAAJ,GAAI,MALNG,qBAAAA,OAKM,aAJNC,gBAAAA,OAIM,aAHN+M,cAAAA,OAGM,aAFN9M,cAAAA,OAEM,aADNrvC,OAEA,OAAOk8C,GAAiBj0E,KAAM,CAC5BmnE,gBAAAA,EACAD,qBAAAA,EACAgN,cAAAA,EACA9M,cAAAA,EACArvC,YANI,MADG,WACH,OAgBR+/C,UAAAA,WACE,OAAO9D,GAAah0E,KAAM,iCAAiC,MAW7D+3E,OAAAA,WACE,OAAO/D,GAAah0E,KAAKq2B,QAAS,sCAQpC2hD,UAAAA,WACE,OAAOhE,GAAah0E,KAAM,iBAc5Bi4E,UAAAA,SAAAA,GAA8D,iBAAJ,GAAI,MAAlD/D,cAAAA,OAAkD,aAA5BC,YAChC,OAAOF,GAAiBj0E,KAAM,CAC5Bk0E,cAAAA,EACAC,iBAH0D,SAI1DC,WAAW,OAef8D,MAAAA,SAAMlsD,GACJ,YADe,IAAXA,IAAAA,EAAO,IACNhsB,KAAKs0B,QAIAt0B,KAAKg4E,YAAf,IAA8Bh4E,KAAKi4E,UAAUjsD,GAHpC,QAUX7tB,SAAAA,WACE,OAAO6B,KAAKs0B,QAAUt0B,KAAK8mE,QAAU0B,MAOvCzrD,QAAAA,WACE,OAAO/c,KAAKinE,cAOdA,SAAAA,WACE,OAAOjnE,KAAKs0B,QAAUt0B,KAAK89C,GAAKyG,OAOlC4zB,UAAAA,WACE,OAAOn4E,KAAKs0B,QAAUt0B,KAAK89C,GAAK,IAAOyG,OAOzC8iB,OAAAA,WACE,OAAOrnE,KAAK8mE,WAOdsR,OAAAA,WACE,OAAOp4E,KAAKq3B,cAUduvC,SAAAA,SAAS56C,GACP,QADkB,IAAXA,IAAAA,EAAO,KACThsB,KAAKs0B,QAAS,MAAO,GAE1B,IAAMmyB,EAAO7pD,OAAO4Q,OAAO,GAAIxN,KAAK+T,GAOpC,OALIiY,EAAK66C,gBACPpgB,EAAKyQ,eAAiBl3D,KAAKk3D,eAC3BzQ,EAAK0U,gBAAkBn7D,KAAKg2D,IAAImF,gBAChC1U,EAAK0L,OAASnyD,KAAKg2D,IAAI7D,QAElB1L,KAOTpvB,SAAAA,WACE,OAAO,IAAIrI,KAAKhvB,KAAKs0B,QAAUt0B,KAAK89C,GAAKyG,QAoB3C/tB,KAAAA,SAAK6hD,EAAetiE,EAAuBiW,GACzC,QADoD,IAAlCjW,IAAAA,EAAO,qBAA2B,IAAXiW,IAAAA,EAAO,KAC3ChsB,KAAKs0B,UAAY+jD,EAAc/jD,QAClC,OAAOkxC,GAASS,QACdjmE,KAAKimE,SAAWoS,EAAcpS,QAC9B,0CAIJ,IpBnsDuBzV,EoBmsDjB8nB,EAAU17E,OAAO4Q,OACrB,CAAE2kD,OAAQnyD,KAAKmyD,OAAQgJ,gBAAiBn7D,KAAKm7D,iBAC7CnvC,GAGI5jB,GpBxsDiBooD,EoBwsDEz6C,EpBvsDpBja,MAAMG,QAAQu0D,GAASA,EAAQ,CAACA,IoBusDNruD,IAAIqjE,GAASW,eAC1CoS,EAAeF,EAAct7D,UAAY/c,KAAK+c,UAG9Cy7D,EAAShiD,GAFC+hD,EAAev4E,KAAOq4E,EACxBE,EAAeF,EAAgBr4E,KACToI,EAAOkwE,GAEvC,OAAOC,EAAeC,EAAOhR,SAAWgR,KAW1CC,QAAAA,SAAQ1iE,EAAuBiW,GAC7B,YADwC,IAAlCjW,IAAAA,EAAO,qBAA2B,IAAXiW,IAAAA,EAAO,IAC7BhsB,KAAKw2B,KAAK1T,EAAS63C,MAAO5kD,EAAMiW,MAQzC0sD,MAAAA,SAAML,GACJ,OAAOr4E,KAAKs0B,QAAUtQ,GAAS2kD,cAAc3oE,KAAMq4E,GAAiBr4E,QAYtEmpE,QAAAA,SAAQkP,EAAetiE,GACrB,IAAK/V,KAAKs0B,QAAS,OAAO,EAE1B,IAAMqkD,EAAUN,EAAct7D,UACxB67D,EAAoB54E,KAAKg2B,QAAQqiD,EAAclhD,KAAM,CAAEb,eAAe,IAC5E,OAAOsiD,EAAkB1nD,QAAQnb,IAAS4iE,GAAWA,GAAWC,EAAkB9lD,MAAM/c,MAU1F1U,OAAAA,SAAOqwB,GACL,OACE1xB,KAAKs0B,SACL5C,EAAM4C,SACNt0B,KAAK+c,YAAc2U,EAAM3U,WACzB/c,KAAKm3B,KAAK91B,OAAOqwB,EAAMyF,OACvBn3B,KAAKg2D,IAAI30D,OAAOqwB,EAAMskC,QAsB1B6iB,WAAAA,SAAW5a,GACT,QADuB,IAAdA,IAAAA,EAAU,KACdj+D,KAAKs0B,QAAS,OAAO,KAC1B,IAAMmyB,EAAOwX,EAAQxX,MAAQ3jC,EAAS+T,WAAW,CAAEM,KAAMn3B,KAAKm3B,OAC5D2hD,EAAU7a,EAAQ6a,QAAW94E,KAAOymD,GAAQwX,EAAQ6a,QAAU7a,EAAQ6a,QAAW,EAC/E1wE,EAAQ,CAAC,QAAS,SAAU,OAAQ,QAAS,UAAW,WACxD2N,EAAOkoD,EAAQloD,KAKnB,OAJIja,MAAMG,QAAQgiE,EAAQloD,QACxB3N,EAAQ61D,EAAQloD,KAChBA,OAAOhW,GAEFk1E,GACLxuB,EACAzmD,KAAKgzB,KAAK8lD,GACVl8E,OAAO4Q,OAAOywD,EAAS,CACrBd,QAAS,SACT/0D,MAAAA,EACA2N,KAAAA,QAkBNgjE,mBAAAA,SAAmB9a,GACjB,YAD+B,IAAdA,IAAAA,EAAU,IACtBj+D,KAAKs0B,QAEH2gD,GACLhX,EAAQxX,MAAQ3jC,EAAS+T,WAAW,CAAEM,KAAMn3B,KAAKm3B,OACjDn3B,KACApD,OAAO4Q,OAAOywD,EAAS,CACrBd,QAAS,OACT/0D,MAAO,CAAC,QAAS,SAAU,QAC3B8sE,WAAW,KARW,QAkBrBhwB,IAAP,WAAyB,2BAAXukB,EAAW,yBAAXA,EAAW,GAAApsD,UAAAA,GACvB,IAAKosD,EAAUj4C,MAAM1O,EAASmP,YAC5B,MAAM,IAAI47B,EAAqB,2CAEjC,OAAOoC,EAAOwZ,GAAW,SAAA7tE,GAAC,OAAIA,EAAEmhB,YAAWjX,KAAKo/C,QAQ3C32C,IAAP,WAAyB,2BAAXk7D,EAAW,yBAAXA,EAAW,GAAApsD,UAAAA,GACvB,IAAKosD,EAAUj4C,MAAM1O,EAASmP,YAC5B,MAAM,IAAI47B,EAAqB,2CAEjC,OAAOoC,EAAOwZ,GAAW,SAAA7tE,GAAC,OAAIA,EAAEmhB,YAAWjX,KAAKyI,QAY3CyqE,kBAAP,SAAyB3S,EAAMjyC,EAAK6pC,QAAc,IAAdA,IAAAA,EAAU,IAAI,MACEA,EADF,IACxC9L,OAAAA,OADwC,MAC/B,KAD+B,MACzBgJ,gBAAAA,OADyB,MACP,KADO,EAOhD,OAAOiU,GALSlU,GAAO4D,SAAS,CAC5B3M,OAAAA,EACAgJ,gBAAAA,EACA4D,aAAa,IAEqBsH,EAAMjyC,MAMvC6kD,kBAAP,SAAyB5S,EAAMjyC,EAAK6pC,GAClC,YADgD,IAAdA,IAAAA,EAAU,IACrCn7C,EAASk2D,kBAAkB3S,EAAMjyC,EAAK6pC,uCA3hC7C,OAAwB,OAAjBj+D,KAAKimE,8CAQZ,OAAOjmE,KAAKimE,QAAUjmE,KAAKimE,QAAQ/Y,OAAS,gDAQ5C,OAAOltD,KAAKimE,QAAUjmE,KAAKimE,QAAQtN,YAAc,oCASjD,OAAO34D,KAAKs0B,QAAUt0B,KAAKg2D,IAAI7D,OAAS,6CASxC,OAAOnyD,KAAKs0B,QAAUt0B,KAAKg2D,IAAImF,gBAAkB,4CASjD,OAAOn7D,KAAKs0B,QAAUt0B,KAAKg2D,IAAIkB,eAAiB,kCAQhD,OAAOl3D,KAAKo1E,uCAQZ,OAAOp1E,KAAKs0B,QAAUt0B,KAAKm3B,KAAK74B,KAAO,kCASvC,OAAO0B,KAAKs0B,QAAUt0B,KAAK+T,EAAEod,KAAOozB,oCASpC,OAAOvkD,KAAKs0B,QAAUxuB,KAAK6qB,KAAK3wB,KAAK+T,EAAEqd,MAAQ,GAAKmzB,kCASpD,OAAOvkD,KAAKs0B,QAAUt0B,KAAK+T,EAAEqd,MAAQmzB,gCASrC,OAAOvkD,KAAKs0B,QAAUt0B,KAAK+T,EAAEsd,IAAMkzB,iCASnC,OAAOvkD,KAAKs0B,QAAUt0B,KAAK+T,EAAEuf,KAAOixB,mCASpC,OAAOvkD,KAAKs0B,QAAUt0B,KAAK+T,EAAEwf,OAASgxB,mCAStC,OAAOvkD,KAAKs0B,QAAUt0B,KAAK+T,EAAEyf,OAAS+wB,wCAStC,OAAOvkD,KAAKs0B,QAAUt0B,KAAK+T,EAAE0f,YAAc8wB,qCAU3C,OAAOvkD,KAAKs0B,QAAU0+C,GAAuBhzE,MAAM4xD,SAAWrN,uCAU9D,OAAOvkD,KAAKs0B,QAAU0+C,GAAuBhzE,MAAM43D,WAAarT,oCAWhE,OAAOvkD,KAAKs0B,QAAU0+C,GAAuBhzE,MAAM+wB,QAAUwzB,oCAS7D,OAAOvkD,KAAKs0B,QAAU29C,GAAmBjyE,KAAK+T,GAAG8jD,QAAUtT,uCAU3D,OAAOvkD,KAAKs0B,QAAUq2C,GAAK72C,OAAO,QAAS,CAAEi3C,OAAQ/qE,KAAKg2D,MAAOh2D,KAAKoxB,MAAQ,GAAK,uCAUnF,OAAOpxB,KAAKs0B,QAAUq2C,GAAK72C,OAAO,OAAQ,CAAEi3C,OAAQ/qE,KAAKg2D,MAAOh2D,KAAKoxB,MAAQ,GAAK,0CAUlF,OAAOpxB,KAAKs0B,QAAUq2C,GAAK3W,SAAS,QAAS,CAAE+W,OAAQ/qE,KAAKg2D,MAAOh2D,KAAK+wB,QAAU,GAAK,yCAUvF,OAAO/wB,KAAKs0B,QAAUq2C,GAAK3W,SAAS,OAAQ,CAAE+W,OAAQ/qE,KAAKg2D,MAAOh2D,KAAK+wB,QAAU,GAAK,oCAUtF,OAAO/wB,KAAKs0B,SAAWt0B,KAAKhC,EAAIumD,4CAShC,OAAIvkD,KAAKs0B,QACAt0B,KAAKm3B,KAAKugC,WAAW13D,KAAK89C,GAAI,CACnC/lB,OAAQ,QACRo6B,OAAQnyD,KAAKmyD,SAGR,4CAUT,OAAInyD,KAAKs0B,QACAt0B,KAAKm3B,KAAKugC,WAAW13D,KAAK89C,GAAI,CACnC/lB,OAAQ,OACRo6B,OAAQnyD,KAAKmyD,SAGR,2CAST,OAAOnyD,KAAKs0B,QAAUt0B,KAAKm3B,KAAKolC,UAAY,qCAQ5C,OAAIv8D,KAAKo3D,gBAILp3D,KAAK0yB,OAAS1yB,KAAK0oB,IAAI,CAAE0I,MAAO,IAAKsB,QAAU1yB,KAAK0yB,OAAS1yB,KAAK0oB,IAAI,CAAE0I,MAAO,IAAKsB,6CAYxF,OAAO0+B,GAAWpxD,KAAKmxB,0CAUvB,OAAOkC,GAAYrzB,KAAKmxB,KAAMnxB,KAAKoxB,0CAUnC,OAAOpxB,KAAKs0B,QAAU+8B,GAAWrxD,KAAKmxB,MAAQozB,4CAW9C,OAAOvkD,KAAKs0B,QAAUq9B,GAAgB3xD,KAAK4xD,UAAYrN,yCAyuBvD,OAAOsQ,mCAQP,OAAOA,gDAQP,OAAOA,oCAQP,OAAOA,oCAQP,OAAOA,sCAQP,OAAOA,4CAQP,OAAOA,iDAQP,OAAOA,gDAQP,OAAOA,yCAQP,OAAOA,+CAQP,OAAOA,oDAQP,OAAOA,mDAQP,OAAOA,yCAQP,OAAOA,sDAQP,OAAOA,uCAQP,OAAOA,oDAQP,OAAOA,oDAQP,OAAOA,wCAQP,OAAOA,qDAQP,OAAOA,wCAQP,OAAOA,qDAQP,OAAOA,QApuDU/xC,GAwuDrB,SAGgB+lD,GAAiBqQ,GAC/B,GAAIp2D,GAASmP,WAAWinD,GACtB,OAAOA,EACF,GAAIA,GAAeA,EAAYn8D,SAAW0yC,EAASypB,EAAYn8D,WACpE,OAAO+F,GAASujB,WAAW6yC,GACtB,GAAIA,GAAsC,kBAAhBA,EAC/B,OAAOp2D,GAAS+T,WAAWqiD,GAE3B,MAAM,IAAIrrB,EAAJ,8BAC0BqrB,EAD1B,oBACyDA,kJC1mEnD,yCCXf,SAAWC,GACVA,EAAIC,OAAS,SAAUr+B,EAAQs+B,GAAO,OAAO,IAAIC,EAAUv+B,EAAQs+B,IACnEF,EAAIG,UAAYA,EAChBH,EAAII,UAAYA,EAChBJ,EAAIK,aAuKJ,SAAuBz+B,EAAQs+B,GAC7B,OAAO,IAAIE,EAAUx+B,EAAQs+B,IA7J/BF,EAAIM,kBAAoB,MAExB,IA+IIC,EA/IAC,EAAU,CACZ,UAAW,WAAY,WAAY,UAAW,UAC9C,eAAgB,eAAgB,SAAU,aAC1C,cAAe,QAAS,UAwB1B,SAASL,EAAWv+B,EAAQs+B,GAC1B,KAAMr5E,gBAAgBs5E,GACpB,OAAO,IAAIA,EAAUv+B,EAAQs+B,GAG/B,IAAID,EAASp5E,MAqFf,SAAuBo5E,GACrB,IAAK,IAAIx9E,EAAI,EAAGu+B,EAAIw/C,EAAQh+E,OAAQC,EAAIu+B,EAAGv+B,IACzCw9E,EAAOO,EAAQ/9E,IAAM,GAtFvBg+E,CAAaR,GACbA,EAAOzI,EAAIyI,EAAOrlE,EAAI,GACtBqlE,EAAOS,oBAAsBV,EAAIM,kBACjCL,EAAOC,IAAMA,GAAO,GACpBD,EAAOC,IAAIS,UAAYV,EAAOC,IAAIS,WAAaV,EAAOC,IAAIU,cAC1DX,EAAOY,UAAYZ,EAAOC,IAAIS,UAAY,cAAgB,cAC1DV,EAAOa,KAAO,GACdb,EAAOr/C,OAASq/C,EAAOc,WAAad,EAAOe,SAAU,EACrDf,EAAOgB,IAAMhB,EAAO33D,MAAQ,KAC5B23D,EAAOr+B,SAAWA,EAClBq+B,EAAOiB,YAAct/B,IAAUq+B,EAAOC,IAAIgB,UAC1CjB,EAAO3tB,MAAQqlB,EAAEwJ,MACjBlB,EAAOmB,eAAiBnB,EAAOC,IAAIkB,eACnCnB,EAAOoB,SAAWpB,EAAOmB,eAAiB39E,OAAOioB,OAAOs0D,EAAIsB,cAAgB79E,OAAOioB,OAAOs0D,EAAIqB,UAC9FpB,EAAOsB,WAAa,GAKhBtB,EAAOC,IAAIsB,QACbvB,EAAOwB,GAAKh+E,OAAOioB,OAAOg2D,IAI5BzB,EAAO0B,eAAwC,IAAxB1B,EAAOC,IAAI5sB,SAC9B2sB,EAAO0B,gBACT1B,EAAO3sB,SAAW2sB,EAAO2B,KAAO3B,EAAO4B,OAAS,GAElD/xB,EAAKmwB,EAAQ,WAvDfD,EAAI8B,OAAS,CACX,OACA,wBACA,kBACA,UACA,UACA,eACA,YACA,UACA,WACA,YACA,QACA,aACA,QACA,MACA,QACA,SACA,gBACA,kBAwCGr+E,OAAOioB,SACVjoB,OAAOioB,OAAS,SAAU7mB,GACxB,SAASogB,KAGT,OAFAA,EAAEnhB,UAAYe,EACH,IAAIogB,IAKdxhB,OAAO6F,OACV7F,OAAO6F,KAAO,SAAUzE,GACtB,IAAIuJ,EAAI,GACR,IAAK,IAAI3L,KAAKoC,EAAOA,EAAEoP,eAAexR,IAAI2L,EAAEjH,KAAK1E,GACjD,OAAO2L,IA0DX+xE,EAAUr8E,UAAY,CACpBm+B,IAAK,WAAcA,EAAIp7B,OACvBk7E,MA0yBF,SAAgBC,GACd,IAAI/B,EAASp5E,KACb,GAAIA,KAAKyhB,MACP,MAAMzhB,KAAKyhB,MAEb,GAAI23D,EAAOr/C,OACT,OAAOtY,EAAM23D,EACX,wDAEJ,GAAc,OAAV+B,EACF,OAAO//C,EAAIg+C,GAEQ,kBAAV+B,IACTA,EAAQA,EAAMh9E,YAEhB,IAAIvC,EAAI,EACJmY,EAAI,GACR,KACEA,EAAIlT,EAAOs6E,EAAOv/E,KAClBw9E,EAAOrlE,EAAIA,EAENA,GAcL,OAVIqlE,EAAO0B,gBACT1B,EAAO3sB,WACG,OAAN14C,GACFqlE,EAAO2B,OACP3B,EAAO4B,OAAS,GAEhB5B,EAAO4B,UAIH5B,EAAO3tB,OACb,KAAKqlB,EAAEwJ,MAEL,GADAlB,EAAO3tB,MAAQqlB,EAAEsK,iBACP,WAANrnE,EACF,SAEFsnE,EAAgBjC,EAAQrlE,GACxB,SAEF,KAAK+8D,EAAEsK,iBACLC,EAAgBjC,EAAQrlE,GACxB,SAEF,KAAK+8D,EAAEwK,KACL,GAAIlC,EAAOe,UAAYf,EAAOc,WAAY,CAExC,IADA,IAAIqB,EAAS3/E,EAAI,EACVmY,GAAW,MAANA,GAAmB,MAANA,IACvBA,EAAIlT,EAAOs6E,EAAOv/E,OACTw9E,EAAO0B,gBACd1B,EAAO3sB,WACG,OAAN14C,GACFqlE,EAAO2B,OACP3B,EAAO4B,OAAS,GAEhB5B,EAAO4B,UAIb5B,EAAOoC,UAAYL,EAAMhoE,UAAUooE,EAAQ3/E,EAAI,GAEvC,MAANmY,GAAeqlE,EAAOe,SAAWf,EAAOc,aAAed,EAAOr+B,QAI3D0gC,EAAa1nE,IAAQqlE,EAAOe,UAAWf,EAAOc,YACjDwB,EAAWtC,EAAQ,mCAEX,MAANrlE,EACFqlE,EAAO3tB,MAAQqlB,EAAE6K,YAEjBvC,EAAOoC,UAAYznE,IATrBqlE,EAAO3tB,MAAQqlB,EAAE8K,UACjBxC,EAAOyC,iBAAmBzC,EAAO3sB,UAWnC,SAEF,KAAKqkB,EAAEgL,OAEK,MAAN/nE,EACFqlE,EAAO3tB,MAAQqlB,EAAEiL,cAEjB3C,EAAO4C,QAAUjoE,EAEnB,SAEF,KAAK+8D,EAAEiL,cACK,MAANhoE,EACFqlE,EAAO3tB,MAAQqlB,EAAEmL,WAEjB7C,EAAO4C,QAAU,IAAMjoE,EACvBqlE,EAAO3tB,MAAQqlB,EAAEgL,QAEnB,SAEF,KAAKhL,EAAE8K,UAEL,GAAU,MAAN7nE,EACFqlE,EAAO3tB,MAAQqlB,EAAEoL,UACjB9C,EAAO+C,SAAW,QACb,GAAIV,EAAa1nE,SAEjB,GAAIqoE,EAAQC,EAAWtoE,GAC5BqlE,EAAO3tB,MAAQqlB,EAAEwL,SACjBlD,EAAOmD,QAAUxoE,OACZ,GAAU,MAANA,EACTqlE,EAAO3tB,MAAQqlB,EAAEmL,UACjB7C,EAAOmD,QAAU,QACZ,GAAU,MAANxoE,EACTqlE,EAAO3tB,MAAQqlB,EAAE0L,UACjBpD,EAAOqD,aAAerD,EAAOsD,aAAe,OACvC,CAGL,GAFAhB,EAAWtC,EAAQ,eAEfA,EAAOyC,iBAAmB,EAAIzC,EAAO3sB,SAAU,CACjD,IAAIkwB,EAAMvD,EAAO3sB,SAAW2sB,EAAOyC,iBACnC9nE,EAAI,IAAIjY,MAAM6gF,GAAK77E,KAAK,KAAOiT,EAEjCqlE,EAAOoC,UAAY,IAAMznE,EACzBqlE,EAAO3tB,MAAQqlB,EAAEwK,KAEnB,SAEF,KAAKxK,EAAEoL,UAxzBD,aAyzBC9C,EAAO+C,SAAWpoE,GAAGsO,eACxBu6D,EAASxD,EAAQ,eACjBA,EAAO3tB,MAAQqlB,EAAE+L,MACjBzD,EAAO+C,SAAW,GAClB/C,EAAO0D,MAAQ,IACN1D,EAAO+C,SAAWpoE,IAAM,MACjCqlE,EAAO3tB,MAAQqlB,EAAEiM,QACjB3D,EAAO4D,QAAU,GACjB5D,EAAO+C,SAAW,IAh0Bd,aAi0BM/C,EAAO+C,SAAWpoE,GAAGsO,eAC/B+2D,EAAO3tB,MAAQqlB,EAAEmM,SACb7D,EAAO8D,SAAW9D,EAAOe,UAC3BuB,EAAWtC,EACT,+CAEJA,EAAO8D,QAAU,GACjB9D,EAAO+C,SAAW,IACH,MAANpoE,GACT6oE,EAASxD,EAAQ,oBAAqBA,EAAO+C,UAC7C/C,EAAO+C,SAAW,GAClB/C,EAAO3tB,MAAQqlB,EAAEwK,MACR6B,EAAQppE,IACjBqlE,EAAO3tB,MAAQqlB,EAAEsM,iBACjBhE,EAAO+C,UAAYpoE,GAEnBqlE,EAAO+C,UAAYpoE,EAErB,SAEF,KAAK+8D,EAAEsM,iBACDrpE,IAAMqlE,EAAOzI,IACfyI,EAAO3tB,MAAQqlB,EAAEoL,UACjB9C,EAAOzI,EAAI,IAEbyI,EAAO+C,UAAYpoE,EACnB,SAEF,KAAK+8D,EAAEmM,QACK,MAANlpE,GACFqlE,EAAO3tB,MAAQqlB,EAAEwK,KACjBsB,EAASxD,EAAQ,YAAaA,EAAO8D,SACrC9D,EAAO8D,SAAU,IAEjB9D,EAAO8D,SAAWnpE,EACR,MAANA,EACFqlE,EAAO3tB,MAAQqlB,EAAEuM,YACRF,EAAQppE,KACjBqlE,EAAO3tB,MAAQqlB,EAAEwM,eACjBlE,EAAOzI,EAAI58D,IAGf,SAEF,KAAK+8D,EAAEwM,eACLlE,EAAO8D,SAAWnpE,EACdA,IAAMqlE,EAAOzI,IACfyI,EAAOzI,EAAI,GACXyI,EAAO3tB,MAAQqlB,EAAEmM,SAEnB,SAEF,KAAKnM,EAAEuM,YACLjE,EAAO8D,SAAWnpE,EACR,MAANA,EACFqlE,EAAO3tB,MAAQqlB,EAAEmM,QACRE,EAAQppE,KACjBqlE,EAAO3tB,MAAQqlB,EAAEyM,mBACjBnE,EAAOzI,EAAI58D,GAEb,SAEF,KAAK+8D,EAAEyM,mBACLnE,EAAO8D,SAAWnpE,EACdA,IAAMqlE,EAAOzI,IACfyI,EAAO3tB,MAAQqlB,EAAEuM,YACjBjE,EAAOzI,EAAI,IAEb,SAEF,KAAKG,EAAEiM,QACK,MAANhpE,EACFqlE,EAAO3tB,MAAQqlB,EAAE0M,eAEjBpE,EAAO4D,SAAWjpE,EAEpB,SAEF,KAAK+8D,EAAE0M,eACK,MAANzpE,GACFqlE,EAAO3tB,MAAQqlB,EAAE2M,cACjBrE,EAAO4D,QAAUU,EAAStE,EAAOC,IAAKD,EAAO4D,SACzC5D,EAAO4D,SACTJ,EAASxD,EAAQ,YAAaA,EAAO4D,SAEvC5D,EAAO4D,QAAU,KAEjB5D,EAAO4D,SAAW,IAAMjpE,EACxBqlE,EAAO3tB,MAAQqlB,EAAEiM,SAEnB,SAEF,KAAKjM,EAAE2M,cACK,MAAN1pE,GACF2nE,EAAWtC,EAAQ,qBAGnBA,EAAO4D,SAAW,KAAOjpE,EACzBqlE,EAAO3tB,MAAQqlB,EAAEiM,SAEjB3D,EAAO3tB,MAAQqlB,EAAEwK,KAEnB,SAEF,KAAKxK,EAAE+L,MACK,MAAN9oE,EACFqlE,EAAO3tB,MAAQqlB,EAAE6M,aAEjBvE,EAAO0D,OAAS/oE,EAElB,SAEF,KAAK+8D,EAAE6M,aACK,MAAN5pE,EACFqlE,EAAO3tB,MAAQqlB,EAAE8M,gBAEjBxE,EAAO0D,OAAS,IAAM/oE,EACtBqlE,EAAO3tB,MAAQqlB,EAAE+L,OAEnB,SAEF,KAAK/L,EAAE8M,eACK,MAAN7pE,GACEqlE,EAAO0D,OACTF,EAASxD,EAAQ,UAAWA,EAAO0D,OAErCF,EAASxD,EAAQ,gBACjBA,EAAO0D,MAAQ,GACf1D,EAAO3tB,MAAQqlB,EAAEwK,MACF,MAANvnE,EACTqlE,EAAO0D,OAAS,KAEhB1D,EAAO0D,OAAS,KAAO/oE,EACvBqlE,EAAO3tB,MAAQqlB,EAAE+L,OAEnB,SAEF,KAAK/L,EAAE0L,UACK,MAANzoE,EACFqlE,EAAO3tB,MAAQqlB,EAAE+M,iBACRpC,EAAa1nE,GACtBqlE,EAAO3tB,MAAQqlB,EAAEgN,eAEjB1E,EAAOqD,cAAgB1oE,EAEzB,SAEF,KAAK+8D,EAAEgN,eACL,IAAK1E,EAAOsD,cAAgBjB,EAAa1nE,GACvC,SACe,MAANA,EACTqlE,EAAO3tB,MAAQqlB,EAAE+M,iBAEjBzE,EAAOsD,cAAgB3oE,EAEzB,SAEF,KAAK+8D,EAAE+M,iBACK,MAAN9pE,GACF6oE,EAASxD,EAAQ,0BAA2B,CAC1C96E,KAAM86E,EAAOqD,aACbsB,KAAM3E,EAAOsD,eAEftD,EAAOqD,aAAerD,EAAOsD,aAAe,GAC5CtD,EAAO3tB,MAAQqlB,EAAEwK,OAEjBlC,EAAOsD,cAAgB,IAAM3oE,EAC7BqlE,EAAO3tB,MAAQqlB,EAAEgN,gBAEnB,SAEF,KAAKhN,EAAEwL,SACDF,EAAQ4B,EAAUjqE,GACpBqlE,EAAOmD,SAAWxoE,GAElBkqE,EAAO7E,GACG,MAANrlE,EACFmqE,EAAQ9E,GACO,MAANrlE,EACTqlE,EAAO3tB,MAAQqlB,EAAEqN,gBAEZ1C,EAAa1nE,IAChB2nE,EAAWtC,EAAQ,iCAErBA,EAAO3tB,MAAQqlB,EAAEsN,SAGrB,SAEF,KAAKtN,EAAEqN,eACK,MAANpqE,GACFmqE,EAAQ9E,GAAQ,GAChBiF,EAASjF,KAETsC,EAAWtC,EAAQ,kDACnBA,EAAO3tB,MAAQqlB,EAAEsN,QAEnB,SAEF,KAAKtN,EAAEsN,OAEL,GAAI3C,EAAa1nE,GACf,SACe,MAANA,EACTmqE,EAAQ9E,GACO,MAANrlE,EACTqlE,EAAO3tB,MAAQqlB,EAAEqN,eACR/B,EAAQC,EAAWtoE,IAC5BqlE,EAAOkF,WAAavqE,EACpBqlE,EAAOmF,YAAc,GACrBnF,EAAO3tB,MAAQqlB,EAAE0N,aAEjB9C,EAAWtC,EAAQ,0BAErB,SAEF,KAAKtI,EAAE0N,YACK,MAANzqE,EACFqlE,EAAO3tB,MAAQqlB,EAAE2N,aACF,MAAN1qE,GACT2nE,EAAWtC,EAAQ,2BACnBA,EAAOmF,YAAcnF,EAAOkF,WAC5BI,EAAOtF,GACP8E,EAAQ9E,IACCqC,EAAa1nE,GACtBqlE,EAAO3tB,MAAQqlB,EAAE6N,sBACRvC,EAAQ4B,EAAUjqE,GAC3BqlE,EAAOkF,YAAcvqE,EAErB2nE,EAAWtC,EAAQ,0BAErB,SAEF,KAAKtI,EAAE6N,sBACL,GAAU,MAAN5qE,EACFqlE,EAAO3tB,MAAQqlB,EAAE2N,iBACZ,IAAIhD,EAAa1nE,GACtB,SAEA2nE,EAAWtC,EAAQ,2BACnBA,EAAOgB,IAAIwE,WAAWxF,EAAOkF,YAAc,GAC3ClF,EAAOmF,YAAc,GACrB3B,EAASxD,EAAQ,cAAe,CAC9B96E,KAAM86E,EAAOkF,WACb3gF,MAAO,KAETy7E,EAAOkF,WAAa,GACV,MAANvqE,EACFmqE,EAAQ9E,GACCgD,EAAQC,EAAWtoE,IAC5BqlE,EAAOkF,WAAavqE,EACpBqlE,EAAO3tB,MAAQqlB,EAAE0N,cAEjB9C,EAAWtC,EAAQ,0BACnBA,EAAO3tB,MAAQqlB,EAAEsN,QAGrB,SAEF,KAAKtN,EAAE2N,aACL,GAAIhD,EAAa1nE,GACf,SACSopE,EAAQppE,IACjBqlE,EAAOzI,EAAI58D,EACXqlE,EAAO3tB,MAAQqlB,EAAE+N,sBAEjBnD,EAAWtC,EAAQ,4BACnBA,EAAO3tB,MAAQqlB,EAAEgO,sBACjB1F,EAAOmF,YAAcxqE,GAEvB,SAEF,KAAK+8D,EAAE+N,oBACL,GAAI9qE,IAAMqlE,EAAOzI,EAAG,CACR,MAAN58D,EACFqlE,EAAO3tB,MAAQqlB,EAAEiO,sBAEjB3F,EAAOmF,aAAexqE,EAExB,SAEF2qE,EAAOtF,GACPA,EAAOzI,EAAI,GACXyI,EAAO3tB,MAAQqlB,EAAEkO,oBACjB,SAEF,KAAKlO,EAAEkO,oBACDvD,EAAa1nE,GACfqlE,EAAO3tB,MAAQqlB,EAAEsN,OACF,MAANrqE,EACTmqE,EAAQ9E,GACO,MAANrlE,EACTqlE,EAAO3tB,MAAQqlB,EAAEqN,eACR/B,EAAQC,EAAWtoE,IAC5B2nE,EAAWtC,EAAQ,oCACnBA,EAAOkF,WAAavqE,EACpBqlE,EAAOmF,YAAc,GACrBnF,EAAO3tB,MAAQqlB,EAAE0N,aAEjB9C,EAAWtC,EAAQ,0BAErB,SAEF,KAAKtI,EAAEgO,sBACL,IAAKG,EAAYlrE,GAAI,CACT,MAANA,EACFqlE,EAAO3tB,MAAQqlB,EAAEoO,sBAEjB9F,EAAOmF,aAAexqE,EAExB,SAEF2qE,EAAOtF,GACG,MAANrlE,EACFmqE,EAAQ9E,GAERA,EAAO3tB,MAAQqlB,EAAEsN,OAEnB,SAEF,KAAKtN,EAAEmL,UACL,GAAK7C,EAAOmD,QAaK,MAANxoE,EACTsqE,EAASjF,GACAgD,EAAQ4B,EAAUjqE,GAC3BqlE,EAAOmD,SAAWxoE,EACTqlE,EAAO4C,QAChB5C,EAAO4C,QAAU,KAAO5C,EAAOmD,QAC/BnD,EAAOmD,QAAU,GACjBnD,EAAO3tB,MAAQqlB,EAAEgL,SAEZL,EAAa1nE,IAChB2nE,EAAWtC,EAAQ,kCAErBA,EAAO3tB,MAAQqlB,EAAEqO,yBAzBE,CACnB,GAAI1D,EAAa1nE,GACf,SACSqrE,EAAS/C,EAAWtoE,GACzBqlE,EAAO4C,QACT5C,EAAO4C,QAAU,KAAOjoE,EACxBqlE,EAAO3tB,MAAQqlB,EAAEgL,QAEjBJ,EAAWtC,EAAQ,mCAGrBA,EAAOmD,QAAUxoE,EAgBrB,SAEF,KAAK+8D,EAAEqO,oBACL,GAAI1D,EAAa1nE,GACf,SAEQ,MAANA,EACFsqE,EAASjF,GAETsC,EAAWtC,EAAQ,qCAErB,SAEF,KAAKtI,EAAE6K,YACP,KAAK7K,EAAEiO,sBACP,KAAKjO,EAAEoO,sBACL,IAAIG,EACAC,EACJ,OAAQlG,EAAO3tB,OACb,KAAKqlB,EAAE6K,YACL0D,EAAcvO,EAAEwK,KAChBgE,EAAS,WACT,MAEF,KAAKxO,EAAEiO,sBACLM,EAAcvO,EAAE+N,oBAChBS,EAAS,cACT,MAEF,KAAKxO,EAAEoO,sBACLG,EAAcvO,EAAEgO,sBAChBQ,EAAS,cAIH,MAANvrE,GACFqlE,EAAOkG,IAAWC,EAAYnG,GAC9BA,EAAOoG,OAAS,GAChBpG,EAAO3tB,MAAQ4zB,GACNjD,EAAQhD,EAAOoG,OAAO7jF,OAAS8jF,EAAaC,EAAa3rE,GAClEqlE,EAAOoG,QAAUzrE,GAEjB2nE,EAAWtC,EAAQ,oCACnBA,EAAOkG,IAAW,IAAMlG,EAAOoG,OAASzrE,EACxCqlE,EAAOoG,OAAS,GAChBpG,EAAO3tB,MAAQ4zB,GAGjB,SAEF,QACE,MAAM,IAAIv/E,MAAMs5E,EAAQ,kBAAoBA,EAAO3tB,OAIrD2tB,EAAO3sB,UAAY2sB,EAAOS,qBA73ChC,SAA4BT,GAG1B,IAFA,IAAIuG,EAAa75E,KAAKyI,IAAI4qE,EAAIM,kBAAmB,IAC7CmG,EAAY,EACPhkF,EAAI,EAAGu+B,EAAIw/C,EAAQh+E,OAAQC,EAAIu+B,EAAGv+B,IAAK,CAC9C,IAAIF,EAAM09E,EAAOO,EAAQ/9E,IAAID,OAC7B,GAAID,EAAMikF,EAKR,OAAQhG,EAAQ/9E,IACd,IAAK,WACHikF,EAAUzG,GACV,MAEF,IAAK,QACHwD,EAASxD,EAAQ,UAAWA,EAAO0D,OACnC1D,EAAO0D,MAAQ,GACf,MAEF,IAAK,SACHF,EAASxD,EAAQ,WAAYA,EAAO4C,QACpC5C,EAAO4C,OAAS,GAChB,MAEF,QACEv6D,EAAM23D,EAAQ,+BAAiCO,EAAQ/9E,IAG7DgkF,EAAY95E,KAAKyI,IAAIqxE,EAAWlkF,GAGlC,IAAIgwB,EAAIytD,EAAIM,kBAAoBmG,EAChCxG,EAAOS,oBAAsBnuD,EAAI0tD,EAAO3sB,SA61CtCqzB,CAAkB1G,GAEpB,OAAOA,GAv0CP2G,OAAQ,WAAiC,OAAnB//E,KAAKyhB,MAAQ,KAAazhB,MAChDggF,MAAO,WAAc,OAAOhgF,KAAKk7E,MAAM,OACvC+E,MAAO,WAjBT,IAAuB7G,EACrByG,EADqBzG,EAiBap5E,MAfb,KAAjBo5E,EAAO0D,QACTF,EAASxD,EAAQ,UAAWA,EAAO0D,OACnC1D,EAAO0D,MAAQ,IAEK,KAAlB1D,EAAO4C,SACTY,EAASxD,EAAQ,WAAYA,EAAO4C,QACpC5C,EAAO4C,OAAS,MAapB,IACEtC,EAASj6E,EAAAA,MAAAA,OACT,MAAO2gE,GACPsZ,EAAS,aAGX,IAAIwG,EAAc/G,EAAI8B,OAAOl1D,QAAO,SAAUo6D,GAC5C,MAAc,UAAPA,GAAyB,QAAPA,KAO3B,SAAS5G,EAAWx+B,EAAQs+B,GAC1B,KAAMr5E,gBAAgBu5E,GACpB,OAAO,IAAIA,EAAUx+B,EAAQs+B,GAG/BK,EAAO/2E,MAAM3C,MAEbA,KAAKogF,QAAU,IAAI9G,EAAUv+B,EAAQs+B,GACrCr5E,KAAKrD,UAAW,EAChBqD,KAAKqgF,UAAW,EAEhB,IAAIC,EAAKtgF,KAETA,KAAKogF,QAAQG,MAAQ,WACnBD,EAAGr3B,KAAK,QAGVjpD,KAAKogF,QAAQI,QAAU,SAAUn0B,GAC/Bi0B,EAAGr3B,KAAK,QAASoD,GAIjBi0B,EAAGF,QAAQ3+D,MAAQ,MAGrBzhB,KAAKygF,SAAW,KAEhBP,EAAYh9E,SAAQ,SAAUi9E,GAC5BvjF,OAAOC,eAAeyjF,EAAI,KAAOH,EAAI,CACnC9/D,IAAK,WACH,OAAOigE,EAAGF,QAAQ,KAAOD,IAE3Bz3D,IAAK,SAAU8R,GACb,IAAKA,EAGH,OAFA8lD,EAAGz3B,mBAAmBs3B,GACtBG,EAAGF,QAAQ,KAAOD,GAAM3lD,EACjBA,EAET8lD,EAAGj4B,GAAG83B,EAAI3lD,IAEZ/9B,YAAY,EACZC,cAAc,OAKpB68E,EAAUt8E,UAAYL,OAAOioB,OAAO60D,EAAOz8E,UAAW,CACpDoB,YAAa,CACXV,MAAO47E,KAIXA,EAAUt8E,UAAUi+E,MAAQ,SAAUl5E,GACpC,GAAsB,oBAAX0+E,QACkB,oBAApBA,OAAOC,UACdD,OAAOC,SAAS3+E,GAAO,CACvB,IAAKhC,KAAKygF,SAAU,CAClB,IAAIG,EAAKnhF,EAAAA,MAAAA,EACTO,KAAKygF,SAAW,IAAIG,EAAG,QAEzB5+E,EAAOhC,KAAKygF,SAASvF,MAAMl5E,GAK7B,OAFAhC,KAAKogF,QAAQlF,MAAMl5E,EAAK7D,YACxB6B,KAAKipD,KAAK,OAAQjnD,IACX,GAGTu3E,EAAUt8E,UAAUm+B,IAAM,SAAU+/C,GAKlC,OAJIA,GAASA,EAAMx/E,QACjBqE,KAAKk7E,MAAMC,GAEbn7E,KAAKogF,QAAQhlD,OACN,GAGTm+C,EAAUt8E,UAAUorD,GAAK,SAAU83B,EAAIh2B,GACrC,IAAIm2B,EAAKtgF,KAST,OARKsgF,EAAGF,QAAQ,KAAOD,KAAoC,IAA7BD,EAAYpuE,QAAQquE,KAChDG,EAAGF,QAAQ,KAAOD,GAAM,WACtB,IAAI3rD,EAA4B,IAArBnX,UAAU1hB,OAAe,CAAC0hB,UAAU,IAAMvhB,MAAM6G,MAAM,KAAM0a,WACvEmX,EAAK1S,OAAO,EAAG,EAAGq+D,GAClBG,EAAGr3B,KAAKtmD,MAAM29E,EAAI9rD,KAIfklD,EAAOz8E,UAAUorD,GAAGjqD,KAAKkiF,EAAIH,EAAIh2B,IAK1C,IAEI02B,EAAgB,uCAChBC,EAAkB,gCAClBjG,EAAS,CAAE3zD,IAAK25D,EAAelG,MAAOmG,GAQtCzE,EAAY,4JAEZ2B,EAAW,gMAEX0B,EAAc,6JACdD,EAAa,iMAEjB,SAAShE,EAAc1nE,GACrB,MAAa,MAANA,GAAmB,OAANA,GAAoB,OAANA,GAAoB,OAANA,EAGlD,SAASopE,EAASppE,GAChB,MAAa,MAANA,GAAmB,MAANA,EAGtB,SAASkrE,EAAalrE,GACpB,MAAa,MAANA,GAAa0nE,EAAa1nE,GAGnC,SAASqoE,EAAS3b,EAAO1sD,GACvB,OAAO0sD,EAAMliE,KAAKwV,GAGpB,SAASqrE,EAAU3e,EAAO1sD,GACxB,OAAQqoE,EAAQ3b,EAAO1sD,GAGzB,IAAI+8D,EAAI,EAsTR,IAAK,IAAI1vE,KArTT+3E,EAAI4H,MAAQ,CACVzG,MAAOxJ,IACPsK,iBAAkBtK,IAClBwK,KAAMxK,IACN6K,YAAa7K,IACb8K,UAAW9K,IACXoL,UAAWpL,IACXsM,iBAAkBtM,IAClBmM,QAASnM,IACTwM,eAAgBxM,IAChBuM,YAAavM,IACbyM,mBAAoBzM,IACpBkQ,iBAAkBlQ,IAClBiM,QAASjM,IACT0M,eAAgB1M,IAChB2M,cAAe3M,IACf+L,MAAO/L,IACP6M,aAAc7M,IACd8M,eAAgB9M,IAChB0L,UAAW1L,IACXgN,eAAgBhN,IAChB+M,iBAAkB/M,IAClBwL,SAAUxL,IACVqN,eAAgBrN,IAChBsN,OAAQtN,IACR0N,YAAa1N,IACb6N,sBAAuB7N,IACvB2N,aAAc3N,IACd+N,oBAAqB/N,IACrBkO,oBAAqBlO,IACrBgO,sBAAuBhO,IACvBiO,sBAAuBjO,IACvBoO,sBAAuBpO,IACvBmL,UAAWnL,IACXqO,oBAAqBrO,IACrBgL,OAAQhL,IACRiL,cAAejL,KAGjBqI,EAAIsB,aAAe,CACjB,IAAO,IACP,GAAM,IACN,GAAM,IACN,KAAQ,IACR,KAAQ,KAGVtB,EAAIqB,SAAW,CACb,IAAO,IACP,GAAM,IACN,GAAM,IACN,KAAQ,IACR,KAAQ,IACR,MAAS,IACT,OAAU,IACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,IAAO,IACP,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,OAAU,IACV,MAAS,IACT,OAAU,IACV,OAAU,IACV,OAAU,IACV,KAAQ,IACR,MAAS,IACT,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,OAAU,IACV,MAAS,IACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,OAAU,IACV,MAAS,IACT,OAAU,IACV,IAAO,IACP,KAAQ,IACR,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,OAAU,IACV,MAAS,IACT,OAAU,IACV,OAAU,IACV,OAAU,IACV,KAAQ,IACR,MAAS,IACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,KAAQ,IACR,KAAQ,IACR,IAAO,IACP,KAAQ,IACR,MAAS,IACT,KAAQ,IACR,MAAS,IACT,OAAU,IACV,IAAO,IACP,OAAU,IACV,KAAQ,IACR,IAAO,IACP,KAAQ,IACR,MAAS,IACT,IAAO,IACP,IAAO,IACP,KAAQ,IACR,IAAO,IACP,OAAU,IACV,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,MAAS,IACT,MAAS,IACT,KAAQ,IACR,OAAU,IACV,MAAS,IACT,KAAQ,IACR,MAAS,IACT,OAAU,IACV,OAAU,IACV,OAAU,IACV,OAAU,IACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,MAAS,IACT,OAAU,IACV,OAAU,IACV,KAAQ,IACR,KAAQ,IACR,KAAQ,IACR,MAAS,IACT,MAAS,IACT,KAAQ,IACR,MAAS,IACT,MAAS,IACT,QAAW,IACX,KAAQ,IACR,IAAO,IACP,MAAS,IACT,KAAQ,IACR,MAAS,IACT,OAAU,IACV,GAAM,IACN,GAAM,IACN,GAAM,IACN,QAAW,IACX,GAAM,IACN,IAAO,IACP,MAAS,IACT,IAAO,IACP,QAAW,IACX,IAAO,IACP,IAAO,IACP,IAAO,IACP,MAAS,IACT,MAAS,IACT,KAAQ,IACR,MAAS,IACT,MAAS,IACT,QAAW,IACX,KAAQ,IACR,IAAO,IACP,MAAS,IACT,KAAQ,IACR,MAAS,IACT,OAAU,IACV,GAAM,IACN,GAAM,IACN,GAAM,IACN,QAAW,IACX,GAAM,IACN,IAAO,IACP,OAAU,IACV,MAAS,IACT,IAAO,IACP,QAAW,IACX,IAAO,IACP,IAAO,IACP,IAAO,IACP,MAAS,IACT,SAAY,IACZ,MAAS,IACT,IAAO,IACP,KAAQ,KACR,KAAQ,KACR,OAAU,KACV,KAAQ,KACR,IAAO,KACP,IAAO,KACP,IAAO,KACP,MAAS,KACT,MAAS,KACT,MAAS,KACT,MAAS,KACT,MAAS,KACT,MAAS,KACT,MAAS,KACT,MAAS,KACT,OAAU,KACV,OAAU,KACV,KAAQ,KACR,OAAU,KACV,OAAU,KACV,MAAS,KACT,MAAS,KACT,OAAU,KACV,OAAU,KACV,MAAS,KACT,MAAS,KACT,KAAQ,KACR,MAAS,KACT,OAAU,KACV,KAAQ,KACR,MAAS,KACT,QAAW,KACX,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,MAAS,KACT,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAU,KACV,KAAQ,KACR,MAAS,KACT,MAAS,KACT,MAAS,KACT,KAAQ,KACR,MAAS,KACT,GAAM,KACN,KAAQ,KACR,IAAO,KACP,MAAS,KACT,OAAU,KACV,MAAS,KACT,KAAQ,KACR,MAAS,KACT,IAAO,KACP,IAAO,KACP,GAAM,KACN,IAAO,KACP,IAAO,KACP,IAAO,KACP,OAAU,KACV,IAAO,KACP,KAAQ,KACR,MAAS,KACT,GAAM,KACN,MAAS,KACT,GAAM,KACN,GAAM,KACN,IAAO,KACP,IAAO,KACP,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,MAAS,KACT,OAAU,KACV,KAAQ,KACR,KAAQ,KACR,MAAS,KACT,MAAS,KACT,OAAU,KACV,OAAU,KACV,KAAQ,KACR,KAAQ,KACR,IAAO,KACP,OAAU,KACV,MAAS,KACT,OAAU,KACV,MAAS,MAGX59E,OAAO6F,KAAK02E,EAAIqB,UAAUt3E,SAAQ,SAAUpG,GAC1C,IAAIkgB,EAAIm8D,EAAIqB,SAAS19E,GACjBsE,EAAiB,kBAAN4b,EAAiBsa,OAAO82C,aAAapxD,GAAKA,EACzDm8D,EAAIqB,SAAS19E,GAAOsE,KAGR+3E,EAAI4H,MAChB5H,EAAI4H,MAAM5H,EAAI4H,MAAM3/E,IAAMA,EAM5B,SAAS6nD,EAAMmwB,EAAQ7wB,EAAOvmD,GAC5Bo3E,EAAO7wB,IAAU6wB,EAAO7wB,GAAOvmD,GAGjC,SAAS46E,EAAUxD,EAAQ6H,EAAUj/E,GAC/Bo3E,EAAOoC,UAAUqE,EAAUzG,GAC/BnwB,EAAKmwB,EAAQ6H,EAAUj/E,GAGzB,SAAS69E,EAAWzG,GAClBA,EAAOoC,SAAWkC,EAAStE,EAAOC,IAAKD,EAAOoC,UAC1CpC,EAAOoC,UAAUvyB,EAAKmwB,EAAQ,SAAUA,EAAOoC,UACnDpC,EAAOoC,SAAW,GAGpB,SAASkC,EAAUrE,EAAKhT,GAGtB,OAFIgT,EAAIpvE,OAAMo8D,EAAOA,EAAKp8D,QACtBovE,EAAI1R,YAAWtB,EAAOA,EAAK32D,QAAQ,OAAQ,MACxC22D,EAGT,SAAS5kD,EAAO23D,EAAQ/sB,GAUtB,OATAwzB,EAAUzG,GACNA,EAAO0B,gBACTzuB,GAAM,WAAa+sB,EAAO2B,KACxB,aAAe3B,EAAO4B,OACtB,WAAa5B,EAAOrlE,GAExBs4C,EAAK,IAAIvsD,MAAMusD,GACf+sB,EAAO33D,MAAQ4qC,EACfpD,EAAKmwB,EAAQ,UAAW/sB,GACjB+sB,EAGT,SAASh+C,EAAKg+C,GAYZ,OAXIA,EAAOe,UAAYf,EAAOc,YAAYwB,EAAWtC,EAAQ,qBACxDA,EAAO3tB,QAAUqlB,EAAEwJ,OACrBlB,EAAO3tB,QAAUqlB,EAAEsK,kBACnBhC,EAAO3tB,QAAUqlB,EAAEwK,MACpB75D,EAAM23D,EAAQ,kBAEhByG,EAAUzG,GACVA,EAAOrlE,EAAI,GACXqlE,EAAOr/C,QAAS,EAChBkvB,EAAKmwB,EAAQ,SACbE,EAAUl7E,KAAKg7E,EAAQA,EAAOr+B,OAAQq+B,EAAOC,KACtCD,EAGT,SAASsC,EAAYtC,EAAQvuE,GAC3B,GAAsB,kBAAXuuE,KAAyBA,aAAkBE,GACpD,MAAM,IAAIx5E,MAAM,0BAEds5E,EAAOr+B,QACTt5B,EAAM23D,EAAQvuE,GAIlB,SAASozE,EAAQ7E,GACVA,EAAOr+B,SAAQq+B,EAAOmD,QAAUnD,EAAOmD,QAAQnD,EAAOY,cAC3D,IAAIj8B,EAASq7B,EAAOa,KAAKb,EAAOa,KAAKt+E,OAAS,IAAMy9E,EAChDgB,EAAMhB,EAAOgB,IAAM,CAAE97E,KAAM86E,EAAOmD,QAASqC,WAAY,IAGvDxF,EAAOC,IAAIsB,QACbP,EAAIQ,GAAK78B,EAAO68B,IAElBxB,EAAOsB,WAAW/+E,OAAS,EAC3BihF,EAASxD,EAAQ,iBAAkBgB,GAGrC,SAAS8G,EAAO5iF,EAAM6iF,GACpB,IACIC,EADI9iF,EAAKwT,QAAQ,KACF,EAAI,CAAE,GAAIxT,GAASA,EAAKub,MAAM,KAC7CwnE,EAASD,EAAS,GAClB3f,EAAQ2f,EAAS,GAQrB,OALID,GAAsB,UAAT7iF,IACf+iF,EAAS,QACT5f,EAAQ,IAGH,CAAE4f,OAAQA,EAAQ5f,MAAOA,GAGlC,SAASid,EAAQtF,GAKf,GAJKA,EAAOr+B,SACVq+B,EAAOkF,WAAalF,EAAOkF,WAAWlF,EAAOY,eAGO,IAAlDZ,EAAOsB,WAAW5oE,QAAQsnE,EAAOkF,aACnClF,EAAOgB,IAAIwE,WAAWxxE,eAAegsE,EAAOkF,YAC5ClF,EAAOkF,WAAalF,EAAOmF,YAAc,OAF3C,CAMA,GAAInF,EAAOC,IAAIsB,MAAO,CACpB,IAAI2G,EAAKJ,EAAM9H,EAAOkF,YAAY,GAC9B+C,EAASC,EAAGD,OACZ5f,EAAQ6f,EAAG7f,MAEf,GAAe,UAAX4f,EAEF,GAAc,QAAV5f,GAAmB2X,EAAOmF,cAAgBsC,EAC5CnF,EAAWtC,EACT,gCAAkCyH,EAAlC,aACazH,EAAOmF,kBACjB,GAAc,UAAV9c,GAAqB2X,EAAOmF,cAAgBuC,EACrDpF,EAAWtC,EACT,kCAAoC0H,EAApC,aACa1H,EAAOmF,iBACjB,CACL,IAAInE,EAAMhB,EAAOgB,IACbr8B,EAASq7B,EAAOa,KAAKb,EAAOa,KAAKt+E,OAAS,IAAMy9E,EAChDgB,EAAIQ,KAAO78B,EAAO68B,KACpBR,EAAIQ,GAAKh+E,OAAOioB,OAAOk5B,EAAO68B,KAEhCR,EAAIQ,GAAGnZ,GAAS2X,EAAOmF,YAO3BnF,EAAOsB,WAAWp6E,KAAK,CAAC84E,EAAOkF,WAAYlF,EAAOmF,mBAGlDnF,EAAOgB,IAAIwE,WAAWxF,EAAOkF,YAAclF,EAAOmF,YAClD3B,EAASxD,EAAQ,cAAe,CAC9B96E,KAAM86E,EAAOkF,WACb3gF,MAAOy7E,EAAOmF,cAIlBnF,EAAOkF,WAAalF,EAAOmF,YAAc,IAG3C,SAASL,EAAS9E,EAAQmI,GACxB,GAAInI,EAAOC,IAAIsB,MAAO,CAEpB,IAAIP,EAAMhB,EAAOgB,IAGbkH,EAAKJ,EAAM9H,EAAOmD,SACtBnC,EAAIiH,OAASC,EAAGD,OAChBjH,EAAI3Y,MAAQ6f,EAAG7f,MACf2Y,EAAIoH,IAAMpH,EAAIQ,GAAG0G,EAAGD,SAAW,GAE3BjH,EAAIiH,SAAWjH,EAAIoH,MACrB9F,EAAWtC,EAAQ,6BACjBl5E,KAAKC,UAAUi5E,EAAOmD,UACxBnC,EAAIoH,IAAMF,EAAGD,QAGf,IAAItjC,EAASq7B,EAAOa,KAAKb,EAAOa,KAAKt+E,OAAS,IAAMy9E,EAChDgB,EAAIQ,IAAM78B,EAAO68B,KAAOR,EAAIQ,IAC9Bh+E,OAAO6F,KAAK23E,EAAIQ,IAAI13E,SAAQ,SAAU0B,GACpCg4E,EAASxD,EAAQ,kBAAmB,CAClCiI,OAAQz8E,EACR48E,IAAKpH,EAAIQ,GAAGh2E,QAQlB,IAAK,IAAIhJ,EAAI,EAAGu+B,EAAIi/C,EAAOsB,WAAW/+E,OAAQC,EAAIu+B,EAAGv+B,IAAK,CACxD,IAAI6lF,EAAKrI,EAAOsB,WAAW9+E,GACvB0C,EAAOmjF,EAAG,GACV9jF,EAAQ8jF,EAAG,GACXL,EAAWF,EAAM5iF,GAAM,GACvB+iF,EAASD,EAASC,OAClB5f,EAAQ2f,EAAS3f,MACjB+f,EAAiB,KAAXH,EAAgB,GAAMjH,EAAIQ,GAAGyG,IAAW,GAC9C95E,EAAI,CACNjJ,KAAMA,EACNX,MAAOA,EACP0jF,OAAQA,EACR5f,MAAOA,EACP+f,IAAKA,GAKHH,GAAqB,UAAXA,IAAuBG,IACnC9F,EAAWtC,EAAQ,6BACjBl5E,KAAKC,UAAUkhF,IACjB95E,EAAEi6E,IAAMH,GAEVjI,EAAOgB,IAAIwE,WAAWtgF,GAAQiJ,EAC9Bq1E,EAASxD,EAAQ,cAAe7xE,GAElC6xE,EAAOsB,WAAW/+E,OAAS,EAG7By9E,EAAOgB,IAAIsH,gBAAkBH,EAG7BnI,EAAOe,SAAU,EACjBf,EAAOa,KAAK35E,KAAK84E,EAAOgB,KACxBwC,EAASxD,EAAQ,YAAaA,EAAOgB,KAChCmH,IAEEnI,EAAOiB,UAA6C,WAAjCjB,EAAOmD,QAAQ71E,cAGrC0yE,EAAO3tB,MAAQqlB,EAAEwK,KAFjBlC,EAAO3tB,MAAQqlB,EAAEgL,OAInB1C,EAAOgB,IAAM,KACbhB,EAAOmD,QAAU,IAEnBnD,EAAOkF,WAAalF,EAAOmF,YAAc,GACzCnF,EAAOsB,WAAW/+E,OAAS,EAG7B,SAAS0iF,EAAUjF,GACjB,IAAKA,EAAOmD,QAIV,OAHAb,EAAWtC,EAAQ,0BACnBA,EAAOoC,UAAY,WACnBpC,EAAO3tB,MAAQqlB,EAAEwK,MAInB,GAAIlC,EAAO4C,OAAQ,CACjB,GAAuB,WAAnB5C,EAAOmD,QAIT,OAHAnD,EAAO4C,QAAU,KAAO5C,EAAOmD,QAAU,IACzCnD,EAAOmD,QAAU,QACjBnD,EAAO3tB,MAAQqlB,EAAEgL,QAGnBc,EAASxD,EAAQ,WAAYA,EAAO4C,QACpC5C,EAAO4C,OAAS,GAKlB,IAAI53D,EAAIg1D,EAAOa,KAAKt+E,OAChB4gF,EAAUnD,EAAOmD,QAChBnD,EAAOr+B,SACVwhC,EAAUA,EAAQnD,EAAOY,cAG3B,IADA,IAAI2H,EAAUpF,EACPn4D,KAAK,CAEV,GADYg1D,EAAOa,KAAK71D,GACd9lB,OAASqjF,EAIjB,MAFAjG,EAAWtC,EAAQ,wBAOvB,GAAIh1D,EAAI,EAIN,OAHAs3D,EAAWtC,EAAQ,0BAA4BA,EAAOmD,SACtDnD,EAAOoC,UAAY,KAAOpC,EAAOmD,QAAU,SAC3CnD,EAAO3tB,MAAQqlB,EAAEwK,MAGnBlC,EAAOmD,QAAUA,EAEjB,IADA,IAAIn7E,EAAIg4E,EAAOa,KAAKt+E,OACbyF,KAAMgjB,GAAG,CACd,IAAIg2D,EAAMhB,EAAOgB,IAAMhB,EAAOa,KAAK5hE,MACnC+gE,EAAOmD,QAAUnD,EAAOgB,IAAI97E,KAC5Bs+E,EAASxD,EAAQ,aAAcA,EAAOmD,SAEtC,IAAI32E,EAAI,GACR,IAAK,IAAIhK,KAAKw+E,EAAIQ,GAChBh1E,EAAEhK,GAAKw+E,EAAIQ,GAAGh/E,GAGhB,IAAImiD,EAASq7B,EAAOa,KAAKb,EAAOa,KAAKt+E,OAAS,IAAMy9E,EAChDA,EAAOC,IAAIsB,OAASP,EAAIQ,KAAO78B,EAAO68B,IAExCh+E,OAAO6F,KAAK23E,EAAIQ,IAAI13E,SAAQ,SAAU0B,GACpC,IAAI1G,EAAIk8E,EAAIQ,GAAGh2E,GACfg4E,EAASxD,EAAQ,mBAAoB,CAAEiI,OAAQz8E,EAAG48E,IAAKtjF,OAInD,IAANkmB,IAASg1D,EAAOc,YAAa,GACjCd,EAAOmD,QAAUnD,EAAOmF,YAAcnF,EAAOkF,WAAa,GAC1DlF,EAAOsB,WAAW/+E,OAAS,EAC3By9E,EAAO3tB,MAAQqlB,EAAEwK,KAGnB,SAASiE,EAAanG,GACpB,IAEIvyE,EAFA24E,EAASpG,EAAOoG,OAChBoC,EAAWpC,EAAO94E,cAElBm7E,EAAS,GAEb,OAAIzI,EAAOoB,SAASgF,GACXpG,EAAOoB,SAASgF,GAErBpG,EAAOoB,SAASoH,GACXxI,EAAOoB,SAASoH,IAGA,OADzBpC,EAASoC,GACE/gF,OAAO,KACS,MAArB2+E,EAAO3+E,OAAO,IAChB2+E,EAASA,EAAOhiF,MAAM,GAEtBqkF,GADAh7E,EAAM0J,SAASivE,EAAQ,KACVrhF,SAAS,MAEtBqhF,EAASA,EAAOhiF,MAAM,GAEtBqkF,GADAh7E,EAAM0J,SAASivE,EAAQ,KACVrhF,SAAS,MAG1BqhF,EAASA,EAAO9vE,QAAQ,MAAO,IAC3B5I,MAAMD,IAAQg7E,EAAOn7E,gBAAkB84E,GACzC9D,EAAWtC,EAAQ,4BACZ,IAAMA,EAAOoG,OAAS,KAGxBloD,OAAOwqD,cAAcj7E,IAG9B,SAASw0E,EAAiBjC,EAAQrlE,GACtB,MAANA,GACFqlE,EAAO3tB,MAAQqlB,EAAE8K,UACjBxC,EAAOyC,iBAAmBzC,EAAO3sB,UACvBgvB,EAAa1nE,KAGvB2nE,EAAWtC,EAAQ,oCACnBA,EAAOoC,SAAWznE,EAClBqlE,EAAO3tB,MAAQqlB,EAAEwK,MAIrB,SAASz6E,EAAQs6E,EAAOv/E,GACtB,IAAIuH,EAAS,GAIb,OAHIvH,EAAIu/E,EAAMx/E,SACZwH,EAASg4E,EAAMt6E,OAAOjF,IAEjBuH,EArVT2tE,EAAIqI,EAAI4H,MA23BHzpD,OAAOwqD,eACT,WACC,IAAIC,EAAqBzqD,OAAO82C,aAC5B19C,EAAQ5qB,KAAK4qB,MACboxD,EAAgB,WAClB,IAEIE,EACAC,EAHAC,EAAW,MACXC,EAAY,GAGZ/xC,GAAS,EACTz0C,EAAS0hB,UAAU1hB,OACvB,IAAKA,EACH,MAAO,GAGT,IADA,IAAIwH,EAAS,KACJitC,EAAQz0C,GAAQ,CACvB,IAAIymF,EAAY3vE,OAAO4K,UAAU+yB,IACjC,IACG0c,SAASs1B,IACVA,EAAY,GACZA,EAAY,SACZ1xD,EAAM0xD,KAAeA,EAErB,MAAMn2B,WAAW,uBAAyBm2B,GAExCA,GAAa,MACfD,EAAU7hF,KAAK8hF,IAIfJ,EAAoC,QADpCI,GAAa,QACiB,IAC9BH,EAAgBG,EAAY,KAAS,MACrCD,EAAU7hF,KAAK0hF,EAAeC,KAE5B7xC,EAAQ,IAAMz0C,GAAUwmF,EAAUxmF,OAASumF,KAC7C/+E,GAAU4+E,EAAmBp/E,MAAM,KAAMw/E,GACzCA,EAAUxmF,OAAS,GAGvB,OAAOwH,GAGLvG,OAAOC,eACTD,OAAOC,eAAey6B,OAAQ,gBAAiB,CAC7C35B,MAAOmkF,EACPplF,cAAc,EACdC,UAAU,IAGZ26B,OAAOwqD,cAAgBA,EAhD1B,GAx+CJ,CA4hDmDtmF,yBCvgDpD,IAAI2sD,EAAU1oD,EAAQ,MAEtB,SAASi6E,IACPvxB,EAAQ/pD,KAAK4B,MAEf05E,EAAOz8E,UAAY,IAAIkrD,EACvB5sD,EAAOC,QAAUk+E,EAEjBA,EAAOA,OAASA,EAEhBA,EAAOz8E,UAAUolF,KAAO,SAASC,EAAMrkB,GACrC,IAAI//B,EAASl+B,KAEb,SAASuiF,EAAOpH,GACVmH,EAAK3lF,WACH,IAAU2lF,EAAKpH,MAAMC,IAAUj9C,EAAOskD,OACxCtkD,EAAOskD,QAOb,SAASC,IACHvkD,EAAOmiD,UAAYniD,EAAO6hD,QAC5B7hD,EAAO6hD,SAJX7hD,EAAOmqB,GAAG,OAAQk6B,GAQlBD,EAAKj6B,GAAG,QAASo6B,GAIZH,EAAKI,UAAczkB,IAA2B,IAAhBA,EAAQ7iC,MACzC8C,EAAOmqB,GAAG,MAAOk4B,GACjBriD,EAAOmqB,GAAG,QAASs6B,IAGrB,IAAIC,GAAW,EACf,SAASrC,IACHqC,IACJA,GAAW,EAEXN,EAAKlnD,OAIP,SAASunD,IACHC,IACJA,GAAW,EAEiB,oBAAjBN,EAAKO,SAAwBP,EAAKO,WAI/C,SAASrC,EAAQn0B,GAEf,GADAy2B,KACK9iF,KAAKmpD,aAAa,SACrB,MAAMkD,EAQV,SAASy2B,IACP5kD,EAAOyqB,IAAI,OAAQ45B,GACnBD,EAAK35B,IAAI,QAAS85B,GAElBvkD,EAAOyqB,IAAI,MAAO43B,GAClBriD,EAAOyqB,IAAI,QAASg6B,GAEpBzkD,EAAOyqB,IAAI,QAAS63B,GACpB8B,EAAK35B,IAAI,QAAS63B,GAElBtiD,EAAOyqB,IAAI,MAAOm6B,GAClB5kD,EAAOyqB,IAAI,QAASm6B,GAEpBR,EAAK35B,IAAI,MAAOm6B,GAChBR,EAAK35B,IAAI,QAASm6B,GAYpB,OA9BA5kD,EAAOmqB,GAAG,QAASm4B,GACnB8B,EAAKj6B,GAAG,QAASm4B,GAoBjBtiD,EAAOmqB,GAAG,MAAOy6B,GACjB5kD,EAAOmqB,GAAG,QAASy6B,GAEnBR,EAAKj6B,GAAG,MAAOy6B,GACfR,EAAKj6B,GAAG,QAASy6B,GAEjBR,EAAKr5B,KAAK,OAAQ/qB,GAGXokD,sCCxFT,IAAI5B,EAASjhF,EAAAA,MAAAA,OAGTsjF,EAAarC,EAAOqC,YAAc,SAAUC,GAE9C,QADAA,EAAW,GAAKA,IACIA,EAASt8E,eAC3B,IAAK,MAAM,IAAK,OAAO,IAAK,QAAQ,IAAK,QAAQ,IAAK,SAAS,IAAK,SAAS,IAAK,OAAO,IAAK,QAAQ,IAAK,UAAU,IAAK,WAAW,IAAK,MACxI,OAAO,EACT,QACE,OAAO,IA4Cb,SAASu8E,EAAcD,GAErB,IAAIE,EACJ,OAFAljF,KAAKgjF,SAXP,SAA2BG,GACzB,IAAIC,EA/BN,SAA4BD,GAC1B,IAAKA,EAAK,MAAO,OAEjB,IADA,IAAIE,IAEF,OAAQF,GACN,IAAK,OACL,IAAK,QACH,MAAO,OACT,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,MAAO,UACT,IAAK,SACL,IAAK,SACH,MAAO,SACT,IAAK,SACL,IAAK,QACL,IAAK,MACH,OAAOA,EACT,QACE,GAAIE,EAAS,OACbF,GAAO,GAAKA,GAAKz8E,cACjB28E,GAAU,GAQLC,CAAmBH,GAC9B,GAAoB,kBAATC,IAAsB1C,EAAOqC,aAAeA,IAAeA,EAAWI,IAAO,MAAM,IAAIrjF,MAAM,qBAAuBqjF,GAC/H,OAAOC,GAAQD,EAQCI,CAAkBP,GAE1BhjF,KAAKgjF,UACX,IAAK,UACHhjF,KAAKqmE,KAAOmd,EACZxjF,KAAKo7B,IAAMqoD,EACXP,EAAK,EACL,MACF,IAAK,OACHljF,KAAK0jF,SAAWC,EAChBT,EAAK,EACL,MACF,IAAK,SACHljF,KAAKqmE,KAAOud,EACZ5jF,KAAKo7B,IAAMyoD,EACXX,EAAK,EACL,MACF,QAGE,OAFAljF,KAAKk7E,MAAQ4I,OACb9jF,KAAKo7B,IAAM2oD,GAGf/jF,KAAKgkF,SAAW,EAChBhkF,KAAKikF,UAAY,EACjBjkF,KAAKkkF,SAAWxD,EAAOyD,YAAYjB,GAoCrC,SAASkB,EAAcC,GACrB,OAAIA,GAAQ,IAAa,EAAWA,GAAQ,IAAM,EAAa,EAAWA,GAAQ,IAAM,GAAa,EAAWA,GAAQ,IAAM,GAAa,EACpIA,GAAQ,IAAM,GAAQ,GAAK,EA2DpC,SAASV,EAAaW,GACpB,IAAI1/E,EAAI5E,KAAKikF,UAAYjkF,KAAKgkF,SAC1BttE,EAtBN,SAA6B6G,EAAM+mE,EAAK1/E,GACtC,GAAwB,OAAV,IAAT0/E,EAAI,IAEP,OADA/mE,EAAKymE,SAAW,EACT,SAET,GAAIzmE,EAAKymE,SAAW,GAAKM,EAAI3oF,OAAS,EAAG,CACvC,GAAwB,OAAV,IAAT2oF,EAAI,IAEP,OADA/mE,EAAKymE,SAAW,EACT,SAET,GAAIzmE,EAAKymE,SAAW,GAAKM,EAAI3oF,OAAS,GACZ,OAAV,IAAT2oF,EAAI,IAEP,OADA/mE,EAAKymE,SAAW,EACT,UASLO,CAAoBvkF,KAAMskF,GAClC,YAAUvkF,IAAN2W,EAAwBA,EACxB1W,KAAKgkF,UAAYM,EAAI3oF,QACvB2oF,EAAI3xD,KAAK3yB,KAAKkkF,SAAUt/E,EAAG,EAAG5E,KAAKgkF,UAC5BhkF,KAAKkkF,SAAS/lF,SAAS6B,KAAKgjF,SAAU,EAAGhjF,KAAKikF,aAEvDK,EAAI3xD,KAAK3yB,KAAKkkF,SAAUt/E,EAAG,EAAG0/E,EAAI3oF,aAClCqE,KAAKgkF,UAAYM,EAAI3oF,SA2BvB,SAAS6nF,EAAUc,EAAK1oF,GACtB,IAAK0oF,EAAI3oF,OAASC,GAAK,IAAM,EAAG,CAC9B,IAAI8a,EAAI4tE,EAAInmF,SAAS,UAAWvC,GAChC,GAAI8a,EAAG,CACL,IAAI3C,EAAI2C,EAAEs3D,WAAWt3D,EAAE/a,OAAS,GAChC,GAAIoY,GAAK,OAAUA,GAAK,MAKtB,OAJA/T,KAAKgkF,SAAW,EAChBhkF,KAAKikF,UAAY,EACjBjkF,KAAKkkF,SAAS,GAAKI,EAAIA,EAAI3oF,OAAS,GACpCqE,KAAKkkF,SAAS,GAAKI,EAAIA,EAAI3oF,OAAS,GAC7B+a,EAAElZ,MAAM,GAAI,GAGvB,OAAOkZ,EAKT,OAHA1W,KAAKgkF,SAAW,EAChBhkF,KAAKikF,UAAY,EACjBjkF,KAAKkkF,SAAS,GAAKI,EAAIA,EAAI3oF,OAAS,GAC7B2oF,EAAInmF,SAAS,UAAWvC,EAAG0oF,EAAI3oF,OAAS,GAKjD,SAAS8nF,EAASa,GAChB,IAAI5tE,EAAI4tE,GAAOA,EAAI3oF,OAASqE,KAAKk7E,MAAMoJ,GAAO,GAC9C,GAAItkF,KAAKgkF,SAAU,CACjB,IAAI5oD,EAAMp7B,KAAKikF,UAAYjkF,KAAKgkF,SAChC,OAAOttE,EAAI1W,KAAKkkF,SAAS/lF,SAAS,UAAW,EAAGi9B,GAElD,OAAO1kB,EAGT,SAASktE,EAAWU,EAAK1oF,GACvB,IAAIsC,GAAKomF,EAAI3oF,OAASC,GAAK,EAC3B,OAAU,IAANsC,EAAgBomF,EAAInmF,SAAS,SAAUvC,IAC3CoE,KAAKgkF,SAAW,EAAI9lF,EACpB8B,KAAKikF,UAAY,EACP,IAAN/lF,EACF8B,KAAKkkF,SAAS,GAAKI,EAAIA,EAAI3oF,OAAS,IAEpCqE,KAAKkkF,SAAS,GAAKI,EAAIA,EAAI3oF,OAAS,GACpCqE,KAAKkkF,SAAS,GAAKI,EAAIA,EAAI3oF,OAAS,IAE/B2oF,EAAInmF,SAAS,SAAUvC,EAAG0oF,EAAI3oF,OAASuC,IAGhD,SAAS2lF,EAAUS,GACjB,IAAI5tE,EAAI4tE,GAAOA,EAAI3oF,OAASqE,KAAKk7E,MAAMoJ,GAAO,GAC9C,OAAItkF,KAAKgkF,SAAiBttE,EAAI1W,KAAKkkF,SAAS/lF,SAAS,SAAU,EAAG,EAAI6B,KAAKgkF,UACpEttE,EAIT,SAASotE,EAAYQ,GACnB,OAAOA,EAAInmF,SAAS6B,KAAKgjF,UAG3B,SAASe,EAAUO,GACjB,OAAOA,GAAOA,EAAI3oF,OAASqE,KAAKk7E,MAAMoJ,GAAO,GAzN/C9oF,EAAQ,EAAgBynF,EA6BxBA,EAAchmF,UAAUi+E,MAAQ,SAAUoJ,GACxC,GAAmB,IAAfA,EAAI3oF,OAAc,MAAO,GAC7B,IAAI+a,EACA9a,EACJ,GAAIoE,KAAKgkF,SAAU,CAEjB,QAAUjkF,KADV2W,EAAI1W,KAAK0jF,SAASY,IACG,MAAO,GAC5B1oF,EAAIoE,KAAKgkF,SACThkF,KAAKgkF,SAAW,OAEhBpoF,EAAI,EAEN,OAAIA,EAAI0oF,EAAI3oF,OAAe+a,EAAIA,EAAI1W,KAAKqmE,KAAKie,EAAK1oF,GAAKoE,KAAKqmE,KAAKie,EAAK1oF,GAC/D8a,GAAK,IAGdusE,EAAchmF,UAAUm+B,IAwGxB,SAAiBkpD,GACf,IAAI5tE,EAAI4tE,GAAOA,EAAI3oF,OAASqE,KAAKk7E,MAAMoJ,GAAO,GAC9C,OAAItkF,KAAKgkF,SAAiBttE,EAAI,SACvBA,GAxGTusE,EAAchmF,UAAUopE,KA0FxB,SAAkBie,EAAK1oF,GACrB,IAAI4oF,EArEN,SAA6BjnE,EAAM+mE,EAAK1oF,GACtC,IAAI6oF,EAAIH,EAAI3oF,OAAS,EACrB,GAAI8oF,EAAI7oF,EAAG,OAAO,EAClB,IAAIsnF,EAAKkB,EAAcE,EAAIG,IAC3B,GAAIvB,GAAM,EAER,OADIA,EAAK,IAAG3lE,EAAKymE,SAAWd,EAAK,GAC1BA,EAET,KAAMuB,EAAI7oF,IAAa,IAARsnF,EAAW,OAAO,EAEjC,IADAA,EAAKkB,EAAcE,EAAIG,MACb,EAER,OADIvB,EAAK,IAAG3lE,EAAKymE,SAAWd,EAAK,GAC1BA,EAET,KAAMuB,EAAI7oF,IAAa,IAARsnF,EAAW,OAAO,EAEjC,IADAA,EAAKkB,EAAcE,EAAIG,MACb,EAIR,OAHIvB,EAAK,IACI,IAAPA,EAAUA,EAAK,EAAO3lE,EAAKymE,SAAWd,EAAK,GAE1CA,EAET,OAAO,EA+CKwB,CAAoB1kF,KAAMskF,EAAK1oF,GAC3C,IAAKoE,KAAKgkF,SAAU,OAAOM,EAAInmF,SAAS,OAAQvC,GAChDoE,KAAKikF,UAAYO,EACjB,IAAIppD,EAAMkpD,EAAI3oF,QAAU6oF,EAAQxkF,KAAKgkF,UAErC,OADAM,EAAI3xD,KAAK3yB,KAAKkkF,SAAU,EAAG9oD,GACpBkpD,EAAInmF,SAAS,OAAQvC,EAAGw/B,IA7FjC6nD,EAAchmF,UAAUymF,SAAW,SAAUY,GAC3C,GAAItkF,KAAKgkF,UAAYM,EAAI3oF,OAEvB,OADA2oF,EAAI3xD,KAAK3yB,KAAKkkF,SAAUlkF,KAAKikF,UAAYjkF,KAAKgkF,SAAU,EAAGhkF,KAAKgkF,UACzDhkF,KAAKkkF,SAAS/lF,SAAS6B,KAAKgjF,SAAU,EAAGhjF,KAAKikF,WAEvDK,EAAI3xD,KAAK3yB,KAAKkkF,SAAUlkF,KAAKikF,UAAYjkF,KAAKgkF,SAAU,EAAGM,EAAI3oF,QAC/DqE,KAAKgkF,UAAYM,EAAI3oF,8BCpIvB,IAAI2jF,EAAS7/E,EAAQ,MACjBihF,EAASpB,EAAOoB,OAGpB,SAASiE,EAAWt0C,EAAKu0C,GACvB,IAAK,IAAI9nF,KAAOuzC,EACdu0C,EAAI9nF,GAAOuzC,EAAIvzC,GAWnB,SAAS+nF,EAAYpwD,EAAKqwD,EAAkBnpF,GAC1C,OAAO+kF,EAAOjsD,EAAKqwD,EAAkBnpF,GATnC+kF,EAAOrjF,MAAQqjF,EAAOqE,OAASrE,EAAOyD,aAAezD,EAAOsE,gBAC9DzpF,EAAOC,QAAU8jF,GAGjBqF,EAAUrF,EAAQ9jF,GAClBA,EAAQklF,OAASmE,GAOnBA,EAAW5nF,UAAYL,OAAOioB,OAAO67D,EAAOzjF,WAG5C0nF,EAAUjE,EAAQmE,GAElBA,EAAWxnF,KAAO,SAAUo3B,EAAKqwD,EAAkBnpF,GACjD,GAAmB,kBAAR84B,EACT,MAAM,IAAIr4B,UAAU,iCAEtB,OAAOskF,EAAOjsD,EAAKqwD,EAAkBnpF,IAGvCkpF,EAAWE,MAAQ,SAAU95C,EAAMg6C,EAAMjC,GACvC,GAAoB,kBAAT/3C,EACT,MAAM,IAAI7uC,UAAU,6BAEtB,IAAIkoF,EAAM5D,EAAOz1C,GAUjB,YATalrC,IAATklF,EACsB,kBAAbjC,EACTsB,EAAIW,KAAKA,EAAMjC,GAEfsB,EAAIW,KAAKA,GAGXX,EAAIW,KAAK,GAEJX,GAGTO,EAAWV,YAAc,SAAUl5C,GACjC,GAAoB,kBAATA,EACT,MAAM,IAAI7uC,UAAU,6BAEtB,OAAOskF,EAAOz1C,IAGhB45C,EAAWG,gBAAkB,SAAU/5C,GACrC,GAAoB,kBAATA,EACT,MAAM,IAAI7uC,UAAU,6BAEtB,OAAOkjF,EAAO4F,WAAWj6C,yBC9D3B,WACE,aACAzvC,EAAQ2pF,SAAW,SAASp+E,GAC1B,MAAe,WAAXA,EAAI,GACCA,EAAIoM,UAAU,GAEdpM,KAIV3I,KAAK4B,6BCVR,WACE,aACA,IAAIolF,EAASC,EAAUC,EAAaC,EAAeC,EACjDC,EAAU,GAAGr4E,eAEfg4E,EAAU3lF,EAAQ,MAElB4lF,EAAW5lF,EAAAA,MAAAA,SAEX8lF,EAAgB,SAASjgE,GACvB,MAAwB,kBAAVA,IAAuBA,EAAMxT,QAAQ,MAAQ,GAAKwT,EAAMxT,QAAQ,MAAQ,GAAKwT,EAAMxT,QAAQ,MAAQ,IAGnH0zE,EAAY,SAASlgE,GACnB,MAAO,YAAeggE,EAAYhgE,GAAU,OAG9CggE,EAAc,SAAShgE,GACrB,OAAOA,EAAM5V,QAAQ,MAAO,oBAG9BlU,EAAQkqF,QAAW,WACjB,SAASA,EAAQ15D,GACf,IAAIlvB,EAAK6oF,EAAKhoF,EAGd,IAAKb,KAFLkD,KAAKi+D,QAAU,GACf0nB,EAAMN,EAAS,IAERI,EAAQrnF,KAAKunF,EAAK7oF,KACvBa,EAAQgoF,EAAI7oF,GACZkD,KAAKi+D,QAAQnhE,GAAOa,GAEtB,IAAKb,KAAOkvB,EACLy5D,EAAQrnF,KAAK4tB,EAAMlvB,KACxBa,EAAQquB,EAAKlvB,GACbkD,KAAKi+D,QAAQnhE,GAAOa,GAuFxB,OAnFA+nF,EAAQzoF,UAAU2oF,YAAc,SAASC,GACvC,IAAIC,EAASC,EAASC,EAAQC,EAAaC,EASxBrlE,EAsEnB,OA9EAilE,EAAU9lF,KAAKi+D,QAAQ6nB,QACvBC,EAAU/lF,KAAKi+D,QAAQ8nB,QACc,IAAhCnpF,OAAO6F,KAAKojF,GAASlqF,QAAkBqE,KAAKi+D,QAAQioB,WAAab,EAAS,IAAOa,SAEpFL,EAAUA,EADVK,EAAWtpF,OAAO6F,KAAKojF,GAAS,IAGhCK,EAAWlmF,KAAKi+D,QAAQioB,SAEPrlE,EAiEhB7gB,KAjEHgmF,EACS,SAASjkE,EAASjgB,GACvB,IAAIqkF,EAAMhiD,EAAO7e,EAAO8qB,EAAOtzC,EAAKa,EACpC,GAAmB,kBAARmE,EACL+e,EAAMo9C,QAAQ6e,OAASyI,EAAczjF,GACvCigB,EAAQxkB,IAAIioF,EAAU1jF,IAEtBigB,EAAQqkE,IAAItkF,QAET,GAAIhG,MAAMG,QAAQ6F,IACvB,IAAKsuC,KAAStuC,EACZ,GAAK2jF,EAAQrnF,KAAK0D,EAAKsuC,GAEvB,IAAKtzC,KADLqnC,EAAQriC,EAAIsuC,GAEV9qB,EAAQ6e,EAAMrnC,GACdilB,EAAUikE,EAAOjkE,EAAQskE,IAAIvpF,GAAMwoB,GAAOghE,UAI9C,IAAKxpF,KAAOgF,EACV,GAAK2jF,EAAQrnF,KAAK0D,EAAKhF,GAEvB,GADAqnC,EAAQriC,EAAIhF,GACRA,IAAQgpF,GACV,GAAqB,kBAAV3hD,EACT,IAAKgiD,KAAQhiD,EACXxmC,EAAQwmC,EAAMgiD,GACdpkE,EAAUA,EAAQwkE,IAAIJ,EAAMxoF,QAG3B,GAAIb,IAAQipF,EAEfhkE,EADElB,EAAMo9C,QAAQ6e,OAASyI,EAAcphD,GAC7BpiB,EAAQxkB,IAAIioF,EAAUrhD,IAEtBpiB,EAAQqkE,IAAIjiD,QAEnB,GAAIroC,MAAMG,QAAQkoC,GACvB,IAAKiM,KAASjM,EACPshD,EAAQrnF,KAAK+lC,EAAOiM,KAIrBruB,EAFiB,kBADrBuD,EAAQ6e,EAAMiM,IAERvvB,EAAMo9C,QAAQ6e,OAASyI,EAAcjgE,GAC7BvD,EAAQskE,IAAIvpF,GAAKS,IAAIioF,EAAUlgE,IAAQghE,KAEvCvkE,EAAQskE,IAAIvpF,EAAKwoB,GAAOghE,KAG1BN,EAAOjkE,EAAQskE,IAAIvpF,GAAMwoB,GAAOghE,UAGpB,kBAAVniD,EAChBpiB,EAAUikE,EAAOjkE,EAAQskE,IAAIvpF,GAAMqnC,GAAOmiD,KAErB,kBAAVniD,GAAsBtjB,EAAMo9C,QAAQ6e,OAASyI,EAAcphD,GACpEpiB,EAAUA,EAAQskE,IAAIvpF,GAAKS,IAAIioF,EAAUrhD,IAAQmiD,MAEpC,MAATniD,IACFA,EAAQ,IAEVpiB,EAAUA,EAAQskE,IAAIvpF,EAAKqnC,EAAMhmC,YAAYmoF,MAKrD,OAAOvkE,GAGXkkE,EAAcb,EAAQvgE,OAAOqhE,EAAUlmF,KAAKi+D,QAAQuoB,OAAQxmF,KAAKi+D,QAAQif,QAAS,CAChFuJ,SAAUzmF,KAAKi+D,QAAQwoB,SACvBC,oBAAqB1mF,KAAKi+D,QAAQyoB,sBAE7BV,EAAOC,EAAaJ,GAASzqD,IAAIp7B,KAAKi+D,QAAQ0oB,aAGhDjB,EApGU,KAwGlBtnF,KAAK4B,2BC7HR,WACExE,EAAQ6pF,SAAW,CACjB,GAAO,CACLuB,iBAAiB,EACjB38E,MAAM,EACN09D,WAAW,EACXkf,eAAe,EACff,QAAS,IACTC,QAAS,IACTe,eAAe,EACfC,aAAa,EACbC,YAAY,EACZC,cAAc,EACdC,UAAW,KACXvM,OAAO,EACPwM,kBAAkB,EAClBC,SAAU,KACVC,iBAAiB,EACjBC,mBAAmB,EACnBr7D,OAAO,EACP8uB,QAAQ,EACR3uB,mBAAoB,KACpBm7D,oBAAqB,KACrBr7D,kBAAmB,KACnBs7D,gBAAiB,KACjBC,SAAU,IAEZ,GAAO,CACLb,iBAAiB,EACjB38E,MAAM,EACN09D,WAAW,EACXkf,eAAe,EACff,QAAS,IACTC,QAAS,IACTe,eAAe,EACfC,aAAa,EACbC,YAAY,EACZC,cAAc,EACdC,UAAW,KACXvM,OAAO,EACPwM,kBAAkB,EAClBO,uBAAuB,EACvBN,SAAU,KACVC,iBAAiB,EACjBC,mBAAmB,EACnBr7D,OAAO,EACP8uB,QAAQ,EACR3uB,mBAAoB,KACpBm7D,oBAAqB,KACrBr7D,kBAAmB,KACnBs7D,gBAAiB,KACjBtB,SAAU,OACVM,OAAQ,CACN,QAAW,MACX,SAAY,QACZ,YAAc,GAEhBtJ,QAAS,KACTyJ,WAAY,CACV,QAAU,EACV,OAAU,KACV,QAAW,MAEbF,UAAU,EACVkB,UAAW,IACXF,SAAU,GACV3K,OAAO,MAIV1+E,KAAK4B,6BCtER,WACE,aACA,IAAI4nF,EAAKvC,EAAUv6B,EAAQse,EAASye,EAAa7gE,EAAYmyD,EAAK2O,EAChEzlF,EAAO,SAASmmD,EAAI83B,GAAK,OAAO,WAAY,OAAO93B,EAAG7lD,MAAM29E,EAAIjjE,aAEhEooE,EAAU,GAAGr4E,eAEf+rE,EAAM15E,EAAQ,KAEdqrD,EAASrrD,EAAQ,MAEjBmoF,EAAMnoF,EAAQ,MAEdunB,EAAavnB,EAAQ,MAErBqoF,EAAeroF,EAAAA,MAAAA,aAEf4lF,EAAW5lF,EAAAA,MAAAA,SAEX2pE,EAAU,SAAS5Y,GACjB,MAAwB,kBAAVA,GAAgC,MAATA,GAAgD,IAA9B5zD,OAAO6F,KAAK+tD,GAAO70D,QAG5EksF,EAAc,SAAS7gE,EAAYjkB,EAAMjG,GACvC,IAAIlB,EAAGF,EACP,IAAKE,EAAI,EAAGF,EAAMsrB,EAAWrrB,OAAQC,EAAIF,EAAKE,IAE5CmH,GADAglF,EAAU/gE,EAAWprB,IACNmH,EAAMjG,GAEvB,OAAOiG,GAGTvH,EAAQwsF,OAAU,SAASpjE,GAGzB,SAASojE,EAAOh8D,GAMd,IAAIlvB,EAAK6oF,EAAKhoF,EACd,GANAqC,KAAKioF,mBAAqB5lF,EAAKrC,KAAKioF,mBAAoBjoF,MACxDA,KAAKkL,YAAc7I,EAAKrC,KAAKkL,YAAalL,MAC1CA,KAAKkoF,MAAQ7lF,EAAKrC,KAAKkoF,MAAOloF,MAC9BA,KAAKmoF,aAAe9lF,EAAKrC,KAAKmoF,aAAcnoF,MAC5CA,KAAKooF,aAAe/lF,EAAKrC,KAAKooF,aAAcpoF,QAEtCA,gBAAgBxE,EAAQwsF,QAC5B,OAAO,IAAIxsF,EAAQwsF,OAAOh8D,GAI5B,IAAKlvB,KAFLkD,KAAKi+D,QAAU,GACf0nB,EAAMN,EAAS,IAERI,EAAQrnF,KAAKunF,EAAK7oF,KACvBa,EAAQgoF,EAAI7oF,GACZkD,KAAKi+D,QAAQnhE,GAAOa,GAEtB,IAAKb,KAAOkvB,EACLy5D,EAAQrnF,KAAK4tB,EAAMlvB,KACxBa,EAAQquB,EAAKlvB,GACbkD,KAAKi+D,QAAQnhE,GAAOa,GAElBqC,KAAKi+D,QAAQ0c,QACf36E,KAAKi+D,QAAQoqB,SAAWroF,KAAKi+D,QAAQ6nB,QAAU,MAE7C9lF,KAAKi+D,QAAQ4oB,gBACV7mF,KAAKi+D,QAAQ/xC,oBAChBlsB,KAAKi+D,QAAQ/xC,kBAAoB,IAEnClsB,KAAKi+D,QAAQ/xC,kBAAkB9gB,QAAQ4b,EAAW2gD,YAEpD3nE,KAAKkoF,QAyRP,OAvVS,SAAS/jD,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UA6BhQurF,CAAOR,EAAQpjE,GAoCfojE,EAAO/qF,UAAUmrF,aAAe,WAC9B,IAAIjN,EAAOvwE,EACX,IACE,OAAI5K,KAAKyoF,UAAU9sF,QAAUqE,KAAKi+D,QAAQ0pB,WACxCxM,EAAQn7E,KAAKyoF,UACbzoF,KAAKyoF,UAAY,GACjBzoF,KAAK0oF,UAAY1oF,KAAK0oF,UAAUxN,MAAMC,GAC/Bn7E,KAAK0oF,UAAU1I,UAEtB7E,EAAQn7E,KAAKyoF,UAAU94E,OAAO,EAAG3P,KAAKi+D,QAAQ0pB,WAC9C3nF,KAAKyoF,UAAYzoF,KAAKyoF,UAAU94E,OAAO3P,KAAKi+D,QAAQ0pB,UAAW3nF,KAAKyoF,UAAU9sF,QAC9EqE,KAAK0oF,UAAY1oF,KAAK0oF,UAAUxN,MAAMC,GAC/B2M,EAAa9nF,KAAKooF,eAE3B,MAAOO,GAEP,GADA/9E,EAAM+9E,GACD3oF,KAAK0oF,UAAUE,UAElB,OADA5oF,KAAK0oF,UAAUE,WAAY,EACpB5oF,KAAKipD,KAAKr+C,KAKvBo9E,EAAO/qF,UAAUkrF,aAAe,SAASrmF,EAAKhF,EAAK+rF,GACjD,OAAM/rF,KAAOgF,GAOLA,EAAIhF,aAAgBhB,QACxBgG,EAAIhF,GAAO,CAACgF,EAAIhF,KAEXgF,EAAIhF,GAAKwD,KAAKuoF,IAThB7oF,KAAKi+D,QAAQ6oB,cAGThlF,EAAIhF,GAAO,CAAC+rF,GAFZ/mF,EAAIhF,GAAO+rF,GAYxBb,EAAO/qF,UAAUirF,MAAQ,WACvB,IAAIpC,EAASC,EAAS+C,EAAQC,EAQKloE,EA0KnC,OAjLA7gB,KAAK6oD,qBACL7oD,KAAK0oF,UAAYvP,EAAIC,OAAOp5E,KAAKi+D,QAAQljB,OAAQ,CAC/C9wC,MAAM,EACN09D,WAAW,EACXgT,MAAO36E,KAAKi+D,QAAQ0c,QAEtB36E,KAAK0oF,UAAUE,WAAY,EAC3B5oF,KAAK0oF,UAAUlI,SAAoB3/D,EAQhC7gB,KAPM,SAASyhB,GAEd,GADAZ,EAAM6nE,UAAU3I,UACXl/D,EAAM6nE,UAAUE,UAEnB,OADA/nE,EAAM6nE,UAAUE,WAAY,EACrB/nE,EAAMooC,KAAK,QAASxnC,KAIjCzhB,KAAK0oF,UAAUnI,MAAS,SAAS1/D,GAC/B,OAAO,WACL,IAAKA,EAAM6nE,UAAUM,MAEnB,OADAnoE,EAAM6nE,UAAUM,OAAQ,EACjBnoE,EAAMooC,KAAK,MAAOpoC,EAAMooE,eAJb,CAOrBjpF,MACHA,KAAK0oF,UAAUM,OAAQ,EACvBhpF,KAAKkpF,iBAAmBlpF,KAAKi+D,QAAQ2oB,gBACrC5mF,KAAKipF,aAAe,KACpBF,EAAQ,GACRjD,EAAU9lF,KAAKi+D,QAAQ6nB,QACvBC,EAAU/lF,KAAKi+D,QAAQ8nB,QACvB/lF,KAAK0oF,UAAUS,UAAa,SAAStoE,GACnC,OAAO,SAASuoE,GACd,IAAItsF,EAAK+rF,EAAU/mF,EAAKunF,EAAc1D,EAGtC,IAFA7jF,EAAM,IACFikF,GAAW,IACVllE,EAAMo9C,QAAQ8oB,YAEjB,IAAKjqF,KADL6oF,EAAMyD,EAAKxK,WAEJ6G,EAAQrnF,KAAKunF,EAAK7oF,KACjBgpF,KAAWhkF,GAAS+e,EAAMo9C,QAAQ+oB,aACtCllF,EAAIgkF,GAAW,IAEjB+C,EAAWhoE,EAAMo9C,QAAQspB,oBAAsBM,EAAYhnE,EAAMo9C,QAAQspB,oBAAqB6B,EAAKxK,WAAW9hF,GAAMA,GAAOssF,EAAKxK,WAAW9hF,GAC3IusF,EAAexoE,EAAMo9C,QAAQ7xC,mBAAqBy7D,EAAYhnE,EAAMo9C,QAAQ7xC,mBAAoBtvB,GAAOA,EACnG+jB,EAAMo9C,QAAQ+oB,WAChBnmE,EAAMsnE,aAAarmF,EAAKunF,EAAcR,GAEtC/mF,EAAIgkF,GAASuD,GAAgBR,GAWnC,OAPA/mF,EAAI,SAAW+e,EAAMo9C,QAAQ/xC,kBAAoB27D,EAAYhnE,EAAMo9C,QAAQ/xC,kBAAmBk9D,EAAK9qF,MAAQ8qF,EAAK9qF,KAC5GuiB,EAAMo9C,QAAQ0c,QAChB74E,EAAI+e,EAAMo9C,QAAQoqB,UAAY,CAC5B7G,IAAK4H,EAAK5H,IACV/f,MAAO2nB,EAAK3nB,QAGTsnB,EAAMzoF,KAAKwB,IA5BM,CA8BzB9B,MACHA,KAAK0oF,UAAUY,WAAc,SAASzoE,GACpC,OAAO,WACL,IAAIi8D,EAAOyM,EAAUzsF,EAAKssF,EAAMI,EAAU1nF,EAAK2nF,EAAUxW,EAAK7xE,EAAGsoF,EAiDjE,GAhDA5nF,EAAMinF,EAAM1wE,MACZmxE,EAAW1nF,EAAI,SACV+e,EAAMo9C,QAAQkpB,kBAAqBtmE,EAAMo9C,QAAQypB,8BAC7C5lF,EAAI,UAEK,IAAdA,EAAIg7E,QACNA,EAAQh7E,EAAIg7E,aACLh7E,EAAIg7E,OAEb17E,EAAI2nF,EAAMA,EAAMptF,OAAS,GACrBmG,EAAIikF,GAASj4E,MAAM,WAAagvE,GAClCyM,EAAWznF,EAAIikF,UACRjkF,EAAIikF,KAEPllE,EAAMo9C,QAAQh0D,OAChBnI,EAAIikF,GAAWjkF,EAAIikF,GAAS97E,QAE1B4W,EAAMo9C,QAAQ0J,YAChB7lE,EAAIikF,GAAWjkF,EAAIikF,GAASr2E,QAAQ,UAAW,KAAKzF,QAEtDnI,EAAIikF,GAAWllE,EAAMo9C,QAAQupB,gBAAkBK,EAAYhnE,EAAMo9C,QAAQupB,gBAAiB1lF,EAAIikF,GAAUyD,GAAY1nF,EAAIikF,GACxF,IAA5BnpF,OAAO6F,KAAKX,GAAKnG,QAAgBoqF,KAAWjkF,IAAQ+e,EAAMqoE,mBAC5DpnF,EAAMA,EAAIikF,KAGV3c,EAAQtnE,KACVA,EAAiC,KAA3B+e,EAAMo9C,QAAQwpB,SAAkB5mE,EAAMo9C,QAAQwpB,SAAW8B,GAElC,MAA3B1oE,EAAMo9C,QAAQipB,YAChBwC,EAAQ,IAAQ,WACd,IAAI9tF,EAAGF,EAAKgxB,EAEZ,IADAA,EAAU,GACL9wB,EAAI,EAAGF,EAAMqtF,EAAMptF,OAAQC,EAAIF,EAAKE,IACvCwtF,EAAOL,EAAMntF,GACb8wB,EAAQpsB,KAAK8oF,EAAK,UAEpB,OAAO18D,EAPO,GAQV7pB,OAAO2mF,GAAU1oF,KAAK,KAC5B,WACE,IAAI8J,EACJ,IACS9I,EAAM+e,EAAMo9C,QAAQipB,UAAUwC,EAAOtoF,GAAKA,EAAEooF,GAAW1nF,GAC9D,MAAO6mF,GAEP,OADA/9E,EAAM+9E,EACC9nE,EAAMooC,KAAK,QAASr+C,IAN/B,IAUEiW,EAAMo9C,QAAQkpB,mBAAqBtmE,EAAMo9C,QAAQ+oB,YAA6B,kBAARllF,EACxE,GAAK+e,EAAMo9C,QAAQypB,uBAcZ,GAAItmF,EAAG,CAGZ,IAAKtE,KAFLsE,EAAEyf,EAAMo9C,QAAQmpB,UAAYhmF,EAAEyf,EAAMo9C,QAAQmpB,WAAa,GACzDqC,EAAW,GACC3nF,EACL2jF,EAAQrnF,KAAK0D,EAAKhF,KACvB2sF,EAAS3sF,GAAOgF,EAAIhF,IAEtBsE,EAAEyf,EAAMo9C,QAAQmpB,UAAU9mF,KAAKmpF,UACxB3nF,EAAI,SACqB,IAA5BlF,OAAO6F,KAAKX,GAAKnG,QAAgBoqF,KAAWjkF,IAAQ+e,EAAMqoE,mBAC5DpnF,EAAMA,EAAIikF,UAvBZqD,EAAO,GACHvoE,EAAMo9C,QAAQ6nB,WAAWhkF,IAC3BsnF,EAAKvoE,EAAMo9C,QAAQ6nB,SAAWhkF,EAAI+e,EAAMo9C,QAAQ6nB,gBACzChkF,EAAI+e,EAAMo9C,QAAQ6nB,WAEtBjlE,EAAMo9C,QAAQopB,iBAAmBxmE,EAAMo9C,QAAQ8nB,WAAWjkF,IAC7DsnF,EAAKvoE,EAAMo9C,QAAQ8nB,SAAWjkF,EAAI+e,EAAMo9C,QAAQ8nB,gBACzCjkF,EAAI+e,EAAMo9C,QAAQ8nB,UAEvBnpF,OAAO0Q,oBAAoBxL,GAAKnG,OAAS,IAC3CytF,EAAKvoE,EAAMo9C,QAAQmpB,UAAYtlF,GAEjCA,EAAMsnF,EAeV,OAAIL,EAAMptF,OAAS,EACVklB,EAAMsnE,aAAa/mF,EAAGooF,EAAU1nF,IAEnC+e,EAAMo9C,QAAQgpB,eAChBhU,EAAMnxE,GACNA,EAAM,IACF0nF,GAAYvW,GAElBpyD,EAAMooE,aAAennF,EACrB+e,EAAM6nE,UAAUM,OAAQ,EACjBnoE,EAAMooC,KAAK,MAAOpoC,EAAMooE,gBA1FR,CA6F1BjpF,MACH8oF,EAAU,SAASjoE,GACjB,OAAO,SAASwlD,GACd,IAAIsjB,EAAWvoF,EAEf,GADAA,EAAI2nF,EAAMA,EAAMptF,OAAS,GAcvB,OAZAyF,EAAE2kF,IAAY1f,EACVxlD,EAAMo9C,QAAQkpB,kBAAoBtmE,EAAMo9C,QAAQypB,uBAAyB7mE,EAAMo9C,QAAQopB,kBAAoBxmE,EAAMo9C,QAAQqpB,mBAAyD,KAApCjhB,EAAK32D,QAAQ,OAAQ,IAAIzF,UACzK7I,EAAEyf,EAAMo9C,QAAQmpB,UAAYhmF,EAAEyf,EAAMo9C,QAAQmpB,WAAa,IACzDuC,EAAY,CACV,QAAS,aAED5D,GAAW1f,EACjBxlD,EAAMo9C,QAAQ0J,YAChBgiB,EAAU5D,GAAW4D,EAAU5D,GAASr2E,QAAQ,UAAW,KAAKzF,QAElE7I,EAAEyf,EAAMo9C,QAAQmpB,UAAU9mF,KAAKqpF,IAE1BvoF,GAjBH,CAoBPpB,MACHA,KAAK0oF,UAAUI,OAASA,EACjB9oF,KAAK0oF,UAAUkB,QACb,SAASvjB,GACd,IAAIjlE,EAEJ,GADAA,EAAI0nF,EAAOziB,GAET,OAAOjlE,EAAE07E,OAAQ,IAMzBkL,EAAO/qF,UAAUiO,YAAc,SAASnE,EAAKgiD,GAC3C,IAAIn+C,EACO,MAANm+C,GAA6B,oBAAPA,IACzB/oD,KAAKqoD,GAAG,OAAO,SAASllD,GAEtB,OADAnD,KAAKkoF,QACEn/B,EAAG,KAAM5lD,MAElBnD,KAAKqoD,GAAG,SAAS,SAASz9C,GAExB,OADA5K,KAAKkoF,QACEn/B,EAAGn+C,OAGd,IAEE,MAAmB,MADnB7D,EAAMA,EAAI5I,YACF8L,QACNjK,KAAKipD,KAAK,MAAO,OACV,IAETliD,EAAM6gF,EAAIzC,SAASp+E,GACf/G,KAAKi+D,QAAQhyC,OACfjsB,KAAKyoF,UAAY1hF,EACjB+gF,EAAa9nF,KAAKooF,cACXpoF,KAAK0oF,WAEP1oF,KAAK0oF,UAAUxN,MAAMn0E,GAAKi5E,SACjC,MAAO2I,GAEP,GADA/9E,EAAM+9E,GACA3oF,KAAK0oF,UAAUE,YAAa5oF,KAAK0oF,UAAUM,MAE/C,OADAhpF,KAAKipD,KAAK,QAASr+C,GACZ5K,KAAK0oF,UAAUE,WAAY,EAC7B,GAAI5oF,KAAK0oF,UAAUM,MACxB,MAAMp+E,IAKZo9E,EAAO/qF,UAAUgrF,mBAAqB,SAASlhF,GAC7C,OAAO,IAAI+iD,SAAkBjpC,EAU1B7gB,KATM,SAASuvC,EAASwa,GACvB,OAAOlpC,EAAM3V,YAAYnE,GAAK,SAAS6D,EAAKjN,GAC1C,OAAIiN,EACKm/C,EAAOn/C,GAEP2kC,EAAQ5xC,SANH,IAASkjB,GAaxBmnE,EA3TS,CA6Tfl9B,GAEHtvD,EAAQ0P,YAAc,SAASnE,EAAKQ,EAAG0T,GACrC,IAAI8tC,EAAIkV,EAeR,OAdS,MAALhjD,GACe,oBAANA,IACT8tC,EAAK9tC,GAEU,kBAAN1T,IACT02D,EAAU12D,KAGK,oBAANA,IACTwhD,EAAKxhD,GAEP02D,EAAU,IAEH,IAAIziE,EAAQwsF,OAAO/pB,GACd/yD,YAAYnE,EAAKgiD,IAGjCvtD,EAAQysF,mBAAqB,SAASlhF,EAAKQ,GACzC,IAAI02D,EAKJ,MAJiB,kBAAN12D,IACT02D,EAAU12D,GAEH,IAAI/L,EAAQwsF,OAAO/pB,GACdgqB,mBAAmBlhF,MAGlC3I,KAAK4B,2BC3XR,WACE,aACA,IAAI6pF,EAEJA,EAAc,IAAIjzE,OAAO,iBAEzBpb,EAAQmsE,UAAY,SAAS5gE,GAC3B,OAAOA,EAAIL,eAGblL,EAAQsuF,mBAAqB,SAAS/iF,GACpC,OAAOA,EAAIlG,OAAO,GAAG6F,cAAgBK,EAAIvJ,MAAM,IAGjDhC,EAAQ2wB,YAAc,SAASplB,GAC7B,OAAOA,EAAI2I,QAAQm6E,EAAa,KAGlCruF,EAAQuuF,aAAe,SAAShjF,GAI9B,OAHKD,MAAMC,KACTA,EAAMA,EAAM,IAAM,EAAIwJ,SAASxJ,EAAK,IAAMpD,WAAWoD,IAEhDA,GAGTvL,EAAQwuF,cAAgB,SAASjjF,GAI/B,MAHI,oBAAoBxI,KAAKwI,KAC3BA,EAA4B,SAAtBA,EAAIL,eAELK,KAGR3I,KAAK4B,6BChCR,WACE,aACA,IAAIolF,EAASC,EAAUjM,EAAQpyD,EAE7By+D,EAAU,GAAGr4E,eAEfi4E,EAAW5lF,EAAQ,MAEnB2lF,EAAU3lF,EAAQ,MAElB25E,EAAS35E,EAAQ,MAEjBunB,EAAavnB,EAAQ,MAErBjE,EAAQ6pF,SAAWA,EAASA,SAE5B7pF,EAAQwrB,WAAaA,EAErBxrB,EAAQyuF,gBAAmB,SAASrlE,GAGlC,SAASqlE,EAAgBp/E,GACvB7K,KAAK6K,QAAUA,EAGjB,OAtBS,SAASs5B,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAgBhQurF,CAAOyB,EAQNnqF,OAFMmqF,EAPkB,GAW3BzuF,EAAQkqF,QAAUN,EAAQM,QAE1BlqF,EAAQwsF,OAAS5O,EAAO4O,OAExBxsF,EAAQ0P,YAAckuE,EAAOluE,YAE7B1P,EAAQysF,mBAAqB7O,EAAO6O,qBAEnC7pF,KAAK4B,yBCrCR,WACEzE,EAAOC,QAAU,CACf0uF,aAAc,EACdC,UAAW,EACXC,UAAW,EACX32C,SAAU,EACV42C,YAAa,GACbC,uBAAwB,MAGzBlsF,KAAK4B,yBCVR,WACEzE,EAAOC,QAAU,CACfmuC,QAAS,EACT4gD,UAAW,EACXC,KAAM,EACNC,MAAO,EACPC,gBAAiB,EACjBC,kBAAmB,EACnBC,sBAAuB,EACvBC,QAAS,EACTC,SAAU,EACVC,QAAS,GACTC,iBAAkB,GAClBC,oBAAqB,GACrBC,YAAa,IACbC,IAAK,IACLC,qBAAsB,IACtBC,mBAAoB,IACpBC,MAAO,OAGRltF,KAAK4B,yBCrBR,WACE,IAAIwN,EAAQ3J,EAAU5H,EAASmtE,EAASmiB,EAAYC,EAAUC,EAC5DjuF,EAAQ,GAAGA,MACXioF,EAAU,GAAGr4E,eAEfI,EAAS,WACP,IAAI5R,EAAGkB,EAAKpB,EAAKwiC,EAAQyY,EAASr6C,EAElC,GADAA,EAAS+gB,UAAU,GAAIs5B,EAAU,GAAKt5B,UAAU1hB,OAAS6B,EAAMY,KAAKif,UAAW,GAAK,GAChFkuE,EAAW3uF,OAAO4Q,QACpB5Q,OAAO4Q,OAAO7K,MAAM,KAAM0a,gBAE1B,IAAKzhB,EAAI,EAAGF,EAAMi7C,EAAQh7C,OAAQC,EAAIF,EAAKE,IAEzC,GAAc,OADdsiC,EAASyY,EAAQ/6C,IAEf,IAAKkB,KAAOohC,EACLunD,EAAQrnF,KAAK8/B,EAAQphC,KAC1BR,EAAOQ,GAAOohC,EAAOphC,IAK7B,OAAOR,GAGTivF,EAAa,SAASh+E,GACpB,QAASA,GAA+C,sBAAxC3Q,OAAOK,UAAUkB,SAASC,KAAKmP,IAGjDi+E,EAAW,SAASj+E,GAClB,IAAIo4E,EACJ,QAASp4E,IAA+B,cAAtBo4E,SAAap4E,IAA+B,WAARo4E,IAGxD1pF,EAAU,SAASsR,GACjB,OAAIg+E,EAAWzvF,MAAMG,SACZH,MAAMG,QAAQsR,GAE0B,mBAAxC3Q,OAAOK,UAAUkB,SAASC,KAAKmP,IAI1C67D,EAAU,SAAS77D,GACjB,IAAIzQ,EACJ,GAAIb,EAAQsR,GACV,OAAQA,EAAI5R,OAEZ,IAAKmB,KAAOyQ,EACV,GAAKk4E,EAAQrnF,KAAKmP,EAAKzQ,GACvB,OAAO,EAET,OAAO,GAIX2uF,EAAgB,SAASl+E,GACvB,IAAI+6E,EAAMzd,EACV,OAAO2gB,EAASj+E,KAASs9D,EAAQjuE,OAAO8gB,eAAenQ,MAAU+6E,EAAOzd,EAAMxsE,cAAiC,oBAATiqF,GAAyBA,aAAgBA,GAAUhvC,SAASr8C,UAAUkB,SAASC,KAAKkqF,KAAUhvC,SAASr8C,UAAUkB,SAASC,KAAKxB,SAGvOiH,EAAW,SAAS/B,GAClB,OAAIypF,EAAWzpF,EAAIib,SACVjb,EAAIib,UAEJjb,GAIXvG,EAAOC,QAAQgS,OAASA,EAExBjS,EAAOC,QAAQ+vF,WAAaA,EAE5BhwF,EAAOC,QAAQgwF,SAAWA,EAE1BjwF,EAAOC,QAAQS,QAAUA,EAEzBV,EAAOC,QAAQ4tE,QAAUA,EAEzB7tE,EAAOC,QAAQiwF,cAAgBA,EAE/BlwF,EAAOC,QAAQqI,SAAWA,IAEzBzF,KAAK4B,yBCjFR,WACEzE,EAAOC,QAAU,CACfkwF,KAAM,EACNC,QAAS,EACTC,UAAW,EACXC,SAAU,KAGXztF,KAAK4B,6BCRR,WACE,IAAI8rF,EAEJA,EAAWrsF,EAAQ,MAETA,EAAQ,MAElBlE,EAAOC,QAA0B,WAC/B,SAASuwF,EAAahuC,EAAQz/C,EAAMX,GAMlC,GALAqC,KAAK+9C,OAASA,EACV/9C,KAAK+9C,SACP/9C,KAAKi+D,QAAUj+D,KAAK+9C,OAAOkgB,QAC3Bj+D,KAAKG,UAAYH,KAAK+9C,OAAO59C,WAEnB,MAAR7B,EACF,MAAM,IAAIwB,MAAM,2BAA6BE,KAAKgsF,UAAU1tF,IAE9D0B,KAAK1B,KAAO0B,KAAKG,UAAU7B,KAAKA,GAChC0B,KAAKrC,MAAQqC,KAAKG,UAAU8rF,SAAStuF,GACrCqC,KAAKqkB,KAAOynE,EAASvB,UACrBvqF,KAAKksF,MAAO,EACZlsF,KAAKmsF,eAAiB,KAiFxB,OA9EAvvF,OAAOC,eAAekvF,EAAa9uF,UAAW,WAAY,CACxDojB,IAAK,WACH,OAAOrgB,KAAKqkB,QAIhBznB,OAAOC,eAAekvF,EAAa9uF,UAAW,eAAgB,CAC5DojB,IAAK,WACH,OAAOrgB,KAAK+9C,UAIhBnhD,OAAOC,eAAekvF,EAAa9uF,UAAW,cAAe,CAC3DojB,IAAK,WACH,OAAOrgB,KAAKrC,OAEd+qB,IAAK,SAAS/qB,GACZ,OAAOqC,KAAKrC,MAAQA,GAAS,MAIjCf,OAAOC,eAAekvF,EAAa9uF,UAAW,eAAgB,CAC5DojB,IAAK,WACH,MAAO,MAIXzjB,OAAOC,eAAekvF,EAAa9uF,UAAW,SAAU,CACtDojB,IAAK,WACH,MAAO,MAIXzjB,OAAOC,eAAekvF,EAAa9uF,UAAW,YAAa,CACzDojB,IAAK,WACH,OAAOrgB,KAAK1B,QAIhB1B,OAAOC,eAAekvF,EAAa9uF,UAAW,YAAa,CACzDojB,IAAK,WACH,OAAO,KAIX0rE,EAAa9uF,UAAU2E,MAAQ,WAC7B,OAAOhF,OAAOioB,OAAO7kB,OAGvB+rF,EAAa9uF,UAAUkB,SAAW,SAAS8/D,GACzC,OAAOj+D,KAAKi+D,QAAQmuB,OAAOjL,UAAUnhF,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAG/E8tB,EAAa9uF,UAAU+uF,UAAY,SAAS1tF,GAE1C,OAAY,OADZA,EAAOA,GAAQ0B,KAAK1B,MAEX,YAAc0B,KAAK+9C,OAAOz/C,KAAO,IAEjC,eAAiBA,EAAO,eAAiB0B,KAAK+9C,OAAOz/C,KAAO,KAIvEytF,EAAa9uF,UAAUqvF,YAAc,SAASlD,GAC5C,OAAIA,EAAKmD,eAAiBvsF,KAAKusF,eAG3BnD,EAAK/H,SAAWrhF,KAAKqhF,SAGrB+H,EAAKoD,YAAcxsF,KAAKwsF,WAGxBpD,EAAKzrF,QAAUqC,KAAKrC,SAMnBouF,EA/FwB,KAmGhC3tF,KAAK4B,6BC1GR,WACE,IAAI8rF,EAAoBW,EAEtBhH,EAAU,GAAGr4E,eAEf0+E,EAAWrsF,EAAQ,MAEnBgtF,EAAmBhtF,EAAQ,MAE3BlE,EAAOC,QAAsB,SAASopB,GAGpC,SAAS8nE,EAAS3uC,EAAQsoB,GAExB,GADAqmB,EAASnE,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAC9B,MAARsoB,EACF,MAAM,IAAIvmE,MAAM,uBAAyBE,KAAKgsF,aAEhDhsF,KAAK1B,KAAO,iBACZ0B,KAAKqkB,KAAOynE,EAASrB,MACrBzqF,KAAKrC,MAAQqC,KAAKG,UAAU28E,MAAMzW,GAWpC,OA5BS,SAASliC,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAOkE,EAAU9nE,GAYjB8nE,EAASzvF,UAAU2E,MAAQ,WACzB,OAAOhF,OAAOioB,OAAO7kB,OAGvB0sF,EAASzvF,UAAUkB,SAAW,SAAS8/D,GACrC,OAAOj+D,KAAKi+D,QAAQmuB,OAAOtP,MAAM98E,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAGpEyuB,EArBoB,CAuB1BD,KAEFruF,KAAK4B,6BClCR,WACE,IAAsB2sF,EAEpBlH,EAAU,GAAGr4E,eAEfu/E,EAAUltF,EAAQ,MAElBlE,EAAOC,QAA8B,SAASopB,GAG5C,SAAS6nE,EAAiB1uC,GACxB0uC,EAAiBlE,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAClD/9C,KAAKrC,MAAQ,GA6Df,OAvES,SAASwmC,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAMhQurF,CAAOiE,EAAkB7nE,GAOzBhoB,OAAOC,eAAe4vF,EAAiBxvF,UAAW,OAAQ,CACxDojB,IAAK,WACH,OAAOrgB,KAAKrC,OAEd+qB,IAAK,SAAS/qB,GACZ,OAAOqC,KAAKrC,MAAQA,GAAS,MAIjCf,OAAOC,eAAe4vF,EAAiBxvF,UAAW,SAAU,CAC1DojB,IAAK,WACH,OAAOrgB,KAAKrC,MAAMhC,UAItBiB,OAAOC,eAAe4vF,EAAiBxvF,UAAW,cAAe,CAC/DojB,IAAK,WACH,OAAOrgB,KAAKrC,OAEd+qB,IAAK,SAAS/qB,GACZ,OAAOqC,KAAKrC,MAAQA,GAAS,MAIjC8uF,EAAiBxvF,UAAU2E,MAAQ,WACjC,OAAOhF,OAAOioB,OAAO7kB,OAGvBysF,EAAiBxvF,UAAU2vF,cAAgB,SAASl6D,EAAQy4B,GAC1D,MAAM,IAAIrrD,MAAM,sCAAwCE,KAAKgsF,cAG/DS,EAAiBxvF,UAAU4vF,WAAa,SAASp4D,GAC/C,MAAM,IAAI30B,MAAM,sCAAwCE,KAAKgsF,cAG/DS,EAAiBxvF,UAAU6vF,WAAa,SAASp6D,EAAQ+B,GACvD,MAAM,IAAI30B,MAAM,sCAAwCE,KAAKgsF,cAG/DS,EAAiBxvF,UAAU8vF,WAAa,SAASr6D,EAAQy4B,GACvD,MAAM,IAAIrrD,MAAM,sCAAwCE,KAAKgsF,cAG/DS,EAAiBxvF,UAAU+vF,YAAc,SAASt6D,EAAQy4B,EAAO12B,GAC/D,MAAM,IAAI30B,MAAM,sCAAwCE,KAAKgsF,cAG/DS,EAAiBxvF,UAAUqvF,YAAc,SAASlD,GAChD,QAAKqD,EAAiBlE,UAAU+D,YAAY3pF,MAAM3C,KAAMqd,WAAWivE,YAAYlD,IAG3EA,EAAKpnF,OAAShC,KAAKgC,MAMlByqF,EAlE4B,CAoElCE,KAEFvuF,KAAK4B,6BC7ER,WACE,IAAI8rF,EAAUW,EAEZhH,EAAU,GAAGr4E,eAEf0+E,EAAWrsF,EAAQ,MAEnBgtF,EAAmBhtF,EAAQ,MAE3BlE,EAAOC,QAAwB,SAASopB,GAGtC,SAASqoE,EAAWlvC,EAAQsoB,GAE1B,GADA4mB,EAAW1E,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAChC,MAARsoB,EACF,MAAM,IAAIvmE,MAAM,yBAA2BE,KAAKgsF,aAElDhsF,KAAK1B,KAAO,WACZ0B,KAAKqkB,KAAOynE,EAASjB,QACrB7qF,KAAKrC,MAAQqC,KAAKG,UAAU68E,QAAQ3W,GAWtC,OA5BS,SAASliC,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAOyE,EAAYroE,GAYnBqoE,EAAWhwF,UAAU2E,MAAQ,WAC3B,OAAOhF,OAAOioB,OAAO7kB,OAGvBitF,EAAWhwF,UAAUkB,SAAW,SAAS8/D,GACvC,OAAOj+D,KAAKi+D,QAAQmuB,OAAOpP,QAAQh9E,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAGtEgvB,EArBsB,CAuB5BR,KAEFruF,KAAK4B,6BClCR,WACE,IAAyBktF,EAAoBC,EAE7CD,EAAqBztF,EAAQ,MAE7B0tF,EAAmB1tF,EAAQ,MAE3BlE,EAAOC,QAAiC,WACtC,SAAS4xF,IAEPptF,KAAKqtF,cAAgB,CACnB,kBAAkB,EAClB,kBAAkB,EAClB,UAAY,EACZ,0BAA0B,EAC1B,8BAA8B,EAC9B,UAAY,EACZ,gBAAiB,IAAIH,EACrB,SAAW,EACX,sBAAsB,EACtB,YAAc,EACd,0BAA0B,EAC1B,wBAAwB,EACxB,kBAAmB,GACnB,cAAe,GACf,wBAAwB,EACxB,UAAY,EACZ,eAAe,GAEjBltF,KAAKu+C,OAAsB3hD,OAAOioB,OAAO7kB,KAAKqtF,eA6BhD,OA1BAzwF,OAAOC,eAAeuwF,EAAoBnwF,UAAW,iBAAkB,CACrEojB,IAAK,WACH,OAAO,IAAI8sE,EAAiBvwF,OAAO6F,KAAKzC,KAAKqtF,mBAIjDD,EAAoBnwF,UAAUk4C,aAAe,SAAS72C,GACpD,OAAI0B,KAAKu+C,OAAOnxC,eAAe9O,GACtB0B,KAAKu+C,OAAOjgD,GAEZ,MAIX8uF,EAAoBnwF,UAAUqwF,gBAAkB,SAAShvF,EAAMX,GAC7D,OAAO,GAGTyvF,EAAoBnwF,UAAUswF,aAAe,SAASjvF,EAAMX,GAC1D,OAAa,MAATA,EACKqC,KAAKu+C,OAAOjgD,GAAQX,SAEbqC,KAAKu+C,OAAOjgD,IAIvB8uF,EAnD+B,KAuDvChvF,KAAK4B,yBC9DR,WAGEzE,EAAOC,QAAgC,WACrC,SAAS0xF,KAMT,OAJAA,EAAmBjwF,UAAUuwF,YAAc,SAAS/rE,GAClD,MAAM,IAAI3hB,MAAM2hB,IAGXyrE,EAP8B,KAWtC9uF,KAAK4B,yBCdR,WAGEzE,EAAOC,QAAkC,WACvC,SAASiyF,KAsBT,OApBAA,EAAqBxwF,UAAUywF,WAAa,SAASC,EAASrtE,GAC5D,OAAO,GAGTmtE,EAAqBxwF,UAAU2wF,mBAAqB,SAASC,EAAeC,EAAUC,GACpF,MAAM,IAAIjuF,MAAM,wCAGlB2tF,EAAqBxwF,UAAU+wF,eAAiB,SAASzB,EAAcsB,EAAe3Q,GACpF,MAAM,IAAIp9E,MAAM,wCAGlB2tF,EAAqBxwF,UAAUgxF,mBAAqB,SAASC,GAC3D,MAAM,IAAIpuF,MAAM,wCAGlB2tF,EAAqBxwF,UAAUkxF,WAAa,SAASR,EAASrtE,GAC5D,MAAM,IAAIxgB,MAAM,wCAGX2tF,EAvBgC,KA2BxCrvF,KAAK4B,yBC9BR,WAGEzE,EAAOC,QAA8B,WACnC,SAAS2xF,EAAiB1xF,GACxBuE,KAAKvE,IAAMA,GAAO,GAiBpB,OAdAmB,OAAOC,eAAeswF,EAAiBlwF,UAAW,SAAU,CAC1DojB,IAAK,WACH,OAAOrgB,KAAKvE,IAAIE,UAIpBwxF,EAAiBlwF,UAAU8F,KAAO,SAASqtC,GACzC,OAAOpwC,KAAKvE,IAAI20C,IAAU,MAG5B+8C,EAAiBlwF,UAAU48B,SAAW,SAAS9yB,GAC7C,OAAkC,IAA3B/G,KAAKvE,IAAIqW,QAAQ/K,IAGnBomF,EAnB4B,KAuBpC/uF,KAAK4B,4BC1BR,WACE,IAAI8rF,EAAyBa,EAE3BlH,EAAU,GAAGr4E,eAEfu/E,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnBlE,EAAOC,QAA2B,SAASopB,GAGzC,SAASwpE,EAAcrwC,EAAQswC,EAAaC,EAAeC,EAAeC,EAAkBC,GAE1F,GADAL,EAAc7F,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAC5B,MAAfswC,EACF,MAAM,IAAIvuF,MAAM,6BAA+BE,KAAKgsF,aAEtD,GAAqB,MAAjBsC,EACF,MAAM,IAAIxuF,MAAM,+BAAiCE,KAAKgsF,UAAUqC,IAElE,IAAKE,EACH,MAAM,IAAIzuF,MAAM,+BAAiCE,KAAKgsF,UAAUqC,IAElE,IAAKG,EACH,MAAM,IAAI1uF,MAAM,kCAAoCE,KAAKgsF,UAAUqC,IAKrE,GAHsC,IAAlCG,EAAiB18E,QAAQ,OAC3B08E,EAAmB,IAAMA,IAEtBA,EAAiB1gF,MAAM,0CAC1B,MAAM,IAAIhO,MAAM,kFAAoFE,KAAKgsF,UAAUqC,IAErH,GAAII,IAAiBD,EAAiB1gF,MAAM,uBAC1C,MAAM,IAAIhO,MAAM,qDAAuDE,KAAKgsF,UAAUqC,IAExFruF,KAAKquF,YAAcruF,KAAKG,UAAU7B,KAAK+vF,GACvCruF,KAAKqkB,KAAOynE,EAASV,qBACrBprF,KAAKsuF,cAAgBtuF,KAAKG,UAAU7B,KAAKgwF,GACzCtuF,KAAKuuF,cAAgBvuF,KAAKG,UAAUuuF,WAAWH,GAC3CE,IACFzuF,KAAKyuF,aAAezuF,KAAKG,UAAUwuF,cAAcF,IAEnDzuF,KAAKwuF,iBAAmBA,EAO1B,OA/CS,SAASrqD,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAO4F,EAAexpE,GAmCtBwpE,EAAcnxF,UAAUkB,SAAW,SAAS8/D,GAC1C,OAAOj+D,KAAKi+D,QAAQmuB,OAAOwC,WAAW5uF,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAGzEmwB,EAxCyB,CA0C/BzB,KAEFvuF,KAAK4B,6BCrDR,WACE,IAAI8rF,EAAyBa,EAE3BlH,EAAU,GAAGr4E,eAEfu/E,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnBlE,EAAOC,QAA2B,SAASopB,GAGzC,SAASiqE,EAAc9wC,EAAQz/C,EAAMX,GAEnC,GADAkxF,EAActG,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GACnC,MAARz/C,EACF,MAAM,IAAIwB,MAAM,6BAA+BE,KAAKgsF,aAEjDruF,IACHA,EAAQ,aAEN7B,MAAMG,QAAQ0B,KAChBA,EAAQ,IAAMA,EAAMmD,KAAK,KAAO,KAElCd,KAAK1B,KAAO0B,KAAKG,UAAU7B,KAAKA,GAChC0B,KAAKqkB,KAAOynE,EAAST,mBACrBrrF,KAAKrC,MAAQqC,KAAKG,UAAU2uF,gBAAgBnxF,GAO9C,OA9BS,SAASwmC,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAOqG,EAAejqE,GAkBtBiqE,EAAc5xF,UAAUkB,SAAW,SAAS8/D,GAC1C,OAAOj+D,KAAKi+D,QAAQmuB,OAAO2C,WAAW/uF,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAGzE4wB,EAvByB,CAyB/BlC,KAEFvuF,KAAK4B,6BCpCR,WACE,IAAI8rF,EAAwBa,EAASnB,EAEnC/F,EAAU,GAAGr4E,eAEfo+E,EAAW/rF,EAAAA,MAAAA,SAEXktF,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnBlE,EAAOC,QAA0B,SAASopB,GAGxC,SAASoqE,EAAajxC,EAAQkxC,EAAI3wF,EAAMX,GAEtC,GADAqxF,EAAazG,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAClC,MAARz/C,EACF,MAAM,IAAIwB,MAAM,4BAA8BE,KAAKgsF,UAAU1tF,IAE/D,GAAa,MAATX,EACF,MAAM,IAAImC,MAAM,6BAA+BE,KAAKgsF,UAAU1tF,IAKhE,GAHA0B,KAAKivF,KAAOA,EACZjvF,KAAK1B,KAAO0B,KAAKG,UAAU7B,KAAKA,GAChC0B,KAAKqkB,KAAOynE,EAASnB,kBAChBa,EAAS7tF,GAGP,CACL,IAAKA,EAAMuxF,QAAUvxF,EAAMwxF,MACzB,MAAM,IAAIrvF,MAAM,yEAA2EE,KAAKgsF,UAAU1tF,IAE5G,GAAIX,EAAMuxF,QAAUvxF,EAAMwxF,MACxB,MAAM,IAAIrvF,MAAM,+DAAiEE,KAAKgsF,UAAU1tF,IAYlG,GAVA0B,KAAKovF,UAAW,EACG,MAAfzxF,EAAMuxF,QACRlvF,KAAKkvF,MAAQlvF,KAAKG,UAAUkvF,SAAS1xF,EAAMuxF,QAE1B,MAAfvxF,EAAMwxF,QACRnvF,KAAKmvF,MAAQnvF,KAAKG,UAAUmvF,SAAS3xF,EAAMwxF,QAE1B,MAAfxxF,EAAM4xF,QACRvvF,KAAKuvF,MAAQvvF,KAAKG,UAAUqvF,SAAS7xF,EAAM4xF,QAEzCvvF,KAAKivF,IAAMjvF,KAAKuvF,MAClB,MAAM,IAAIzvF,MAAM,8DAAgEE,KAAKgsF,UAAU1tF,SApBjG0B,KAAKrC,MAAQqC,KAAKG,UAAUsvF,eAAe9xF,GAC3CqC,KAAKovF,UAAW,EAgEpB,OAzFS,SAASjrD,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAUhQurF,CAAOwG,EAAcpqE,GAuCrBhoB,OAAOC,eAAemyF,EAAa/xF,UAAW,WAAY,CACxDojB,IAAK,WACH,OAAOrgB,KAAKkvF,SAIhBtyF,OAAOC,eAAemyF,EAAa/xF,UAAW,WAAY,CACxDojB,IAAK,WACH,OAAOrgB,KAAKmvF,SAIhBvyF,OAAOC,eAAemyF,EAAa/xF,UAAW,eAAgB,CAC5DojB,IAAK,WACH,OAAOrgB,KAAKuvF,OAAS,QAIzB3yF,OAAOC,eAAemyF,EAAa/xF,UAAW,gBAAiB,CAC7DojB,IAAK,WACH,OAAO,QAIXzjB,OAAOC,eAAemyF,EAAa/xF,UAAW,cAAe,CAC3DojB,IAAK,WACH,OAAO,QAIXzjB,OAAOC,eAAemyF,EAAa/xF,UAAW,aAAc,CAC1DojB,IAAK,WACH,OAAO,QAIX2uE,EAAa/xF,UAAUkB,SAAW,SAAS8/D,GACzC,OAAOj+D,KAAKi+D,QAAQmuB,OAAOsD,UAAU1vF,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAGxE+wB,EAhFwB,CAkF9BrC,KAEFvuF,KAAK4B,6BC/FR,WACE,IAAI8rF,EAA0Ba,EAE5BlH,EAAU,GAAGr4E,eAEfu/E,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnBlE,EAAOC,QAA4B,SAASopB,GAG1C,SAAS+qE,EAAe5xC,EAAQz/C,EAAMX,GAEpC,GADAgyF,EAAepH,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GACpC,MAARz/C,EACF,MAAM,IAAIwB,MAAM,8BAAgCE,KAAKgsF,UAAU1tF,IAEjE,IAAKX,EAAMuxF,QAAUvxF,EAAMwxF,MACzB,MAAM,IAAIrvF,MAAM,qEAAuEE,KAAKgsF,UAAU1tF,IAExG0B,KAAK1B,KAAO0B,KAAKG,UAAU7B,KAAKA,GAChC0B,KAAKqkB,KAAOynE,EAASb,oBACF,MAAfttF,EAAMuxF,QACRlvF,KAAKkvF,MAAQlvF,KAAKG,UAAUkvF,SAAS1xF,EAAMuxF,QAE1B,MAAfvxF,EAAMwxF,QACRnvF,KAAKmvF,MAAQnvF,KAAKG,UAAUmvF,SAAS3xF,EAAMwxF,QAoB/C,OA5CS,SAAShrD,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAOmH,EAAgB/qE,GAoBvBhoB,OAAOC,eAAe8yF,EAAe1yF,UAAW,WAAY,CAC1DojB,IAAK,WACH,OAAOrgB,KAAKkvF,SAIhBtyF,OAAOC,eAAe8yF,EAAe1yF,UAAW,WAAY,CAC1DojB,IAAK,WACH,OAAOrgB,KAAKmvF,SAIhBQ,EAAe1yF,UAAUkB,SAAW,SAAS8/D,GAC3C,OAAOj+D,KAAKi+D,QAAQmuB,OAAOwD,YAAY5vF,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAG1E0xB,EArC0B,CAuChChD,KAEFvuF,KAAK4B,6BClDR,WACE,IAAI8rF,EAA0Ba,EAASnB,EAErC/F,EAAU,GAAGr4E,eAEfo+E,EAAW/rF,EAAAA,MAAAA,SAEXktF,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnBlE,EAAOC,QAA4B,SAASopB,GAG1C,SAASirE,EAAe9xC,EAAQz9B,EAAS0iE,EAAUxrB,GACjD,IAAImuB,EACJkK,EAAetH,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAC5CytC,EAASlrE,KACIA,GAAfqlE,EAAMrlE,GAAuBA,QAAS0iE,EAAW2C,EAAI3C,SAAUxrB,EAAamuB,EAAInuB,YAE7El3C,IACHA,EAAU,OAEZtgB,KAAKqkB,KAAOynE,EAASZ,YACrBlrF,KAAKsgB,QAAUtgB,KAAKG,UAAU2vF,WAAWxvE,GACzB,MAAZ0iE,IACFhjF,KAAKgjF,SAAWhjF,KAAKG,UAAU4vF,YAAY/M,IAE3B,MAAdxrB,IACFx3D,KAAKw3D,WAAax3D,KAAKG,UAAU6vF,cAAcx4B,IAQnD,OAnCS,SAASrzB,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAUhQurF,CAAOqH,EAAgBjrE,GAqBvBirE,EAAe5yF,UAAUkB,SAAW,SAAS8/D,GAC3C,OAAOj+D,KAAKi+D,QAAQmuB,OAAO6D,YAAYjwF,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAG1E4xB,EA1B0B,CA4BhClD,KAEFvuF,KAAK4B,6BCzCR,WACE,IAAI8rF,EAAUsC,EAAeS,EAAeG,EAAcW,EAA4BO,EAAiBvD,EAASnB,EAE9G/F,EAAU,GAAGr4E,eAEfo+E,EAAW/rF,EAAAA,MAAAA,SAEXktF,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnB2uF,EAAgB3uF,EAAQ,KAExBuvF,EAAevvF,EAAQ,MAEvBovF,EAAgBpvF,EAAQ,MAExBkwF,EAAiBlwF,EAAQ,MAEzBywF,EAAkBzwF,EAAQ,MAE1BlE,EAAOC,QAAwB,SAASopB,GAGtC,SAASurE,EAAWpyC,EAAQmxC,EAAOC,GACjC,IAAIhrD,EAAOvoC,EAAGF,EAAKiqF,EAAKyK,EAAMC,EAG9B,GAFAF,EAAW5H,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAC5C/9C,KAAKqkB,KAAOynE,EAASf,QACjBhtC,EAAOuyC,SAET,IAAK10F,EAAI,EAAGF,GADZiqF,EAAM5nC,EAAOuyC,UACS30F,OAAQC,EAAIF,EAAKE,IAErC,IADAuoC,EAAQwhD,EAAI/pF,IACFyoB,OAASynE,EAASniD,QAAS,CACnC3pC,KAAK1B,KAAO6lC,EAAM7lC,KAClB,MAIN0B,KAAKuwF,eAAiBxyC,EAClBytC,EAAS0D,KACGA,GAAdkB,EAAOlB,GAAoBA,MAAOC,EAAQiB,EAAKjB,OAEpC,MAATA,IACqBA,GAAvBkB,EAAO,CAACnB,EAAOC,IAAqB,GAAID,EAAQmB,EAAK,IAE1C,MAATnB,IACFlvF,KAAKkvF,MAAQlvF,KAAKG,UAAUkvF,SAASH,IAE1B,MAATC,IACFnvF,KAAKmvF,MAAQnvF,KAAKG,UAAUmvF,SAASH,IAmIzC,OAlLS,SAAShrD,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAoBhQurF,CAAO2H,EAAYvrE,GA+BnBhoB,OAAOC,eAAeszF,EAAWlzF,UAAW,WAAY,CACtDojB,IAAK,WACH,IAAI8jB,EAAOvoC,EAAGF,EAAK80F,EAAO7K,EAG1B,IAFA6K,EAAQ,GAEH50F,EAAI,EAAGF,GADZiqF,EAAM3lF,KAAKswF,UACW30F,OAAQC,EAAIF,EAAKE,KACrCuoC,EAAQwhD,EAAI/pF,IACDyoB,OAASynE,EAASnB,mBAAuBxmD,EAAM8qD,KACxDuB,EAAMrsD,EAAM7lC,MAAQ6lC,GAGxB,OAAO,IAAI+rD,EAAgBM,MAI/B5zF,OAAOC,eAAeszF,EAAWlzF,UAAW,YAAa,CACvDojB,IAAK,WACH,IAAI8jB,EAAOvoC,EAAGF,EAAK80F,EAAO7K,EAG1B,IAFA6K,EAAQ,GAEH50F,EAAI,EAAGF,GADZiqF,EAAM3lF,KAAKswF,UACW30F,OAAQC,EAAIF,EAAKE,KACrCuoC,EAAQwhD,EAAI/pF,IACFyoB,OAASynE,EAASb,sBAC1BuF,EAAMrsD,EAAM7lC,MAAQ6lC,GAGxB,OAAO,IAAI+rD,EAAgBM,MAI/B5zF,OAAOC,eAAeszF,EAAWlzF,UAAW,WAAY,CACtDojB,IAAK,WACH,OAAOrgB,KAAKkvF,SAIhBtyF,OAAOC,eAAeszF,EAAWlzF,UAAW,WAAY,CACtDojB,IAAK,WACH,OAAOrgB,KAAKmvF,SAIhBvyF,OAAOC,eAAeszF,EAAWlzF,UAAW,iBAAkB,CAC5DojB,IAAK,WACH,MAAM,IAAIvgB,MAAM,sCAAwCE,KAAKgsF,gBAIjEmE,EAAWlzF,UAAU8kB,QAAU,SAASzjB,EAAMX,GAC5C,IAAIwmC,EAGJ,OAFAA,EAAQ,IAAI0qD,EAAc7uF,KAAM1B,EAAMX,GACtCqC,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGTmwF,EAAWlzF,UAAUwzF,QAAU,SAASpC,EAAaC,EAAeC,EAAeC,EAAkBC,GACnG,IAAItqD,EAGJ,OAFAA,EAAQ,IAAIiqD,EAAcpuF,KAAMquF,EAAaC,EAAeC,EAAeC,EAAkBC,GAC7FzuF,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGTmwF,EAAWlzF,UAAUuiF,OAAS,SAASlhF,EAAMX,GAC3C,IAAIwmC,EAGJ,OAFAA,EAAQ,IAAI6qD,EAAahvF,MAAM,EAAO1B,EAAMX,GAC5CqC,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGTmwF,EAAWlzF,UAAUyzF,QAAU,SAASpyF,EAAMX,GAC5C,IAAIwmC,EAGJ,OAFAA,EAAQ,IAAI6qD,EAAahvF,MAAM,EAAM1B,EAAMX,GAC3CqC,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGTmwF,EAAWlzF,UAAU0zF,SAAW,SAASryF,EAAMX,GAC7C,IAAIwmC,EAGJ,OAFAA,EAAQ,IAAIwrD,EAAe3vF,KAAM1B,EAAMX,GACvCqC,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGTmwF,EAAWlzF,UAAUkB,SAAW,SAAS8/D,GACvC,OAAOj+D,KAAKi+D,QAAQmuB,OAAOwE,QAAQ5wF,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAG7EkyB,EAAWlzF,UAAUopF,IAAM,SAAS/nF,EAAMX,GACxC,OAAOqC,KAAK+hB,QAAQzjB,EAAMX,IAG5BwyF,EAAWlzF,UAAUspF,IAAM,SAAS8H,EAAaC,EAAeC,EAAeC,EAAkBC,GAC/F,OAAOzuF,KAAKywF,QAAQpC,EAAaC,EAAeC,EAAeC,EAAkBC,IAGnF0B,EAAWlzF,UAAU4zF,IAAM,SAASvyF,EAAMX,GACxC,OAAOqC,KAAKw/E,OAAOlhF,EAAMX,IAG3BwyF,EAAWlzF,UAAU6zF,KAAO,SAASxyF,EAAMX,GACzC,OAAOqC,KAAK0wF,QAAQpyF,EAAMX,IAG5BwyF,EAAWlzF,UAAU28B,IAAM,SAASt7B,EAAMX,GACxC,OAAOqC,KAAK2wF,SAASryF,EAAMX,IAG7BwyF,EAAWlzF,UAAUqpF,GAAK,WACxB,OAAOtmF,KAAK4hB,QAAU5hB,KAAKuwF,gBAG7BJ,EAAWlzF,UAAUqvF,YAAc,SAASlD,GAC1C,QAAK+G,EAAW5H,UAAU+D,YAAY3pF,MAAM3C,KAAMqd,WAAWivE,YAAYlD,KAGrEA,EAAK9qF,OAAS0B,KAAK1B,OAGnB8qF,EAAK0E,WAAa9tF,KAAK8tF,UAGvB1E,EAAK2E,WAAa/tF,KAAK+tF,YAMtBoC,EA/JsB,CAiK5BxD,KAEFvuF,KAAK4B,6BCxLR,WACE,IAAI8rF,EAAUsB,EAAqBK,EAAmCd,EAASoE,EAAiBC,EAAgBvF,EAE9GhG,EAAU,GAAGr4E,eAEfq+E,EAAgBhsF,EAAAA,MAAAA,cAEhBguF,EAAuBhuF,EAAQ,MAE/B2tF,EAAsB3tF,EAAQ,MAE9BktF,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnBuxF,EAAiBvxF,EAAQ,MAEzBsxF,EAAkBtxF,EAAQ,MAE1BlE,EAAOC,QAAyB,SAASopB,GAGvC,SAASqsE,EAAYhzB,GACnBgzB,EAAY1I,UAAUlqF,YAAYD,KAAK4B,KAAM,MAC7CA,KAAK1B,KAAO,YACZ0B,KAAKqkB,KAAOynE,EAAShB,SACrB9qF,KAAKkxF,YAAc,KACnBlxF,KAAKmxF,UAAY,IAAI/D,EACrBnvB,IAAYA,EAAU,IACjBA,EAAQmuB,SACXnuB,EAAQmuB,OAAS,IAAI2E,GAEvB/wF,KAAKi+D,QAAUA,EACfj+D,KAAKG,UAAY,IAAI6wF,EAAe/yB,GA2MtC,OA1OS,SAAS95B,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAkBhQurF,CAAOyI,EAAarsE,GAgBpBhoB,OAAOC,eAAeo0F,EAAYh0F,UAAW,iBAAkB,CAC7DU,MAAO,IAAI8vF,IAGb7wF,OAAOC,eAAeo0F,EAAYh0F,UAAW,UAAW,CACtDojB,IAAK,WACH,IAAI8jB,EAAOvoC,EAAGF,EAAKiqF,EAEnB,IAAK/pF,EAAI,EAAGF,GADZiqF,EAAM3lF,KAAKswF,UACW30F,OAAQC,EAAIF,EAAKE,IAErC,IADAuoC,EAAQwhD,EAAI/pF,IACFyoB,OAASynE,EAASf,QAC1B,OAAO5mD,EAGX,OAAO,QAIXvnC,OAAOC,eAAeo0F,EAAYh0F,UAAW,kBAAmB,CAC9DojB,IAAK,WACH,OAAOrgB,KAAKkmB,YAAc,QAI9BtpB,OAAOC,eAAeo0F,EAAYh0F,UAAW,gBAAiB,CAC5DojB,IAAK,WACH,OAAO,QAIXzjB,OAAOC,eAAeo0F,EAAYh0F,UAAW,sBAAuB,CAClEojB,IAAK,WACH,OAAO,KAIXzjB,OAAOC,eAAeo0F,EAAYh0F,UAAW,cAAe,CAC1DojB,IAAK,WACH,OAA6B,IAAzBrgB,KAAKswF,SAAS30F,QAAgBqE,KAAKswF,SAAS,GAAGjsE,OAASynE,EAASZ,YAC5DlrF,KAAKswF,SAAS,GAAGtN,SAEjB,QAKbpmF,OAAOC,eAAeo0F,EAAYh0F,UAAW,gBAAiB,CAC5DojB,IAAK,WACH,OAA6B,IAAzBrgB,KAAKswF,SAAS30F,QAAgBqE,KAAKswF,SAAS,GAAGjsE,OAASynE,EAASZ,aAC5B,QAAhClrF,KAAKswF,SAAS,GAAG94B,cAO9B56D,OAAOC,eAAeo0F,EAAYh0F,UAAW,aAAc,CACzDojB,IAAK,WACH,OAA6B,IAAzBrgB,KAAKswF,SAAS30F,QAAgBqE,KAAKswF,SAAS,GAAGjsE,OAASynE,EAASZ,YAC5DlrF,KAAKswF,SAAS,GAAGhwE,QAEjB,SAKb1jB,OAAOC,eAAeo0F,EAAYh0F,UAAW,MAAO,CAClDojB,IAAK,WACH,OAAOrgB,KAAKkxF,eAIhBt0F,OAAOC,eAAeo0F,EAAYh0F,UAAW,SAAU,CACrDojB,IAAK,WACH,OAAO,QAIXzjB,OAAOC,eAAeo0F,EAAYh0F,UAAW,aAAc,CACzDojB,IAAK,WACH,OAAO,QAIXzjB,OAAOC,eAAeo0F,EAAYh0F,UAAW,eAAgB,CAC3DojB,IAAK,WACH,OAAO,QAIXzjB,OAAOC,eAAeo0F,EAAYh0F,UAAW,cAAe,CAC1DojB,IAAK,WACH,OAAO,QAIX4wE,EAAYh0F,UAAUm+B,IAAM,SAASgxD,GACnC,IAAIgF,EAQJ,OAPAA,EAAgB,GACXhF,EAEMX,EAAcW,KACvBgF,EAAgBhF,EAChBA,EAASpsF,KAAKi+D,QAAQmuB,QAHtBA,EAASpsF,KAAKi+D,QAAQmuB,OAKjBA,EAAOiF,SAASrxF,KAAMosF,EAAOC,cAAc+E,KAGpDH,EAAYh0F,UAAUkB,SAAW,SAAS8/D,GACxC,OAAOj+D,KAAKi+D,QAAQmuB,OAAOiF,SAASrxF,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAG9EgzB,EAAYh0F,UAAUq0F,cAAgB,SAAS/U,GAC7C,MAAM,IAAIz8E,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUs0F,uBAAyB,WAC7C,MAAM,IAAIzxF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUu0F,eAAiB,SAASxvF,GAC9C,MAAM,IAAIlC,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUw0F,cAAgB,SAASzvF,GAC7C,MAAM,IAAIlC,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUy0F,mBAAqB,SAAS1vF,GAClD,MAAM,IAAIlC,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU00F,4BAA8B,SAASr1F,EAAQ0F,GACnE,MAAM,IAAIlC,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU20F,gBAAkB,SAAStzF,GAC/C,MAAM,IAAIwB,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU40F,sBAAwB,SAASvzF,GACrD,MAAM,IAAIwB,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU60F,qBAAuB,SAASC,GACpD,MAAM,IAAIjyF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU+0F,WAAa,SAASC,EAAcC,GACxD,MAAM,IAAIpyF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUk1F,gBAAkB,SAAS5F,EAAcsB,GAC7D,MAAM,IAAI/tF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUm1F,kBAAoB,SAAS7F,EAAcsB,GAC/D,MAAM,IAAI/tF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUo1F,uBAAyB,SAAS9F,EAAcC,GACpE,MAAM,IAAI1sF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUq1F,eAAiB,SAASC,GAC9C,MAAM,IAAIzyF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUu1F,UAAY,SAASt0D,GACzC,MAAM,IAAIp+B,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUw1F,kBAAoB,WACxC,MAAM,IAAI3yF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUy1F,WAAa,SAAStJ,EAAMmD,EAAcsB,GAC9D,MAAM,IAAI/tF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU01F,uBAAyB,SAASC,GACtD,MAAM,IAAI9yF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU41F,YAAc,SAASC,GAC3C,MAAM,IAAIhzF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU81F,YAAc,WAClC,MAAM,IAAIjzF,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAU+1F,mBAAqB,SAASpxE,EAAMqxE,EAAYltE,GACpE,MAAM,IAAIjmB,MAAM,sCAAwCE,KAAKgsF,cAG/DiF,EAAYh0F,UAAUi2F,iBAAmB,SAAStxE,EAAMqxE,EAAYltE,GAClE,MAAM,IAAIjmB,MAAM,sCAAwCE,KAAKgsF,cAGxDiF,EAzNuB,CA2N7BtE,KAEFvuF,KAAK4B,6BChPR,WACE,IAAI8rF,EAAUqH,EAAapH,EAAcW,EAAUO,EAAYmB,EAAeS,EAAeG,EAAcW,EAAgBE,EAAgBM,EAAYc,EAA4BmC,EAAYC,EAA0BC,EAAQvC,EAAiBC,EAAgBuC,EAAS1vF,EAAU0nF,EAAYC,EAAUC,EAAe9F,EACxTF,EAAU,GAAGr4E,eAEfu4E,EAAMlmF,EAAQ,MAAc+rF,EAAW7F,EAAI6F,SAAUD,EAAa5F,EAAI4F,WAAYE,EAAgB9F,EAAI8F,cAAe5nF,EAAW8hF,EAAI9hF,SAEpIioF,EAAWrsF,EAAQ,MAEnBwxF,EAAcxxF,EAAQ,MAEtB2zF,EAAa3zF,EAAQ,MAErBitF,EAAWjtF,EAAQ,MAEnBwtF,EAAaxtF,EAAQ,MAErB6zF,EAAS7zF,EAAQ,MAEjB8zF,EAAU9zF,EAAQ,MAElB4zF,EAA2B5zF,EAAQ,KAEnCowF,EAAiBpwF,EAAQ,MAEzB0wF,EAAa1wF,EAAQ,MAErB2uF,EAAgB3uF,EAAQ,KAExBuvF,EAAevvF,EAAQ,MAEvBovF,EAAgBpvF,EAAQ,MAExBkwF,EAAiBlwF,EAAQ,MAEzBssF,EAAetsF,EAAQ,MAEvBuxF,EAAiBvxF,EAAQ,MAEzBsxF,EAAkBtxF,EAAQ,MAE1B0zF,EAAc1zF,EAAQ,MAEtBlE,EAAOC,QAA2B,WAChC,SAASg4F,EAAcv1B,EAASw1B,EAAQC,GACtC,IAAItC,EACJpxF,KAAK1B,KAAO,OACZ0B,KAAKqkB,KAAOynE,EAAShB,SACrB7sB,IAAYA,EAAU,IACtBmzB,EAAgB,GACXnzB,EAAQmuB,OAEFX,EAAcxtB,EAAQmuB,UAC/BgF,EAAgBnzB,EAAQmuB,OACxBnuB,EAAQmuB,OAAS,IAAI2E,GAHrB9yB,EAAQmuB,OAAS,IAAI2E,EAKvB/wF,KAAKi+D,QAAUA,EACfj+D,KAAKosF,OAASnuB,EAAQmuB,OACtBpsF,KAAKoxF,cAAgBpxF,KAAKosF,OAAOC,cAAc+E,GAC/CpxF,KAAKG,UAAY,IAAI6wF,EAAe/yB,GACpCj+D,KAAK2zF,eAAiBF,GAAU,aAChCzzF,KAAK4zF,cAAgBF,GAAS,aAC9B1zF,KAAK6zF,YAAc,KACnB7zF,KAAK8zF,cAAgB,EACrB9zF,KAAK+zF,SAAW,GAChB/zF,KAAKg0F,iBAAkB,EACvBh0F,KAAKi0F,mBAAoB,EACzBj0F,KAAK4hB,KAAO,KAwcd,OArcA4xE,EAAcv2F,UAAUi3F,gBAAkB,SAAS9K,GACjD,IAAI7C,EAAK4N,EAASvV,EAAYz6C,EAAOvoC,EAAGF,EAAK00F,EAAMC,EACnD,OAAQjH,EAAK/kE,MACX,KAAKynE,EAASrB,MACZzqF,KAAK88E,MAAMsM,EAAKzrF,OAChB,MACF,KAAKmuF,EAASjB,QACZ7qF,KAAKg9E,QAAQoM,EAAKzrF,OAClB,MACF,KAAKmuF,EAASniD,QAGZ,IAAKwqD,KAFLvV,EAAa,GACbwR,EAAOhH,EAAKgL,QAEL3O,EAAQrnF,KAAKgyF,EAAM+D,KACxB5N,EAAM6J,EAAK+D,GACXvV,EAAWuV,GAAW5N,EAAI5oF,OAE5BqC,KAAKopF,KAAKA,EAAK9qF,KAAMsgF,GACrB,MACF,KAAKkN,EAASR,MACZtrF,KAAKq0F,QACL,MACF,KAAKvI,EAASX,IACZnrF,KAAKzC,IAAI6rF,EAAKzrF,OACd,MACF,KAAKmuF,EAAStB,KACZxqF,KAAKqmE,KAAK+iB,EAAKzrF,OACf,MACF,KAAKmuF,EAASlB,sBACZ5qF,KAAKs0F,YAAYlL,EAAK9sF,OAAQ8sF,EAAKzrF,OACnC,MACF,QACE,MAAM,IAAImC,MAAM,uDAAyDspF,EAAK/qF,YAAYC,MAG9F,IAAK1C,EAAI,EAAGF,GADZ20F,EAAOjH,EAAKkH,UACW30F,OAAQC,EAAIF,EAAKE,IACtCuoC,EAAQksD,EAAKz0F,GACboE,KAAKk0F,gBAAgB/vD,GACjBA,EAAM9f,OAASynE,EAASniD,SAC1B3pC,KAAKsmF,KAGT,OAAOtmF,MAGTwzF,EAAcv2F,UAAUo3F,MAAQ,WAC9B,OAAOr0F,MAGTwzF,EAAcv2F,UAAUmsF,KAAO,SAAS9qF,EAAMsgF,EAAYvY,GACxD,IAAI+pB,EACJ,GAAY,MAAR9xF,EACF,MAAM,IAAIwB,MAAM,sBAElB,GAAIE,KAAK4hB,OAA+B,IAAvB5hB,KAAK8zF,aACpB,MAAM,IAAIh0F,MAAM,yCAA2CE,KAAKgsF,UAAU1tF,IAkB5E,OAhBA0B,KAAKu0F,cACLj2F,EAAOuF,EAASvF,GACE,MAAdsgF,IACFA,EAAa,IAEfA,EAAa/6E,EAAS+6E,GACjB4M,EAAS5M,KACevY,GAA3B+pB,EAAO,CAACxR,EAAYvY,IAAmB,GAAIuY,EAAawR,EAAK,IAE/DpwF,KAAK6zF,YAAc,IAAIT,EAAWpzF,KAAM1B,EAAMsgF,GAC9C5+E,KAAK6zF,YAAYvD,UAAW,EAC5BtwF,KAAK8zF,eACL9zF,KAAK+zF,SAAS/zF,KAAK8zF,cAAgB9zF,KAAK6zF,YAC5B,MAARxtB,GACFrmE,KAAKqmE,KAAKA,GAELrmE,MAGTwzF,EAAcv2F,UAAU8kB,QAAU,SAASzjB,EAAMsgF,EAAYvY,GAC3D,IAAIliC,EAAOvoC,EAAGF,EAAK84F,EAAmBpE,EAAMxuE,EAC5C,GAAI5hB,KAAK6zF,aAAe7zF,KAAK6zF,YAAYxvE,OAASynE,EAASf,QACzD/qF,KAAK+uF,WAAWpsF,MAAM3C,KAAMqd,gBAE5B,GAAIvhB,MAAMG,QAAQqC,IAASktF,EAASltF,IAASitF,EAAWjtF,GAOtD,IANAk2F,EAAoBx0F,KAAKi+D,QAAQw2B,aACjCz0F,KAAKi+D,QAAQw2B,cAAe,GAC5B7yE,EAAO,IAAIqvE,EAAYjxF,KAAKi+D,SAASl8C,QAAQ,cACxCA,QAAQzjB,GACb0B,KAAKi+D,QAAQw2B,aAAeD,EAEvB54F,EAAI,EAAGF,GADZ00F,EAAOxuE,EAAK0uE,UACW30F,OAAQC,EAAIF,EAAKE,IACtCuoC,EAAQisD,EAAKx0F,GACboE,KAAKk0F,gBAAgB/vD,GACjBA,EAAM9f,OAASynE,EAASniD,SAC1B3pC,KAAKsmF,UAITtmF,KAAKopF,KAAK9qF,EAAMsgF,EAAYvY,GAGhC,OAAOrmE,MAGTwzF,EAAcv2F,UAAUkkF,UAAY,SAAS7iF,EAAMX,GACjD,IAAIw2F,EAASlI,EACb,IAAKjsF,KAAK6zF,aAAe7zF,KAAK6zF,YAAYvD,SACxC,MAAM,IAAIxwF,MAAM,4EAA8EE,KAAKgsF,UAAU1tF,IAK/G,GAHY,MAARA,IACFA,EAAOuF,EAASvF,IAEdktF,EAASltF,GACX,IAAK61F,KAAW71F,EACTmnF,EAAQrnF,KAAKE,EAAM61F,KACxBlI,EAAW3tF,EAAK61F,GAChBn0F,KAAKmhF,UAAUgT,EAASlI,SAGtBV,EAAW5tF,KACbA,EAAQA,EAAMgF,SAEZ3C,KAAKi+D,QAAQy2B,oBAAgC,MAAT/2F,EACtCqC,KAAK6zF,YAAYO,QAAQ91F,GAAQ,IAAIytF,EAAa/rF,KAAM1B,EAAM,IAC5C,MAATX,IACTqC,KAAK6zF,YAAYO,QAAQ91F,GAAQ,IAAIytF,EAAa/rF,KAAM1B,EAAMX,IAGlE,OAAOqC,MAGTwzF,EAAcv2F,UAAUopE,KAAO,SAAS1oE,GACtC,IAAIyrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAImK,EAAQvzF,KAAMrC,GACzBqC,KAAKyzF,OAAOzzF,KAAKosF,OAAO/lB,KAAK+iB,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GAC5F9zF,MAGTwzF,EAAcv2F,UAAU6/E,MAAQ,SAASn/E,GACvC,IAAIyrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAIsD,EAAS1sF,KAAMrC,GAC1BqC,KAAKyzF,OAAOzzF,KAAKosF,OAAOtP,MAAMsM,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GAC7F9zF,MAGTwzF,EAAcv2F,UAAU+/E,QAAU,SAASr/E,GACzC,IAAIyrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAI6D,EAAWjtF,KAAMrC,GAC5BqC,KAAKyzF,OAAOzzF,KAAKosF,OAAOpP,QAAQoM,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GAC/F9zF,MAGTwzF,EAAcv2F,UAAUM,IAAM,SAASI,GACrC,IAAIyrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAIkK,EAAOtzF,KAAMrC,GACxBqC,KAAKyzF,OAAOzzF,KAAKosF,OAAO7uF,IAAI6rF,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GAC3F9zF,MAGTwzF,EAAcv2F,UAAUq3F,YAAc,SAASh4F,EAAQqB,GACrD,IAAI/B,EAAG+4F,EAAWC,EAAUl5F,EAAK0tF,EAQjC,GAPAppF,KAAKu0F,cACS,MAAVj4F,IACFA,EAASuH,EAASvH,IAEP,MAATqB,IACFA,EAAQkG,EAASlG,IAEf7B,MAAMG,QAAQK,GAChB,IAAKV,EAAI,EAAGF,EAAMY,EAAOX,OAAQC,EAAIF,EAAKE,IACxC+4F,EAAYr4F,EAAOV,GACnBoE,KAAKs0F,YAAYK,QAEd,GAAInJ,EAASlvF,GAClB,IAAKq4F,KAAar4F,EACXmpF,EAAQrnF,KAAK9B,EAAQq4F,KAC1BC,EAAWt4F,EAAOq4F,GAClB30F,KAAKs0F,YAAYK,EAAWC,SAG1BrJ,EAAW5tF,KACbA,EAAQA,EAAMgF,SAEhBymF,EAAO,IAAIiK,EAAyBrzF,KAAM1D,EAAQqB,GAClDqC,KAAKyzF,OAAOzzF,KAAKosF,OAAOyI,sBAAsBzL,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GAEtH,OAAO9zF,MAGTwzF,EAAcv2F,UAAUgzF,YAAc,SAAS3vE,EAAS0iE,EAAUxrB,GAChE,IAAI4xB,EAEJ,GADAppF,KAAKu0F,cACDv0F,KAAKg0F,gBACP,MAAM,IAAIl0F,MAAM,yCAIlB,OAFAspF,EAAO,IAAIyG,EAAe7vF,KAAMsgB,EAAS0iE,EAAUxrB,GACnDx3D,KAAKyzF,OAAOzzF,KAAKosF,OAAO6D,YAAY7G,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GACnG9zF,MAGTwzF,EAAcv2F,UAAUigF,QAAU,SAASt7D,EAAMstE,EAAOC,GAEtD,GADAnvF,KAAKu0F,cACO,MAAR3yE,EACF,MAAM,IAAI9hB,MAAM,2BAElB,GAAIE,KAAK4hB,KACP,MAAM,IAAI9hB,MAAM,yCAOlB,OALAE,KAAK6zF,YAAc,IAAI1D,EAAWnwF,KAAMkvF,EAAOC,GAC/CnvF,KAAK6zF,YAAYiB,aAAelzE,EAChC5hB,KAAK6zF,YAAYvD,UAAW,EAC5BtwF,KAAK8zF,eACL9zF,KAAK+zF,SAAS/zF,KAAK8zF,cAAgB9zF,KAAK6zF,YACjC7zF,MAGTwzF,EAAcv2F,UAAU8xF,WAAa,SAASzwF,EAAMX,GAClD,IAAIyrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAIyF,EAAc7uF,KAAM1B,EAAMX,GACrCqC,KAAKyzF,OAAOzzF,KAAKosF,OAAO2C,WAAW3F,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GAClG9zF,MAGTwzF,EAAcv2F,UAAUwzF,QAAU,SAASpC,EAAaC,EAAeC,EAAeC,EAAkBC,GACtG,IAAIrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAIgF,EAAcpuF,KAAMquF,EAAaC,EAAeC,EAAeC,EAAkBC,GAC5FzuF,KAAKyzF,OAAOzzF,KAAKosF,OAAOwC,WAAWxF,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GAClG9zF,MAGTwzF,EAAcv2F,UAAUuiF,OAAS,SAASlhF,EAAMX,GAC9C,IAAIyrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAI4F,EAAahvF,MAAM,EAAO1B,EAAMX,GAC3CqC,KAAKyzF,OAAOzzF,KAAKosF,OAAOsD,UAAUtG,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GACjG9zF,MAGTwzF,EAAcv2F,UAAUyzF,QAAU,SAASpyF,EAAMX,GAC/C,IAAIyrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAI4F,EAAahvF,MAAM,EAAM1B,EAAMX,GAC1CqC,KAAKyzF,OAAOzzF,KAAKosF,OAAOsD,UAAUtG,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GACjG9zF,MAGTwzF,EAAcv2F,UAAU0zF,SAAW,SAASryF,EAAMX,GAChD,IAAIyrF,EAIJ,OAHAppF,KAAKu0F,cACLnL,EAAO,IAAIuG,EAAe3vF,KAAM1B,EAAMX,GACtCqC,KAAKyzF,OAAOzzF,KAAKosF,OAAOwD,YAAYxG,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,aAAe,GAAI9zF,KAAK8zF,aAAe,GACnG9zF,MAGTwzF,EAAcv2F,UAAUqpF,GAAK,WAC3B,GAAItmF,KAAK8zF,aAAe,EACtB,MAAM,IAAIh0F,MAAM,oCAclB,OAZIE,KAAK6zF,aACH7zF,KAAK6zF,YAAYvD,SACnBtwF,KAAK+0F,UAAU/0F,KAAK6zF,aAEpB7zF,KAAKg1F,SAASh1F,KAAK6zF,aAErB7zF,KAAK6zF,YAAc,MAEnB7zF,KAAK+0F,UAAU/0F,KAAK+zF,SAAS/zF,KAAK8zF,sBAE7B9zF,KAAK+zF,SAAS/zF,KAAK8zF,cAC1B9zF,KAAK8zF,eACE9zF,MAGTwzF,EAAcv2F,UAAUm+B,IAAM,WAC5B,KAAOp7B,KAAK8zF,cAAgB,GAC1B9zF,KAAKsmF,KAEP,OAAOtmF,KAAK0zF,SAGdF,EAAcv2F,UAAUs3F,YAAc,WACpC,GAAIv0F,KAAK6zF,YAEP,OADA7zF,KAAK6zF,YAAYvD,UAAW,EACrBtwF,KAAKg1F,SAASh1F,KAAK6zF,cAI9BL,EAAcv2F,UAAU+3F,SAAW,SAAS5L,GAC1C,IAAI7C,EAAKpL,EAAO78E,EAAM8xF,EACtB,IAAKhH,EAAK6L,OAAQ,CAKhB,GAJKj1F,KAAK4hB,MAA8B,IAAtB5hB,KAAK8zF,cAAsB1K,EAAK/kE,OAASynE,EAASniD,UAClE3pC,KAAK4hB,KAAOwnE,GAEdjO,EAAQ,GACJiO,EAAK/kE,OAASynE,EAASniD,QAAS,CAIlC,IAAKrrC,KAHL0B,KAAKoxF,cAAc3lC,MAAQ0nC,EAAYxH,QACvCxQ,EAAQn7E,KAAKosF,OAAO8I,OAAO9L,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,cAAgB,IAAM1K,EAAK9qF,KACrF8xF,EAAOhH,EAAKgL,QAEL3O,EAAQrnF,KAAKgyF,EAAM9xF,KACxBioF,EAAM6J,EAAK9xF,GACX68E,GAASn7E,KAAKosF,OAAOjL,UAAUoF,EAAKvmF,KAAKoxF,cAAepxF,KAAK8zF,eAE/D3Y,IAAUiO,EAAKkH,SAAW,IAAM,MAAQtwF,KAAKosF,OAAO+I,QAAQ/L,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,cAC3F9zF,KAAKoxF,cAAc3lC,MAAQ0nC,EAAYvH,eAEvC5rF,KAAKoxF,cAAc3lC,MAAQ0nC,EAAYxH,QACvCxQ,EAAQn7E,KAAKosF,OAAO8I,OAAO9L,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,cAAgB,aAAe1K,EAAK0L,aAC1F1L,EAAK8F,OAAS9F,EAAK+F,MACrBhU,GAAS,YAAciO,EAAK8F,MAAQ,MAAQ9F,EAAK+F,MAAQ,IAChD/F,EAAK+F,QACdhU,GAAS,YAAciO,EAAK+F,MAAQ,KAElC/F,EAAKkH,UACPnV,GAAS,KACTn7E,KAAKoxF,cAAc3lC,MAAQ0nC,EAAYvH,YAEvC5rF,KAAKoxF,cAAc3lC,MAAQ0nC,EAAYtH,SACvC1Q,GAAS,KAEXA,GAASn7E,KAAKosF,OAAO+I,QAAQ/L,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,cAG9D,OADA9zF,KAAKyzF,OAAOtY,EAAOn7E,KAAK8zF,cACjB1K,EAAK6L,QAAS,IAIzBzB,EAAcv2F,UAAU83F,UAAY,SAAS3L,GAC3C,IAAIjO,EACJ,IAAKiO,EAAKgM,SAUR,OATAja,EAAQ,GACRn7E,KAAKoxF,cAAc3lC,MAAQ0nC,EAAYtH,SAErC1Q,EADEiO,EAAK/kE,OAASynE,EAASniD,QACjB3pC,KAAKosF,OAAO8I,OAAO9L,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,cAAgB,KAAO1K,EAAK9qF,KAAO,IAAM0B,KAAKosF,OAAO+I,QAAQ/L,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,cAE9I9zF,KAAKosF,OAAO8I,OAAO9L,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,cAAgB,KAAO9zF,KAAKosF,OAAO+I,QAAQ/L,EAAMppF,KAAKoxF,cAAepxF,KAAK8zF,cAEtI9zF,KAAKoxF,cAAc3lC,MAAQ0nC,EAAYzH,KACvC1rF,KAAKyzF,OAAOtY,EAAOn7E,KAAK8zF,cACjB1K,EAAKgM,UAAW,GAI3B5B,EAAcv2F,UAAUw2F,OAAS,SAAStY,EAAOka,GAE/C,OADAr1F,KAAKg0F,iBAAkB,EAChBh0F,KAAK2zF,eAAexY,EAAOka,EAAQ,IAG5C7B,EAAcv2F,UAAUy2F,MAAQ,WAE9B,OADA1zF,KAAKi0F,mBAAoB,EAClBj0F,KAAK4zF,iBAGdJ,EAAcv2F,UAAU+uF,UAAY,SAAS1tF,GAC3C,OAAY,MAARA,EACK,GAEA,UAAYA,EAAO,KAI9Bk1F,EAAcv2F,UAAUopF,IAAM,WAC5B,OAAOrmF,KAAK+hB,QAAQpf,MAAM3C,KAAMqd,YAGlCm2E,EAAcv2F,UAAUq4F,IAAM,SAASh3F,EAAMsgF,EAAYvY,GACvD,OAAOrmE,KAAKopF,KAAK9qF,EAAMsgF,EAAYvY,IAGrCmtB,EAAcv2F,UAAUmpF,IAAM,SAASzoF,GACrC,OAAOqC,KAAKqmE,KAAK1oE,IAGnB61F,EAAcv2F,UAAUs4F,IAAM,SAAS53F,GACrC,OAAOqC,KAAK88E,MAAMn/E,IAGpB61F,EAAcv2F,UAAUu4F,IAAM,SAAS73F,GACrC,OAAOqC,KAAKg9E,QAAQr/E,IAGtB61F,EAAcv2F,UAAUw4F,IAAM,SAASn5F,EAAQqB,GAC7C,OAAOqC,KAAKs0F,YAAYh4F,EAAQqB,IAGlC61F,EAAcv2F,UAAUqlC,IAAM,SAAShiB,EAAS0iE,EAAUxrB,GACxD,OAAOx3D,KAAKiwF,YAAY3vE,EAAS0iE,EAAUxrB,IAG7Cg8B,EAAcv2F,UAAUy4F,IAAM,SAAS9zE,EAAMstE,EAAOC,GAClD,OAAOnvF,KAAKk9E,QAAQt7D,EAAMstE,EAAOC,IAGnCqE,EAAcv2F,UAAU+f,EAAI,SAAS1e,EAAMsgF,EAAYvY,GACrD,OAAOrmE,KAAK+hB,QAAQzjB,EAAMsgF,EAAYvY,IAGxCmtB,EAAcv2F,UAAUiB,EAAI,SAASI,EAAMsgF,EAAYvY,GACrD,OAAOrmE,KAAKopF,KAAK9qF,EAAMsgF,EAAYvY,IAGrCmtB,EAAcv2F,UAAUmnB,EAAI,SAASzmB,GACnC,OAAOqC,KAAKqmE,KAAK1oE,IAGnB61F,EAAcv2F,UAAUoD,EAAI,SAAS1C,GACnC,OAAOqC,KAAK88E,MAAMn/E,IAGpB61F,EAAcv2F,UAAU8W,EAAI,SAASpW,GACnC,OAAOqC,KAAKg9E,QAAQr/E,IAGtB61F,EAAcv2F,UAAUyZ,EAAI,SAAS/Y,GACnC,OAAOqC,KAAKzC,IAAII,IAGlB61F,EAAcv2F,UAAUrB,EAAI,SAASU,EAAQqB,GAC3C,OAAOqC,KAAKs0F,YAAYh4F,EAAQqB,IAGlC61F,EAAcv2F,UAAUspF,IAAM,WAC5B,OAAIvmF,KAAK6zF,aAAe7zF,KAAK6zF,YAAYxvE,OAASynE,EAASf,QAClD/qF,KAAKywF,QAAQ9tF,MAAM3C,KAAMqd,WAEzBrd,KAAKmhF,UAAUx+E,MAAM3C,KAAMqd,YAItCm2E,EAAcv2F,UAAUsK,EAAI,WAC1B,OAAIvH,KAAK6zF,aAAe7zF,KAAK6zF,YAAYxvE,OAASynE,EAASf,QAClD/qF,KAAKywF,QAAQ9tF,MAAM3C,KAAMqd,WAEzBrd,KAAKmhF,UAAUx+E,MAAM3C,KAAMqd,YAItCm2E,EAAcv2F,UAAU4zF,IAAM,SAASvyF,EAAMX,GAC3C,OAAOqC,KAAKw/E,OAAOlhF,EAAMX,IAG3B61F,EAAcv2F,UAAU6zF,KAAO,SAASxyF,EAAMX,GAC5C,OAAOqC,KAAK0wF,QAAQpyF,EAAMX,IAG5B61F,EAAcv2F,UAAU28B,IAAM,SAASt7B,EAAMX,GAC3C,OAAOqC,KAAK2wF,SAASryF,EAAMX,IAGtB61F,EAheyB,KAoejCp1F,KAAK4B,6BC9gBR,WACE,IAAI8rF,EAAoBa,EAEtBlH,EAAU,GAAGr4E,eAEfu/E,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnBlE,EAAOC,QAAsB,SAASopB,GAGpC,SAAS+wE,EAAS53C,GAChB43C,EAASpN,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAC1C/9C,KAAKqkB,KAAOynE,EAASR,MAWvB,OAvBS,SAASnnD,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAOmN,EAAU/wE,GAOjB+wE,EAAS14F,UAAU2E,MAAQ,WACzB,OAAOhF,OAAOioB,OAAO7kB,OAGvB21F,EAAS14F,UAAUkB,SAAW,SAAS8/D,GACrC,MAAO,IAGF03B,EAhBoB,CAkB1BhJ,KAEFvuF,KAAK4B,6BC7BR,WACE,IAAI8rF,EAAUC,EAA0BmE,EAAiBvD,EAAS9oF,EAAU0nF,EAAYC,EAAU7F,EAEhGF,EAAU,GAAGr4E,eAEfu4E,EAAMlmF,EAAQ,MAAc+rF,EAAW7F,EAAI6F,SAAUD,EAAa5F,EAAI4F,WAAY1nF,EAAW8hF,EAAI9hF,SAEjG8oF,EAAUltF,EAAQ,MAElBqsF,EAAWrsF,EAAQ,MAEnBssF,EAAetsF,EAAQ,MAEvBywF,EAAkBzwF,EAAQ,MAE1BlE,EAAOC,QAAwB,SAASopB,GAGtC,SAASwuE,EAAWr1C,EAAQz/C,EAAMsgF,GAChC,IAAIz6C,EAAOsgD,EAAG/oF,EAAK00F,EAEnB,GADAgD,EAAW7K,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAChC,MAARz/C,EACF,MAAM,IAAIwB,MAAM,yBAA2BE,KAAKgsF,aASlD,GAPAhsF,KAAK1B,KAAO0B,KAAKG,UAAU7B,KAAKA,GAChC0B,KAAKqkB,KAAOynE,EAASniD,QACrB3pC,KAAKo0F,QAAU,GACfp0F,KAAKmsF,eAAiB,KACJ,MAAdvN,GACF5+E,KAAKmhF,UAAUvC,GAEb7gC,EAAO15B,OAASynE,EAAShB,WAC3B9qF,KAAK41F,QAAS,EACd51F,KAAKuwF,eAAiBxyC,EACtBA,EAAO73B,WAAalmB,KAChB+9C,EAAOuyC,UAET,IAAK7L,EAAI,EAAG/oF,GADZ00F,EAAOryC,EAAOuyC,UACS30F,OAAQ8oF,EAAI/oF,EAAK+oF,IAEtC,IADAtgD,EAAQisD,EAAK3L,IACHpgE,OAASynE,EAASf,QAAS,CACnC5mD,EAAM7lC,KAAO0B,KAAK1B,KAClB,OA2PV,OAlSS,SAAS6lC,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAchQurF,CAAO4K,EAAYxuE,GAgCnBhoB,OAAOC,eAAeu2F,EAAWn2F,UAAW,UAAW,CACrDojB,IAAK,WACH,OAAOrgB,KAAK1B,QAIhB1B,OAAOC,eAAeu2F,EAAWn2F,UAAW,eAAgB,CAC1DojB,IAAK,WACH,MAAO,MAIXzjB,OAAOC,eAAeu2F,EAAWn2F,UAAW,SAAU,CACpDojB,IAAK,WACH,MAAO,MAIXzjB,OAAOC,eAAeu2F,EAAWn2F,UAAW,YAAa,CACvDojB,IAAK,WACH,OAAOrgB,KAAK1B,QAIhB1B,OAAOC,eAAeu2F,EAAWn2F,UAAW,KAAM,CAChDojB,IAAK,WACH,MAAM,IAAIvgB,MAAM,sCAAwCE,KAAKgsF,gBAIjEpvF,OAAOC,eAAeu2F,EAAWn2F,UAAW,YAAa,CACvDojB,IAAK,WACH,MAAM,IAAIvgB,MAAM,sCAAwCE,KAAKgsF,gBAIjEpvF,OAAOC,eAAeu2F,EAAWn2F,UAAW,YAAa,CACvDojB,IAAK,WACH,MAAM,IAAIvgB,MAAM,sCAAwCE,KAAKgsF,gBAIjEpvF,OAAOC,eAAeu2F,EAAWn2F,UAAW,aAAc,CACxDojB,IAAK,WAIH,OAHKrgB,KAAK61F,cAAiB71F,KAAK61F,aAAarF,QAC3CxwF,KAAK61F,aAAe,IAAI3F,EAAgBlwF,KAAKo0F,UAExCp0F,KAAK61F,gBAIhBzC,EAAWn2F,UAAU2E,MAAQ,WAC3B,IAAI2kF,EAAK4N,EAAS2B,EAAY1F,EAO9B,IAAK+D,KANL2B,EAAal5F,OAAOioB,OAAO7kB,OACZ41F,SACbE,EAAWvF,eAAiB,MAE9BuF,EAAW1B,QAAU,GACrBhE,EAAOpwF,KAAKo0F,QAEL3O,EAAQrnF,KAAKgyF,EAAM+D,KACxB5N,EAAM6J,EAAK+D,GACX2B,EAAW1B,QAAQD,GAAW5N,EAAI3kF,SASpC,OAPAk0F,EAAWxF,SAAW,GACtBtwF,KAAKswF,SAASptF,SAAQ,SAASihC,GAC7B,IAAI4xD,EAGJ,OAFAA,EAAc5xD,EAAMviC,SACRm8C,OAAS+3C,EACdA,EAAWxF,SAAShwF,KAAKy1F,MAE3BD,GAGT1C,EAAWn2F,UAAUkkF,UAAY,SAAS7iF,EAAMX,GAC9C,IAAIw2F,EAASlI,EAIb,GAHY,MAAR3tF,IACFA,EAAOuF,EAASvF,IAEdktF,EAASltF,GACX,IAAK61F,KAAW71F,EACTmnF,EAAQrnF,KAAKE,EAAM61F,KACxBlI,EAAW3tF,EAAK61F,GAChBn0F,KAAKmhF,UAAUgT,EAASlI,SAGtBV,EAAW5tF,KACbA,EAAQA,EAAMgF,SAEZ3C,KAAKi+D,QAAQy2B,oBAAgC,MAAT/2F,EACtCqC,KAAKo0F,QAAQ91F,GAAQ,IAAIytF,EAAa/rF,KAAM1B,EAAM,IAChC,MAATX,IACTqC,KAAKo0F,QAAQ91F,GAAQ,IAAIytF,EAAa/rF,KAAM1B,EAAMX,IAGtD,OAAOqC,MAGTozF,EAAWn2F,UAAU+4F,gBAAkB,SAAS13F,GAC9C,IAAI61F,EAAS1P,EAAG/oF,EAChB,GAAY,MAAR4C,EACF,MAAM,IAAIwB,MAAM,2BAA6BE,KAAKgsF,aAGpD,GADA1tF,EAAOuF,EAASvF,GACZxC,MAAMG,QAAQqC,GAChB,IAAKmmF,EAAI,EAAG/oF,EAAM4C,EAAK3C,OAAQ8oF,EAAI/oF,EAAK+oF,IACtC0P,EAAU71F,EAAKmmF,UACRzkF,KAAKo0F,QAAQD,eAGfn0F,KAAKo0F,QAAQ91F,GAEtB,OAAO0B,MAGTozF,EAAWn2F,UAAUkB,SAAW,SAAS8/D,GACvC,OAAOj+D,KAAKi+D,QAAQmuB,OAAOrqE,QAAQ/hB,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAG7Em1B,EAAWn2F,UAAUspF,IAAM,SAASjoF,EAAMX,GACxC,OAAOqC,KAAKmhF,UAAU7iF,EAAMX,IAG9By1F,EAAWn2F,UAAUsK,EAAI,SAASjJ,EAAMX,GACtC,OAAOqC,KAAKmhF,UAAU7iF,EAAMX,IAG9By1F,EAAWn2F,UAAUg5F,aAAe,SAAS33F,GAC3C,OAAI0B,KAAKo0F,QAAQhnF,eAAe9O,GACvB0B,KAAKo0F,QAAQ91F,GAAMX,MAEnB,MAIXy1F,EAAWn2F,UAAUi5F,aAAe,SAAS53F,EAAMX,GACjD,MAAM,IAAImC,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUk5F,iBAAmB,SAAS73F,GAC/C,OAAI0B,KAAKo0F,QAAQhnF,eAAe9O,GACvB0B,KAAKo0F,QAAQ91F,GAEb,MAIX80F,EAAWn2F,UAAUm5F,iBAAmB,SAASC,GAC/C,MAAM,IAAIv2F,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUq5F,oBAAsB,SAASC,GAClD,MAAM,IAAIz2F,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAU60F,qBAAuB,SAASxzF,GACnD,MAAM,IAAIwB,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUu5F,eAAiB,SAASjK,EAAcC,GAC3D,MAAM,IAAI1sF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUw5F,eAAiB,SAASlK,EAAcsB,EAAelwF,GAC1E,MAAM,IAAImC,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUy5F,kBAAoB,SAASnK,EAAcC,GAC9D,MAAM,IAAI1sF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAU05F,mBAAqB,SAASpK,EAAcC,GAC/D,MAAM,IAAI1sF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAU25F,mBAAqB,SAASP,GACjD,MAAM,IAAIv2F,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUo1F,uBAAyB,SAAS9F,EAAcC,GACnE,MAAM,IAAI1sF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAU45F,aAAe,SAASv4F,GAC3C,OAAO0B,KAAKo0F,QAAQhnF,eAAe9O,IAGrC80F,EAAWn2F,UAAU65F,eAAiB,SAASvK,EAAcC,GAC3D,MAAM,IAAI1sF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAU85F,eAAiB,SAASz4F,EAAM4tF,GACnD,OAAIlsF,KAAKo0F,QAAQhnF,eAAe9O,GACvB0B,KAAKo0F,QAAQ91F,GAAM4tF,KAEnBA,GAIXkH,EAAWn2F,UAAU+5F,iBAAmB,SAASzK,EAAcC,EAAWN,GACxE,MAAM,IAAIpsF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUg6F,mBAAqB,SAASC,EAAQhL,GACzD,MAAM,IAAIpsF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAU60F,qBAAuB,SAASC,GACnD,MAAM,IAAIjyF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUo1F,uBAAyB,SAAS9F,EAAcC,GACnE,MAAM,IAAI1sF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAU01F,uBAAyB,SAASC,GACrD,MAAM,IAAI9yF,MAAM,sCAAwCE,KAAKgsF,cAG/DoH,EAAWn2F,UAAUqvF,YAAc,SAASlD,GAC1C,IAAIxtF,EAAG6oF,EAAG2L,EACV,IAAKgD,EAAW7K,UAAU+D,YAAY3pF,MAAM3C,KAAMqd,WAAWivE,YAAYlD,GACvE,OAAO,EAET,GAAIA,EAAKmD,eAAiBvsF,KAAKusF,aAC7B,OAAO,EAET,GAAInD,EAAK/H,SAAWrhF,KAAKqhF,OACvB,OAAO,EAET,GAAI+H,EAAKoD,YAAcxsF,KAAKwsF,UAC1B,OAAO,EAET,GAAIpD,EAAKgL,QAAQz4F,SAAWqE,KAAKo0F,QAAQz4F,OACvC,OAAO,EAET,IAAKC,EAAI6oF,EAAI,EAAG2L,EAAOpwF,KAAKo0F,QAAQz4F,OAAS,EAAG,GAAKy0F,EAAO3L,GAAK2L,EAAO3L,GAAK2L,EAAMx0F,EAAI,GAAKw0F,IAAS3L,IAAMA,EACzG,IAAKzkF,KAAKo0F,QAAQx4F,GAAG0wF,YAAYlD,EAAKgL,QAAQx4F,IAC5C,OAAO,EAGX,OAAO,GAGFw3F,EArRsB,CAuR5BzG,KAEFvuF,KAAK4B,yBCxSR,WAGEzE,EAAOC,QAA6B,WAClC,SAAS00F,EAAgBM,GACvBxwF,KAAKwwF,MAAQA,EA+Cf,OA5CA5zF,OAAOC,eAAeqzF,EAAgBjzF,UAAW,SAAU,CACzDojB,IAAK,WACH,OAAOzjB,OAAO6F,KAAKzC,KAAKwwF,OAAO70F,QAAU,KAI7Cu0F,EAAgBjzF,UAAU2E,MAAQ,WAChC,OAAO5B,KAAKwwF,MAAQ,MAGtBN,EAAgBjzF,UAAUk6F,aAAe,SAAS74F,GAChD,OAAO0B,KAAKwwF,MAAMlyF,IAGpB4xF,EAAgBjzF,UAAUm6F,aAAe,SAAShO,GAChD,IAAIiO,EAGJ,OAFAA,EAAUr3F,KAAKwwF,MAAMpH,EAAKI,UAC1BxpF,KAAKwwF,MAAMpH,EAAKI,UAAYJ,EACrBiO,GAAW,MAGpBnH,EAAgBjzF,UAAUq6F,gBAAkB,SAASh5F,GACnD,IAAI+4F,EAGJ,OAFAA,EAAUr3F,KAAKwwF,MAAMlyF,UACd0B,KAAKwwF,MAAMlyF,GACX+4F,GAAW,MAGpBnH,EAAgBjzF,UAAU8F,KAAO,SAASqtC,GACxC,OAAOpwC,KAAKwwF,MAAM5zF,OAAO6F,KAAKzC,KAAKwwF,OAAOpgD,KAAW,MAGvD8/C,EAAgBjzF,UAAUs6F,eAAiB,SAAShL,EAAcC,GAChE,MAAM,IAAI1sF,MAAM,wCAGlBowF,EAAgBjzF,UAAUu6F,eAAiB,SAASpO,GAClD,MAAM,IAAItpF,MAAM,wCAGlBowF,EAAgBjzF,UAAUw6F,kBAAoB,SAASlL,EAAcC,GACnE,MAAM,IAAI1sF,MAAM,wCAGXowF,EAjD2B,KAqDnC9xF,KAAK4B,6BCxDR,WACE,IAAI03F,EAAkB5L,EAAUY,EAAUO,EAAY4C,EAAgBM,EAAYwF,EAAUvC,EAAsCuE,EAAatE,EAA0BC,EAAQC,EAAS1vF,EAAUulE,EAASmiB,EAAYC,EAAU4E,EACjO3K,EAAU,GAAGr4E,eAEfgjF,EAAO3wF,EAAQ,MAAc+rF,EAAW4E,EAAK5E,SAAUD,EAAa6E,EAAK7E,WAAYniB,EAAUgnB,EAAKhnB,QAASvlE,EAAWusF,EAAKvsF,SAE7HuvF,EAAa,KAEb1G,EAAW,KAEXO,EAAa,KAEb4C,EAAiB,KAEjBM,EAAa,KAEbmD,EAAS,KAETC,EAAU,KAEVF,EAA2B,KAE3BsC,EAAW,KAEX7J,EAAW,KAEX6L,EAAc,KAIdD,EAAmB,KAEnBn8F,EAAOC,QAAqB,WAC1B,SAASmxF,EAAQiL,GACf53F,KAAK+9C,OAAS65C,EACV53F,KAAK+9C,SACP/9C,KAAKi+D,QAAUj+D,KAAK+9C,OAAOkgB,QAC3Bj+D,KAAKG,UAAYH,KAAK+9C,OAAO59C,WAE/BH,KAAKrC,MAAQ,KACbqC,KAAKswF,SAAW,GAChBtwF,KAAK63F,QAAU,KACVzE,IACHA,EAAa3zF,EAAQ,MACrBitF,EAAWjtF,EAAQ,MACnBwtF,EAAaxtF,EAAQ,MACrBowF,EAAiBpwF,EAAQ,MACzB0wF,EAAa1wF,EAAQ,MACrB6zF,EAAS7zF,EAAQ,MACjB8zF,EAAU9zF,EAAQ,MAClB4zF,EAA2B5zF,EAAQ,KACnCk2F,EAAWl2F,EAAQ,MACnBqsF,EAAWrsF,EAAQ,MACnBk4F,EAAcl4F,EAAQ,MACJA,EAAQ,MAC1Bi4F,EAAmBj4F,EAAQ,OAotB/B,OAhtBA7C,OAAOC,eAAe8vF,EAAQ1vF,UAAW,WAAY,CACnDojB,IAAK,WACH,OAAOrgB,KAAK1B,QAIhB1B,OAAOC,eAAe8vF,EAAQ1vF,UAAW,WAAY,CACnDojB,IAAK,WACH,OAAOrgB,KAAKqkB,QAIhBznB,OAAOC,eAAe8vF,EAAQ1vF,UAAW,YAAa,CACpDojB,IAAK,WACH,OAAOrgB,KAAKrC,SAIhBf,OAAOC,eAAe8vF,EAAQ1vF,UAAW,aAAc,CACrDojB,IAAK,WACH,OAAOrgB,KAAK+9C,UAIhBnhD,OAAOC,eAAe8vF,EAAQ1vF,UAAW,aAAc,CACrDojB,IAAK,WAIH,OAHKrgB,KAAK83F,eAAkB93F,KAAK83F,cAActH,QAC7CxwF,KAAK83F,cAAgB,IAAIH,EAAY33F,KAAKswF,WAErCtwF,KAAK83F,iBAIhBl7F,OAAOC,eAAe8vF,EAAQ1vF,UAAW,aAAc,CACrDojB,IAAK,WACH,OAAOrgB,KAAKswF,SAAS,IAAM,QAI/B1zF,OAAOC,eAAe8vF,EAAQ1vF,UAAW,YAAa,CACpDojB,IAAK,WACH,OAAOrgB,KAAKswF,SAAStwF,KAAKswF,SAAS30F,OAAS,IAAM,QAItDiB,OAAOC,eAAe8vF,EAAQ1vF,UAAW,kBAAmB,CAC1DojB,IAAK,WACH,IAAIzkB,EAEJ,OADAA,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MAC1BA,KAAK+9C,OAAOuyC,SAAS10F,EAAI,IAAM,QAI1CgB,OAAOC,eAAe8vF,EAAQ1vF,UAAW,cAAe,CACtDojB,IAAK,WACH,IAAIzkB,EAEJ,OADAA,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MAC1BA,KAAK+9C,OAAOuyC,SAAS10F,EAAI,IAAM,QAI1CgB,OAAOC,eAAe8vF,EAAQ1vF,UAAW,gBAAiB,CACxDojB,IAAK,WACH,OAAOrgB,KAAKqxF,YAAc,QAI9Bz0F,OAAOC,eAAe8vF,EAAQ1vF,UAAW,cAAe,CACtDojB,IAAK,WACH,IAAI8jB,EAAOsgD,EAAG/oF,EAAK20F,EAAMtpF,EACzB,GAAI/G,KAAKihF,WAAa6K,EAASniD,SAAW3pC,KAAKihF,WAAa6K,EAASd,iBAAkB,CAGrF,IAFAjkF,EAAM,GAED09E,EAAI,EAAG/oF,GADZ20F,EAAOrwF,KAAKswF,UACW30F,OAAQ8oF,EAAI/oF,EAAK+oF,KACtCtgD,EAAQksD,EAAK5L,IACHsT,cACRhxF,GAAOo9B,EAAM4zD,aAGjB,OAAOhxF,EAEP,OAAO,MAGX2hB,IAAK,SAAS/qB,GACZ,MAAM,IAAImC,MAAM,sCAAwCE,KAAKgsF,gBAIjEW,EAAQ1vF,UAAU+6F,UAAY,SAASj6C,GACrC,IAAI5Z,EAAOsgD,EAAG/oF,EAAK20F,EAAM3jE,EAQzB,IAPA1sB,KAAK+9C,OAASA,EACVA,IACF/9C,KAAKi+D,QAAUlgB,EAAOkgB,QACtBj+D,KAAKG,UAAY49C,EAAO59C,WAG1BusB,EAAU,GACL+3D,EAAI,EAAG/oF,GAFZ20F,EAAOrwF,KAAKswF,UAEW30F,OAAQ8oF,EAAI/oF,EAAK+oF,IACtCtgD,EAAQksD,EAAK5L,GACb/3D,EAAQpsB,KAAK6jC,EAAM6zD,UAAUh4F,OAE/B,OAAO0sB,GAGTigE,EAAQ1vF,UAAU8kB,QAAU,SAASzjB,EAAMsgF,EAAYvY,GACrD,IAAI4xB,EAAWl1F,EAAM0hF,EAAG12E,EAAGjR,EAAKo7F,EAAWx8F,EAAKy8F,EAAM9H,EAAM+H,EAAM7qF,EAelE,GAdA2qF,EAAY,KACO,OAAftZ,GAAgC,MAARvY,IACPuY,GAAnByR,EAAO,CAAC,GAAI,OAAyB,GAAIhqB,EAAOgqB,EAAK,IAErC,MAAdzR,IACFA,EAAa,IAEfA,EAAa/6E,EAAS+6E,GACjB4M,EAAS5M,KACevY,GAA3B+xB,EAAO,CAACxZ,EAAYvY,IAAmB,GAAIuY,EAAawZ,EAAK,IAEnD,MAAR95F,IACFA,EAAOuF,EAASvF,IAEdxC,MAAMG,QAAQqC,GAChB,IAAKmmF,EAAI,EAAG/oF,EAAM4C,EAAK3C,OAAQ8oF,EAAI/oF,EAAK+oF,IACtC1hF,EAAOzE,EAAKmmF,GACZyT,EAAYl4F,KAAK+hB,QAAQhf,QAEtB,GAAIwoF,EAAWjtF,GACpB45F,EAAYl4F,KAAK+hB,QAAQzjB,EAAKqE,cACzB,GAAI6oF,EAASltF,IAClB,IAAKxB,KAAOwB,EACV,GAAKmnF,EAAQrnF,KAAKE,EAAMxB,GAKxB,GAJAyQ,EAAMjP,EAAKxB,GACPyuF,EAAWh+E,KACbA,EAAMA,EAAI5K,UAEP3C,KAAKi+D,QAAQo6B,kBAAoBr4F,KAAKG,UAAUm4F,eAA+D,IAA9Cx7F,EAAIgV,QAAQ9R,KAAKG,UAAUm4F,eAC/FJ,EAAYl4F,KAAKmhF,UAAUrkF,EAAI6S,OAAO3P,KAAKG,UAAUm4F,cAAc38F,QAAS4R,QACvE,IAAKvN,KAAKi+D,QAAQs6B,oBAAsBz8F,MAAMG,QAAQsR,IAAQ67D,EAAQ77D,GAC3E2qF,EAAYl4F,KAAKq0F,aACZ,GAAI7I,EAASj+E,IAAQ67D,EAAQ77D,GAClC2qF,EAAYl4F,KAAK+hB,QAAQjlB,QACpB,GAAKkD,KAAKi+D,QAAQu6B,eAAyB,MAAPjrF,EAEpC,IAAKvN,KAAKi+D,QAAQs6B,oBAAsBz8F,MAAMG,QAAQsR,GAC3D,IAAKQ,EAAI,EAAGoqF,EAAO5qF,EAAI5R,OAAQoS,EAAIoqF,EAAMpqF,IACvChL,EAAOwK,EAAIQ,IACXkqF,EAAY,IACFn7F,GAAOiG,EACjBm1F,EAAYl4F,KAAK+hB,QAAQk2E,QAElBzM,EAASj+E,IACbvN,KAAKi+D,QAAQo6B,kBAAoBr4F,KAAKG,UAAUs4F,gBAAiE,IAA/C37F,EAAIgV,QAAQ9R,KAAKG,UAAUs4F,gBAChGP,EAAYl4F,KAAK+hB,QAAQxU,IAEzB2qF,EAAYl4F,KAAK+hB,QAAQjlB,IACfilB,QAAQxU,GAGpB2qF,EAAYl4F,KAAK+hB,QAAQjlB,EAAKyQ,QAhB9B2qF,EAAYl4F,KAAKq0F,aAuBnB6D,EAJQl4F,KAAKi+D,QAAQu6B,eAA0B,OAATnyB,GAGnCrmE,KAAKi+D,QAAQo6B,kBAAoBr4F,KAAKG,UAAUs4F,gBAAkE,IAAhDn6F,EAAKwT,QAAQ9R,KAAKG,UAAUs4F,gBACrFz4F,KAAKqmE,KAAKA,IACZrmE,KAAKi+D,QAAQo6B,kBAAoBr4F,KAAKG,UAAUu4F,iBAAoE,IAAjDp6F,EAAKwT,QAAQ9R,KAAKG,UAAUu4F,iBAC7F14F,KAAK88E,MAAMzW,IACbrmE,KAAKi+D,QAAQo6B,kBAAoBr4F,KAAKG,UAAUw4F,mBAAwE,IAAnDr6F,EAAKwT,QAAQ9R,KAAKG,UAAUw4F,mBAC/F34F,KAAKg9E,QAAQ3W,IACfrmE,KAAKi+D,QAAQo6B,kBAAoBr4F,KAAKG,UAAUy4F,eAAgE,IAA/Ct6F,EAAKwT,QAAQ9R,KAAKG,UAAUy4F,eAC3F54F,KAAKzC,IAAI8oE,IACXrmE,KAAKi+D,QAAQo6B,kBAAoBr4F,KAAKG,UAAU04F,cAA8D,IAA9Cv6F,EAAKwT,QAAQ9R,KAAKG,UAAU04F,cAC1F74F,KAAKs0F,YAAYh2F,EAAKqR,OAAO3P,KAAKG,UAAU04F,aAAal9F,QAAS0qE,GAElErmE,KAAKopF,KAAK9qF,EAAMsgF,EAAYvY,GAb9BrmE,KAAKq0F,QAgBnB,GAAiB,MAAb6D,EACF,MAAM,IAAIp4F,MAAM,uCAAyCxB,EAAO,KAAO0B,KAAKgsF,aAE9E,OAAOkM,GAGTvL,EAAQ1vF,UAAU67F,aAAe,SAASx6F,EAAMsgF,EAAYvY,GAC1D,IAAIliC,EAAOvoC,EAAGm9F,EAAUC,EAAUC,EAClC,GAAY,MAAR36F,EAAeA,EAAK+lB,UAAO,EAY7B,OAVA20E,EAAWpa,GADXma,EAAWz6F,GAEF05F,UAAUh4F,MACfg5F,GACFp9F,EAAI00F,SAASx+E,QAAQknF,GACrBC,EAAU3I,SAASxuE,OAAOlmB,GAC1B00F,SAAShwF,KAAKy4F,GACdj9F,MAAMmB,UAAUqD,KAAKqC,MAAM2tF,SAAU2I,IAErC3I,SAAShwF,KAAKy4F,GAETA,EAEP,GAAI/4F,KAAK41F,OACP,MAAM,IAAI91F,MAAM,yCAA2CE,KAAKgsF,UAAU1tF,IAM5E,OAJA1C,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MACjCi5F,EAAUj5F,KAAK+9C,OAAOuyC,SAASxuE,OAAOlmB,GACtCuoC,EAAQnkC,KAAK+9C,OAAOh8B,QAAQzjB,EAAMsgF,EAAYvY,GAC9CvqE,MAAMmB,UAAUqD,KAAKqC,MAAM3C,KAAK+9C,OAAOuyC,SAAU2I,GAC1C90D,GAIXwoD,EAAQ1vF,UAAUi8F,YAAc,SAAS56F,EAAMsgF,EAAYvY,GACzD,IAAIliC,EAAOvoC,EAAGq9F,EACd,GAAIj5F,KAAK41F,OACP,MAAM,IAAI91F,MAAM,yCAA2CE,KAAKgsF,UAAU1tF,IAM5E,OAJA1C,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MACjCi5F,EAAUj5F,KAAK+9C,OAAOuyC,SAASxuE,OAAOlmB,EAAI,GAC1CuoC,EAAQnkC,KAAK+9C,OAAOh8B,QAAQzjB,EAAMsgF,EAAYvY,GAC9CvqE,MAAMmB,UAAUqD,KAAKqC,MAAM3C,KAAK+9C,OAAOuyC,SAAU2I,GAC1C90D,GAGTwoD,EAAQ1vF,UAAUk8F,OAAS,WACzB,IAAIv9F,EACJ,GAAIoE,KAAK41F,OACP,MAAM,IAAI91F,MAAM,mCAAqCE,KAAKgsF,aAI5D,OAFApwF,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MACjC,GAAG8hB,OAAOnf,MAAM3C,KAAK+9C,OAAOuyC,SAAU,CAAC10F,EAAGA,EAAIA,EAAI,GAAGiH,OAAc,KAC5D7C,KAAK+9C,QAGd4uC,EAAQ1vF,UAAUmsF,KAAO,SAAS9qF,EAAMsgF,EAAYvY,GAClD,IAAIliC,EAAOksD,EAcX,OAbY,MAAR/xF,IACFA,EAAOuF,EAASvF,IAElBsgF,IAAeA,EAAa,IAC5BA,EAAa/6E,EAAS+6E,GACjB4M,EAAS5M,KACevY,GAA3BgqB,EAAO,CAACzR,EAAYvY,IAAmB,GAAIuY,EAAayR,EAAK,IAE/DlsD,EAAQ,IAAIivD,EAAWpzF,KAAM1B,EAAMsgF,GACvB,MAARvY,GACFliC,EAAMkiC,KAAKA,GAEbrmE,KAAKswF,SAAShwF,KAAK6jC,GACZA,GAGTwoD,EAAQ1vF,UAAUopE,KAAO,SAAS1oE,GAChC,IAAIwmC,EAMJ,OALIqnD,EAAS7tF,IACXqC,KAAK+hB,QAAQpkB,GAEfwmC,EAAQ,IAAIovD,EAAQvzF,KAAMrC,GAC1BqC,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGT2sF,EAAQ1vF,UAAU6/E,MAAQ,SAASn/E,GACjC,IAAIwmC,EAGJ,OAFAA,EAAQ,IAAIuoD,EAAS1sF,KAAMrC,GAC3BqC,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGT2sF,EAAQ1vF,UAAU+/E,QAAU,SAASr/E,GACnC,IAAIwmC,EAGJ,OAFAA,EAAQ,IAAI8oD,EAAWjtF,KAAMrC,GAC7BqC,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGT2sF,EAAQ1vF,UAAUm8F,cAAgB,SAASz7F,GACzC,IAAW/B,EAAGq9F,EAKd,OAJAr9F,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MACjCi5F,EAAUj5F,KAAK+9C,OAAOuyC,SAASxuE,OAAOlmB,GAC9BoE,KAAK+9C,OAAOi/B,QAAQr/E,GAC5B7B,MAAMmB,UAAUqD,KAAKqC,MAAM3C,KAAK+9C,OAAOuyC,SAAU2I,GAC1Cj5F,MAGT2sF,EAAQ1vF,UAAUo8F,aAAe,SAAS17F,GACxC,IAAW/B,EAAGq9F,EAKd,OAJAr9F,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MACjCi5F,EAAUj5F,KAAK+9C,OAAOuyC,SAASxuE,OAAOlmB,EAAI,GAClCoE,KAAK+9C,OAAOi/B,QAAQr/E,GAC5B7B,MAAMmB,UAAUqD,KAAKqC,MAAM3C,KAAK+9C,OAAOuyC,SAAU2I,GAC1Cj5F,MAGT2sF,EAAQ1vF,UAAUM,IAAM,SAASI,GAC/B,IAAIwmC,EAGJ,OAFAA,EAAQ,IAAImvD,EAAOtzF,KAAMrC,GACzBqC,KAAKswF,SAAShwF,KAAK6jC,GACZnkC,MAGT2sF,EAAQ1vF,UAAUo3F,MAAQ,WAGxB,OADQ,IAAIsB,EAAS31F,OAIvB2sF,EAAQ1vF,UAAUq3F,YAAc,SAASh4F,EAAQqB,GAC/C,IAAIg3F,EAAWC,EAAUN,EAAa7P,EAAG/oF,EAOzC,GANc,MAAVY,IACFA,EAASuH,EAASvH,IAEP,MAATqB,IACFA,EAAQkG,EAASlG,IAEf7B,MAAMG,QAAQK,GAChB,IAAKmoF,EAAI,EAAG/oF,EAAMY,EAAOX,OAAQ8oF,EAAI/oF,EAAK+oF,IACxCkQ,EAAYr4F,EAAOmoF,GACnBzkF,KAAKs0F,YAAYK,QAEd,GAAInJ,EAASlvF,GAClB,IAAKq4F,KAAar4F,EACXmpF,EAAQrnF,KAAK9B,EAAQq4F,KAC1BC,EAAWt4F,EAAOq4F,GAClB30F,KAAKs0F,YAAYK,EAAWC,SAG1BrJ,EAAW5tF,KACbA,EAAQA,EAAMgF,SAEhB2xF,EAAc,IAAIjB,EAAyBrzF,KAAM1D,EAAQqB,GACzDqC,KAAKswF,SAAShwF,KAAKg0F,GAErB,OAAOt0F,MAGT2sF,EAAQ1vF,UAAUq8F,kBAAoB,SAASh9F,EAAQqB,GACrD,IAAW/B,EAAGq9F,EAKd,OAJAr9F,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MACjCi5F,EAAUj5F,KAAK+9C,OAAOuyC,SAASxuE,OAAOlmB,GAC9BoE,KAAK+9C,OAAOu2C,YAAYh4F,EAAQqB,GACxC7B,MAAMmB,UAAUqD,KAAKqC,MAAM3C,KAAK+9C,OAAOuyC,SAAU2I,GAC1Cj5F,MAGT2sF,EAAQ1vF,UAAUs8F,iBAAmB,SAASj9F,EAAQqB,GACpD,IAAW/B,EAAGq9F,EAKd,OAJAr9F,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,MACjCi5F,EAAUj5F,KAAK+9C,OAAOuyC,SAASxuE,OAAOlmB,EAAI,GAClCoE,KAAK+9C,OAAOu2C,YAAYh4F,EAAQqB,GACxC7B,MAAMmB,UAAUqD,KAAKqC,MAAM3C,KAAK+9C,OAAOuyC,SAAU2I,GAC1Cj5F,MAGT2sF,EAAQ1vF,UAAUgzF,YAAc,SAAS3vE,EAAS0iE,EAAUxrB,GAC1D,IAAIgiC,EAAKhT,EAUT,OATAgT,EAAMx5F,KAAKqxF,WACX7K,EAAS,IAAIqJ,EAAe2J,EAAKl5E,EAAS0iE,EAAUxrB,GACxB,IAAxBgiC,EAAIlJ,SAAS30F,OACf69F,EAAIlJ,SAASllF,QAAQo7E,GACZgT,EAAIlJ,SAAS,GAAGjsE,OAASynE,EAASZ,YAC3CsO,EAAIlJ,SAAS,GAAK9J,EAElBgT,EAAIlJ,SAASllF,QAAQo7E,GAEhBgT,EAAI53E,QAAU43E,GAGvB7M,EAAQ1vF,UAAUy4F,IAAM,SAASxG,EAAOC,GACtC,IAAWqK,EAAKtc,EAASthF,EAAG6oF,EAAG12E,EAAGrS,EAAKy8F,EAAM9H,EAAM+H,EAInD,IAHAoB,EAAMx5F,KAAKqxF,WACXnU,EAAU,IAAIiT,EAAWqJ,EAAKtK,EAAOC,GAEhCvzF,EAAI6oF,EAAI,EAAG/oF,GADhB20F,EAAOmJ,EAAIlJ,UACgB30F,OAAQ8oF,EAAI/oF,EAAKE,IAAM6oF,EAEhD,GADQ4L,EAAKz0F,GACHyoB,OAASynE,EAASf,QAE1B,OADAyO,EAAIlJ,SAAS10F,GAAKshF,EACXA,EAIX,IAAKthF,EAAImS,EAAI,EAAGoqF,GADhBC,EAAOoB,EAAIlJ,UACiB30F,OAAQoS,EAAIoqF,EAAMv8F,IAAMmS,EAElD,GADQqqF,EAAKx8F,GACHg6F,OAER,OADA4D,EAAIlJ,SAASxuE,OAAOlmB,EAAG,EAAGshF,GACnBA,EAIX,OADAsc,EAAIlJ,SAAShwF,KAAK48E,GACXA,GAGTyP,EAAQ1vF,UAAUqpF,GAAK,WACrB,GAAItmF,KAAK41F,OACP,MAAM,IAAI91F,MAAM,kFAElB,OAAOE,KAAK+9C,QAGd4uC,EAAQ1vF,UAAU2kB,KAAO,WACvB,IAAIwnE,EAEJ,IADAA,EAAOppF,KACAopF,GAAM,CACX,GAAIA,EAAK/kE,OAASynE,EAAShB,SACzB,OAAO1B,EAAKljE,WACP,GAAIkjE,EAAKwM,OACd,OAAOxM,EAEPA,EAAOA,EAAKrrC,SAKlB4uC,EAAQ1vF,UAAUo0F,SAAW,WAC3B,IAAIjI,EAEJ,IADAA,EAAOppF,KACAopF,GAAM,CACX,GAAIA,EAAK/kE,OAASynE,EAAShB,SACzB,OAAO1B,EAEPA,EAAOA,EAAKrrC,SAKlB4uC,EAAQ1vF,UAAUm+B,IAAM,SAAS6iC,GAC/B,OAAOj+D,KAAKqxF,WAAWj2D,IAAI6iC,IAG7B0uB,EAAQ1vF,UAAUw8F,KAAO,WACvB,IAAI79F,EAEJ,IADAA,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,OACzB,EACN,MAAM,IAAIF,MAAM,8BAAgCE,KAAKgsF,aAEvD,OAAOhsF,KAAK+9C,OAAOuyC,SAAS10F,EAAI,IAGlC+wF,EAAQ1vF,UAAUyhB,KAAO,WACvB,IAAI9iB,EAEJ,IAAW,KADXA,EAAIoE,KAAK+9C,OAAOuyC,SAASx+E,QAAQ9R,QACjBpE,IAAMoE,KAAK+9C,OAAOuyC,SAAS30F,OAAS,EAClD,MAAM,IAAImE,MAAM,6BAA+BE,KAAKgsF,aAEtD,OAAOhsF,KAAK+9C,OAAOuyC,SAAS10F,EAAI,IAGlC+wF,EAAQ1vF,UAAUy8F,eAAiB,SAASF,GAC1C,IAAIG,EAKJ,OAJAA,EAAaH,EAAI53E,OAAOhgB,SACbm8C,OAAS/9C,KACpB25F,EAAW/D,QAAS,EACpB51F,KAAKswF,SAAShwF,KAAKq5F,GACZ35F,MAGT2sF,EAAQ1vF,UAAU+uF,UAAY,SAAS1tF,GACrC,IAAI+xF,EAAM+H,EAEV,OAAa,OADb95F,EAAOA,GAAQ0B,KAAK1B,QAC4B,OAAvB+xF,EAAOrwF,KAAK+9C,QAAkBsyC,EAAK/xF,UAAO,GAEhD,MAARA,EACF,YAAc0B,KAAK+9C,OAAOz/C,KAAO,KACL,OAAvB85F,EAAOp4F,KAAK+9C,QAAkBq6C,EAAK95F,UAAO,GAG/C,UAAYA,EAAO,eAAiB0B,KAAK+9C,OAAOz/C,KAAO,IAFvD,UAAYA,EAAO,IAJnB,IAUXquF,EAAQ1vF,UAAUopF,IAAM,SAAS/nF,EAAMsgF,EAAYvY,GACjD,OAAOrmE,KAAK+hB,QAAQzjB,EAAMsgF,EAAYvY,IAGxCsmB,EAAQ1vF,UAAUq4F,IAAM,SAASh3F,EAAMsgF,EAAYvY,GACjD,OAAOrmE,KAAKopF,KAAK9qF,EAAMsgF,EAAYvY,IAGrCsmB,EAAQ1vF,UAAUmpF,IAAM,SAASzoF,GAC/B,OAAOqC,KAAKqmE,KAAK1oE,IAGnBgvF,EAAQ1vF,UAAUs4F,IAAM,SAAS53F,GAC/B,OAAOqC,KAAK88E,MAAMn/E,IAGpBgvF,EAAQ1vF,UAAUu4F,IAAM,SAAS73F,GAC/B,OAAOqC,KAAKg9E,QAAQr/E,IAGtBgvF,EAAQ1vF,UAAUw4F,IAAM,SAASn5F,EAAQqB,GACvC,OAAOqC,KAAKs0F,YAAYh4F,EAAQqB,IAGlCgvF,EAAQ1vF,UAAUu8F,IAAM,WACtB,OAAOx5F,KAAKqxF,YAGd1E,EAAQ1vF,UAAUqlC,IAAM,SAAShiB,EAAS0iE,EAAUxrB,GAClD,OAAOx3D,KAAKiwF,YAAY3vE,EAAS0iE,EAAUxrB,IAG7Cm1B,EAAQ1vF,UAAU+f,EAAI,SAAS1e,EAAMsgF,EAAYvY,GAC/C,OAAOrmE,KAAK+hB,QAAQzjB,EAAMsgF,EAAYvY,IAGxCsmB,EAAQ1vF,UAAUiB,EAAI,SAASI,EAAMsgF,EAAYvY,GAC/C,OAAOrmE,KAAKopF,KAAK9qF,EAAMsgF,EAAYvY,IAGrCsmB,EAAQ1vF,UAAUmnB,EAAI,SAASzmB,GAC7B,OAAOqC,KAAKqmE,KAAK1oE,IAGnBgvF,EAAQ1vF,UAAUoD,EAAI,SAAS1C,GAC7B,OAAOqC,KAAK88E,MAAMn/E,IAGpBgvF,EAAQ1vF,UAAU8W,EAAI,SAASpW,GAC7B,OAAOqC,KAAKg9E,QAAQr/E,IAGtBgvF,EAAQ1vF,UAAUyZ,EAAI,SAAS/Y,GAC7B,OAAOqC,KAAKzC,IAAII,IAGlBgvF,EAAQ1vF,UAAUrB,EAAI,SAASU,EAAQqB,GACrC,OAAOqC,KAAKs0F,YAAYh4F,EAAQqB,IAGlCgvF,EAAQ1vF,UAAU0L,EAAI,WACpB,OAAO3I,KAAKsmF,MAGdqG,EAAQ1vF,UAAU28F,iBAAmB,SAASJ,GAC5C,OAAOx5F,KAAK05F,eAAeF,IAG7B7M,EAAQ1vF,UAAU48F,aAAe,SAASd,EAAUe,GAClD,MAAM,IAAIh6F,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU88F,YAAc,SAASD,GACvC,MAAM,IAAIh6F,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU+8F,YAAc,SAASjB,GACvC,MAAM,IAAIj5F,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAUg9F,cAAgB,WAChC,OAAgC,IAAzBj6F,KAAKswF,SAAS30F,QAGvBgxF,EAAQ1vF,UAAUi9F,UAAY,SAAShI,GACrC,MAAM,IAAIpyF,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU0qE,UAAY,WAC5B,MAAM,IAAI7nE,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAUk9F,YAAc,SAASxM,EAASrtE,GAChD,OAAO,GAGTqsE,EAAQ1vF,UAAUm9F,cAAgB,WAChC,OAA+B,IAAxBp6F,KAAKo0F,QAAQz4F,QAGtBgxF,EAAQ1vF,UAAUo9F,wBAA0B,SAAS3oE,GACnD,IAAIi0D,EAAK9uE,EAET,OADA8uE,EAAM3lF,QACM0xB,EACH,EACE1xB,KAAKqxF,aAAe3/D,EAAM2/D,YACnCx6E,EAAM6gF,EAAiBxN,aAAewN,EAAiBpN,uBACnDxkF,KAAKw0F,SAAW,GAClBzjF,GAAO6gF,EAAiBvN,UAExBtzE,GAAO6gF,EAAiBtN,UAEnBvzE,GACE8uE,EAAI4U,WAAW7oE,GACjBgmE,EAAiBjkD,SAAWikD,EAAiBvN,UAC3CxE,EAAI6U,aAAa9oE,GACnBgmE,EAAiBjkD,SAAWikD,EAAiBtN,UAC3CzE,EAAI8U,YAAY/oE,GAClBgmE,EAAiBvN,UAEjBuN,EAAiBtN,WAI5BuC,EAAQ1vF,UAAUy9F,WAAa,SAAShpE,GACtC,MAAM,IAAI5xB,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU09F,aAAe,SAASpO,GACxC,MAAM,IAAIzsF,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU29F,mBAAqB,SAASrO,GAC9C,MAAM,IAAIzsF,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU49F,mBAAqB,SAASxZ,GAC9C,MAAM,IAAIvhF,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAUqvF,YAAc,SAASlD,GACvC,IAAIxtF,EAAG6oF,EAAG4L,EACV,GAAIjH,EAAKnI,WAAajhF,KAAKihF,SACzB,OAAO,EAET,GAAImI,EAAKkH,SAAS30F,SAAWqE,KAAKswF,SAAS30F,OACzC,OAAO,EAET,IAAKC,EAAI6oF,EAAI,EAAG4L,EAAOrwF,KAAKswF,SAAS30F,OAAS,EAAG,GAAK00F,EAAO5L,GAAK4L,EAAO5L,GAAK4L,EAAMz0F,EAAI,GAAKy0F,IAAS5L,IAAMA,EAC1G,IAAKzkF,KAAKswF,SAAS10F,GAAG0wF,YAAYlD,EAAKkH,SAAS10F,IAC9C,OAAO,EAGX,OAAO,GAGT+wF,EAAQ1vF,UAAUkxF,WAAa,SAASR,EAASrtE,GAC/C,MAAM,IAAIxgB,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU69F,YAAc,SAASh+F,EAAKkF,EAAMmoD,GAClD,MAAM,IAAIrqD,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU89F,YAAc,SAASj+F,GACvC,MAAM,IAAIgD,MAAM,sCAAwCE,KAAKgsF,cAG/DW,EAAQ1vF,UAAU48B,SAAW,SAASnI,GACpC,QAAKA,IAGEA,IAAU1xB,MAAQA,KAAKw6F,aAAa9oE,KAG7Ci7D,EAAQ1vF,UAAUu9F,aAAe,SAASpR,GACxC,IAAIjlD,EAA0BsgD,EAAG/oF,EAAK20F,EAEtC,IAAK5L,EAAI,EAAG/oF,GADZ20F,EAAOrwF,KAAKswF,UACW30F,OAAQ8oF,EAAI/oF,EAAK+oF,IAAK,CAE3C,GAAI2E,KADJjlD,EAAQksD,EAAK5L,IAEX,OAAO,EAGT,GADoBtgD,EAAMq2D,aAAapR,GAErC,OAAO,EAGX,OAAO,GAGTuD,EAAQ1vF,UAAUs9F,WAAa,SAASnR,GACtC,OAAOA,EAAKoR,aAAax6F,OAG3B2sF,EAAQ1vF,UAAUw9F,YAAc,SAASrR,GACvC,IAAI4R,EAASC,EAGb,OAFAD,EAAUh7F,KAAKk7F,aAAa9R,GAC5B6R,EAAUj7F,KAAKk7F,aAAal7F,OACX,IAAbg7F,IAA+B,IAAbC,GAGbD,EAAUC,GAIrBtO,EAAQ1vF,UAAUk+F,YAAc,SAAS/R,GACvC,IAAI4R,EAASC,EAGb,OAFAD,EAAUh7F,KAAKk7F,aAAa9R,GAC5B6R,EAAUj7F,KAAKk7F,aAAal7F,OACX,IAAbg7F,IAA+B,IAAbC,GAGbD,EAAUC,GAIrBtO,EAAQ1vF,UAAUi+F,aAAe,SAAS9R,GACxC,IAAI9wB,EAAOuB,EASX,OARAA,EAAM,EACNvB,GAAQ,EACRt4D,KAAKo7F,gBAAgBp7F,KAAKqxF,YAAY,SAAS4G,GAE7C,GADAp+B,KACKvB,GAAS2/B,IAAc7O,EAC1B,OAAO9wB,GAAQ,KAGfA,EACKuB,GAEC,GAIZ8yB,EAAQ1vF,UAAUm+F,gBAAkB,SAAShS,EAAM7iF,GACjD,IAAI49B,EAAOsgD,EAAG/oF,EAAK20F,EAAMx5E,EAGzB,IAFAuyE,IAASA,EAAOppF,KAAKqxF,YAEhB5M,EAAI,EAAG/oF,GADZ20F,EAAOjH,EAAKkH,UACW30F,OAAQ8oF,EAAI/oF,EAAK+oF,IAAK,CAE3C,GAAI5tE,EAAMtQ,EADV49B,EAAQksD,EAAK5L,IAEX,OAAO5tE,EAGP,GADAA,EAAM7W,KAAKo7F,gBAAgBj3D,EAAO59B,GAEhC,OAAOsQ,IAMR81E,EA3uBmB,KA+uB3BvuF,KAAK4B,yBC/wBR,WAGEzE,EAAOC,QAAyB,WAC9B,SAASm8F,EAAYnH,GACnBxwF,KAAKwwF,MAAQA,EAiBf,OAdA5zF,OAAOC,eAAe86F,EAAY16F,UAAW,SAAU,CACrDojB,IAAK,WACH,OAAOrgB,KAAKwwF,MAAM70F,QAAU,KAIhCg8F,EAAY16F,UAAU2E,MAAQ,WAC5B,OAAO5B,KAAKwwF,MAAQ,MAGtBmH,EAAY16F,UAAU8F,KAAO,SAASqtC,GACpC,OAAOpwC,KAAKwwF,MAAMpgD,IAAU,MAGvBunD,EAnBuB,KAuB/Bv5F,KAAK4B,4BC1BR,WACE,IAAI8rF,EAAUW,EAEZhH,EAAU,GAAGr4E,eAEf0+E,EAAWrsF,EAAQ,MAEnBgtF,EAAmBhtF,EAAQ,MAE3BlE,EAAOC,QAAsC,SAASopB,GAGpD,SAASyuE,EAAyBt1C,EAAQzhD,EAAQqB,GAEhD,GADA01F,EAAyB9K,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAC5C,MAAVzhD,EACF,MAAM,IAAIwD,MAAM,+BAAiCE,KAAKgsF,aAExDhsF,KAAKqkB,KAAOynE,EAASlB,sBACrB5qF,KAAK1D,OAAS0D,KAAKG,UAAUw0F,UAAUr4F,GACvC0D,KAAK1B,KAAO0B,KAAK1D,OACbqB,IACFqC,KAAKrC,MAAQqC,KAAKG,UAAUy0F,SAASj3F,IAsBzC,OAzCS,SAASwmC,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAO6K,EAA0BzuE,GAejCyuE,EAAyBp2F,UAAU2E,MAAQ,WACzC,OAAOhF,OAAOioB,OAAO7kB,OAGvBqzF,EAAyBp2F,UAAUkB,SAAW,SAAS8/D,GACrD,OAAOj+D,KAAKi+D,QAAQmuB,OAAOyI,sBAAsB70F,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAG3Fo1B,EAAyBp2F,UAAUqvF,YAAc,SAASlD,GACxD,QAAKiK,EAAyB9K,UAAU+D,YAAY3pF,MAAM3C,KAAMqd,WAAWivE,YAAYlD,IAGnFA,EAAK9sF,SAAW0D,KAAK1D,QAMpB+2F,EAlCoC,CAoC1C5G,KAEFruF,KAAK4B,6BC/CR,WACE,IAAI8rF,EAAUa,EAEZlH,EAAU,GAAGr4E,eAEf0+E,EAAWrsF,EAAQ,MAEnBktF,EAAUltF,EAAQ,MAElBlE,EAAOC,QAAoB,SAASopB,GAGlC,SAAS0uE,EAAOv1C,EAAQsoB,GAEtB,GADAitB,EAAO/K,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAC5B,MAARsoB,EACF,MAAM,IAAIvmE,MAAM,qBAAuBE,KAAKgsF,aAE9ChsF,KAAKqkB,KAAOynE,EAASX,IACrBnrF,KAAKrC,MAAQqC,KAAKG,UAAU5C,IAAI8oE,GAWlC,OA3BS,SAASliC,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAO8K,EAAQ1uE,GAWf0uE,EAAOr2F,UAAU2E,MAAQ,WACvB,OAAOhF,OAAOioB,OAAO7kB,OAGvBszF,EAAOr2F,UAAUkB,SAAW,SAAS8/D,GACnC,OAAOj+D,KAAKi+D,QAAQmuB,OAAO7uF,IAAIyC,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAGlEq1B,EApBkB,CAsBxB3G,KAEFvuF,KAAK4B,6BCjCR,WACE,IAAI8rF,EAAUqH,EAA8BkI,EAE1C5V,EAAU,GAAGr4E,eAEf0+E,EAAWrsF,EAAQ,MAEnB47F,EAAgB57F,EAAQ,MAExB0zF,EAAc1zF,EAAQ,MAEtBlE,EAAOC,QAA6B,SAASopB,GAG3C,SAAS02E,EAAgBC,EAAQt9B,GAC/Bj+D,KAAKu7F,OAASA,EACdD,EAAgB/S,UAAUlqF,YAAYD,KAAK4B,KAAMi+D,GA0JnD,OAxKS,SAAS95B,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAUhQurF,CAAO8S,EAAiB12E,GAOxB02E,EAAgBr+F,UAAUk4F,QAAU,SAAS/L,EAAMnrB,EAASo3B,GAC1D,OAAIjM,EAAKoS,gBAAkBv9B,EAAQxS,QAAU0nC,EAAYtH,SAChD,GAEAyP,EAAgB/S,UAAU4M,QAAQ/2F,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,IAIvEiG,EAAgBr+F,UAAUo0F,SAAW,SAASmI,EAAKv7B,GACjD,IAAI95B,EAAOvoC,EAAG6oF,EAAG12E,EAAGrS,EAAKy8F,EAAMxS,EAAKyK,EAAM1jE,EAE1C,IAAK9wB,EAAI6oF,EAAI,EAAG/oF,GADhBiqF,EAAM6T,EAAIlJ,UACgB30F,OAAQ8oF,EAAI/oF,EAAKE,IAAM6oF,GAC/CtgD,EAAQwhD,EAAI/pF,IACN4/F,eAAiB5/F,IAAM49F,EAAIlJ,SAAS30F,OAAS,EAKrD,IAHAsiE,EAAUj+D,KAAKqsF,cAAcpuB,GAE7BvxC,EAAU,GACL3e,EAAI,EAAGoqF,GAFZ/H,EAAOoJ,EAAIlJ,UAEa30F,OAAQoS,EAAIoqF,EAAMpqF,IACxCo2B,EAAQisD,EAAKriF,GACb2e,EAAQpsB,KAAKN,KAAKy7F,eAAet3D,EAAO85B,EAAS,IAEnD,OAAOvxC,GAGT4uE,EAAgBr+F,UAAUkkF,UAAY,SAASoF,EAAKtoB,EAASo3B,GAC3D,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUpH,UAAU/iF,KAAK4B,KAAMumF,EAAKtoB,EAASo3B,KAGxFiG,EAAgBr+F,UAAU6/E,MAAQ,SAASsM,EAAMnrB,EAASo3B,GACxD,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUzL,MAAM1+E,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAGrFiG,EAAgBr+F,UAAU+/E,QAAU,SAASoM,EAAMnrB,EAASo3B,GAC1D,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUvL,QAAQ5+E,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAGvFiG,EAAgBr+F,UAAUgzF,YAAc,SAAS7G,EAAMnrB,EAASo3B,GAC9D,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAU0H,YAAY7xF,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAG3FiG,EAAgBr+F,UAAU2zF,QAAU,SAASxH,EAAMnrB,EAASo3B,GAC1D,IAAIlxD,EAAOsgD,EAAG/oF,EAAKiqF,EAWnB,GAVA0P,IAAUA,EAAQ,GAClBr1F,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5B3rF,KAAKu7F,OAAOrgB,MAAMl7E,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,IAC7Cr1F,KAAKu7F,OAAOrgB,MAAM,aAAekO,EAAKxnE,OAAOtjB,MACzC8qF,EAAK8F,OAAS9F,EAAK+F,MACrBnvF,KAAKu7F,OAAOrgB,MAAM,YAAckO,EAAK8F,MAAQ,MAAQ9F,EAAK+F,MAAQ,KACzD/F,EAAK+F,OACdnvF,KAAKu7F,OAAOrgB,MAAM,YAAckO,EAAK+F,MAAQ,KAE3C/F,EAAKkH,SAAS30F,OAAS,EAAG,CAK5B,IAJAqE,KAAKu7F,OAAOrgB,MAAM,MAClBl7E,KAAKu7F,OAAOrgB,MAAMl7E,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,IAC9Cp3B,EAAQxS,MAAQ0nC,EAAYvH,UAEvBnH,EAAI,EAAG/oF,GADZiqF,EAAMyD,EAAKkH,UACW30F,OAAQ8oF,EAAI/oF,EAAK+oF,IACrCtgD,EAAQwhD,EAAIlB,GACZzkF,KAAKy7F,eAAet3D,EAAO85B,EAASo3B,EAAQ,GAE9Cp3B,EAAQxS,MAAQ0nC,EAAYtH,SAC5B7rF,KAAKu7F,OAAOrgB,MAAM,KAMpB,OAJAjd,EAAQxS,MAAQ0nC,EAAYtH,SAC5B7rF,KAAKu7F,OAAOrgB,MAAMjd,EAAQy9B,iBAAmB,KAC7C17F,KAAKu7F,OAAOrgB,MAAMl7E,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,IAC9Cp3B,EAAQxS,MAAQ0nC,EAAYzH,KACrB1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,IAGvCiG,EAAgBr+F,UAAU8kB,QAAU,SAASqnE,EAAMnrB,EAASo3B,GAC1D,IAAI9O,EAAKpiD,EAAOw3D,EAAgBC,EAAgBnX,EAAG/oF,EAAK4C,EAAwBqnF,EAAKyK,EAMrF,IAAK9xF,KALL+2F,IAAUA,EAAQ,GAClBr1F,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5B3rF,KAAKu7F,OAAOrgB,MAAMl7E,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,IAAMjM,EAAK9qF,MACjEqnF,EAAMyD,EAAKgL,QAEJ3O,EAAQrnF,KAAKunF,EAAKrnF,KACvBioF,EAAMZ,EAAIrnF,GACV0B,KAAKmhF,UAAUoF,EAAKtoB,EAASo3B,IAI/B,GADAuG,EAAoC,KADpCD,EAAiBvS,EAAKkH,SAAS30F,QACS,KAAOytF,EAAKkH,SAAS,GACtC,IAAnBqL,GAAwBvS,EAAKkH,SAAS9+D,OAAM,SAASxU,GACvD,OAAQA,EAAEqH,OAASynE,EAAStB,MAAQxtE,EAAEqH,OAASynE,EAASX,MAAoB,KAAZnuE,EAAErf,SAE9DsgE,EAAQ49B,YACV77F,KAAKu7F,OAAOrgB,MAAM,KAClBjd,EAAQxS,MAAQ0nC,EAAYtH,SAC5B7rF,KAAKu7F,OAAOrgB,MAAM,KAAOkO,EAAK9qF,KAAO,OAErC2/D,EAAQxS,MAAQ0nC,EAAYtH,SAC5B7rF,KAAKu7F,OAAOrgB,MAAMjd,EAAQy9B,iBAAmB,YAE1C,IAAIz9B,EAAQ69B,QAA6B,IAAnBH,GAAyBC,EAAev3E,OAASynE,EAAStB,MAAQoR,EAAev3E,OAASynE,EAASX,KAAiC,MAAxByQ,EAAej+F,MAUjJ,CAIL,IAHAqC,KAAKu7F,OAAOrgB,MAAM,IAAMl7E,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,IACpDp3B,EAAQxS,MAAQ0nC,EAAYvH,UAEvBnH,EAAI,EAAG/oF,GADZ00F,EAAOhH,EAAKkH,UACW30F,OAAQ8oF,EAAI/oF,EAAK+oF,IACtCtgD,EAAQisD,EAAK3L,GACbzkF,KAAKy7F,eAAet3D,EAAO85B,EAASo3B,EAAQ,GAE9Cp3B,EAAQxS,MAAQ0nC,EAAYtH,SAC5B7rF,KAAKu7F,OAAOrgB,MAAMl7E,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,KAAOjM,EAAK9qF,KAAO,UAlBzE0B,KAAKu7F,OAAOrgB,MAAM,KAClBjd,EAAQxS,MAAQ0nC,EAAYvH,UAC5B3tB,EAAQ89B,uBACW,EACnB/7F,KAAKy7F,eAAeG,EAAgB39B,EAASo3B,EAAQ,GACrDp3B,EAAQ89B,uBACW,EACnB99B,EAAQxS,MAAQ0nC,EAAYtH,SAC5B7rF,KAAKu7F,OAAOrgB,MAAM,KAAOkO,EAAK9qF,KAAO,KAcvC,OAFA0B,KAAKu7F,OAAOrgB,MAAMl7E,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,IAC9Cp3B,EAAQxS,MAAQ0nC,EAAYzH,KACrB1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,IAGvCiG,EAAgBr+F,UAAU43F,sBAAwB,SAASzL,EAAMnrB,EAASo3B,GACxE,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUsM,sBAAsBz2F,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAGrGiG,EAAgBr+F,UAAUM,IAAM,SAAS6rF,EAAMnrB,EAASo3B,GACtD,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUhrF,IAAIa,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAGnFiG,EAAgBr+F,UAAUopE,KAAO,SAAS+iB,EAAMnrB,EAASo3B,GACvD,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUliB,KAAKjoE,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAGpFiG,EAAgBr+F,UAAU2xF,WAAa,SAASxF,EAAMnrB,EAASo3B,GAC7D,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUqG,WAAWxwF,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAG1FiG,EAAgBr+F,UAAU8xF,WAAa,SAAS3F,EAAMnrB,EAASo3B,GAC7D,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUwG,WAAW3wF,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAG1FiG,EAAgBr+F,UAAUyyF,UAAY,SAAStG,EAAMnrB,EAASo3B,GAC5D,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUmH,UAAUtxF,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAGzFiG,EAAgBr+F,UAAU2yF,YAAc,SAASxG,EAAMnrB,EAASo3B,GAC9D,OAAOr1F,KAAKu7F,OAAOrgB,MAAMogB,EAAgB/S,UAAUqH,YAAYxxF,KAAK4B,KAAMopF,EAAMnrB,EAASo3B,KAGpFiG,EA/J2B,CAiKjCD,KAEFj9F,KAAK4B,6BC9KR,WACE,IAAqBq7F,EAEnB5V,EAAU,GAAGr4E,eAEfiuF,EAAgB57F,EAAQ,MAExBlE,EAAOC,QAA6B,SAASopB,GAG3C,SAASmsE,EAAgB9yB,GACvB8yB,EAAgBxI,UAAUlqF,YAAYD,KAAK4B,KAAMi+D,GAkBnD,OA3BS,SAAS95B,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAMhQurF,CAAOuI,EAAiBnsE,GAMxBmsE,EAAgB9zF,UAAUo0F,SAAW,SAASmI,EAAKv7B,GACjD,IAAI95B,EAAOvoC,EAAGF,EAAKgb,EAAGivE,EAItB,IAHA1nB,EAAUj+D,KAAKqsF,cAAcpuB,GAC7BvnD,EAAI,GAEC9a,EAAI,EAAGF,GADZiqF,EAAM6T,EAAIlJ,UACY30F,OAAQC,EAAIF,EAAKE,IACrCuoC,EAAQwhD,EAAI/pF,GACZ8a,GAAK1W,KAAKy7F,eAAet3D,EAAO85B,EAAS,GAK3C,OAHIA,EAAQ69B,QAAUplF,EAAElZ,OAAOygE,EAAQ+9B,QAAQrgG,UAAYsiE,EAAQ+9B,UACjEtlF,EAAIA,EAAElZ,MAAM,GAAIygE,EAAQ+9B,QAAQrgG,SAE3B+a,GAGFq6E,EAtB2B,CAwBjCsK,KAEFj9F,KAAK4B,yBCjCR,WACE,IACEqC,EAAO,SAASmmD,EAAI83B,GAAK,OAAO,WAAY,OAAO93B,EAAG7lD,MAAM29E,EAAIjjE,aAChEooE,EAAU,GAAGr4E,eAEf7R,EAAOC,QAA4B,WACjC,SAASw1F,EAAe/yB,GAGtB,IAAInhE,EAAK6oF,EAAKhoF,EAOd,IAAKb,KATLkD,KAAKi8F,gBAAkB55F,EAAKrC,KAAKi8F,gBAAiBj8F,MAClDA,KAAKk8F,gBAAkB75F,EAAKrC,KAAKk8F,gBAAiBl8F,MAElDi+D,IAAYA,EAAU,IACtBj+D,KAAKi+D,QAAUA,EACVj+D,KAAKi+D,QAAQ39C,UAChBtgB,KAAKi+D,QAAQ39C,QAAU,OAEzBqlE,EAAM1nB,EAAQ99D,WAAa,GAEpBslF,EAAQrnF,KAAKunF,EAAK7oF,KACvBa,EAAQgoF,EAAI7oF,GACZkD,KAAKlD,GAAOa,GAuNhB,OAnNAqzF,EAAe/zF,UAAUqB,KAAO,SAASiP,GACvC,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKi8F,gBAAgB,GAAK1uF,GAAO,KAG1CyjF,EAAe/zF,UAAUopE,KAAO,SAAS94D,GACvC,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgBl8F,KAAKm8F,WAAW,GAAK5uF,GAAO,MAG1DyjF,EAAe/zF,UAAU6/E,MAAQ,SAASvvE,GACxC,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,GAGTA,GADAA,EAAM,GAAKA,GAAO,IACRmC,QAAQ,MAAO,mBAClB1P,KAAKk8F,gBAAgB3uF,KAG9ByjF,EAAe/zF,UAAU+/E,QAAU,SAASzvE,GAC1C,GAAIvN,KAAKi+D,QAAQw2B,aACf,OAAOlnF,EAGT,IADAA,EAAM,GAAKA,GAAO,IACVO,MAAM,MACZ,MAAM,IAAIhO,MAAM,6CAA+CyN,GAEjE,OAAOvN,KAAKk8F,gBAAgB3uF,IAG9ByjF,EAAe/zF,UAAUM,IAAM,SAASgQ,GACtC,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEF,GAAKA,GAAO,IAGrByjF,EAAe/zF,UAAUgvF,SAAW,SAAS1+E,GAC3C,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgBl8F,KAAKo8F,UAAU7uF,EAAM,GAAKA,GAAO,MAG/DyjF,EAAe/zF,UAAU03F,UAAY,SAASpnF,GAC5C,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgB,GAAK3uF,GAAO,KAG1CyjF,EAAe/zF,UAAU23F,SAAW,SAASrnF,GAC3C,GAAIvN,KAAKi+D,QAAQw2B,aACf,OAAOlnF,EAGT,IADAA,EAAM,GAAKA,GAAO,IACVO,MAAM,OACZ,MAAM,IAAIhO,MAAM,yCAA2CyN,GAE7D,OAAOvN,KAAKk8F,gBAAgB3uF,IAG9ByjF,EAAe/zF,UAAU6yF,WAAa,SAASviF,GAC7C,GAAIvN,KAAKi+D,QAAQw2B,aACf,OAAOlnF,EAGT,KADAA,EAAM,GAAKA,GAAO,IACTO,MAAM,aACb,MAAM,IAAIhO,MAAM,2BAA6ByN,GAE/C,OAAOA,GAGTyjF,EAAe/zF,UAAU8yF,YAAc,SAASxiF,GAC9C,GAAIvN,KAAKi+D,QAAQw2B,aACf,OAAOlnF,EAGT,KADAA,EAAM,GAAKA,GAAO,IACTO,MAAM,iCACb,MAAM,IAAIhO,MAAM,qBAAuByN,GAEzC,OAAOvN,KAAKk8F,gBAAgB3uF,IAG9ByjF,EAAe/zF,UAAU+yF,cAAgB,SAASziF,GAChD,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAELA,EACK,MAEA,MAIXyjF,EAAe/zF,UAAUoyF,SAAW,SAAS9hF,GAC3C,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgB,GAAK3uF,GAAO,KAG1CyjF,EAAe/zF,UAAUqyF,SAAW,SAAS/hF,GAC3C,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgB,GAAK3uF,GAAO,KAG1CyjF,EAAe/zF,UAAU6xF,gBAAkB,SAASvhF,GAClD,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgB,GAAK3uF,GAAO,KAG1CyjF,EAAe/zF,UAAUyxF,WAAa,SAASnhF,GAC7C,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgB,GAAK3uF,GAAO,KAG1CyjF,EAAe/zF,UAAU0xF,cAAgB,SAASphF,GAChD,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgB,GAAK3uF,GAAO,KAG1CyjF,EAAe/zF,UAAUwyF,eAAiB,SAASliF,GACjD,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgB,GAAK3uF,GAAO,KAG1CyjF,EAAe/zF,UAAUuyF,SAAW,SAASjiF,GAC3C,OAAIvN,KAAKi+D,QAAQw2B,aACRlnF,EAEFvN,KAAKk8F,gBAAgB,GAAK3uF,GAAO,KAG1CyjF,EAAe/zF,UAAUq7F,cAAgB,IAEzCtH,EAAe/zF,UAAU47F,aAAe,IAExC7H,EAAe/zF,UAAUw7F,eAAiB,QAE1CzH,EAAe/zF,UAAUy7F,gBAAkB,SAE3C1H,EAAe/zF,UAAU07F,kBAAoB,WAE7C3H,EAAe/zF,UAAU27F,cAAgB,OAEzC5H,EAAe/zF,UAAUi/F,gBAAkB,SAASn1F,GAClD,IAAI05D,EAAO5pD,EACX,GAAI7W,KAAKi+D,QAAQw2B,aACf,OAAO1tF,EAGT,GADA05D,EAAQ,GACqB,QAAzBzgE,KAAKi+D,QAAQ39C,SAEf,GADAmgD,EAAQ,gHACJ5pD,EAAM9P,EAAI+G,MAAM2yD,GAClB,MAAM,IAAI3gE,MAAM,gCAAkCiH,EAAM,aAAe8P,EAAIu5B,YAExE,GAA6B,QAAzBpwC,KAAKi+D,QAAQ39C,UACtBmgD,EAAQ,4FACJ5pD,EAAM9P,EAAI+G,MAAM2yD,IAClB,MAAM,IAAI3gE,MAAM,gCAAkCiH,EAAM,aAAe8P,EAAIu5B,OAG/E,OAAOrpC,GAGTiqF,EAAe/zF,UAAUg/F,gBAAkB,SAASl1F,GAClD,IAAI05D,EACJ,GAAIzgE,KAAKi+D,QAAQw2B,aACf,OAAO1tF,EAIT,GAFA/G,KAAKk8F,gBAAgBn1F,GACrB05D,EAAQ,gXACH15D,EAAI+G,MAAM2yD,GACb,MAAM,IAAI3gE,MAAM,6BAElB,OAAOiH,GAGTiqF,EAAe/zF,UAAUk/F,WAAa,SAASp1F,GAC7C,IAAIs1F,EACJ,OAAIr8F,KAAKi+D,QAAQw2B,aACR1tF,GAETs1F,EAAWr8F,KAAKi+D,QAAQq+B,iBAAmB,cAAgB,KACpDv1F,EAAI2I,QAAQ2sF,EAAU,SAAS3sF,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,MAAO,WAGnGshF,EAAe/zF,UAAUm/F,UAAY,SAASr1F,GAC5C,IAAIs1F,EACJ,OAAIr8F,KAAKi+D,QAAQw2B,aACR1tF,GAETs1F,EAAWr8F,KAAKi+D,QAAQq+B,iBAAmB,cAAgB,KACpDv1F,EAAI2I,QAAQ2sF,EAAU,SAAS3sF,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,MAAO,SAASA,QAAQ,MAAO,SAASA,QAAQ,MAAO,WAG9IshF,EArO0B,KAyOlC5yF,KAAK4B,6BC9OR,WACE,IAAI8rF,EAAUW,EAEZhH,EAAU,GAAGr4E,eAEf0+E,EAAWrsF,EAAQ,MAEnBgtF,EAAmBhtF,EAAQ,MAE3BlE,EAAOC,QAAqB,SAASopB,GAGnC,SAAS2uE,EAAQx1C,EAAQsoB,GAEvB,GADAktB,EAAQhL,UAAUlqF,YAAYD,KAAK4B,KAAM+9C,GAC7B,MAARsoB,EACF,MAAM,IAAIvmE,MAAM,yBAA2BE,KAAKgsF,aAElDhsF,KAAK1B,KAAO,QACZ0B,KAAKqkB,KAAOynE,EAAStB,KACrBxqF,KAAKrC,MAAQqC,KAAKG,UAAUkmE,KAAKA,GA4CnC,OA7DS,SAASliC,EAAO4Z,GAAU,IAAK,IAAIjhD,KAAOihD,EAAc0nC,EAAQrnF,KAAK2/C,EAAQjhD,KAAMqnC,EAAMrnC,GAAOihD,EAAOjhD,IAAQ,SAASwrF,IAAStoF,KAAK3B,YAAc8lC,EAASmkD,EAAKrrF,UAAY8gD,EAAO9gD,UAAWknC,EAAMlnC,UAAY,IAAIqrF,EAAQnkD,EAAMokD,UAAYxqC,EAAO9gD,UAQhQurF,CAAO+K,EAAS3uE,GAYhBhoB,OAAOC,eAAe02F,EAAQt2F,UAAW,6BAA8B,CACrEojB,IAAK,WACH,MAAM,IAAIvgB,MAAM,sCAAwCE,KAAKgsF,gBAIjEpvF,OAAOC,eAAe02F,EAAQt2F,UAAW,YAAa,CACpDojB,IAAK,WACH,IAAI3B,EAAM+6E,EAAM1yF,EAGhB,IAFAA,EAAM,GACN0yF,EAAOz5F,KAAKu8F,gBACL9C,GACL1yF,EAAM0yF,EAAKz3F,KAAO+E,EAClB0yF,EAAOA,EAAK8C,gBAId,IAFAx1F,GAAO/G,KAAKgC,KACZ0c,EAAO1e,KAAKw8F,YACL99E,GACL3X,GAAY2X,EAAK1c,KACjB0c,EAAOA,EAAK89E,YAEd,OAAOz1F,KAIXwsF,EAAQt2F,UAAU2E,MAAQ,WACxB,OAAOhF,OAAOioB,OAAO7kB,OAGvBuzF,EAAQt2F,UAAUkB,SAAW,SAAS8/D,GACpC,OAAOj+D,KAAKi+D,QAAQmuB,OAAO/lB,KAAKrmE,KAAMA,KAAKi+D,QAAQmuB,OAAOC,cAAcpuB,KAG1Es1B,EAAQt2F,UAAUw/F,UAAY,SAAS/pE,GACrC,MAAM,IAAI5yB,MAAM,sCAAwCE,KAAKgsF,cAG/DuH,EAAQt2F,UAAUy/F,iBAAmB,SAASj7C,GAC5C,MAAM,IAAI3hD,MAAM,sCAAwCE,KAAKgsF,cAGxDuH,EAtDmB,CAwDzB9G,KAEFruF,KAAK4B,6BCnER,WACE,IAAI8rF,EAAUqH,EAA2M3lF,EACvNi4E,EAAU,GAAGr4E,eAEfI,EAAS/N,EAAAA,MAAAA,OAETqsF,EAAWrsF,EAAQ,MAEFA,EAAQ,MAEZA,EAAQ,MAEVA,EAAQ,MAENA,EAAQ,MAERA,EAAQ,MAEZA,EAAQ,MAEPA,EAAQ,MAESA,EAAQ,KAExBA,EAAQ,MAEHA,EAAQ,KAERA,EAAQ,MAETA,EAAQ,MAENA,EAAQ,MAEzB0zF,EAAc1zF,EAAQ,MAEtBlE,EAAOC,QAA2B,WAChC,SAAS6/F,EAAcp9B,GACrB,IAAInhE,EAAK6oF,EAAKhoF,EAId,IAAKb,KAHLmhE,IAAYA,EAAU,IACtBj+D,KAAKi+D,QAAUA,EACf0nB,EAAM1nB,EAAQmuB,QAAU,GAEjB3G,EAAQrnF,KAAKunF,EAAK7oF,KACvBa,EAAQgoF,EAAI7oF,GACZkD,KAAK,IAAMlD,GAAOkD,KAAKlD,GACvBkD,KAAKlD,GAAOa,GAwXhB,OApXA09F,EAAcp+F,UAAUovF,cAAgB,SAASpuB,GAC/C,IAAI0+B,EAAiBhX,EAAKyK,EAAMC,EAAM+H,EAAMwE,EAAMC,EAAMC,EAmBxD,OAlBA7+B,IAAYA,EAAU,IACtBA,EAAUzwD,EAAO,GAAIxN,KAAKi+D,QAASA,IACnC0+B,EAAkB,CAChBvQ,OAAQpsF,OAEM87F,OAAS79B,EAAQ69B,SAAU,EAC3Ca,EAAgBd,WAAa59B,EAAQ49B,aAAc,EACnDc,EAAgBzH,OAAmC,OAAzBvP,EAAM1nB,EAAQi3B,QAAkBvP,EAAM,KAChEgX,EAAgBX,QAAsC,OAA3B5L,EAAOnyB,EAAQ+9B,SAAmB5L,EAAO,KACpEuM,EAAgBjqE,OAAoC,OAA1B29D,EAAOpyB,EAAQvrC,QAAkB29D,EAAO,EAClEsM,EAAgBI,oBAAoH,OAA7F3E,EAA+C,OAAvCwE,EAAO3+B,EAAQ8+B,qBAA+BH,EAAO3+B,EAAQ++B,qBAA+B5E,EAAO,EAClJuE,EAAgBjB,iBAA2G,OAAvFmB,EAA4C,OAApCC,EAAO7+B,EAAQy9B,kBAA4BoB,EAAO7+B,EAAQg/B,kBAA4BJ,EAAO,IAChG,IAArCF,EAAgBjB,mBAClBiB,EAAgBjB,iBAAmB,KAErCiB,EAAgBZ,oBAAsB,EACtCY,EAAgBO,KAAO,GACvBP,EAAgBlxC,MAAQ0nC,EAAYzH,KAC7BiR,GAGTtB,EAAcp+F,UAAUi4F,OAAS,SAAS9L,EAAMnrB,EAASo3B,GACvD,IAAI8H,EACJ,OAAKl/B,EAAQ69B,QAAU79B,EAAQ89B,oBACtB,GACE99B,EAAQ69B,SACjBqB,GAAe9H,GAAS,GAAKp3B,EAAQvrC,OAAS,GAC5B,EACT,IAAI52B,MAAMqhG,GAAar8F,KAAKm9D,EAAQi3B,QAGxC,IAGTmG,EAAcp+F,UAAUk4F,QAAU,SAAS/L,EAAMnrB,EAASo3B,GACxD,OAAKp3B,EAAQ69B,QAAU79B,EAAQ89B,oBACtB,GAEA99B,EAAQ+9B,SAInBX,EAAcp+F,UAAUkkF,UAAY,SAASoF,EAAKtoB,EAASo3B,GACzD,IAAI3+E,EAIJ,OAHA1W,KAAKo9F,cAAc7W,EAAKtoB,EAASo3B,GACjC3+E,EAAI,IAAM6vE,EAAIjoF,KAAO,KAAOioF,EAAI5oF,MAAQ,IACxCqC,KAAKq9F,eAAe9W,EAAKtoB,EAASo3B,GAC3B3+E,GAGT2kF,EAAcp+F,UAAU6/E,MAAQ,SAASsM,EAAMnrB,EAASo3B,GACtD,IAAI3+E,EAUJ,OATA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,YACxCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK0yE,EAAKzrF,MACVsgE,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAK,MAAQ1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACzCp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAU+/E,QAAU,SAASoM,EAAMnrB,EAASo3B,GACxD,IAAI3+E,EAUJ,OATA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,WACxCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK0yE,EAAKzrF,MACVsgE,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAK,UAAS1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GAC1Cp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAUgzF,YAAc,SAAS7G,EAAMnrB,EAASo3B,GAC5D,IAAI3+E,EAiBJ,OAhBA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,QACxCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK,aAAe0yE,EAAK9oE,QAAU,IACd,MAAjB8oE,EAAKpG,WACPtsE,GAAK,cAAgB0yE,EAAKpG,SAAW,KAEhB,MAAnBoG,EAAK5xB,aACP9gD,GAAK,gBAAkB0yE,EAAK5xB,WAAa,KAE3CyG,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAKunD,EAAQy9B,iBAAmB,KAChChlF,GAAK1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACjCp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAU2zF,QAAU,SAASxH,EAAMnrB,EAASo3B,GACxD,IAAIlxD,EAAOvoC,EAAGF,EAAKgb,EAAGivE,EAWtB,GAVA0P,IAAUA,EAAQ,GAClBr1F,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAC/B3+E,GAAK,aAAe0yE,EAAKxnE,OAAOtjB,KAC5B8qF,EAAK8F,OAAS9F,EAAK+F,MACrBz4E,GAAK,YAAc0yE,EAAK8F,MAAQ,MAAQ9F,EAAK+F,MAAQ,IAC5C/F,EAAK+F,QACdz4E,GAAK,YAAc0yE,EAAK+F,MAAQ,KAE9B/F,EAAKkH,SAAS30F,OAAS,EAAG,CAK5B,IAJA+a,GAAK,KACLA,GAAK1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACjCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAEvBhwF,EAAI,EAAGF,GADZiqF,EAAMyD,EAAKkH,UACW30F,OAAQC,EAAIF,EAAKE,IACrCuoC,EAAQwhD,EAAI/pF,GACZ8a,GAAK1W,KAAKy7F,eAAet3D,EAAO85B,EAASo3B,EAAQ,GAEnDp3B,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAK,IAOP,OALAunD,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAKunD,EAAQy9B,iBAAmB,IAChChlF,GAAK1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACjCp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAU8kB,QAAU,SAASqnE,EAAMnrB,EAASo3B,GACxD,IAAI9O,EAAKpiD,EAAOw3D,EAAgBC,EAAgBhgG,EAAG6oF,EAAG/oF,EAAKy8F,EAAM75F,EAAMg/F,EAAkB5mF,EAAGivE,EAAKyK,EAAMC,EAQvG,IAAK/xF,KAPL+2F,IAAUA,EAAQ,GAClBiI,GAAmB,EACnB5mF,EAAI,GACJ1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,GAAK1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,IAAMjM,EAAK9qF,KACpDqnF,EAAMyD,EAAKgL,QAEJ3O,EAAQrnF,KAAKunF,EAAKrnF,KACvBioF,EAAMZ,EAAIrnF,GACVoY,GAAK1W,KAAKmhF,UAAUoF,EAAKtoB,EAASo3B,IAIpC,GADAuG,EAAoC,KADpCD,EAAiBvS,EAAKkH,SAAS30F,QACS,KAAOytF,EAAKkH,SAAS,GACtC,IAAnBqL,GAAwBvS,EAAKkH,SAAS9+D,OAAM,SAASxU,GACvD,OAAQA,EAAEqH,OAASynE,EAAStB,MAAQxtE,EAAEqH,OAASynE,EAASX,MAAoB,KAAZnuE,EAAErf,SAE9DsgE,EAAQ49B,YACVnlF,GAAK,IACLunD,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAK,KAAO0yE,EAAK9qF,KAAO,IAAM0B,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,KAE1Dp3B,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAKunD,EAAQy9B,iBAAmB,KAAO17F,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,SAEhE,IAAIp3B,EAAQ69B,QAA6B,IAAnBH,GAAyBC,EAAev3E,OAASynE,EAAStB,MAAQoR,EAAev3E,OAASynE,EAASX,KAAiC,MAAxByQ,EAAej+F,MAUjJ,CACL,GAAIsgE,EAAQ8+B,oBAEV,IAAKnhG,EAAI,EAAGF,GADZ00F,EAAOhH,EAAKkH,UACW30F,OAAQC,EAAIF,EAAKE,IAEtC,KADAuoC,EAAQisD,EAAKx0F,IACFyoB,OAASynE,EAAStB,MAAQrmD,EAAM9f,OAASynE,EAASX,MAAwB,MAAfhnD,EAAMxmC,MAAgB,CAC1FsgE,EAAQ89B,sBACRuB,GAAmB,EACnB,MAON,IAHA5mF,GAAK,IAAM1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACvCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAEvBnH,EAAI,EAAG0T,GADZ9H,EAAOjH,EAAKkH,UACY30F,OAAQ8oF,EAAI0T,EAAM1T,IACxCtgD,EAAQksD,EAAK5L,GACb/tE,GAAK1W,KAAKy7F,eAAet3D,EAAO85B,EAASo3B,EAAQ,GAEnDp3B,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAK1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,KAAOjM,EAAK9qF,KAAO,IACxDg/F,GACFr/B,EAAQ89B,sBAEVrlF,GAAK1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACjCp3B,EAAQxS,MAAQ0nC,EAAYzH,UAlC5Bh1E,GAAK,IACLunD,EAAQxS,MAAQ0nC,EAAYvH,UAC5B3tB,EAAQ89B,sBACRuB,GAAmB,EACnB5mF,GAAK1W,KAAKy7F,eAAeG,EAAgB39B,EAASo3B,EAAQ,GAC1Dp3B,EAAQ89B,sBACRuB,GAAmB,EACnBr/B,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAK,KAAO0yE,EAAK9qF,KAAO,IAAM0B,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GA6B5D,OADAr1F,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAUw+F,eAAiB,SAASrS,EAAMnrB,EAASo3B,GAC/D,OAAQjM,EAAK/kE,MACX,KAAKynE,EAASrB,MACZ,OAAOzqF,KAAK88E,MAAMsM,EAAMnrB,EAASo3B,GACnC,KAAKvJ,EAASjB,QACZ,OAAO7qF,KAAKg9E,QAAQoM,EAAMnrB,EAASo3B,GACrC,KAAKvJ,EAASniD,QACZ,OAAO3pC,KAAK+hB,QAAQqnE,EAAMnrB,EAASo3B,GACrC,KAAKvJ,EAASX,IACZ,OAAOnrF,KAAKzC,IAAI6rF,EAAMnrB,EAASo3B,GACjC,KAAKvJ,EAAStB,KACZ,OAAOxqF,KAAKqmE,KAAK+iB,EAAMnrB,EAASo3B,GAClC,KAAKvJ,EAASlB,sBACZ,OAAO5qF,KAAK60F,sBAAsBzL,EAAMnrB,EAASo3B,GACnD,KAAKvJ,EAASR,MACZ,MAAO,GACT,KAAKQ,EAASZ,YACZ,OAAOlrF,KAAKiwF,YAAY7G,EAAMnrB,EAASo3B,GACzC,KAAKvJ,EAASf,QACZ,OAAO/qF,KAAK4wF,QAAQxH,EAAMnrB,EAASo3B,GACrC,KAAKvJ,EAASV,qBACZ,OAAOprF,KAAK4uF,WAAWxF,EAAMnrB,EAASo3B,GACxC,KAAKvJ,EAAST,mBACZ,OAAOrrF,KAAK+uF,WAAW3F,EAAMnrB,EAASo3B,GACxC,KAAKvJ,EAASnB,kBACZ,OAAO3qF,KAAK0vF,UAAUtG,EAAMnrB,EAASo3B,GACvC,KAAKvJ,EAASb,oBACZ,OAAOjrF,KAAK4vF,YAAYxG,EAAMnrB,EAASo3B,GACzC,QACE,MAAM,IAAIv1F,MAAM,0BAA4BspF,EAAK/qF,YAAYC,QAInE+8F,EAAcp+F,UAAU43F,sBAAwB,SAASzL,EAAMnrB,EAASo3B,GACtE,IAAI3+E,EAcJ,OAbA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,KACxCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK0yE,EAAK9sF,OACN8sF,EAAKzrF,QACP+Y,GAAK,IAAM0yE,EAAKzrF,OAElBsgE,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAKunD,EAAQy9B,iBAAmB,KAChChlF,GAAK1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACjCp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAUM,IAAM,SAAS6rF,EAAMnrB,EAASo3B,GACpD,IAAI3+E,EAUJ,OATA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAC/Bp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK0yE,EAAKzrF,MACVsgE,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAK1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACjCp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAUopE,KAAO,SAAS+iB,EAAMnrB,EAASo3B,GACrD,IAAI3+E,EAUJ,OATA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAC/Bp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK0yE,EAAKzrF,MACVsgE,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAK1W,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GACjCp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAU2xF,WAAa,SAASxF,EAAMnrB,EAASo3B,GAC3D,IAAI3+E,EAgBJ,OAfA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,YACxCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK,IAAM0yE,EAAKiF,YAAc,IAAMjF,EAAKkF,cAAgB,IAAMlF,EAAKmF,cACtC,aAA1BnF,EAAKoF,mBACP93E,GAAK,IAAM0yE,EAAKoF,kBAEdpF,EAAKqF,eACP/3E,GAAK,KAAO0yE,EAAKqF,aAAe,KAElCxwB,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAKunD,EAAQy9B,iBAAmB,IAAM17F,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GAClEp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAU8xF,WAAa,SAAS3F,EAAMnrB,EAASo3B,GAC3D,IAAI3+E,EAUJ,OATA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,YACxCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK,IAAM0yE,EAAK9qF,KAAO,IAAM8qF,EAAKzrF,MAClCsgE,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAKunD,EAAQy9B,iBAAmB,IAAM17F,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GAClEp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAUyyF,UAAY,SAAStG,EAAMnrB,EAASo3B,GAC1D,IAAI3+E,EAyBJ,OAxBA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,WACxCp3B,EAAQxS,MAAQ0nC,EAAYvH,UACxBxC,EAAK6F,KACPv4E,GAAK,MAEPA,GAAK,IAAM0yE,EAAK9qF,KACZ8qF,EAAKzrF,MACP+Y,GAAK,KAAO0yE,EAAKzrF,MAAQ,KAErByrF,EAAK8F,OAAS9F,EAAK+F,MACrBz4E,GAAK,YAAc0yE,EAAK8F,MAAQ,MAAQ9F,EAAK+F,MAAQ,IAC5C/F,EAAK+F,QACdz4E,GAAK,YAAc0yE,EAAK+F,MAAQ,KAE9B/F,EAAKmG,QACP74E,GAAK,UAAY0yE,EAAKmG,QAG1BtxB,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAKunD,EAAQy9B,iBAAmB,IAAM17F,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GAClEp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAU2yF,YAAc,SAASxG,EAAMnrB,EAASo3B,GAC5D,IAAI3+E,EAiBJ,OAhBA1W,KAAKg1F,SAAS5L,EAAMnrB,EAASo3B,GAC7Bp3B,EAAQxS,MAAQ0nC,EAAYxH,QAC5Bj1E,EAAI1W,KAAKk1F,OAAO9L,EAAMnrB,EAASo3B,GAAS,aACxCp3B,EAAQxS,MAAQ0nC,EAAYvH,UAC5Bl1E,GAAK,IAAM0yE,EAAK9qF,KACZ8qF,EAAK8F,OAAS9F,EAAK+F,MACrBz4E,GAAK,YAAc0yE,EAAK8F,MAAQ,MAAQ9F,EAAK+F,MAAQ,IAC5C/F,EAAK8F,MACdx4E,GAAK,YAAc0yE,EAAK8F,MAAQ,IACvB9F,EAAK+F,QACdz4E,GAAK,YAAc0yE,EAAK+F,MAAQ,KAElClxB,EAAQxS,MAAQ0nC,EAAYtH,SAC5Bn1E,GAAKunD,EAAQy9B,iBAAmB,IAAM17F,KAAKm1F,QAAQ/L,EAAMnrB,EAASo3B,GAClEp3B,EAAQxS,MAAQ0nC,EAAYzH,KAC5B1rF,KAAK+0F,UAAU3L,EAAMnrB,EAASo3B,GACvB3+E,GAGT2kF,EAAcp+F,UAAU+3F,SAAW,SAAS5L,EAAMnrB,EAASo3B,KAE3DgG,EAAcp+F,UAAU83F,UAAY,SAAS3L,EAAMnrB,EAASo3B,KAE5DgG,EAAcp+F,UAAUmgG,cAAgB,SAAS7W,EAAKtoB,EAASo3B,KAE/DgG,EAAcp+F,UAAUogG,eAAiB,SAAS9W,EAAKtoB,EAASo3B,KAEzDgG,EAlYyB,KAsYjCj9F,KAAK4B,6BC1aR,WACE,IAAI8rF,EAAUqH,EAAa1F,EAAsBwD,EAAauC,EAAe8H,EAAiBvK,EAAiBvjF,EAAQ+9E,EAAY5F,EAEnIA,EAAMlmF,EAAQ,MAAc+N,EAASm4E,EAAIn4E,OAAQ+9E,EAAa5F,EAAI4F,WAElEkC,EAAuBhuF,EAAQ,MAE/BwxF,EAAcxxF,EAAQ,MAEtB+zF,EAAgB/zF,EAAQ,MAExBsxF,EAAkBtxF,EAAQ,MAE1B67F,EAAkB77F,EAAQ,MAE1BqsF,EAAWrsF,EAAQ,MAEnB0zF,EAAc1zF,EAAQ,MAEtBlE,EAAOC,QAAQqpB,OAAS,SAASvmB,EAAMkoF,EAAQtJ,EAASjf,GACtD,IAAIu7B,EAAK53E,EACT,GAAY,MAARtjB,EACF,MAAM,IAAIwB,MAAM,8BAWlB,OATAm+D,EAAUzwD,EAAO,GAAIg5E,EAAQtJ,EAASjf,GAEtCr8C,GADA43E,EAAM,IAAIvI,EAAYhzB,IACXl8C,QAAQzjB,GACd2/D,EAAQwoB,WACX+S,EAAIvJ,YAAYhyB,GACM,MAAjBA,EAAQixB,OAAoC,MAAjBjxB,EAAQkxB,OACtCqK,EAAI9D,IAAIz3B,IAGLr8C,GAGTrmB,EAAOC,QAAQ+hG,MAAQ,SAASt/B,EAASw1B,EAAQC,GAC/C,IAAItD,EAKJ,OAJI7E,EAAWttB,KACaw1B,GAA1BrD,EAAO,CAACnyB,EAASw1B,IAAuB,GAAIC,EAAQtD,EAAK,GACzDnyB,EAAU,IAERw1B,EACK,IAAID,EAAcv1B,EAASw1B,EAAQC,GAEnC,IAAIzC,EAAYhzB,IAI3B1iE,EAAOC,QAAQgiG,aAAe,SAASv/B,GACrC,OAAO,IAAI8yB,EAAgB9yB,IAG7B1iE,EAAOC,QAAQiiG,aAAe,SAASlC,EAAQt9B,GAC7C,OAAO,IAAIq9B,EAAgBC,EAAQt9B,IAGrC1iE,EAAOC,QAAQkiG,eAAiB,IAAIjQ,EAEpClyF,EAAOC,QAAQylF,SAAW6K,EAE1BvwF,EAAOC,QAAQmiG,YAAcxK,IAE5B/0F,KAAK4B,yCChEO,SAAS49F,EAAgB97F,EAAKhF,EAAKa,GAYhD,OAXIb,KAAOgF,EACTlF,OAAOC,eAAeiF,EAAKhF,EAAK,CAC9Ba,MAAOA,EACPlB,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZmF,EAAIhF,GAAOa,EAGNmE,ECVT,SAAS0nD,EAAQpG,EAAQy6C,GACvB,IAAIp7F,EAAO7F,OAAO6F,KAAK2gD,GAEvB,GAAIxmD,OAAO6sD,sBAAuB,CAChC,IAAIq0C,EAAUlhG,OAAO6sD,sBAAsBrG,GAC3Cy6C,IAAmBC,EAAUA,EAAQ/3E,QAAO,SAAUg4E,GACpD,OAAOnhG,OAAOohG,yBAAyB56C,EAAQ26C,GAAKthG,eACjDgG,EAAKnC,KAAKqC,MAAMF,EAAMq7F,GAG7B,OAAOr7F,EAGM,SAASw7F,EAAe3hG,GACrC,IAAK,IAAIV,EAAI,EAAGA,EAAIyhB,UAAU1hB,OAAQC,IAAK,CACzC,IAAIsiC,EAAS,MAAQ7gB,UAAUzhB,GAAKyhB,UAAUzhB,GAAK,GACnDA,EAAI,EAAI4tD,EAAQ5sD,OAAOshC,IAAS,GAAIh7B,SAAQ,SAAUpG,GACpD,EAAeR,EAAQQ,EAAKohC,EAAOphC,OAChCF,OAAOshG,0BAA4BthG,OAAOc,iBAAiBpB,EAAQM,OAAOshG,0BAA0BhgE,IAAWsrB,EAAQ5sD,OAAOshC,IAASh7B,SAAQ,SAAUpG,GAC5JF,OAAOC,eAAeP,EAAQQ,EAAKF,OAAOohG,yBAAyB9/D,EAAQphC,OAI/E,OAAOR,ECzBM,SAASsiB,EAAgB1iB,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCCFxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAMZ,OAAQC,IAAK,CACrC,IAAIY,EAAaD,EAAMX,GACvBY,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,4BCNlD,GACG,QAAY,CACT,WAAe,CAAE,CACd,kBAAsB,GACtB,KAAS,gBACT,CACA,KAAS,aACT,EAAM,CAAE,CACL,KAAS,SACT,MAAU,eACV,CACA,KAAS,cACT,MAAU,8RACV,CACA,KAAS,cACT,MAAU,WAGhB,WAAe,CACZ,GAAO,cACP,QAAY,SAEf,iBAAqB,CAClB,GAAO,kBACP,QAAY,MAEf,OAAW,CACR,IAAQ,CAAE,CACP,gBAAoB,SACpB,IAAQ,4BACR,CACA,gBAAoB,OACpB,IAAQ,sBACR,QAAY,WAGlB,WAAe,CACZ,IAAQ,CAAE,CACP,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,KACT,UAAc,CACX,KAAS,SACT,QAAY,CACT,KAAS,SACT,KAAS,eAGf,KAAS,CACN,KAAS,KACT,QAAY,CACT,KAAS,QAEZ,gBAAoB,CACjB,KAAS,wBACT,UAAc,CACX,KAAS,qCACT,KAAS,wBAIlB,KAAS,CACN,KAAS,KACT,UAAc,CACX,KAAS,SACT,QAAY,CACT,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,gBAIlB,KAAS,CACN,WAAc,EACd,YAAe,EACf,KAAS,WACT,IAAQ,CACL,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,gBAIlB,KAAS,CACN,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,MACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,iBAKrB,KAAS,CACN,WAAc,EACd,YAAe,EACf,KAAS,WACT,IAAQ,CACL,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,gBAIlB,KAAS,CACN,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,MACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,mBAO3B,QAAY,CAAE,CACX,KAAS,SACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,yBAGf,CACA,KAAS,iBACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,OACT,UAAc,CACX,KAAS,OACT,KAAS,cAEZ,SAAa,CAAE,CACZ,KAAS,CACN,UAAc,mCACd,MAAU,KACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,cACV,KAAS,YAEZ,CACA,KAAS,CACN,UAAc,mCACd,MAAU,IACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,SACV,KAAS,YAEZ,CACA,KAAS,CACN,UAAc,mCACd,MAAU,MACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,SACV,KAAS,YAEZ,CACA,KAAS,CACN,UAAc,mCACd,MAAU,IACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,OACV,KAAS,YAEZ,CACA,KAAS,CACN,UAAc,mCACd,MAAU,IACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,MACV,KAAS,YAEZ,CACA,KAAS,CACN,UAAc,mCACd,MAAU,KACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,OACV,KAAS,YAEZ,CACA,KAAS,CACN,UAAc,mCACd,MAAU,KACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,QACV,KAAS,YAEZ,CACA,KAAS,CACN,UAAc,mCACd,MAAU,IACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,OACV,KAAS,aAGf,KAAS,CACN,KAAS,OACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,OACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,OACT,SAAa,CAAE,CACZ,KAAS,CACN,KAAS,SACT,QAAY,CACT,KAAS,WACT,KAAS,eAGf,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,UAGf,CACA,KAAS,CACN,KAAS,SACT,QAAY,CACT,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAIlB,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,UAGf,CACA,KAAS,CACN,KAAS,MACT,QAAY,CACT,KAAS,SACT,QAAY,CACT,KAAS,aACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,iBAKrB,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,UACT,OAAW,CACR,KAAS,QAEZ,UAAc,CACX,UAAc,oCACd,MAAU,OACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,wDACV,KAAS,WAEZ,SAAa,CACV,UAAc,mCACd,MAAU,QACV,KAAS,WAEZ,QAAY,CACT,UAAc,mCACd,MAAU,2FACV,KAAS,cAIlB,CACA,KAAS,CACN,KAAS,KACT,QAAY,CAAE,CACX,KAAS,KACT,QAAY,CAAE,CACX,KAAS,SACT,QAAY,CACT,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,KAAS,QACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,4BACV,KAAS,eAGf,CACA,KAAS,QACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,oDACV,KAAS,eAIlB,KAAS,CACN,UAAc,qCACd,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,MAAU,CACP,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,iBAIlB,CACA,KAAS,OACT,MAAU,CACP,KAAS,iBACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,IACV,KAAS,oBAO3B,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,UACT,OAAW,CACR,KAAS,QAEZ,UAAc,CACX,UAAc,oCACd,MAAU,OACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,6CACV,KAAS,WAEZ,SAAa,CACV,UAAc,mCACd,MAAU,QACV,KAAS,WAEZ,QAAY,CACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,UAAc,mCACd,MAAU,+BACV,KAAS,WACT,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,UAAc,mCACd,MAAU,KACV,KAAS,WACT,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,UAAc,mCACd,MAAU,IACV,KAAS,WACT,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,UAAc,mCACd,MAAU,IACV,KAAS,WACT,CACA,UAAc,mCACd,MAAU,GACV,KAAS,kBAO3B,QAAY,CAAE,CACX,KAAS,WACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,+BACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,OACT,SAAa,CAAE,CACZ,KAAS,CACN,KAAS,SACT,QAAY,CACT,KAAS,WACT,KAAS,eAGf,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,UAGf,CACA,KAAS,CACN,KAAS,SACT,QAAY,CACT,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAIlB,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,UAGf,CACA,KAAS,CACN,KAAS,KACT,QAAY,CAAE,CACX,KAAS,KACT,QAAY,CAAE,CACX,KAAS,SACT,QAAY,CACT,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,KAAS,QACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,4BACV,KAAS,eAGf,CACA,KAAS,QACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,oDACV,KAAS,eAIlB,KAAS,CACN,UAAc,qCACd,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,MAAU,CACP,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,iBAIlB,CACA,KAAS,OACT,MAAU,CACP,KAAS,iBACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,IACV,KAAS,oBAO3B,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,UACT,OAAW,CACR,KAAS,QAEZ,UAAc,CACX,UAAc,oCACd,MAAU,OACV,KAAS,WAEZ,KAAS,CACN,UAAc,mCACd,MAAU,6CACV,KAAS,WAEZ,SAAa,CACV,UAAc,mCACd,MAAU,QACV,KAAS,WAEZ,QAAY,CACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,QAAY,CAAE,CACX,UAAc,mCACd,MAAU,+BACV,KAAS,WACT,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,UAAc,mCACd,MAAU,KACV,KAAS,WACT,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,UAAc,mCACd,MAAU,IACV,KAAS,WACT,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,eAGf,CACA,UAAc,mCACd,MAAU,GACV,KAAS,aAEZ,CACA,KAAS,WACT,QAAY,CAAE,CACX,UAAc,mCACd,MAAU,IACV,KAAS,WACT,CACA,UAAc,mCACd,MAAU,GACV,KAAS,kBAO3B,QAAY,CAAE,CACX,KAAS,WACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,KACT,UAAc,CACX,KAAS,SACT,QAAY,CACT,KAAS,WACT,KAAS,eAGf,KAAS,CACN,KAAS,KACT,QAAY,CACT,KAAS,QAEZ,gBAAoB,CACjB,KAAS,wBACT,UAAc,CACX,KAAS,qCACT,KAAS,wBAIlB,KAAS,CACN,KAAS,OACT,UAAc,CACX,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,aACT,KAAS,WACT,OAAW,CACR,KAAS,WACT,KAAS,gBAIlB,SAAa,CAAE,CACZ,KAAS,CACN,UAAc,mCACd,MAAU,IACV,KAAS,WAEZ,KAAS,CACN,WAAc,EACd,YAAe,EACf,KAAS,WACT,IAAQ,CACL,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,SAGf,KAAS,CACN,KAAS,+BACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,KAAS,kBAIlB,CACA,KAAS,CACN,UAAc,mCACd,MAAU,KACV,KAAS,WAEZ,KAAS,CACN,WAAc,EACd,YAAe,EACf,KAAS,WACT,IAAQ,CACL,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,SAGf,KAAS,CACN,KAAS,+BACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,KAAS,kBAIlB,CACA,KAAS,CACN,UAAc,mCACd,MAAU,KACV,KAAS,WAEZ,KAAS,CACN,WAAc,EACd,YAAe,EACf,KAAS,WACT,IAAQ,CACL,KAAS,+BACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,KAAS,gBAGf,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,WAIlB,CACA,KAAS,CACN,UAAc,mCACd,MAAU,IACV,KAAS,WAEZ,KAAS,CACN,WAAc,EACd,YAAe,EACf,KAAS,WACT,IAAQ,CACL,KAAS,+BACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,KAAS,gBAGf,KAAS,CACN,OAAW,qCACX,KAAS,KACT,QAAY,CACT,KAAS,YAKrB,KAAS,CACN,WAAc,EACd,YAAe,EACf,KAAS,WACT,IAAQ,CACL,KAAS,aACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,KAAS,gBAGf,KAAS,CACN,KAAS,aACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,KAAS,mBAMxB,QAAY,CAAE,CACX,KAAS,WACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,UACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,KACT,UAAc,CACX,KAAS,SACT,QAAY,CACT,KAAS,QACT,KAAS,eAGf,KAAS,CACN,OAAW,kCACX,KAAS,KACT,QAAY,CACT,KAAS,SAGf,KAAS,CACN,UAAc,kCACd,KAAS,WACT,QAAY,CAAE,CACX,KAAS,YACT,MAAU,CACP,KAAS,aACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,YACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,kBAIlB,CACA,KAAS,cACT,MAAU,CACP,KAAS,aACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,cACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,qBAO3B,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6BACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,KACT,UAAc,CACX,KAAS,SACT,QAAY,CACT,KAAS,QACT,KAAS,eAGf,KAAS,CACN,KAAS,KACT,QAAY,CACT,KAAS,QAEZ,gBAAoB,CACjB,KAAS,wBACT,UAAc,CACX,KAAS,qCACT,KAAS,wBAIlB,KAAS,CACN,WAAc,EACd,YAAe,EACf,KAAS,WACT,IAAQ,CACL,KAAS,aACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,MACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,iBAIlB,KAAS,CACN,KAAS,aACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,mBAMxB,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6BACT,KAAS,yBAGf,CACA,KAAS,SACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,KACT,UAAc,CACX,KAAS,SACT,QAAY,CACT,KAAS,SACT,KAAS,eAGf,KAAS,CACN,OAAW,iCACX,KAAS,KACT,QAAY,CACT,KAAS,SAGf,KAAS,CACN,UAAc,iCACd,KAAS,WACT,QAAY,CAAE,CACX,KAAS,OACT,MAAU,CACP,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,iBAIlB,CACA,KAAS,SACT,MAAU,CACP,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,iBAIlB,CACA,KAAS,UACT,MAAU,CACP,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,UACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,iBAIlB,CACA,KAAS,UACT,MAAU,CACP,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,UACT,KAAS,WACT,OAAW,CACR,KAAS,SACT,KAAS,oBAO3B,QAAY,CAAE,CACX,KAAS,SACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,yBAGf,CACA,KAAS,YACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,KACT,UAAc,CACX,KAAS,SACT,QAAY,CACT,KAAS,UACT,KAAS,eAGf,KAAS,CACN,OAAW,oCACX,KAAS,KACT,QAAY,CACT,KAAS,SAGf,KAAS,CACN,UAAc,oCACd,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,MAAU,CACP,KAAS,QACT,OAAW,CAAE,CACV,MAAU,IACV,WAAe,CACZ,KAAS,SACT,KAAS,WACT,OAAW,CACR,KAAS,UACT,KAAS,iBAIlB,aAAiB,GACjB,OAAW,CACR,WAAe,CACZ,KAAS,SACT,KAAS,cACT,QAAY,CAAE,CACX,KAAS,IACT,KAAS,iBAKrB,CACA,KAAS,UACT,MAAU,CACP,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,OACT,KAAS,WACT,OAAW,CACR,KAAS,UACT,KAAS,oBAO3B,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,YACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,KACT,UAAc,CACX,KAAS,SACT,QAAY,CACT,KAAS,YACT,KAAS,eAGf,KAAS,CACN,OAAW,iCACX,KAAS,KACT,QAAY,CACT,KAAS,SAGf,KAAS,CACN,UAAc,iCACd,KAAS,WACT,QAAY,CAAE,CACX,KAAS,YACT,MAAU,CACP,UAAc,8BACd,KAAS,WACT,QAAY,CAAE,CACX,KAAS,QACT,MAAU,CACP,KAAS,YACT,KAAS,qBAO3B,QAAY,CAAE,CACX,KAAS,YACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,UACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,YACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,UACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,YACT,qBAAyB,CACtB,KAAS,iCACT,KAAS,yBAGf,CACA,KAAS,YACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,YACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,uBAEZ,CACA,KAAS,MACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,YACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,uBAEZ,CACA,KAAS,MACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,SACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,aACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,KACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,aACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,KACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,aACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,oBACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,QACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,uBAEZ,CACA,KAAS,MACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,uBAEZ,CACA,KAAS,OACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,iBACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,iBACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,uBAEZ,CACA,KAAS,WACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,iBACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,iBACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,uBAEZ,CACA,KAAS,WACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,WACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,uBAEZ,CACA,KAAS,YACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,OACT,qBAAyB,CACtB,KAAS,4BACT,KAAS,uBAEZ,CACA,KAAS,WACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,SACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,uBAEZ,CACA,KAAS,WACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,uBAEZ,CACA,KAAS,WACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,SACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,uBAEZ,CACA,KAAS,iBACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,uBAEZ,CACA,KAAS,kBACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,SACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,uBAEZ,CACA,KAAS,kBACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,uBAEZ,CACA,KAAS,mBACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,UAAa,EACb,KAAS,cACT,QAAY,CAAE,CACX,KAAS,UACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0DACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8DACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8DACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,yCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,uCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,qCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,iDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,wCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mDACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,0CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8CACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,mCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,kCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,sCACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,oCACT,KAAS,yBAGf,CACA,KAAS,YACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,SACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4BACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,gCACT,KAAS,yBAGf,CACA,KAAS,YACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,aACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,YACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,+BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,8BACT,KAAS,yBAGf,CACA,KAAS,SACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,4BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,2BACT,KAAS,yBAGf,CACA,KAAS,WACT,QAAY,UACZ,YAAgB,SAChB,KAAS,cACT,WAAe,CACZ,KAAS,QACT,KAAS,WACT,OAAW,CACR,KAAS,QACT,KAAS,eAGf,QAAY,CAAE,CACX,KAAS,QACT,qBAAyB,CACtB,KAAS,6BACT,KAAS,6BCr4NN2hG,EAAAA,WAQnB,WAAYC,EAASC,GAAyD,IAA3ClwD,EAA2C,uDAAhC,KAAMmwD,EAA0B,uDAAJ,GAAI,UAC5Et+F,KAAK4gD,cAAgB29C,EAAAA,cAAAA,WACrBv+F,KAAKw+F,WAAc,IAAI1/E,EAAIuP,WAAR,GACjB,YAAeowE,GACZH,IAELt+F,KAAK0lC,QAAU,IAAI5mB,EAAIsP,QAAQgwE,EAASp+F,KAAKw+F,YAC7Cx+F,KAAK0kC,YAAc,IAAI5lB,EAAI2N,YAAY4xE,GACvCr+F,KAAK0+F,SAAW,IAAI5/E,EAAI4P,SAAS1uB,KAAK0lC,QAAS1lC,KAAK0kC,YAAayJ,GFdtD,IAAsBhyC,EAAaY,EAAYC,SAAzBb,KAAaY,2BEqBhD,SAAW4hG,GACT3+F,KAAK4gD,cAAcsnC,QACnBloF,KAAK4gD,cAAcg+C,YAAY,CAACD,IAChC3+F,KAAK6+F,UAAY7+F,KAAK4gD,cAAcxgC,SAAS,GAAGkF,MAC9CS,QAAO,SAAA+4E,GAAK,MAAmC,WAA/BA,EAAMv5E,SAAS7F,gBAC/Bvd,KAAI,SAAA28F,GAAK,OAAIA,EAAMv5E,SAAS5B,wCAShC,SAAmByrB,GAEjB,GAAIpvC,KAAK4gD,cAAcxgC,UAAYpgB,KAAK4gD,cAAcxgC,SAASzkB,OAAS,EAAG,CACzE,IAAI+wB,EAAU1sB,KAAK0+F,SAASK,gBAAgB3vD,EAAMpvC,KAAK4gD,eAEvD,OADA5gD,KAAK4gD,cAAczgC,OAAS,EACrBuM,EAAQ+zB,eAAezgD,KAAK6+F,WAAWzvD,GACzC,OAAO,UFxCA/yC,EAAkBF,EAAYc,UAAWF,GACrDC,GAAaX,EAAkBF,EAAaa,GAChDJ,OAAOC,eAAeV,EAAa,YAAa,CAC9CQ,UAAU,MENOwhG,GCNjBa,EAAY,GAahBC,UAAY,SAASC,GACnB,IAAId,EACAC,EACAM,EACAtpD,EACAlH,EACAmwD,EAIJ,GAAyC,OAApCjpD,EAAa6pD,EAAGl9F,KAAKqzC,YAAqB,CAC7C,IAAI8pD,EACJ,GAAIH,EAAUp+C,cAAcxgC,SAASzkB,OAAS,EAE5CwjG,EAAK,CACH9pD,WAAYA,EACZlyC,OAHW67F,EAAUI,mBAAmB/pD,SAO1C8pD,EAAK,CACH9pD,WAAYA,EACZlyC,OAAQ,8BAIZnD,KAAKq/F,YAAYF,QACmC,OAA1CR,EAAgBO,EAAGl9F,KAAK28F,eAGlCK,EAAUM,WAAWX,GACmB,OAA9BP,EAAUc,EAAGl9F,KAAKo8F,UAA6D,OAAxCC,EAAea,EAAGl9F,KAAKq8F,gBAGxElwD,EAAa+wD,EAAGl9F,KAAKmsC,WACrBmwD,EAAsBY,EAAGl9F,KAAKs8F,oBAC9BU,EAAY,IAAIb,EAAaC,EAASC,EAAclwD,EAAYmwD","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@lhncbc/ucum-lhc/source/config.js","../node_modules/@lhncbc/ucum-lhc/source/dimension.js","../node_modules/@lhncbc/ucum-lhc/source/jsonArrayPack.js","../node_modules/@lhncbc/ucum-lhc/source/prefix.js","../node_modules/@lhncbc/ucum-lhc/source/prefixTables.js","../node_modules/@lhncbc/ucum-lhc/source/ucumFunctions.js","../node_modules/@lhncbc/ucum-lhc/source/ucumInternalUtils.js","../node_modules/@lhncbc/ucum-lhc/source/ucumJsonDefs.js","../node_modules/@lhncbc/ucum-lhc/source/ucumLhcUtils.js","../node_modules/@lhncbc/ucum-lhc/source/ucumPkg.js","../node_modules/@lhncbc/ucum-lhc/source/unit.js","../node_modules/@lhncbc/ucum-lhc/source/unitString.js","../node_modules/@lhncbc/ucum-lhc/source/unitTables.js","../node_modules/cql-exec-fhir/lib/fhir.js","../node_modules/cql-exec-fhir/lib/index.js","../node_modules/cql-exec-fhir/lib/load.js","../node_modules/cql-exec-fhir/lib/modelInfos/fhir-modelinfo-4.0.1.xml.js","../../src/cql-code-service.ts","../../src/cql-patient.ts","../../src/cql.ts","../../../src/datatypes/clinical.ts","../../../src/datatypes/datatypes.ts","../../../src/datatypes/datetime.ts","../../../src/datatypes/exception.ts","../../../src/datatypes/interval.ts","../../../src/datatypes/logic.ts","../../../src/datatypes/quantity.ts","../../../src/datatypes/ratio.ts","../../../src/datatypes/uncertainty.ts","../../../src/elm/aggregate.ts","../../../src/elm/arithmetic.ts","../../../src/elm/builder.ts","../../../src/elm/clinical.ts","../../../src/elm/comparison.ts","../../../src/elm/conditional.ts","../../../src/elm/datetime.ts","../../../src/elm/declaration.ts","../../../src/elm/expression.ts","../../../src/elm/expressions.ts","../../../src/elm/external.ts","../../../src/elm/instance.ts","../../../src/elm/interval.ts","../../../src/elm/library.ts","../../../src/elm/list.ts","../../../src/elm/literal.ts","../../../src/elm/logical.ts","../../../src/elm/message.ts","../../../src/elm/nullological.ts","../../../src/elm/overloaded.ts","../../../src/elm/parameters.ts","../../../src/elm/quantity.ts","../../../src/elm/query.ts","../../../src/elm/ratio.ts","../../../src/elm/reusable.ts","../../../src/elm/string.ts","../../../src/elm/structured.ts","../../../src/elm/type.ts","../../../src/runtime/context.ts","../../../src/runtime/executor.ts","../../../src/runtime/messageListeners.ts","../../../src/runtime/repository.ts","../../../src/runtime/results.ts","../../../src/types/index.ts","../../../src/util/comparison.ts","../../../src/util/math.ts","../../../src/util/units.ts","../../../src/util/util.ts","../node_modules/emitter-component/index.js","../node_modules/events/events.js","../node_modules/is-finite/index.js","../node_modules/is-integer/index.js","../node_modules/luxon/src/errors.js","../node_modules/luxon/src/impl/formats.js","../node_modules/luxon/src/impl/util.js","../node_modules/luxon/src/impl/english.js","../node_modules/luxon/src/impl/formatter.js","../node_modules/luxon/src/impl/invalid.js","../node_modules/luxon/src/zone.js","../node_modules/luxon/src/zones/localZone.js","../node_modules/luxon/src/zones/IANAZone.js","../node_modules/luxon/src/zones/fixedOffsetZone.js","../node_modules/luxon/src/zones/invalidZone.js","../node_modules/luxon/src/impl/zoneUtil.js","../node_modules/luxon/src/settings.js","../node_modules/luxon/src/impl/locale.js","../node_modules/luxon/src/impl/regexParser.js","../node_modules/luxon/src/duration.js","../node_modules/luxon/src/interval.js","../node_modules/luxon/src/info.js","../node_modules/luxon/src/impl/diff.js","../node_modules/luxon/src/impl/digits.js","../node_modules/luxon/src/impl/tokenParser.js","../node_modules/luxon/src/impl/conversions.js","../node_modules/luxon/src/datetime.js","../node_modules/luxon/src/luxon.js","../node_modules/sax/lib/sax.js","../node_modules/stream/index.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/string_decoder/node_modules/safe-buffer/index.js","../node_modules/xml2js/lib/bom.js","../node_modules/xml2js/lib/builder.js","../node_modules/xml2js/lib/defaults.js","../node_modules/xml2js/lib/parser.js","../node_modules/xml2js/lib/processors.js","../node_modules/xml2js/lib/xml2js.js","../node_modules/xmlbuilder/lib/DocumentPosition.js","../node_modules/xmlbuilder/lib/NodeType.js","../node_modules/xmlbuilder/lib/Utility.js","../node_modules/xmlbuilder/lib/WriterState.js","../node_modules/xmlbuilder/lib/XMLAttribute.js","../node_modules/xmlbuilder/lib/XMLCData.js","../node_modules/xmlbuilder/lib/XMLCharacterData.js","../node_modules/xmlbuilder/lib/XMLComment.js","../node_modules/xmlbuilder/lib/XMLDOMConfiguration.js","../node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js","../node_modules/xmlbuilder/lib/XMLDOMImplementation.js","../node_modules/xmlbuilder/lib/XMLDOMStringList.js","../node_modules/xmlbuilder/lib/XMLDTDAttList.js","../node_modules/xmlbuilder/lib/XMLDTDElement.js","../node_modules/xmlbuilder/lib/XMLDTDEntity.js","../node_modules/xmlbuilder/lib/XMLDTDNotation.js","../node_modules/xmlbuilder/lib/XMLDeclaration.js","../node_modules/xmlbuilder/lib/XMLDocType.js","../node_modules/xmlbuilder/lib/XMLDocument.js","../node_modules/xmlbuilder/lib/XMLDocumentCB.js","../node_modules/xmlbuilder/lib/XMLDummy.js","../node_modules/xmlbuilder/lib/XMLElement.js","../node_modules/xmlbuilder/lib/XMLNamedNodeMap.js","../node_modules/xmlbuilder/lib/XMLNode.js","../node_modules/xmlbuilder/lib/XMLNodeList.js","../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","../node_modules/xmlbuilder/lib/XMLRaw.js","../node_modules/xmlbuilder/lib/XMLStreamWriter.js","../node_modules/xmlbuilder/lib/XMLStringWriter.js","../node_modules/xmlbuilder/lib/XMLStringifier.js","../node_modules/xmlbuilder/lib/XMLText.js","../node_modules/xmlbuilder/lib/XMLWriterBase.js","../node_modules/xmlbuilder/lib/index.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/cql-worker/src/FHIRHelpers-4.0.1.json.js","../node_modules/cql-worker/src/CqlProcessor.js","../node_modules/cql-worker/src/cql.worker.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/*\n * This defines the namespace for the UCUM classes and provides\n * a place for the definition of global variables and constants.\n *\n * The javascript for this UCUM implementation uses syntax as\n * defined by the ECMAScript 6 standard\n */\n\nexport var Ucum = {\n\n  /**\n   *  Flag indicating whether or not we're using case sensitive labels\n   *  I don't think we need this.  I think we're just going with\n   *  case sensitive, per Clem.   Gunther's code has this flag, but I\n   *  am removing it, at least for now.  lm, 6/2016\n   */\n  //caseSensitive_: true ,\n\n  /**\n   *  The number of elements in a Dimension array.   Currently this\n   *  is set as a configuration variable, but when we get to the point\n   *  of loading the unit definitions from a file, this value will be\n   *  set from that.\n   */\n  dimLen_: 7,\n\n  /**\n   *  The characters used as valid operators in a UCUM unit expression,\n   *  where '.' is for multiplication and '/' is for division.\n   */\n  validOps_: ['.', '/'],\n\n\n  /**\n   * The string used to separate a unit code and unit name when they\n   * are displayed together\n   */\n  codeSep_ : ': ',\n\n  // Message text variations for validation methods and conversion methods\n  valMsgStart_ : 'Did you mean ',\n  valMsgEnd_ : '?' ,\n  cnvMsgStart_ : 'We assumed you meant ',\n  cnvMsgEnd_ : '.',\n\n\n/**\n   * Default opening string used to emphasize portions of error messages.\n   * Used when NOT displaying messages on a web site, i.e., for output\n   * from the library methods or to a file.\n   */\n  openEmph_ : ' ->',\n\n  /**\n   * Default closing string used to emphasize portions of error messages.\n   * Used when NOT displaying messages on a web site, i.e., for output\n   * from the library methods or to a file.\n   */\n  closeEmph_ : '<- ' ,\n\n  /**\n   * Opening HTML used to emphasize portions of error messages.  Used when\n   * displaying messages on a web site; should be blank when output is\n   * to a file.\n   */\n  openEmphHTML_ : '<span class=\"emphSpan\">',\n\n  /**\n   * Closing HTML used to emphasize portions of error messages.  Used when\n   * displaying messages on a web site; should be blank when output is\n   * to a file.\n   */\n  closeEmphHTML_ : '</span>' ,\n\n  /**\n   * Message that is displayed when annotations are included in a unit\n   * string, to let the user know how they are interpreted.\n   */\n  bracesMsg_ : 'FYI - annotations (text in curly braces {}) are ignored, ' +\n               'except that an annotation without a leading symbol implies ' +\n               'the default unit 1 (the unity).',\n\n  /**\n   * Message that is displayed or returned when a conversion is requested\n   * for two units where (only) a mass<->moles conversion is appropriate\n   * but no molecular weight was specified.\n   */\n  needMoleWeightMsg_ : 'Did you wish to convert between mass and moles?  The ' +\n                       'molecular weight of the substance represented by the ' +\n                       'units is required to perform the conversion.',\n\n  /**\n   * Hash that matches unit column names to names used in the csv file\n   * that is submitted to the data updater.\n   */\n  csvCols_ : {\n    'case-sensitive code' : 'csCode_',\n    'LOINC property' : 'loincProperty_',\n    'name (display)' : 'name_',\n    'synonyms' : 'synonyms_',\n    'source' : 'source_',\n    'category' : 'category_',\n    'Guidance' : 'guidance_'\n  } ,\n\n  /**\n   * Name of the column in the csv file that serves as the key\n   */\n  inputKey_ : 'case-sensitive code' ,\n\n  /**\n   * Special codes that contain operators within brackets.  The operator\n   * within these codes causes them to parse incorrectly if they are preceded\n   * by a prefix, because the parsing algorithm splits them up on the operator.\n   * So we use this object to identify them and substitute placeholders to\n   * avoid that.\n   */\n   specUnits_ : { 'B[10.nV]' : 'specialUnitOne',\n                  '[m/s2/Hz^(1/2)]' : 'specialUnitTwo'}\n} ;\n\n\n","/**\n * This class implements an object containing the vector of exponents for\n * a unit and its operations for addition, subtraction, and multiplication\n * with a scalar.\n *\n * This object should exist for each unit that can be expressed as a\n * vector of numbers.   This excludes arbitrary units, e.g., (10*23), and\n * units that are not numbers but are an expression based solely on numbers,\n * e.g., mol (mole) which is based on 10*23.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n */\nvar UC = require('./config.js');\nvar isInteger = require(\"is-integer\");\nexport class Dimension {\n\n  /**\n   * Constructor.\n   *\n   * @param dimSetting an optional parameter that may be:\n   *  null, which means that the dimVec_ attribute for this object will be null; or\n   *  an array, which must be the length defined by Ucum.dimLen_, and\n   *    whose contents will be copied to this new object's vector; or\n   *  an integer, which must be between 0 and 1 less than the vector length\n   *    defined by Ucum.dimLen_.  This new object's vector will be\n   *    initialized to zero for all elements except the one whose index\n   *    matches the number passed in.  That element will be set to one.\n\n   * @throws an error if the dimSetting parameter does not meet the types\n   *  listed above.\n   *  An error will also be thrown if Ucum.dimLen_ has not been set yet,\n   *  i.e., is still zero.   Currently that won't happen, because the\n   *  value is set in the config.js file.  But further down the road\n   *  the setting will come from a definitions input file, so we check\n   *  here anyway.\n   *\n   */\n  constructor(dimSetting) {\n\n    if (UC.Ucum.dimLen_ === 0) {\n      throw(new Error('Dimension.setDimensionLen must be called before ' +\n      'Dimension constructor'));\n    }\n    if (dimSetting === undefined || dimSetting === null) {\n      this.assignZero() ;\n    }\n    else if (dimSetting instanceof Array) {\n      if (dimSetting.length !== UC.Ucum.dimLen_) {\n        throw(new Error('Parameter error, incorrect length of vector passed to ' +\n            `Dimension constructor, vector = ${JSON.stringify(dimSetting)}`));\n      }\n      this.dimVec_ = [];\n      for (let d = 0; d < UC.Ucum.dimLen_; d++)\n        this.dimVec_.push(dimSetting[d]);\n    }\n\n    // In es6 this should be Number.isInteger(dimSetting).  But Babel\n    // doesn't transpile that correctly, so we need to use the isInteger\n    // module.  :0\n    else if (isInteger(dimSetting)) {\n      if (dimSetting < 0 || dimSetting >= UC.Ucum.dimLen_) {\n        throw(new Error('Parameter error, invalid element number specified for ' +\n        'Dimension constructor'));\n      }\n      this.assignZero() ;\n      this.dimVec_[dimSetting] = 1;\n    }\n  } // end constructor\n\n\n  /**\n   * Sets the element at the specified position to a specified value.  The\n   * default value is 1.  If the dimension vector is null when this is called\n   * a zero-filled vector is created and then the indicated position is set.\n   *\n   * @param indexPos the index of the element to be set\n   * @param value the value to assign to the specified element; optional,\n   *  default value is 1\n   * @throws an exception if the specified position is invalid, i.e., not a\n   *   number or is less than 0 or greater than Ucum.dimLen_\n   **/\n  setElementAt(indexPos, value) {\n\n    if (!isInteger(indexPos) ||\n        indexPos < 0 || indexPos >= UC.Ucum.dimLen_) {\n      throw(new Error(`Dimension.setElementAt called with an invalid index ` +\n      `position (${indexPos})`));\n    }\n\n    if (!this.dimVec_) {\n      this.assignZero();\n    }\n    if (value === undefined || value === null)\n      value = 1 ;\n\n    this.dimVec_[indexPos] = value;\n  }\n\n\n  /**\n   * Gets the value of the element at the specified position\n   *\n   * @param indexPos the index of the element whose value is to be returned\n   * @return the value of the element at indexPos, or null if the dimension\n   *  vector is null\n   * @throws an exception if the specified position is invalid, i.e., not a\n   *   number or is less than 0 or greater than Ucum.dimLen_\n   **/\n  getElementAt(indexPos) {\n    if (!isInteger(indexPos) ||\n        indexPos < 0 || indexPos >= UC.Ucum.dimLen_) {\n      throw(new Error(`Dimension.getElementAt called with an invalid index ` +\n      `position (${indexPos})`));\n    }\n    let ret = null;\n    if (this.dimVec_)\n      ret = this.dimVec_[indexPos];\n    return ret;\n  }\n\n\n  /**\n   * This returns the value of the property named by the parameter\n   * passed in.  Although we currently only have one property, dimVec_,\n   * that this will get, it's possible that we'll have additional\n   * properties.   If we don't this could just be replaced by a\n   * getVector function.\n   *\n   * @param propertyName name of the property to be returned, with\n   *        or without the trailing underscore.\n   * @return the requested property, if found for this Dimension\n   * @throws an error if the property is not found for this Dimension\n   */\n  getProperty(propertyName) {\n    let uProp = propertyName.charAt(propertyName.length - 1) === '_' ? propertyName : propertyName + '_';\n\n    return this[uProp] ;\n\n  } // end getProperty\n\n\n  /**\n   * Return a string that represents the dimension vector.  Returns null if\n   * the dimension vector is null.\n   *\n   * @return the string that represents the dimension vector.  The\n   *         values are enclosed in square brackets, each separated\n   *         by a comma and a space\n   **/\n  toString() {\n    let ret = null ;\n    if (this.dimVec_)\n      ret = '[' + this.dimVec_.join(', ') + ']';\n    return ret ;\n  }\n\n\n  /**\n   * Adds the vector of the dimension object passed in to this\n   * dimension object's vector.  This object's vector is changed.\n   * If either dimension vector is null, no changes are made to this object.\n   *\n   *\n   * @param dim2 the dimension whose vector is to be added to this one\n   * @return this object\n   * @throws an exception if dim2 is not a Dimension object\n   **/\n  add(dim2) {\n    if (!dim2 instanceof Dimension) {\n      throw(new Error(`Dimension.add called with an invalid parameter - ` +\n      `${typeof dim2} instead of a Dimension object`));\n    }\n    if (this.dimVec_ && dim2.dimVec_) {\n      for (let i = 0; i < UC.Ucum.dimLen_; i++)\n        this.dimVec_[i] += dim2.dimVec_[i];\n    }\n    return this;\n  }\n\n\n  /**\n   * Subtracts the vector of the dimension object passed in from this\n   * dimension object's vector.  This object's vector is changed.\n   * If either dimension vector is null, no changes are made to this object.\n   *\n   * @param dim2 the dimension whose vector is to be subtracted from this one\n   * @return this object\n   * @throws an exception if dim2 is not a Dimension object\n   **/\n  sub(dim2) {\n    if (!dim2 instanceof Dimension) {\n      throw(new Error(`Dimension.sub called with an invalid parameter - ` +\n      `${typeof dim2} instead of a Dimension object`));\n    }\n    if (this.dimVec_ && dim2.dimVec_) {\n      for (let i = 0; i < UC.Ucum.dimLen_; i++)\n        this.dimVec_[i] -= dim2.dimVec_[i];\n    }\n    return this;\n  }\n\n\n  /**\n   * Inverts this dimension object's vector (by multiplying each element\n   * by negative 1).  This object's vector is changed - unless it is null,\n   * in which case it stays that way.\n   *\n   * @return this object\n   **/\n  minus() {\n    if (this.dimVec_) {\n      for (let i = 0; i < UC.Ucum.dimLen_; i++)\n        this.dimVec_[i] = -this.dimVec_[i];\n    }\n    return this;\n  }\n\n\n  /**\n   * Multiplies this dimension object's vector with a scalar.  This is used\n   * when a unit is raised to a power.  This object's vector is changed unless\n   * the vector is null, in which case it stays that way.\n   *\n   * @param s the scalar to use\n   * @return this object\n   * @throws an exception if s is not a number\n   */\n  mul(s) {\n    if (!isInteger(s)) {\n      throw(new Error(`Dimension.sub called with an invalid parameter - ` +\n      `${typeof dim2} instead of a number`));\n    }\n    if (this.dimVec_) {\n      for (let i = 0; i < UC.Ucum.dimLen_; i++)\n        this.dimVec_[i] *= s;\n    }\n    return this;\n  }\n\n\n  /**\n   * Tests for equality of this dimension object's vector and that of\n   * the dimension object passed in.  If the dimension vector for one of\n   * the objects is null, the dimension vector for the other object must\n   * also be null for the two to be equal.  (I know - duh.  still)\n   *\n   * @param dim2 the dimension object whose vector is to be compared to this one\n   * @return true if the two vectors are equal; false otherwise.\n   * @throws an exception if dim2 is not a Dimension object\n   */\n  equals(dim2) {\n    if (!dim2 instanceof Dimension) {\n      throw(new Error(`Dimension.equals called with an invalid parameter - ` +\n      `${typeof dim2} instead of a Dimension object`));\n    }\n    let isEqual = true ;\n    let dimVec2 = dim2.dimVec_;\n    if (this.dimVec_ && dimVec2) {\n      for (let i = 0; isEqual && i < UC.Ucum.dimLen_; i++)\n        isEqual = (this.dimVec_[i] === dimVec2[i]);\n    }\n    else {\n      isEqual = (this.dimVec_ === null && dimVec2 === null);\n    }\n    return isEqual;\n  }\n\n\n  /**\n   * Assigns the contents of the vector belonging to the dimension object\n   * passed in to this dimension's vector.  If this dimension vector is null\n   * and the other is not, this one will get the contents of the other.  If\n   * this dimension vector is not null but the one passed in is null, this\n   * one will be set to null.\n   *\n   * @param dim2 the dimension object with the vector whose contents are\n   *  to be assigned to this dimension's vector\n   * @return this object (not sure why)\n   * @throws an exception if dim2 is not a Dimension object\n   */\n  assignDim(dim2) {\n\n    if (!dim2 instanceof Dimension) {\n      throw(new Error(`Dimension.assignDim called with an invalid parameter - ` +\n      `${typeof dim2} instead of a Dimension object`));\n    }\n    if (dim2.dimVec_ === null)\n      this.dimVec_ = null;\n    else {\n      if (this.dimVec_ === null) {\n        this.dimVec_ = [] ;\n      }\n      for (let i = 0; i < UC.Ucum.dimLen_; i++)\n        this.dimVec_[i] = dim2.dimVec_[i];\n    }\n    return this;\n  }\n\n\n  /**\n   * Sets all elements of this dimension object's vector to zero.\n   * If this object's vector is null, it is created as a zero-filled vector.\n   *\n   * @return this object (not sure why)\n   */\n  assignZero() {\n    if (this.dimVec_ === null || this.dimVec_ === undefined)\n      this.dimVec_ = [];\n\n    for (let i = 0; i < UC.Ucum.dimLen_; i++) {\n      this.dimVec_.push(0);\n    }\n    return this;\n  }\n\n\n  /**\n   * Tests for a dimension vector set to all zeroes.\n   *\n   * @return true if exponents (elements) of this dimension's vector are all\n   * zero; false otherwise (including if the current vector is null).\n   *\n   */\n  isZero() {\n    let allZero = this.dimVec_ !== null ;\n    if (this.dimVec_) {\n      for (let i = 0; allZero && i < UC.Ucum.dimLen_; i++)\n        allZero = this.dimVec_[i] === 0;\n    }\n    return allZero;\n  }\n\n\n  /**\n   * Tests for a Dimension object with no dimension vector (dimVec_ is null).\n   *\n   * @return true the dimension vector is null; false if it is not\n   *\n   */\n  isNull() {\n    return (this.dimVec_ === null);\n  }\n\n\n  /**\n   * Creates and returns a clone of this Dimension object\n   *\n   * @return the clone\n   */\n  clone() {\n    let that = new Dimension();\n    that.assignDim(this);\n    return that;\n  }\n\n} // end Dimension class\n","/**\n * This file provides functions to reduce the size of an array of objects of the same structure in JSON.\n */\nconst pushFn = Array.prototype.push;\n\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Makes human readable config used to pack/unpack array of objects of the same structure to store with packed data.\n * @param {Object} refObj - reference item of array of objects of the same structure\n * @returns {Array}\n */\nfunction createConfig(refObj) {\n  return Object.keys(refObj).reduce((config, key) => {\n    if (isObject(refObj[key])) {\n      pushFn.apply(config, createConfig(refObj[key]).map(keyTail => [key, ...[].concat(keyTail)]));\n    } else {\n      config.push(key);\n    }\n    return config;\n  }, [])\n}\n\n/**\n * Prepares config created with createConfig function to use in packItem/unpackItem functions.\n * @param {Array} config\n * @returns {Array}\n */\nfunction prepareConfig(config) {\n  return config.map(key => Array.isArray(key) ? key : [key]);\n}\n\n/**\n * Converts an object to an array of values in the order of keys from configuration array.\n * @param {Array} config - configuration array\n * @param {Object} item - input object\n * @returns {Array}\n */\nfunction packItem(config, item) {\n  if (config.join() !== prepareConfig(createConfig(item)).join()) {\n    throw new Error('Object of unusual structure')\n  }\n\n  return config.map(keyArr => {\n    let place = item;\n    keyArr.forEach(key => {\n      place = place[key];\n      if (place === undefined) {\n        throw new Error('Object of unusual structure')\n      }\n    });\n    return place;\n  });\n}\n\n/**\n * Performs the reverse of packItem function.\n * @param {Array} config - configuration array\n * @param {Array} item - input object\n * @returns {Object}\n */\nfunction unpackItem(config, item) {\n  let result = {};\n\n  config.forEach((keyArr, i) => {\n    let place = result;\n    for (let i = 0; i < keyArr.length - 1; i++) {\n      place = place[keyArr[i]] = place[keyArr[i]] || {};\n    }\n    place[keyArr[keyArr.length - 1]] = item[i];\n  });\n\n  return result;\n}\n\n/**\n * Reduces size of an array of objects of the same structure before serialize it to JSON\n * @param {Array} arr\n * @returns {Object}\n */\nexport function packArray(arr) {\n  if (arr && arr.length) {\n    const config = createConfig(arr[0]),\n      _config = prepareConfig(config);\n\n    if (config.length) {\n      return {\n        config: config,\n        data: arr.map(packItem.bind(null, _config))\n      };\n    }\n  }\n\n  return {\n    config: [],\n    data: arr\n  };\n}\n\n/**\n * Restores an array of objects of the same structure after deserializing this object from JSON\n * @param {Object} obj\n * @returns {Array}\n */\nexport function unpackArray(obj) {\n  const config = obj && obj.config;\n\n  if (config) {\n    if (config.length && obj.data) {\n      const _config = prepareConfig(config);\n\n      return obj.data.map(unpackItem.bind(null, _config));\n    } else {\n      return obj.data;\n    }\n  }\n\n  return obj;\n}","/**\n * Prefix objects are defined in this file.\n */\n\n/**\n * This class implements the prefix object.  Prefixes are used as multipliers\n * for units, e.g., km for kilometers\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nvar Ucum = require('./config.js');\n\nexport class Prefix {\n\n  /**\n   * Creates a single prefix object.\n   *\n   * @param attrs a hash of the values to use in creating the prefix object.\n   *  They should be:\n   *   code_ - which is the case-sensitive code used for the prefix,\n   *    e.g., k for kilo\n   *   ciCode_ - which is the case-insensitive code used for the prefix,\n   *    e.g., K for kilo\n   *   name_ - which is the name of the prefix, e.g., kilo\n   *   printSymbol_ - which is the print symbol for the prefix, e.g., k for kilo\n   *   value_ - which is teh value to use in multiplying the magnitude of\n   *    a unit, e.g., for a prefix of c the value will be .01.\n   *   exp_ - which is the exponent used to get the value. For decimal based\n   *    prefixes the base is 10 and the exp_ is applied to 10, e.g., for a\n   *    prefix of c, the exponent will be -2.  For prefixes that are not\n   *    decimal based, this will be null (but must not be undefined).\n   *\n   * @throws an error if the not all required parameters are provided\n   */\n  constructor(attrs) {\n\n    if (attrs['code_'] === undefined || attrs['code_'] === null ||\n        attrs['name_'] === undefined || attrs['name_'] === null ||\n        attrs['value_'] === undefined || attrs['value_'] === null ||\n        attrs['exp_'] === undefined) {\n      throw(new Error('Prefix constructor called missing one or more parameters.  ' +\n      'Prefix codes (cs or ci), name, value and exponent must all be specified ' +\n      'and all but the exponent must not be null.'));\n    }\n\n    /**\n     * The prefix code, e.g., k for kilo.  This should be the case-sensitive\n     * code.  Since there's no way to check to see if it's the case-sensitive\n     * one as opposed to the case-insensitive one (because although\n     * case-insensitive codes all seem to be uppercase, some case-sensitive\n     * codes are also all uppercase), we'll just have to believe that the\n     * right one was passed in.\n     */\n    this.code_ = attrs['code_'];\n\n    /**\n     * The case-insensitive code, e.g., K for kilo\n     */\n    this.ciCode_ = attrs['ciCode_'];\n\n    /**\n     * The prefix name, e.g., kilo\n     */\n    this.name_ = attrs['name_'];\n\n    /**\n     * The printSymbol for the prefix, e.g., k for kilo\n     */\n    this.printSymbol_ = attrs['printSymbol_'];\n\n    /**\n     * The value to use in multiplying the magnitude of a unit\n     */\n    if (typeof attrs['value_'] === 'string')\n      this.value_ = parseFloat(attrs['value_']);\n    else\n      this.value_ = attrs['value_'] ;\n\n    /**\n     * The exponent used to create the value from 10.  For prefixes that are\n     * not based on 10, this will be null.\n     */\n    this.exp_ = attrs['exp_'] ;\n\n  } // end constructor\n\n\n  /**\n   * Returns the value for the current prefix object\n   * @return the value for the prefix object with the specified code\n   * */\n  getValue() {\n    return this.value_;\n  }\n\n\n  /**\n   * Returns the prefix code for the current prefix object\n   * @return the code for the current prefix object\n   */\n  getCode() {\n    return this.code_;\n  }\n\n\n  /**\n   * Returns the case-insensitive code for the current prefix object\n   * @return the case_insensitive code for the current prefix object\n   */\n  getCiCode() {\n    return this.ciCode_;\n  }\n\n\n  /**\n   * Returns the prefix name for the current prefix object\n   * @return the name for the current prefix object\n   */\n  getName() {\n    return this.name_;\n  }\n\n\n  /**\n   * Returns the print symbol for the current prefix object\n   * @return the print symbol for the current prefix object\n   */\n  getPrintSymbol() {\n    return this.printSymbol_;\n  }\n\n\n  /**\n   * Returns the exponent for the current prefix object\n   * @return the exponent for the current prefix object\n   */\n  getExp() {\n    return this.exp_;\n  }\n\n\n  /**\n   * Provides way to tell if one prefix equals another.  The second prefix\n   * must match all attribute values.\n   *\n   * @param prefix2 prefix object to check for a match\n   * @return true for a match; false if one or more attributes don't match\n   */\n  equals(prefix2) {\n    return this.code_ === prefix2.code_ &&\n            this.ciCode_ === prefix2.ciCode_ &&\n            this.name_ === prefix2.name_ &&\n            this.printSymbol_ === prefix2.printSymbol_ &&\n            this.value_ === prefix2.value_ &&\n            this.exp_ === prefix2.exp_ ;\n  }\n} // end Prefix class\n","/**\n * The tables of defined prefixes is defined in this file.\n */\n\n/**\n * This class implements the table of multiplier prefixes.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nexport class PrefixTablesFactory {\n\n  /**\n   * Constructor.  This creates the empty PrefixTable hashes once.\n   * There is one hash whose key is the prefix code and one whose\n   * key is the prefix value.\n   *\n   * Implementation of this as a singleton is based on the UnitTables\n   * implementation.  See that class for details.\n   */\n  constructor(){\n    this.byCode_ = {} ;\n    this.byValue_ = {};\n  }\n\n\n  /**\n   * Provides the number of prefix objects in each table\n   * @returns count of the number of prefix objects in each table\n   */\n  prefixCount() {\n    return Object.keys(this.byCode_).length ;\n  }\n\n\n  /**\n   * This is used to get all prefix objects by value.  Currently it is used\n   * to create a csv file with all prefixes and units.\n   * @returns csv string containing all prefix objects, ordered by value.\n   */\n  allPrefixesByValue() {\n    let prefixBuff = '';\n    let pList = Object.keys(this.byValue_);\n    //pList.sort() ;\n    let pLen = pList.length;\n    for (let p = 0; p < pLen; p++) {\n      let pfx = this.getPrefixByValue(pList[p]) ;\n      prefixBuff += pfx.code_ + ',' + pfx.name_ + ',,' + pfx.value_ + '\\r\\n';\n    }\n    return prefixBuff ;\n  }\n\n  /**\n   * This is used to get all prefix objects.  Currently it is used\n   * to get the objects to write to the json ucum definitions file\n   * that is used to provide prefix and unit definition objects for\n   * conversions and validations.\n   *\n   * @returns an array containing all prefix objects, ordered by code.\n   */\n  allPrefixesByCode() {\n    let prefixList = [];\n    let pList = Object.keys(this.byCode_);\n    pList.sort() ;\n    let pLen = pList.length;\n    for (let p = 0; p < pLen; p++) {\n      prefixList.push(this.getPrefixByCode(pList[p])) ;\n    }\n    return prefixList ;\n  }\n\n  /**\n   * Adds a prefix object to the tables\n   *\n   * @param prefixObj the object to be added to the tables\n   */\n  add(prefixObj){\n    this.byCode_[prefixObj.getCode()] = prefixObj;\n    this.byValue_[prefixObj.getValue()] = prefixObj;\n  }\n\n\n  /**\n   * Tests whether a prefix object is found for a specified code.  This\n   * is used to determine whether or not a prefix object has been created\n   * for the code.\n   *\n   * @param code the code to be used to find the prefix object\n   * @return boolean indicating whether or not a prefix object was found\n   *  for the specified code\n   */\n  isDefined(code) {\n    return this.byCode_[code] !== null && this.byCode_[code] !== undefined ;\n  }\n\n\n  /**\n   * Obtains a prefix object for a specified code.\n   *\n   * @param code the code to be used to find the prefix object\n   * @return the prefix object found, or null if nothing was found\n   */\n  getPrefixByCode(code) {\n    return this.byCode_[code];\n  }\n\n\n  /**\n   * Obtains a prefix object for a specified value.\n   *\n   * @param value the value to be used to find the prefix object\n   * @return the prefix object found, or null if nothing was found\n   */\n  getPrefixByValue(value) {\n    return this.byValue_[value];\n  }\n\n} // end PrefixTablesFactory class\n\n\n// Create a singleton instance and (to preserve the existing API) an object that\n// provides that instance via getInstance().\nvar prefixTablesInstance = new PrefixTablesFactory();\nexport const PrefixTables = {\n  getInstance: function() {\n    return prefixTablesInstance;\n  }\n}\n","/*\n * This class manages the special functions used by some units.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\n\nclass UcumFunctions {\n\n  /**\n   * Constructor\n   *\n   * Creates the singleton object that contains the list of functions used\n   * to convert special units.\n   */\n  constructor() {\n\n    // Create the hash containing the function pairs\n    this.funcs = {};\n\n    // Celsius - convert to Celsius from kelvin and from Celsius to kelvin\n    // where kelvin is the base unit for temperature\n    this.funcs['cel'] = {cnvTo   : function(x){return x - 273.15;},\n                      cnvFrom : function(x){return x + 273.15;}};\n\n    // Fahrenheit - convert to Fahrenheit from kelvin and from Fahrenheit to\n    // kelvin - which is the base unit for temperature\n    this.funcs['degf'] = {cnvTo   : function(x){return x - 459.67;},\n                       cnvFrom : function(x){return x + 459.67;}};\n\n    // Reaumur - convert between Reaumur and Kelvin.   Because of the way the\n    // calling code in the Units class is set up (in the convertFrom method),\n    // what is given here as the convertTo function is actually the convert\n    // from method and vice versa.\n    //this.funcs['degre'] = {cnvTo   : function(x){return x + 273.15;},\n    //                    cnvFrom : function(x){return x - 273.15;}};\n    this.funcs['degre'] = {cnvTo   : function(x){return x - 273.15;},\n                        cnvFrom : function(x){return x + 273.15;}};\n\n    // pH - convert to pH from moles per liter and from moles per liter to pH\n    // where a mole is an amount of a substance (a count of particles)\n    this.funcs['ph'] = {cnvTo  : function(x){return - Math.log(x) / Math.LN10;},\n                     cnvFrom : function(x){return Math.pow(10, -x);}};\n\n    // ln - natural logarithm (base e 2.71828) - apply (cnvTo) and invert (cnvFrom)\n    // and 2ln - two times the natural logarithm\n    this.funcs['ln'] = {cnvTo : function(x){return Math.log(x);},\n                     cnvFrom : function(x){return Math.exp(x);}};\n    this.funcs['2ln'] = {cnvTo : function(x){return 2 * Math.log(x);},\n                      cnvFrom : function(x){return Math.exp(x / 2);}};\n\n    // lg - the decadic logarithm (base 10)\n    this.funcs['lg'] = {cnvTo : function(x){return Math.log(x) / Math.LN10;},\n                     cnvFrom : function(x){return Math.pow(10, x);}};\n    this.funcs['10lg'] = {cnvTo : function(x){return 10 * Math.log(x)/Math.LN10;},\n                       cnvFrom : function(x){return Math.pow(10, x / 10);}};\n    this.funcs['20lg'] = {cnvTo : function(x){return 20 * Math.log(x)/Math.LN10;},\n                       cnvFrom : function(x){return Math.pow(10, x / 20);}};\n    // The plain text ucum units file uses '2lg'\n    this.funcs['2lg'] = {cnvTo : function(x){return 2 * Math.log(x)/Math.LN10;},\n                           cnvFrom : function(x){return Math.pow(10, x / 2);}};\n    // The xml essence ucum file uses lgTimes2\n    this.funcs['lgtimes2'] = this.funcs['2lg'];\n\n    // ld - dual logarithm (base 2)\n    this.funcs['ld'] = {cnvTo : function(x){return Math.log(x)/Math.LN2;},\n                     cnvFrom : function(x){return Math.pow(2, x);}};\n\n    // tan - tangent\n    this.funcs['100tan'] = {cnvTo : function(x){return Math.tan(x) * 100;},\n                         cnvFrom : function(x){return Math.atan(x/100);}};\n    // the xml essence ucum file uses both 100tan and tanTimes100\n    this.funcs['tanTimes100'] = this.funcs['100tan'] ;\n\n    // sqrt - square root\n    this.funcs['sqrt'] = {cnvTo : function(x){return Math.sqrt(x);},\n                       cnvFrom : function(x){return x*x;}};\n\n    // inv - inverse\n    this.funcs['inv'] = {cnvTo : function(x){return 1.0 / x;},\n                      cnvFrom : function(x){return 1.0 / x;}};\n\n    // homeopathic potency functions\n    this.funcs['hpX'] = {cnvTo : function(x){return -(this.funcs['lg'](x));},\n                      cnvFrom : function(x){return Math.pow(10, -x);}};\n\n    this.funcs['hpC'] = {cnvTo : function(x){\n                              return -(this.func['ln'](x))/this.funcs['ln'](100);},\n                       cnvFrom : function(x){return Math.pow(100, -x);}};\n\n    this.funcs['hpM'] = {cnvTo : function(x){\n                              return -(this.funcs['ln'](x))/this.funcs['ln'](1000);},\n                      cnvFrom : function(x){return Math.pow(1000, -x);}};\n\n    this.funcs['hpQ'] = {cnvTo : function(x){\n                              return -(this.funcs['ln'](x))/this.funcs['ln'](50000);},\n                      cnvFrom : function(x){return Math.pow(50000, -x);}};\n\n  } // end of constructor\n\n\n  /**\n   * Returns the function with the name specified\n   *\n   * @param fname name of the function to be returned\n   * @return the function with the specified name\n   * @throws an error message if the function is not found\n   */\n  forName(fname) {\n    fname = fname.toLowerCase();\n\n    let f = this.funcs[fname] ;\n    if (f === null)\n      throw(new Error(`Requested function ${fname} is not defined`));\n    return f;\n  }\n\n\n  /**\n   * Returns a flag indicating whether or not the function has been\n   * defined.\n   *\n   * @param fname name of the function in question\n   * @return true if it has been defined; false if not\n   */\n  isDefined(fname) {\n    fname = fname.toLowerCase();\n    return this.funcs[fname] !== null;\n  }\n\n} // end of UcumFunctions class\n\nexport default new UcumFunctions(); // one singleton instance\n","/**\n * Internal utilities used by multiple UCUM classes.  For example,\n * isNumericString is used by both the UnitString and UcumLhcUtils\n * classes.  If it's in the UnitString class the UcumLhcUtils class\n * needs to require the UnitString class.  But the checkSynonyms\n * class is used by the UnitString class - but was in the UcumLhcUtils\n * class.  Requiring the UcumLhcUtils class from the UnitString class\n * made everything break (cyclical requires).\n *\n * So now they're here.\n */\n\n/**\n * This module implements internal ucum utilities.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\n\nvar UnitTables = require('./unitTables.js').UnitTables ;\n\n\n/**\n * This function tests a string to see if it contains only numbers (digits,\n * a period, leading - or +).  This code was taken from a stackoverflow\n * solution:\n * https://stackoverflow.com/questions/175739/is-there-a-built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number/42356340#42356340\n *\n * @params theString\n * @returns true if the string contains only numbers; false otherwise\n */\nexport function isNumericString(theString) {\n  let num = \"\" + theString; //coerce num to be a string\n  return !isNaN(num) && !isNaN(parseFloat(num));\n} // end isNumericString\n\n\n/**\n *  Checks whether a string qualifies as an integer unit.  Section 2.2.8 (\"integer\n *  numbers\", says, \"A positive integer number may appear in place of a simple\n *  unit symbol.  Only a pure string of decimal digits (‘0’–‘9’) is\n *  interpreted as a number.\"\n *  Note:  This leaves open the question of whether \"0\" is a valid unit, since\n *  it is positive, but you can't measure anything in units of zero.\n * @param str the string to check\n */\nexport function isIntegerUnit(str) {\n  return /^\\d+$/.test(str);\n}\n\n\n/**\n * This method accepts a term and looks for units that include it as\n * a synonym - or that include the term in its name.\n *\n * @param theSyn the term to search for.  This is assumed to be\n *  a string and not undefined.  The calling method should do any\n *  necessary checking before calling this.\n * @returns a hash with up to three elements:\n *  'status' contains the status of the request, which can be 'error',\n *    'failed' or succeeded';\n *  'msg' which contains a message for an error or if no units were found; and\n *  'units' which is an array that contains one array for each unit found:\n *    the unit's csCode_, the unit's name_, and the unit's guidance_\n *\n */\nexport function getSynonyms(theSyn) {\n\n  let retObj = {} ;\n  let utab = UnitTables.getInstance();\n  let resp = {} ;\n  resp = utab.getUnitBySynonym(theSyn);\n\n  // If we didn't get any units, transfer the status and message\n  if (!resp['units']) {\n    retObj['status'] = resp['status'];\n    retObj['msg'] = resp['msg'];\n  }\n  else {\n    retObj['status'] = 'succeeded';\n    let aLen = resp['units'].length ;\n    retObj['units'] = [];\n    for (let a = 0; a < aLen; a++) {\n      let theUnit = resp['units'][a];\n      retObj['units'][a] = {\n        'code': theUnit.csCode_,\n        'name': theUnit.name_,\n        'guidance': theUnit.guidance_};\n    } // end do for all units returned\n  } // end if we got a units list\n  return retObj ;\n\n} // end getSynonyms\n\n","/**\n * This class handles opening, reading and loading the JSON file of ucum\n * definitions (prefixes, base units, and unit atoms).\n *\n * @author Lee Mericle\n *\n */\n\nvar Pfx = require(\"./prefix.js\");\nvar PfxT = require(\"./prefixTables.js\");\nvar Un = require(\"./unit.js\");\nvar Utab = require('./unitTables.js');\nvar unpackArray = require('./jsonArrayPack.js').unpackArray;\n\nexport class UcumJsonDefs {\n\n  /**\n   * This method loads the JSON prefix and unit objects into the prefix and\n   * unit tables.\n   *\n   * @returns nothing\n   */\n  loadJsonDefs() {\n    // requiring the file will take care of opening it for use\n    const jsonDefs = require('../data/ucumDefs.min.json');\n    jsonDefs.prefixes = unpackArray(jsonDefs.prefixes);\n    jsonDefs.units = unpackArray(jsonDefs.units);\n\n    if (Utab.UnitTables.getInstance().unitsCount() === 0) {\n\n      let pTab = PfxT.PrefixTables.getInstance();\n      let prefixes = jsonDefs[\"prefixes\"];\n      let plen = prefixes.length;\n\n      for (let p = 0; p < plen; p++) {\n        let newPref = new Pfx.Prefix(prefixes[p]);\n        pTab.add(newPref);\n      }\n\n      let uTab = Utab.UnitTables.getInstance();\n      let units = jsonDefs[\"units\"];\n      let ulen = units.length;\n\n      for (let u = 0; u < ulen; u++) {\n        let newUnit = new Un.Unit(units[u]);\n        uTab.addUnit(newUnit);\n      }\n    } // end if the data has not already been loaded\n  } // end loadJsonDefs\n\n} // end UcumJsonDefs class\n\nvar ucumJsonDefs = new UcumJsonDefs();\nexport {ucumJsonDefs};\n","/**\n * This class provides a single point of access to the LHC UCUM utilities\n *\n * @author Lee Mericle\n *\n */\nvar Ucum = require('./config.js').Ucum;\nimport {ucumJsonDefs} from './ucumJsonDefs.js';\nvar UnitTables = require('./unitTables.js').UnitTables;\nvar UnitString = require('./unitString.js').UnitString;\n\nimport * as intUtils_ from \"./ucumInternalUtils.js\";\n\n/**\n * UCUM external utilities class\n */\nexport class UcumLhcUtils {\n\n  /**\n   * Constructor.  This loads the json prefix and unit definitions if\n   * they haven't been loaded already and creates itself as a singleton object.\n   *\n   */\n  constructor() {\n\n      if (UnitTables.getInstance().unitsCount() === 0) {\n\n        // Load the prefix and unit objects\n        ucumJsonDefs.loadJsonDefs();\n      }\n\n      // Get the UnitString parser that will be used with this instance\n      // of the LHC Utilities\n      this.uStrParser_ = UnitString.getInstance();\n\n  } // end constructor\n\n\n  /**\n   * This method calls the useHTMLInMessages method on the UnitString\n   * object.  It should be called by web applications that use\n   * these utilities.\n   *\n   * @param use flag indicating whether or not to use the braces message;\n   *  defaults to true\n   */\n  useHTMLInMessages(use) {\n    if (use === undefined)\n      use = true ;\n    this.uStrParser_.useHTMLInMessages(use);\n  }\n\n\n  /**\n   * This method calls the useBraceMsgForEachString method on the UnitString\n   * object.  It should be called by web applications where unit\n   * strings are validated individually (as opposed to validating a whole\n   * file of unit strings).\n   *\n   * @param use flag indicating whether or not to use the braces message;\n   *  defaults to true\n   */\n  useBraceMsgForEachString(use) {\n    if (use === undefined)\n      use = true ;\n    this.uStrParser_.useBraceMsgForEachString(use);\n  }\n\n\n  /**\n   * This method validates a unit string.  It first checks to see if the\n   * string passed in is a unit code that is found in the unit codes table.\n   * If it is not found it parses the string to see if it resolves to a\n   * valid unit string.\n   *\n   * If a valid unit cannot be found, the string is tested for some common\n   * errors, such as missing brackets or a missing multiplication operator.\n   * If found, the error is reported in the messages array that is returned.\n   *\n   * If a valid unit cannot be found and an error cannot be discerned, this\n   * may return, if requested, a list of suggested units in the messages\n   * array that is returned.  Suggestions are based on matching the expression\n   * with unit names and synonyms.\n   *\n   * @param uStr the string to be validated\n   * @param suggest a boolean to indicate whether or not suggestions are\n   *  requested for a string that cannot be resolved to a valid unit;\n   *  true indicates suggestions are wanted; false indicates they are not,\n   *  and is the default if the parameter is not specified;\n   * @param valConv a string indicating if this validation request was initiated\n   *  by a validation task ('validate') or a conversion task ('convert'),\n   *  used only for the demo code, and the default is 'Validator' if the\n   *  parameter is not specified;\n   * @returns an object with five properties:\n   *  'status' will be 'valid' (the uStr is a valid UCUM code), 'invalid'\n   *     (the uStr is not a valid UCUM code, and substitutions or\n   *     suggestions may or may not be returned, depending on what was\n   *     requested and found); or 'error' (an input or programming error\n   *     occurred);\n   *  'ucumCode' the valid ucum code, which may differ from what was passed\n   *    in (e.g., if 'Gauss' is passed in, this will contain 'G') OR null if\n   *    the string was flagged as invalid or an error occurred;\n   *  'msg' is an array of one or more messages, if the string is invalid or\n   *        an error occurred, indicating the problem, or an explanation of a\n   *        substitution such as the substitution of 'G' for 'Gauss', or\n   *        an empty array if no messages were generated;\n   *  'unit' which is null if no unit is found, or a hash for a unit found:\n   *    'code' is the unit's ucum code (G in the above example;\n   *    'name' is the unit's name (Gauss in the above example); and\n   *    'guidance' is the unit's guidance/description data; and\n   *  'suggestions' if suggestions were requested and found, this is an array\n   *     of one or more hash objects.  Each hash contains three elements:\n   *     'msg' which is a message indicating what part of the uStr input\n   *        parameter the suggestions are for;\n   *     'invalidUnit' which is the unit expression the suggestions are\n   *        for; and\n   *     'units' which is an array of data for each suggested unit found.\n   *        Each array will contain the unit code, the unit name and the\n   *        unit guidance (if any).\n   *     If no suggestions were requested and found, this property is not\n   *     returned.\n   */\n  validateUnitString(uStr, suggest, valConv) {\n\n    if (suggest === undefined)\n      suggest = false ;\n\n    if (valConv === undefined)\n      valConv = 'validate' ;\n\n    let resp = this.getSpecifiedUnit(uStr, valConv, suggest);\n    let theUnit = resp['unit'];\n    let retObj = {};\n    if (!theUnit) {\n      retObj = {'status': (!resp['origString'] || resp['origString'] === null) ?\n                           'error' : 'invalid',\n                'ucumCode': null};\n    }\n    else {\n      retObj = {'status': resp['origString'] === uStr ? 'valid': 'invalid',\n                'ucumCode': resp['origString'],\n                'unit': {'code': theUnit.csCode_,\n                         'name': theUnit.name_,\n                         'guidance': theUnit.guidance_ }};\n    }\n    if (resp['suggestions']) {\n      retObj['suggestions'] = resp['suggestions'];\n    }\n    retObj['msg'] = resp['retMsg'];\n    return retObj;\n\n  } // end validateUnitString\n\n\n  /**\n   * This method converts one unit to another\n   *\n   * @param fromUnitCode the unit code/expression/string of the unit to be converted\n   * @param fromVal the number of \"from\" units to be converted to \"to\" units\n   * @param toUnitCode the unit code/expression/string of the unit that the from\n   *  field is to be converted to\n   * @param suggest a boolean to indicate whether or not suggestions are\n   *  requested for a string that cannot be resolved to a valid unit;\n   *  true indicates suggestions are wanted; false indicates they are not,\n   *  and is the default if the parameter is not specified;\n   * @param molecularWeight the molecular weight of the substance in question\n   *  when a conversion is being requested from mass to moles and vice versa.\n   *  This is required when one of the units represents a value in moles.  It is\n   *  ignored if neither unit includes a measurement in moles.\n   * @returns a hash with six elements:\n   *  'status' that will be: 'succeeded' if the conversion was successfully\n   *     calculated; 'failed' if the conversion could not be made, e.g., if\n   *     the units are not commensurable; or 'error' if an error occurred;\n   *  'toVal' the numeric value indicating the conversion amount, or null\n   *     if the conversion failed (e.g., if the units are not commensurable);\n   *  'msg' is an array message, if the string is invalid or an error occurred,\n   *        indicating the problem, or an explanation of a substitution such as\n   *        the substitution of 'G' for 'Gauss', or an empty array if no\n   *        messages were generated;\n   *  'suggestions' if suggestions were requested and found, this is a hash\n   *     that contains at most two elements:\n   *     'from' which, if the fromUnitCode input parameter or one or more of\n   *       its components could not be found, is an array one or more hash\n   *       objects.  Each hash contains three elements:\n   *         'msg' which is a message indicating what unit expression the\n   *            suggestions are for;\n   *         'invalidUnit' which is the unit expression the suggestions\n   *            are for; and\n   *         'units' which is an array of data for each suggested unit found.\n   *            Each array will contain the unit code, the unit name and the\n   *            unit guidance (if any).\n   *       If no suggestions were found for the fromUnitCode this element\n   *       will not be included.\n   *     'to' which, if the \"to\" unit expression or one or more of its\n   *       components could not be found, is an array one or more hash objects.  Each hash\n   *       contains three elements:\n   *         'msg' which is a message indicating what toUnitCode input\n   *            parameter the suggestions are for;\n   *         'invalidUnit' which is the unit expression the suggestions\n   *            are for; and\n   *         'units' which is an array of data for each suggested unit found.\n   *            Each array will contain the unit code, the unit name and the\n   *            unit guidance (if any).\n   *       If no suggestions were found for the toUnitCode this element\n   *       will not be included.\n   *    No 'suggestions' element will be included in the returned hash\n   *    object if none were found, whether or not they were requested.\n   *  'fromUnit' the unit object for the fromUnitCode passed in; returned\n   *     in case it's needed for additional data from the object; and\n   *  'toUnit' the unit object for the toUnitCode passed in; returned\n   *     in case it's needed for additional data from the object.\n   */\n  convertUnitTo(fromUnitCode, fromVal, toUnitCode, suggest, molecularWeight) {\n    if (suggest === undefined)\n      suggest = false ;\n\n    if (molecularWeight === undefined)\n      molecularWeight = null ;\n\n    let returnObj = {'status' : 'failed',\n                     'toVal' : null,\n                     'msg' : []} ;\n\n    if (fromUnitCode) {\n      fromUnitCode = fromUnitCode.trim();\n    }\n    if (!fromUnitCode || fromUnitCode == '') {\n      returnObj['status'] = 'error';\n      returnObj['msg'].push('No \"from\" unit expression specified.');\n    }\n    if (fromVal === null || isNaN(fromVal) || (typeof fromVal !== 'number' &&\n        !intUtils_.isNumericString(fromVal))) {\n      returnObj['status'] = 'error';\n      returnObj['msg'].push('No \"from\" value, or an invalid \"from\" value, ' +\n                         'was specified.');\n    }\n    if (toUnitCode) {\n      toUnitCode = toUnitCode.trim();\n    }\n    if (!toUnitCode || toUnitCode == '') {\n      returnObj['status'] = 'error';\n      returnObj['msg'].push('No \"to\" unit expression specified.');\n    }\n    if (returnObj['status'] !== 'error') {\n      try {\n        let fromUnit = null;\n\n        let parseResp = this.getSpecifiedUnit(fromUnitCode, 'convert', suggest);\n        fromUnit = parseResp['unit'];\n        if (parseResp['retMsg'])\n          returnObj['msg'] = returnObj['msg'].concat(parseResp['retMsg']);\n        if (parseResp['suggestions']) {\n          returnObj['suggestions'] = {};\n          returnObj['suggestions']['from'] = parseResp['suggestions'];\n        }\n        if (!fromUnit) {\n          returnObj['msg'].push(`Unable to find a unit for ${fromUnitCode}, ` +\n            `so no conversion could be performed.`);\n        }\n\n        let toUnit = null;\n        parseResp = this.getSpecifiedUnit(toUnitCode, 'convert', suggest);\n        toUnit = parseResp['unit'];\n        if (parseResp['retMsg'])\n          returnObj['msg'] = returnObj['msg'].concat(parseResp['retMsg']);\n        if (parseResp['suggestions']) {\n          if (!returnObj['suggestions'])\n            returnObj['suggestions'] = {} ;\n          returnObj['suggestions']['to'] = parseResp['suggestions'];\n        }\n        if (!toUnit) {\n          returnObj['msg'].push(`Unable to find a unit for ${toUnitCode}, ` +\n                                `so no conversion could be performed.`);\n        }\n\n        if (fromUnit && toUnit) {\n          try {\n            // if no molecular weight was specified perform a normal conversion\n            if (!molecularWeight) {\n              returnObj['toVal'] = toUnit.convertFrom(fromVal, fromUnit);\n            }\n            else {\n              if (fromUnit.moleExp_ !== 0 && toUnit.moleExp_ !== 0) {\n                throw(new Error('A molecular weight was specified ' +\n                  'but a mass <-> mole conversion cannot be executed for two ' +\n                  'mole-based units.  No conversion was attempted.'));\n              }\n              if (fromUnit.moleExp_ === 0 && toUnit.moleExp_ === 0) {\n                throw(new Error('A molecular weight was specified ' +\n                  'but a mass <-> mole conversion cannot be executed when ' +\n                  'neither unit is mole-based.  No conversion was attempted.'));\n              }\n              if (!fromUnit.isMoleMassCommensurable(toUnit)) {\n                throw(new Error(`Sorry.  ${fromUnitCode} cannot be ` +\n                  `converted to ${toUnitCode}.`));\n              }\n\n              // if the \"from\" unit is a mole-based unit, assume a mole to mass\n              // request\n              if (fromUnit.moleExp_ !== 0) {\n                returnObj['toVal'] =\n                  fromUnit.convertMolToMass(fromVal, toUnit, molecularWeight);\n              }\n              // else the \"to\" unit must be the mole-based unit, so assume a\n              // mass to mole request\n              else {\n                returnObj['toVal'] =\n                  fromUnit.convertMassToMol(fromVal, toUnit, molecularWeight);\n              }\n            } // end if a molecular weight was specified\n\n            // if an error hasn't been thrown - either from convertFrom or here,\n            // set the return object to show success\n            returnObj['status'] = 'succeeded';\n            returnObj['fromUnit'] = fromUnit;\n            returnObj['toUnit'] = toUnit;\n          }\n          catch (err) {\n            returnObj['status'] = 'failed';\n            returnObj['msg'].push(err.message);\n          }\n\n\n        }  // end if we have the from and to units\n      }\n      catch (err) {\n        if (err.message == Ucum.needMoleWeightMsg_)\n          returnObj['status'] = 'failed';\n        else\n          returnObj['status'] = 'error';\n        returnObj['msg'].push(err.message);\n      }\n    }\n\n    return returnObj ;\n\n  } // end convertUnitTo\n\n\n  /**\n   * This method accepts a term and looks for units that include it as\n   * a synonym - or that include the term in its name.\n   *\n   * @param theSyn the term to search for\n   * @returns a hash with up to three elements:\n   *  'status' contains the status of the request, which can be 'error',\n   *    'failed' or succeeded';\n   *  'msg' which contains a message for an error or if no units were found; and\n   *  'units' which is an array that contains one hash for each unit found:\n   *    'code' is the unit's csCode_\n   *    'name' is the unit's name_\n   *    'guidance' is the unit's guidance_\n   *\n   */\n  checkSynonyms(theSyn) {\n    let retObj = {} ;\n    if (theSyn === undefined || theSyn === null) {\n      retObj['status'] = 'error';\n      retObj['msg'] = 'No term specified for synonym search.'\n    }\n    else {\n      retObj = intUtils_.getSynonyms(theSyn);\n    } // end if a search synonym was supplied\n\n    return retObj ;\n\n  } // end checkSynonyms\n\n\n  /**\n   * This method parses a unit string to get (or try to get) the unit\n   * represented by the string.  It returns an error message if no string was specified\n   * or if any errors were encountered trying to get the unit.\n   *\n   * @param uName the expression/string representing the unit\n   * @param valConv indicates what type of request this is for - a request to\n   *  validate (pass in 'validate') or a request to convert (pass in 'convert')\n   * @param suggest a boolean to indicate whether or not suggestions are\n   *  requested for a string that cannot be resolved to a valid unit;\n   *  true indicates suggestions are wanted; false indicates they are not,\n   *  and is the default if the parameter is not specified;\n   * @returns a hash containing:\n   *   'unit' the unit object (or null if there were problems creating the\n   *     unit);\n   *   'origString' the possibly updated unit string passed in;\n   *   'retMsg' an array of user messages (informational, error or warning) if\n   *     any were generated (IF any were generated, otherwise will be an\n   *     empty array); and\n   *  'suggestions' is an array of 1 or more hash objects.  Each hash\n   *     contains three elements:\n   *       'msg' which is a message indicating what unit expression the\n   *          suggestions are for;\n   *       'invalidUnit' which is the unit expression the suggestions are\n   *          for; and\n   *       'units' which is an array of data for each suggested unit found.\n   *          Each array will contain the unit code, the unit name and the\n   *          unit guidance (if any).\n   *   The return hash will not contain a suggestions array if a valid unit\n   *   was found or if suggestions were not requested and found.\n   */\n  getSpecifiedUnit(uName, valConv, suggest) {\n\n    if (suggest === undefined)\n      suggest = false ;\n\n    let retObj = {};\n    retObj['retMsg'] = [];\n\n    if (!uName) {\n      retObj['retMsg'].push('No unit string specified.');\n    }\n    else {\n      let utab = UnitTables.getInstance();\n      uName = uName.trim();\n\n      // go ahead and just try using the name as the code.  This may or may not\n      // work, but if it does, it cuts out a lot of parsing.\n      let theUnit = utab.getUnitByCode(uName);\n\n      // If we found it, set the returned unit string to what was passed in;\n      // otherwise try parsing as a unit string\n      if (theUnit) {\n        retObj['unit'] = theUnit ;\n        retObj['origString'] = uName;\n      }\n      else {\n        try {\n          let resp = this.uStrParser_.parseString(uName, valConv, suggest);\n          retObj['unit'] = resp[0];\n          retObj['origString'] = resp[1];\n          if (resp[2])\n            retObj['retMsg'] = resp[2];\n          retObj['suggestions'] = resp[3];\n        }\n        catch (err) {\n          console.log(`Unit requested for unit string ${uName}.` +\n            'request unsuccessful; error thrown = ' + err.message);\n            retObj['retMsg'].unshift(`${uName} is not a valid unit.  ` +\n                                     `${err.message}`);\n        }\n      } // end if the unit was not found as a unit name\n    } // end if a unit expression was specified\n\n    return retObj;\n\n  } // end getSpecifiedUnit\n\n\n  /**\n   * This method retrieves a list of units commensurable, i.e., that can be\n   * converted from and to, a specified unit.  Returns an error if the \"from\"\n   * unit cannot be found.\n   *\n   * @param fromName the name/unit string of the \"from\" unit\n   * @returns an array containing two elements;\n   *   first element is the list of commensurable units if any were found\n   *   second element is an error message if the \"from\" unit is not found\n   */\n  commensurablesList(fromName) {\n\n    let retMsg = [];\n    let commUnits = null ;\n    let parseResp = this.getSpecifiedUnit(fromName, 'validate', false);\n    let fromUnit = parseResp['unit'];\n    if (parseResp['retMsg'].length > 0)\n      retMsg = parseResp['retMsg'] ;\n    if (!fromUnit) {\n      retMsg.push(`Could not find unit ${fromName}.`);\n    }\n    else {\n      let dimVec = null ;\n      let fromDim = fromUnit.getProperty('dim_');\n      if (!fromDim) {\n        retMsg.push('No commensurable units were found for ' + fromName) ;\n      }\n      else {\n        try {\n          dimVec = fromDim.getProperty('dimVec_');\n        }\n        catch (err) {\n          retMsg.push(err.message);\n          if (err.message ===\n            \"Dimension does not have requested property(dimVec_)\")\n            dimVec = null;\n        }\n        if (dimVec) {\n          let utab = UnitTables.getInstance();\n          commUnits = utab.getUnitsByDimension(dimVec);\n        }\n      } // end if the from unit has a dimension vector\n    } // end if we found a \"from\" unit\n    return [commUnits , retMsg];\n  } // end commensurablesList\n\n} // end UcumLhcUtils class\n\n\n/**\n *  This function exists ONLY until the original UcumLhcUtils constructor\n *  is called for the first time.  It's defined here in case getInstance\n *  is called before the constructor.   This calls the constructor.\n *\n *  The constructor redefines the getInstance function to return the\n *  singleton UcumLhcUtils object.  This is based on the UnitTables singleton\n *  implementation; see more detail in the UnitTables constructor description.\n *\n *  NO LONGER TRUE - not implemented as a singleton.  This method retained to\n *  avoid problems with calls to it that exist throughout the code.\n *\n *  @return the (formerly singleton) UcumLhcUtils object.\n */\nUcumLhcUtils.getInstance = function(){\n  return new UcumLhcUtils();\n} ;\n\n\n\n\n","/**\n * This exports definitions for ucum classes that need references to them\n * available to the demo code.  The actual code will be in the ucumPkg\n * library found in the dist directory.  This file provides the hooks to\n * those classes within the library.\n */\n\nexport var Ucum = require(\"./config.js\").Ucum;\nexport var UcumLhcUtils = require(\"./ucumLhcUtils.js\").UcumLhcUtils;\nexport var UnitTables = require(\"./unitTables.js\").UnitTables;","\n/**\n * This class represents one unit of measure.  It includes\n * functions to cover constructor, accessor, and assignment tasks as\n * well as operators to calculate multiplication, division and raising\n * to a power.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\nvar Ucum = require('./config.js').Ucum;\nvar Dimension = require('./dimension.js').Dimension;\nimport funcs from \"./ucumFunctions.js\";\nvar UnitTables;\n\nvar isInteger = require(\"is-integer\");\nimport * as intUtils_ from \"./ucumInternalUtils.js\";\n\nexport class Unit {\n\n  /**\n   * Constructor.\n   *\n   * @param attrs an optional parameter that may be:\n   *  a string, which is parsed by the unit parser, which creates\n   *  the unit from the parsed string; or\n   *  a hash containing all or some values for the attributes of\n   *  the unit, where the keys are the attribute names, without a\n   *  trailing underscore, e.g., name instead of name_; or\n   *  null, in which case an empty hash is created and used to\n   *  set the values forthe attributes.\n   *  If a hash (empty or not) is used, attributes for which no value\n   *  is specified are assigned a default value.\n   *\n   */\n  constructor(attrs = {}) {\n\n    // Process the attrs hash passed in, which may be empty.\n    // Create and assign values (from the attrs hash or defaults) to all\n    // attributes.  From Class Declarations in Understanding ECMAScript,\n    // https://leanpub.com/understandinges6/read/#leanpub-auto-class-declarations,\n    //   \"Own properties, properties that occur on the instance rather than the\n    //    prototype, can only be created inside of a class constructor or method.\n    //    It's recommended to create all possible own properties inside of the\n    //    constructor function so there's a single place that's responsible for\n    //    all of them.\"\n\n    /*\n     * Flag indicating whether or not this is a base unit\n     */\n    this.isBase_ = attrs['isBase_'] || false ;\n\n    /*\n     * The unit name, e.g., meter\n     */\n    this.name_ = attrs['name_'] || '';\n\n    /*\n     * The unit's case-sensitive code, e.g., m\n     */\n    this.csCode_ = attrs['csCode_'] || '';\n\n    /*\n     * The unit's case-insensitive code, e.g., M\n     */\n    this.ciCode_ = attrs['ciCode_'] || '';\n\n    /*\n     * The unit's property, e.g., length\n     */\n    this.property_ = attrs['property_'] || '';\n\n    /*\n     * The magnitude of the unit, e.g., 3600/3937 for a yard,\n     * where a yard - 3600/3973 * m(eter).  The Dimension\n     * property specifies the meter - which is the unit on which\n     * a yard is based, and this magnitude specifies how to figure\n     * this unit based on the base unit.\n     */\n    this.magnitude_ = attrs['magnitude_'] || 1;\n\n    /*\n     * The Dimension object of the unit\n     */\n    if (attrs['dim_'] === undefined || attrs['dim_'] === null) {\n      this.dim_ = new Dimension();\n    }\n    // When the unit data stored in json format is reloaded, the dimension data\n    // is recognized as a a hash, not as a Dimension object.\n    else if (attrs['dim_']['dimVec_'] !== undefined) {\n      this.dim_ = new Dimension(attrs['dim_']['dimVec_']) ;\n    }\n    else if (attrs['dim_'] instanceof Dimension) {\n      this.dim_ = attrs['dim_'];\n    }\n    else if (attrs['dim_'] instanceof Array || isInteger(attrs['dim_'])) {\n      this.dim_ = new Dimension(attrs['dim_']) ;\n    }\n    else {\n      this.dim_ = new Dimension();\n    }\n    /*\n     * The print symbol of the unit, e.g., m\n     */\n    this.printSymbol_ = attrs['printSymbol_'] || null;\n\n    /*\n     * The class of the unit, where given, e.g., dimless\n     */\n    this.class_ = attrs['class_'] || null;\n\n    /*\n     * A flag indicating whether or not the unit is metric\n     */\n    this.isMetric_ = attrs['isMetric_'] || false;\n\n    /*\n     * The \"variable\" - which I think is used only for base units\n     * The symbol for the variable as used in equations, e.g., s for distance\n     */\n    this.variable_ = attrs['variable_'] || null ;  // comes from 'dim' in XML\n\n    /*\n     * The conversion function\n     */\n    this.cnv_ = attrs['cnv_'] || null;\n\n    /*\n     * The conversion prefix\n     */\n    this.cnvPfx_ = attrs['cnvPfx_'] || 1;\n\n    /*\n     * Flag indicating whether or not this is a \"special\" unit, i.e., is\n     * constructed using a function specific to the measurement, e.g.,\n     * fahrenheit and celsius\n     */\n    this.isSpecial_ = attrs['isSpecial_'] || false ;\n\n    /*\n     * Flag indicating whether or not this is an arbitrary unit\n     */\n    this.isArbitrary_ = attrs['isArbitrary_'] || false;\n\n    /*\n     * Integer indicating what level of exponent applies to a mole-based portion\n     * of the unit.  So, for the unit \"mol\", this will be 1.  For \"mol2\" this\n     * will be 2.  For \"1/mol\" this will be -1.  Any unit that does not include\n     * a mole will have a 0 in this field.  This is used to determine\n     * commensurability for mole<->mass conversions.\n     */\n    this.moleExp_ = attrs['moleExp_'] || 0;\n\n    /*\n     * Added when added LOINC list of units\n     * synonyms are used by the autocompleter to enhance lookup capabilities\n     * while source says where the unit first shows up.  Current sources are\n     * UCUM - which are units from the unitsofmeasure.org list and LOINC -\n     * which are units from the LOINC data.\n     */\n    this.synonyms_ = attrs['synonyms_'] || null ;\n    this.source_ = attrs['source_'] || null ;\n    this.loincProperty_ = attrs['loincProperty_'] || null;\n    this.category_ = attrs['category_'] || null;\n    this.guidance_ = attrs['guidance_'] || null;\n\n    /*\n     * Used to compute dimension; storing for now until I complete\n     * unit definition parsing\n     */\n    /*\n     * Case sensitive (cs) and case insensitive (ci) base unit strings,\n     * includes exponent and prefix if applicable - specified in\n     * <value Unit=x UNIT=X value=\"nnn\">nnn</value> -- the unit part --\n     * in the ucum-essence.xml file, and may be specified by a user\n     * when requesting conversion or validation of a unit string.  The\n     * magnitude (base factor) is used with this to determine the new unit.\n     * For example, a Newton (unit code N) is created from the string\n     * kg.m/s2, and the value of 1 (base factor defined below). An hour\n     * (unit code h) is created from the unit min (minute) with a value\n     * of 60.\n     */\n    this.csUnitString_ = attrs['csUnitString_'] || null ;\n    this.ciUnitString_ = attrs['ciUnitString_'] || null ;\n\n    /*\n     * String and numeric versions of factor applied to unit specified in\n     * <value Unit=x UNIT=X value=\"nnn\">nnn</value> -- the value part\n     */\n    this.baseFactorStr_ = attrs['baseFactorStr_'] || null;\n    this.baseFactor_ = attrs['baseFactor_'] || null;\n\n    /*\n     * Flag used to indicate units where the definition process failed\n     * when parsing units from the official units definitions file\n     * (currently using the ucum-essence.xml file).  We keep these\n     * so that we can use them to at least validate them as valid\n     * units, but we don't try to convert them.   This is temporary\n     * and only to account for instances where the code does not\n     * take into account various special cases in the xml file.\n     *\n     * This is NOT used when trying to validate a unit string\n     * submitted during a conversion or validation attempt.\n     */\n    this.defError_ = attrs['defError_'] || false ;\n\n\n  } // end constructor\n\n\n  /**\n   * Assign the unity (= dimensionless unit 1) to this unit.\n   *\n   * @return this unit\n   */\n  assignUnity() {\n    this.name_  = \"\" ;\n    this.magnitude_ = 1 ;\n    if (!this.dim_)\n      this.dim_ = new Dimension();\n    this.dim_.assignZero() ;\n    this.cnv_ = null ;\n    this.cnvPfx_ = 1 ;\n    return this;\n\n  } // end assignUnity\n\n\n  /**\n   * This assigns one or more values, as provided in the hash passed in,\n   * to this unit.\n   *\n   * @param vals hash of values to be assigned to the attributes\n   *        specified by the key(s), which should be the attribute\n   *        name without the trailing underscore, e.g., name instead\n   *        of name_.\n   * @return nothing\n   */\n  assignVals(vals) {\n    for (let key in vals) {\n      let uKey = !(key.charAt(key.length - 1)) === '_' ? key + '_' : key ;\n      if (this.hasOwnProperty(uKey))\n        this[uKey] = vals[key];\n      else\n        throw(new Error(`Parameter error; ${key} is not a property of a Unit`));\n    }\n  } // end assignVals\n\n\n  /**\n   * This creates a clone of this unit.\n   *\n   * @return the clone\n   */\n  clone() {\n    let retUnit = new Unit() ;\n    Object.getOwnPropertyNames(this).forEach(val => {\n      if (val === 'dim_') {\n        if (this['dim_'])\n          retUnit['dim_'] = this['dim_'].clone();\n        else\n          retUnit['dim_'] = null;\n      }\n      else\n        retUnit[val] = this[val];\n    });\n    return retUnit ;\n\n  } // end clone\n\n\n  /**\n   * This assigns all properties of a unit passed to it to this unit.\n   *\n   * @param unit2 the unit whose properties are to be assigned to this one.\n   * @return nothing; this unit is updated\n   */\n  assign(unit2) {\n    Object.getOwnPropertyNames(unit2).forEach(val => {\n      if (val === 'dim_') {\n        if (unit2['dim_'])\n          this['dim_'] = unit2['dim_'].clone();\n        else\n          this['dim_'] = null;\n      }\n      else {\n        this[val] = unit2[val];\n      }\n    });\n  } // end assign\n\n\n  /**\n   * This determines whether or not object properties of the unit\n   * passed in are equal to the corresponding properties in this unit.\n   * The following properties are the only ones checked:\n   *   magnitude_, dim_, cnv_ and cnvPfx_\n   *\n   * @param unit2 the unit whose properties are to be checked.\n   * @return boolean indicating whether or not they match\n   */\n  equals(unit2) {\n\n    return (this.magnitude_ === unit2.magnitude_ &&\n            this.cnv_ === unit2.cnv_ &&\n            this.cnvPfx_ === unit2.cnvPfx_ &&\n            ((this.dim_ === null && unit2.dim_ === null) ||\n             this.dim_.equals(unit2.dim_)));\n\n  } // end equals\n\n\n  /**\n   * This method compares every attribute of two objects to determine\n   * if they all match.\n   *\n   * @param unit2 the unit that is to be compared to this unit\n   * @return boolean indicating whether or not every attribute matches\n   */\n  fullEquals(unit2) {\n\n    let thisAttr = Object.keys(this).sort();\n    let u2Attr = Object.keys(unit2).sort();\n\n    let keyLen = thisAttr.length ;\n    let match = (keyLen === u2Attr.length);\n\n    // check each attribute.   Dimension objects have to checked using\n    // the equals function of the Dimension class.\n    for (let k = 0; k < keyLen && match; k++) {\n      if (thisAttr[k] === u2Attr[k]) {\n        if (thisAttr[k] === 'dim_')\n          match = this.dim_.equals(unit2.dim_);\n        else\n          match = this[thisAttr[k]] === unit2[thisAttr[k]];\n      }\n      else\n        match = false ;\n    } // end do for each key and attribute\n    return match ;\n  }// end of fullEquals\n\n  /**\n   * This returns the value of the property named by the parameter\n   * passed in.\n   *\n   * @param propertyName name of the property to be returned, with\n   *        or without the trailing underscore.\n   * @return the requested property, if found for this unit\n   * @throws an error if the property is not found for this unit\n   */\n  getProperty(propertyName) {\n    let uProp = propertyName.charAt(propertyName.length - 1) === '_' ? propertyName :\n                                             propertyName + '_' ;\n    return this[uProp] ;\n\n  } // end getProperty\n\n\n  /**\n   * Takes a measurement consisting of a number of units and a unit and returns\n   * the equivalent number of this unit.  So, 15 mL would translate\n   * to 1 tablespoon if this object is a tablespoon.\n   *\n   * Note that the number returned may not be what is normally expected.\n   * For example, converting 10 Celsius units to Fahrenheit would \"normally\"\n   * return a value of 50.   But in this case you'll get back something like\n   * 49.99999999999994.\n   *\n   * If either unit is an arbitrary unit an exception is raised.\n   *\n   * @param num the magnitude for the unit to be translated (e.g. 15 for 15 mL)\n   * @param fromUnit the unit to be translated to one of this type (e.g. a mL unit)\n   *\n   * @return the number of converted units (e.g. 1 for 1 tablespoon)\n   * @throws an error if the dimension of the fromUnit differs from this unit's\n   * dimension\n   */\n  convertFrom(num, fromUnit) {\n    let newNum = 0.0 ;\n\n    if (this.isArbitrary_)\n      throw (new Error(`Attempt to convert arbitrary unit ${this.name_}`));\n    if (fromUnit.isArbitrary_)\n      throw (new Error(`Attempt to convert to arbitrary unit ${fromUnit.name_}`));\n\n    // reject request if both units have dimensions that are not equal\n    if (fromUnit.dim_ && this.dim_ && !(fromUnit.dim_.equals(this.dim_))) {\n      // check first to see if a mole<->mass conversion is appropriate\n      if (this.isMoleMassCommensurable(fromUnit)) {\n        throw(new Error(Ucum.needMoleWeightMsg_));\n      }\n      else {\n        throw(new Error(`Sorry.  ${fromUnit.csCode_} cannot be converted ` +\n          `to ${this.csCode_}.`));\n      }\n    }\n    // reject request if there is a \"from\" dimension but no \"to\" dimension\n    if (fromUnit.dim_ && (!this.dim_ || this.dim_.isNull())) {\n      throw(new Error(`Sorry.  ${fromUnit.csCode_} cannot be converted ` +\n        `to ${this.csCode_}.`));\n    }\n\n    // reject request if there is a \"to\" dimension but no \"from\" dimension\n    if (this.dim_ && (!fromUnit.dim_ || fromUnit.dim_.isNull())) {\n      throw(new Error(`Sorry.  ${fromUnit.csCode_} cannot be converted ` +\n        `to ${this.csCode_}.`));\n    }\n\n    let fromCnv = fromUnit.cnv_ ;\n    let fromMag = fromUnit.magnitude_ ;\n\n    // If the same conversion function is specified for both units, which\n    // includes neither unit having a conversion function, multiply the\n    // \"from\" unit's magnitude by the number passed in and then divide\n    // that result by this unit's magnitude.  Do this for units with\n    // and without dimension vectors.  PROBLEM with 2 non-commensurable\n    // units with no dimension vector or function, e.g., byte to mol\n    if (fromCnv === this.cnv_) {\n      newNum = (num * fromMag) / this.magnitude_;\n    }\n    // else use a function to get the number to be returned\n    else {\n      let x = 0.0 ;\n      if (fromCnv != null) {\n        // turn num * fromUnit.magnitude into its ratio scale equivalent,\n        // e.g., convert Celsius to Kelvin\n        let fromFunc = funcs.forName(fromCnv);\n        x = fromFunc.cnvFrom(num * fromUnit.cnvPfx_) * fromMag;\n        //x = fromFunc.cnvFrom(num * fromMag) * fromUnit.cnvPfx_;\n      }\n      else {\n        x = num * fromMag;\n      }\n\n      if (this.cnv_ != null) {\n        // turn mag * origUnit on ratio scale into a non-ratio unit,\n        // e.g. convert Kelvin to Fahrenheit\n        let toFunc = funcs.forName(this.cnv_);\n        newNum = toFunc.cnvTo(x / this.magnitude_) / this.cnvPfx_;\n      }\n      else {\n        newNum = x / this.magnitude_;\n      }\n    } // end if either unit has a conversion function\n\n    return newNum;\n\n  } // end convertFrom\n\n\n  /**\n   * Takes a number and a target unit and returns the number for a measurement\n   * of this unit that corresponds to the number of the target unit passed in.\n   * So, 1 tablespoon (where this unit represents a tablespoon) would translate\n   * to 15 mL.\n   *\n   * See the note on convertFrom about return values.\n   *\n   * @param mag the magnitude for this unit (e.g. 1 for 1 tablespoon)\n   * @param toUnit the unit to which this unit is to be translated\n   *  (e.g. an mL unit)\n   *\n   * @return the converted number value (e.g. 15 mL)\n   * @throws an error if the dimension of the toUnit differs from this unit's\n   *   dimension\n   */\n  convertTo(num, toUnit) {\n\n    return toUnit.convertFrom(num, this) ;\n\n  } // end convertTo\n\n\n  /**\n   * Takes a given number of this unit returns the number of this unit\n   * if it is converted into a coherent unit.  Does not change this unit.\n   *\n   * If this is a coherent unit already, just gives back the number\n   * passed in.\n   *\n   * @param num the number for the coherent version of this unit\n   * @return the number for the coherent version of this unit\n   */\n  convertCoherent(num) {\n\n    // convert mag' * u' into canonical number * u on ratio scale\n    if(this.cnv_ !== null)\n      num = this.cnv_.f_from(num / this.cnvPfx_) * this.magnitude_;\n\n    return num;\n\n  } // end convertCoherent\n\n\n  /**\n   * Mutates this unit into a coherent unit and converts a given number of\n   * units to the appropriate value for this unit as a coherent unit\n   *\n   * @param num the number for this unit before conversion\n   * @return the number of this unit after conversion\n   * @throws an error if the dimensions differ\n   */\n  mutateCoherent(num) {\n\n    // convert mu' * u' into canonical mu * u on ratio scale\n    num = this.convertCoherent(num) ;\n\n    // mutate to coherent unit\n    this.magnitude_ = 1;\n    this.cnv_ = null;\n    this.cnvPfx_ = 1;\n    this.name_ = \"\";\n\n    // build a name as a term of coherent base units\n    // This is probably ALL WRONG and a HORRIBLE MISTAKE\n    // but until we figure out what the heck the name being\n    // built here really is, it will have to stay.\n    for (let i = 0, max = Dimension.getMax(); i < max; i++) {\n      let elem = this.dim_.getElementAt(i);\n      let tabs = this._getUnitTables();\n      let uA = tabs.getUnitsByDimension(new Dimension(i));\n      if(uA == null)\n        throw(new Error(`Can't find base unit for dimension ${i}`));\n      this.name_ = uA.name + elem;\n    }\n    return num;\n\n  } // end mutateCoherent\n\n\n  /**\n   * Calculates the number of units that would result from converting a unit\n   * expressed in mass/grams to a unit expressed in moles.  The \"this\" unit is\n   * the unit expressed in some form of mass (g, mg, mmg, kg, whatever) and the\n   * target or \"to\" unit - the molUnit parameter - is a unit expressed in moles\n   * - mol, umol, mmol, etc.  The unit expressions surrounding the moles and\n   * mass must be convertible.  No validation of this requirement is performed.\n   *\n   * @param amt the quantity of this unit to be converted\n   * @param molUnit the target/to unit for which the converted # is wanted\n   * @param molecularWeight the molecular weight of the substance for which the\n   *  conversion is being made\n   * @return the equivalent amount in molUnit\n   */\n  convertMassToMol(amt, molUnit, molecularWeight) {\n    // The prefix values that have been applied to this unit, which is the mass\n    // (grams) unit, are reflected in the magnitude.  So the number of moles\n    // represented by this unit equals the number of grams -- amount * magnitude\n    // divided by the molecular Weight\n    let molAmt = (this.magnitude_ * amt)/molecularWeight ;\n    // The molUnit's basic magnitude, before prefixes are applied,\n    // is avogadro's number, get that and divide it out of the current magnitude.\n    let tabs = this._getUnitTables();\n    let avoNum = tabs.getUnitByCode('mol').magnitude_ ;\n    let molesFactor = molUnit.magnitude_ / avoNum ;\n    // return the molAmt divided by the molesFactor as the number of moles\n    // for the molUnit\n    return molAmt/molesFactor ;\n  }\n\n  /**\n   * Calculates the number of units that would result from converting a unit\n   * expressed in moles to a unit expressed in mass (grams).  The \"this\" unit\n   * is the unit expressed in some form of moles, e.g., mol, umol, mmol, etc.,\n   * and the target or \"to\" unit is a unit expressed in some form of mass, e.g.,\n   * g, mg, mmg, kg, etc.  Any unit expressions surrounding the moles and mass\n   * must be convertible. No validation of this requirement is performed.\n   *\n   * @param amt the quantity of this unit to be converted\n   * @param massUnit the target/to unit for which the converted # is wanted\n   * @param molecularWeight the molecular weight of the substance for which the\n   *  conversion is being made\n   * @return the equivalent amount in massUnit\n   */\n  convertMolToMass(amt, massUnit, molecularWeight) {\n    // A simple mole unit has a magnitude of avogadro's number.  Get that\n    // number now (since not everyone agrees on what it is, and what is\n    // being used in this system might change).\n    let tabs = this._getUnitTables();\n    let avoNum = tabs.getUnitByCode('mol').magnitude_ ;\n    // Determine what prefix values (mg or mg/dL, etc.) have been applied to\n    // this unit by dividing the simple mole unit magnitude out of the\n    // current mole unit magnitude.\n    let molesFactor = this.magnitude_ / avoNum ;\n    // The number of grams (mass) is equal to the number of moles (amt)\n    // times the molecular weight.  We also multiply that by the prefix values\n    // applied to the current unit (molesFactor) to get the grams for this\n    // particular unit.\n    let massAmt = (molesFactor * amt) * molecularWeight ;\n    // Finally, we return the mass amount/grams for this particular unit\n    // divided by any effects of prefixes applied to the \"to\" unit, which\n    // is assumed to be some form of a gram unit\n    return massAmt / massUnit.magnitude_ ;\n  }\n\n\n  /**\n   * Mutates this unit into a unit on a ratio scale and converts a specified\n   * number of units to an appropriate value for this converted unit\n   *\n   * @param num the number of this unit before it's converted\n   * @return the magnitude of this unit after it's converted\n   * @throw an error if the dimensions differ\n   */\n  mutateRatio(num) {\n    if (this.cnv_ == null)\n      return this.mutateCoherent(num);\n    else\n      return num;\n\n  } // end mutateRatio\n\n\n  /**\n   * Multiplies this unit with a scalar. Special meaning for\n   * special units so that (0.1*B) is 1 dB.\n   *\n   * This function DOES NOT modify this unit.\n   *\n   * @param s the value by which this unit is to be multiplied\n   * @return a copy this unit multiplied by s\n   * */\n  multiplyThis(s) {\n\n    let retUnit = this.clone() ;\n    if (retUnit.cnv_ != null)\n      retUnit.cnvPfx_ *= s;\n    else\n      retUnit.magnitude_ *= s;\n    let mulVal = s.toString();\n    retUnit.name_ = this._concatStrs(mulVal, '*', this.name_, '[', ']');\n    retUnit.csCode_ = this._concatStrs(mulVal, '.', this.csCode_, '(', ')');\n    retUnit.ciCode_ = this._concatStrs(mulVal, '.', this.ciCode_, '(', ')');\n    retUnit.printSymbol_ = this._concatStrs(mulVal, '.', this.printSymbol_,\n        '(', ')');\n\n    return retUnit;\n\n  } // end multiplyThis\n\n\n  /**\n   * Multiplies this unit with another unit. If one of the\n   * units is a non-ratio unit the other must be dimensionless or\n   * else an exception is thrown.\n   *\n   * This function does NOT modify this unit\n   * @param unit2 the unit to be multiplied with this one\n   * @return this unit after it is multiplied\n   * @throws an error if one of the units is not on a ratio-scale\n   *         and the other is not dimensionless.\n   */\n  multiplyThese(unit2) {\n\n    var retUnit = this.clone() ;\n\n    if (retUnit.cnv_ != null) {\n      if (unit2.cnv_ == null && (!unit2.dim_ || unit2.dim_.isZero()))\n        retUnit.cnvPfx_ *= unit2.magnitude_;\n      else\n        throw (new Error(`Attempt to multiply non-ratio unit ${retUnit.name_} ` +\n          'failed.'));\n    } // end if this unit has a conversion function\n\n    else if (unit2.cnv_ != null) {\n      if (!retUnit.dim_ || retUnit.dim_.isZero()) {\n        retUnit.cnvPfx_ = unit2.cnvPfx_ * retUnit.magnitude_;\n        retUnit.cnv_ = unit2.cnv_ ;\n      }\n      else\n        throw (new Error(`Attempt to multiply non-ratio unit ${unit2.name_}`));\n    } // end if unit2 has a conversion function\n\n    // else neither unit has a conversion function\n    else {\n      retUnit.magnitude_ *= unit2.magnitude_;\n    } // end if unit2 does not have a conversion function\n\n    // If this.dim_ isn't there, clone the dimension in unit2 - if dimVec_\n    // is a dimension in unit2.dim_; else just transfer it to this dimension\n    if (!retUnit.dim_ || (retUnit.dim_ && !retUnit.dim_.dimVec_)) {\n      if (unit2.dim_)\n        retUnit.dim_ = unit2.dim_.clone();\n      else\n        retUnit.dim_ = unit2.dim_;\n    }\n    // Else this.dim_ is there.  If there is a dimension for unit2,\n    // add it to this one.\n    else if (unit2.dim_ && unit2.dim_ instanceof Dimension) {\n      retUnit.dim_.add(unit2.dim_);\n    }\n\n    // Concatenate the unit info (name, code, etc) for all cases\n    // where the multiplication was performed (an error wasn't thrown)\n    retUnit.name_ = this._concatStrs(retUnit.name_, '*', unit2.name_, '[', ']');\n    retUnit.csCode_ = this._concatStrs(retUnit.csCode_, '.', unit2.csCode_,\n      '(', ')');\n    if (retUnit.ciCode_ && unit2.ciCode_)\n      retUnit.ciCode_ = this._concatStrs(retUnit.ciCode_, '.', unit2.ciCode_,\n        '(', ')');\n    else if (unit2.ciCode_)\n      retUnit.ciCode_ = unit2.ciCode_;\n    retUnit.guidance_ = '';\n    if (retUnit.printSymbol_ && unit2.printSymbol_)\n      retUnit.printSymbol_ = this._concatStrs(retUnit.printSymbol_, '.',\n        unit2.printSymbol_, '(', ')');\n    else if (unit2.printSymbol_)\n      retUnit.printSymbol_ = unit2.printSymbol_;\n\n    // Update the mole exponent count by adding the count for unit2 to the\n    // count for this unit.\n    retUnit.moleExp_ = retUnit.moleExp_ + unit2.moleExp_ ;\n\n    // A unit that has the arbitrary attribute taints any unit created from it\n    // via an arithmetic operation.  Taint accordingly\n    // if (!retUnit.isMole_)\n    //   retUnit.isMole_ = unit2.isMole_ ;\n     if (!retUnit.isArbitrary_)\n       retUnit.isArbitrary_ = unit2.isArbitrary_;\n\n    return retUnit ;\n\n  } // end multiplyThese\n\n\n  /**\n   * Divides this unit by another unit. If this unit is not on a ratio\n   * scale an exception is raised. Mutating to a ratio scale unit\n   * is not possible for a unit, only for a measurement.\n   *\n   * This unit is NOT modified by this function.\n   * @param unit2 the unit by which to divide this one\n   * @return this unit after it is divided by unit2\n   * @throws an error if either of the units is not on a ratio scale.\n   * */\n  divide(unit2) {\n\n    var retUnit = this.clone();\n\n    if (retUnit.cnv_ != null)\n      throw (new Error(`Attempt to divide non-ratio unit ${retUnit.name_}`));\n    if (unit2.cnv_ != null)\n      throw (new Error(`Attempt to divide by non-ratio unit ${unit2.name_}`));\n\n    if (retUnit.name_ && unit2.name_)\n      retUnit.name_ = this._concatStrs(retUnit.name_, '/', unit2.name_, '[', ']');\n    else if (unit2.name_)\n      retUnit.name_ = unit2.invertString(unit2.name_);\n\n    retUnit.csCode_ = this._concatStrs(retUnit.csCode_, '/', unit2.csCode_,\n      '(', ')');\n\n    if (retUnit.ciCode_ && unit2.ciCode_)\n      retUnit.ciCode_ = this._concatStrs(retUnit.ciCode_, '/', unit2.ciCode_,\n      '(', ')');\n    else if (unit2.ciCode_)\n      retUnit.ciCode_ = unit2.invertString(unit2.ciCode_) ;\n\n    retUnit.guidance_ = '';\n\n    retUnit.magnitude_ /= unit2.magnitude_;\n\n    if (retUnit.printSymbol_ && unit2.printSymbol_)\n      retUnit.printSymbol_ = this._concatStrs(retUnit.printSymbol_, '/',\n        unit2.printSymbol_, '(', ')');\n    else if (unit2.printSymbol_)\n      retUnit.printSymbol_ = unit2.invertString(unit2.printSymbol_);\n\n    // Continue if unit2 has a dimension object.\n    // If this object has a dimension object, subtract unit2's dim_ object from\n    // this one. The sub method will take care of cases where the dimVec_ arrays\n    // are missing on one or both dim_ objects.\n    if (unit2.dim_) {\n      if (retUnit.dim_) {\n        if (retUnit.dim_.isNull())\n          retUnit.dim_.assignZero();\n        retUnit.dim_ = retUnit.dim_.sub(unit2.dim_);\n      } // end if this.dim_ exists\n\n      // Else if this dim_ object is missing, clone unit2's dim_ object\n      // and give the inverted clone to this unit.\n      else\n        retUnit.dim_ = unit2.dim_.clone().minus();\n    } // end if unit2 has a dimension object\n\n    // Update the mole exponent count by subtracting the count for unit2 from\n    // the // count for this unit.\n    retUnit.moleExp_ = retUnit.moleExp_ - unit2.moleExp_ ;\n\n    // A unit that has the arbitrary attribute taints any unit created from\n    // it via an arithmetic operation.  Taint accordingly\n    // if (!retUnit.isMole_)\n    //   retUnit.isMole_ = unit2.isMole_ ;\n    if (!retUnit.isArbitrary_)\n      retUnit.isArbitrary_ = unit2.isArbitrary_;\n\n    return retUnit;\n\n  } // end divide\n\n\n  /**\n   * Invert this unit with respect to multiplication. If this unit is not\n   * on a ratio scale an exception is thrown. Mutating to a ratio scale unit\n   * is not possible for a unit, only for a measurement (the magnitude and\n   * dimension).\n   *\n   *  This unit is modified by this function.\n   * @return this unit after being inverted\n   * @throws and error if this unit is not on a ratio scale\n   */\n  invert() {\n\n    if (this.cnv_ != null)\n      throw (new Error(`Attempt to invert a non-ratio unit - ${this.name_}`));\n\n    this.name_ = this.invertString(this.name_);\n    this.magnitude_ = 1/this.magnitude_ ;\n    this.dim_.minus();\n    return this;\n\n  } // end invert\n\n\n  /**\n   * Inverts a string, where the string is assumed to be a code or a name\n   * of a division operation where the string is the divisor and the dividend\n   * is blank.\n   *\n   * @param the string to be inverted\n   * @return the inverted string\n   */\n  invertString(theString) {\n\n    if (theString.length > 0) {\n      let stringRep = theString.replace('/', \"!\").replace('.', '/').replace(\"!\", '.');\n      switch(stringRep.charAt(0)) {\n        case '.' : theString = stringRep.substr(1); break;\n        case '/' : theString = stringRep; break;\n        default  : theString = \"/\" + stringRep;\n      }\n    }\n    return theString;\n\n  } // end invertString\n\n\n  /**\n   * This function handles concatenation of two strings and an operator.\n   * It's called to build unit data, e.g., unit name, unit code, etc., from\n   * two different units, joined by the specified operator.\n   *\n   * @param str1 the first string to appear in the result\n   * @param operator the operator ('*', '.' or '/') to appear between the strings\n   * @param str2 the second string to appear in the result\n   * @param startChar the starting character to be used, when needed, to\n   *  enclose a string\n   * @param endChar the ending character to be used, when needed, to enclose\n   *  a string\n   * @returns the built string\n   */\n  _concatStrs(str1, operator, str2, startChar, endChar) {\n\n    return this._buildOneString(str1, startChar, endChar) +\n      operator + this._buildOneString(str2, startChar, endChar) ;\n  }\n\n\n  /**\n   * This function handles creation of one string to be included in a\n   * concatenated string.   Basically it checks to see if the string\n   * needs to be enclosed either in parentheses or square brackets.\n   *\n   * The string is enclosed if it is not a number, does not start with\n   * a parenthesis or square bracket, and includes a period, and asterisk,\n   * a slash or a blank space.\n   *\n   * @param str the string\n   * @param startChar starting enclosing character\n   * @param endChar ending enclosing character\n   * @returns the string\n   */\n  _buildOneString(str, startChar, endChar) {\n    let ret = '' ;\n    if (intUtils_.isNumericString(str)) {\n      ret = str;\n    }\n    else {\n      if (str.charAt(0) === '(' || str.charAt(0) === '[') {\n        ret = str;\n      }\n      else if (/[./* ]/.test(str)) {\n        ret = startChar + str + endChar ;\n      }\n      else {\n        ret = str ;\n      }\n    }\n    return ret ;\n  }\n\n\n  /**\n   * Raises the unit to a power.  For example\n   *  kg.m/s2 raised to the -2 power would be kg-2.m-2/s-4\n   *\n   * If this unit is not on a ratio scale an error is thrown. Mutating\n   * to a ratio scale unit is not possible for a unit, only for a\n   * measurement (magnitude and dimension).\n   *\n   * This is based on the pow method in Gunter Schadow's java version,\n   * although it uses javascript capabilities to simplify the processing.\n   *\n   * This unit is modified by this function\n   *\n   * @param p the power to with this unit is to be raise\n   * @return this unit after it is raised\n   * @throws an error if this unit is not on a ratio scale.\n   */\n  power(p) {\n\n    if (this.cnv_ != null)\n      throw (new Error(`Attempt to raise a non-ratio unit, ${this.name_}, ` +\n                       'to a power.'));\n\n    //this.name_ = UnitString.pow(this.name_, p);\n    // the above line is replaced with the code below, as the pow method\n    // never actually existing in the UnitString class.  (Tried to use\n    // Schadow java code but this way ended up being a lot easier).\n    let uStr = this.csCode_ ;\n    let uArray = uStr.match(/([./]|[^./]+)/g) ;\n    let arLen = uArray.length;\n\n    for (let i = 0; i < arLen; i++) {\n      let un = uArray[i] ;\n      if (un !== '/' && un !== '.') {\n        let nun = parseInt(un);\n        if (isInteger(nun))\n          uArray[i] = (Math.pow(nun, p).toString());\n        else {\n          let uLen = un.length ;\n          for (let u = uLen - 1; u >= 0; u--) {\n            let uChar = parseInt(un[u]);\n            if (!isInteger(uChar)) {\n              if (un[u] === '-' || un[u] === '+') {\n                u--;\n              }\n              if (u < uLen - 1) {\n                let exp = parseInt(un.substr(u));\n                exp = Math.pow(exp, p);\n                uArray[i] = un.substr(0, u) + exp.toString();\n                u = -1;\n              }\n              else {\n                uArray[i] += p.toString();\n                u = -1;\n              } // end if there are/aren't some numbers at the end\n              u = -1;\n            } // end if this character is not a number\n          } // end searching backwards for start of exponent\n        } // end if this element is not a number\n      } // end if the current element is not an operator\n    } // end do for each element of the units array\n\n    // reassemble the updated units array to a string\n    this.csCode_ = uArray.join('');\n\n    this.magnitude_ = Math.pow(this.magnitude_, p);\n    if (this.dim_) {\n      this.dim_.mul(p);\n    }\n    return this;\n\n  } // end power\n\n\n  /*\n   * This function tests this unit against the unit passed in to see if the\n   * two are mole to mass commensurable.  It assumes that one of the units\n   * is a mole-based unit and the other is a mass-based unit.  It also assumes\n   * that the mole-based unit has a single mole unit in the numerator and that\n   * the mass-based unit has a single mass unit in the numerator.  It does NOT\n   * check to validate those assumptions.\n   *\n   * The check is made by setting the dimension vector element corresponding\n   * to the base mass unit (gram) in the mole unit, and then comparing the\n   * two dimension vectors.  If they match, the units are commensurable.\n   * Otherwise they are not.\n   *\n   * @param unit2 the unit to be compared to this one\n   * @returns boolean indicating commensurability\n   */\n  isMoleMassCommensurable(unit2) {\n    let tabs = this._getUnitTables();\n    let d = tabs.getMassDimensionIndex();\n    let commensurable = false ;\n    if (this.moleExp_ === 1 && unit2.moleExp_ === 0) {\n      let testDim = this.dim_.clone();\n      let curVal = testDim.getElementAt(d);\n      testDim.setElementAt(d, (curVal + this.moleExp_));\n      commensurable = (testDim.equals(unit2.dim_));\n    }\n    else if (unit2.moleExp_ === 1 && this.moleExp_ === 0) {\n      let testDim = unit2.dim_.clone();\n      let curVal = testDim.getElementAt(d);\n      testDim.setElementAt(d, (curVal + unit2.moleExp_));\n      commensurable = (testDim.equals(this.dim_));\n    }\n    return commensurable ;\n  }\n\n\n  /**\n   * This returns the UnitTables singleton object.  Including the require\n   * statement included here causes a circular dependency condition that\n   * resulted in the UnitTables object not being defined for the Unit object.\n   * sigh.  Thanks, Paul, for figuring this out.\n   *\n   * @private\n   */\n  _getUnitTables() {\n    if (!UnitTables)\n      UnitTables = require('./unitTables.js').UnitTables;\n    return UnitTables.getInstance();\n  }\n\n} // end Unit class\n","/**\n * This class handles the parsing of a unit string into a unit object\n */\n\nvar Ucum = require('./config.js').Ucum;\nvar Unit = require('./unit.js').Unit;\nvar UnitTables = require('./unitTables.js').UnitTables;\nvar PrefixTables = require('./prefixTables.js').PrefixTables;\n\nimport * as intUtils_ from \"./ucumInternalUtils.js\";\n\nexport class UnitString {\n\n  /**\n   * Constructor\n   */\n  constructor() {\n\n    // Get instances of the unit and prefix tables and the utilities\n    this.utabs_ = UnitTables.getInstance();\n    this.pfxTabs_ = PrefixTables.getInstance();\n\n    // Set emphasis characters to defaults.  These are used to emphasize\n    // certain characters or strings in user messages.  They can be reset in\n    // the useHTMLInMessages method.\n    this.openEmph_ = Ucum.openEmph_;\n    this.closeEmph_ = Ucum.closeEmph_;\n\n    // Set the braces message to blank.  This message is displayed for each\n    // validation request on the web page, but is included separately as\n    // a note on the validation spreadsheet.  The useBraceMsgForEachString\n    // method should be used to set the message to be displayed for each\n    // unit string.\n    this.bracesMsg_ = '';\n\n    // Set the flags used, with indices, as place holders in unit strings\n    // for parenthetical strings and strings within braces.\n    this.parensFlag_ = \"parens_placeholder\"; // in lieu of Jehoshaphat\n    this.pFlagLen_ = this.parensFlag_.length;\n    this.braceFlag_ = \"braces_placeholder\"; // in lieu of Nebuchadnezzar\n    this.bFlagLen_ = this.braceFlag_.length;\n\n    // Initialize the message start/end strings, which will be set when\n    // parseString is called.\n    this.vcMsgStart_ = null;\n    this.vcMsgEnd_ = null;\n\n    // Arrays used by multiple methods within this class to hold persistent\n    // data.  Just gets too bulky to pass these guys around.\n\n    // Messages to be returned to the calling function\n    this.retMsg_ = [] ;\n\n    // Units for parenthetical unit strings\n    this.parensUnits_ = [] ;\n\n    // annotation text for annotations found in unit strings\n    this.annotations_ = [] ;\n\n    // suggestions for unit strings that for which no unit was found\n    this.suggestions = [] ;\n\n  } // end constructor\n\n\n  /**\n   * Sets the emphasis strings to the HTML used in the webpage display - or\n   * blanks them out, depending on the use parameter.\n   *\n   * @param use flag indicating whether or not to use the html message format;\n   *  defaults to true\n   */\n  useHTMLInMessages(use) {\n    if (use === undefined || use) {\n      this.openEmph_ = Ucum.openEmphHTML_;\n      this.closeEmph_ = Ucum.closeEmphHTML_;\n    }\n    else {\n      this.openEmph_ = Ucum.openEmph_;\n      this.closeEmph_ = Ucum.closeEmph_;\n    }\n  } // end useHTMLInMessages\n\n\n  /**\n   * Sets the braces message to be displayed for each unit string validation\n   * requested, as appropriate.\n   *\n   * @param use flag indicating whether or not to use the braces message;\n   *  defaults to true\n   */\n  useBraceMsgForEachString(use) {\n    if (use === undefined || use)\n      this.bracesMsg_ = Ucum.bracesMsg_;\n    else\n      this.bracesMsg_ = '';\n  }\n\n\n  /**\n   * Parses a unit string, returns a unit, a possibly updated version of\n   * the string passed in, and messages and suggestions where appropriate.\n   *\n   * The string returned may be updated if the input string contained unit\n   * names, e.g., \"pound\".  The unit code ([lb_av] for pound) is placed in\n   * the string returned, a the returned messages array includes a note\n   * explaining the substitution.\n   *\n   * @param uStr the string defining the unit\n   * @param valConv indicates what type of request this is for - a request to\n   *  validate (pass in 'validate') or a request to convert (pass in 'convert');\n   *  optional, defaults to 'validate'\n   * @param suggest a boolean to indicate whether or not suggestions are\n   *  requested for a string that cannot be resolved to a valid unit;\n   *  true indicates suggestions are wanted; false indicates they are not,\n   *  and is the default if the parameter is not specified;\n   * @returns an array containing:\n   *   the unit object or null if a unit could not be created.  In cases where\n   *     a fix was found for a problem string, .e.g., 2.mg for 2mg, a unit will\n   *     be returned but an error message will also be returned, describing\n   *     the substitution;\n   *   the possibly updated unit string passed in;\n   *   an array of any user messages (informational, error or warning)\n   *     generated (or an empty array); and\n   *   a suggestions array of hash objects (1 or more).  Each hash contains\n   *   three elements:\n   *     'msg' which is a message indicating what unit expression the\n   *       suggestions are for;\n   *     'invalidUnit' which is the unit expression the suggestions are\n   *       for; and\n   *     'units' which is an array of data for each suggested unit found.\n   *        Each array will contain the unit code, the unit name and the\n   *        unit guidance (if any).\n   *   The return array will not contain a suggestions array if a valid unit\n   *   was found or if suggestions were not requested.\n   * @throws an error if nothing was specified.\n   */\n  parseString(uStr, valConv, suggest) {\n\n    uStr = uStr.trim();\n    // Make sure we have something to work with\n    if (uStr === '' || uStr === null) {\n      throw (new Error('Please specify a unit expression to be validated.'));\n    }\n\n    if (valConv === 'validate') {\n      this.vcMsgStart_ = Ucum.valMsgStart_;\n      this.vcMsgEnd_ = Ucum.valMsgEnd_;\n    }\n    else {\n      this.vcMsgStart_ = Ucum.cnvMsgStart_;\n      this.vcMsgEnd_ = Ucum.cnvMsgEnd_;\n    }\n\n    if (suggest === undefined || suggest === false) {\n      this.suggestions_ = null;\n    }\n    else {\n      this.suggestions_ = [] ;\n    }\n\n    this.retMsg_ = [];\n    this.parensUnits_ = [];\n    this.annotations_ = [] ;\n\n    let origString = uStr;\n    let retObj = [];\n\n    // Extract any annotations, i.e., text enclosed in braces ({}) from the\n    // string before further processing.  Store each one in this.annotations_\n    // array and put a placeholder in the string for the annotation.  Do\n    // this before other processing in case an annotation contains characters\n    // that will be interpreted as parenthetical markers or operators in\n    // subsequent processing.\n\n    uStr = this._getAnnotations(uStr);\n    if (this.retMsg_.length > 0) {\n      retObj[0] = null;\n      retObj[1] = null;\n    }\n    else {\n      // Flag used to block further processing on an unrecoverable error\n      let endProcessing = this.retMsg_.length > 0;\n\n      // First check for one of the \"special\" units.  If it's one of those, put\n      // in a substitution phrase for it to avoid having it separated on its\n      // embedded operator.  This will only happen, by the way, if it is\n      // preceded by a prefix or followed by an operator and another unit.\n      let sUnit = null ;\n      for (sUnit in Ucum.specUnits_) {\n        while (uStr.indexOf(sUnit) !== -1)\n          uStr = uStr.replace(sUnit, Ucum.specUnits_[sUnit]);\n      }\n\n      // Check for spaces and throw an error if any are found.  The spec\n      // explicitly forbids spaces except in annotations, which is why any\n      // annotations are extracted before this check is made.\n      if (uStr.indexOf(' ') > -1) {\n        throw (new Error('Blank spaces are not allowed in unit expressions.'));\n      } // end if blanks were found in the string\n\n      // assign the array returned to retObj.  It will contain 2 elements:\n      //  the unit returned in position 0; and the origString (possibly\n      //  modified in position 1.  The origString in position 1 will not\n      //  be changed by subsequent processing.\n      retObj = this._parseTheString(uStr, origString);\n      let finalUnit = retObj[0];\n\n      // Do a final check to make sure that finalUnit is a unit and not\n      // just a number.  Something like \"8/{HCP}\" will return a \"unit\" of 8\n      // - which is not a unit.  Hm - evidently it is.  So just create a unit\n      // object for it.\n      if (intUtils_.isIntegerUnit(finalUnit) || typeof finalUnit === 'number') {\n        finalUnit = new Unit({\n          'csCode_': origString,\n          'magnitude_': finalUnit,\n          'name_': origString\n        });\n        retObj[0] = finalUnit;\n      } // end final check\n    } // end if no annotation errors were found\n\n    retObj[2] = this.retMsg_;\n    if (this.suggestions_ && this.suggestions_.length > 0)\n      retObj[3] = this.suggestions_ ;\n    return retObj;\n\n  } // end parseString\n\n\n  /**\n   * Parses a unit string, returns a unit, a possibly updated version of\n   * the string passed in, and messages where appropriate.  This should\n   * only be called from within this class (or by test code).\n   *\n   * The string returned may be updated if the input string contained unit\n   * names, e.g., \"pound\".  The unit code ([lb_av] for pound) is placed in\n   * the string returned, a the returned messages array includes a note\n   * explaining the substitution.\n   *\n   * @param uStr the string defining the unit\n   * @param origString the original unit string passed in\n   *\n   * @returns\n   *  an array containing:\n   *    the unit object (or null if there were problems creating the unit); and\n   *    the possibly updated unit string passed in.\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   * the this.parensUnits_ array is referenced and possibly populated by\n   *   methods called within this one\n   * the this.annotations_ array is referenced by methods called within\n   *   this one\n   * the this.suggestions_ array may be populated by methods called within\n   *   this one\n   */\n  _parseTheString(uStr, origString) {\n\n    // Unit to be returned\n    let finalUnit = null;\n\n    // Flag used to block further processing on an unrecoverable error\n    let endProcessing = this.retMsg_.length > 0;\n\n    // Call _processParens to search for and process any/all parenthetical\n    // strings in uStr.  Units created for parenthetical strings will be\n    // stored in the this.parensUnits_ array.\n    let parensResp = this._processParens(uStr, origString);\n    endProcessing = parensResp[2];\n\n    // The array used to hold the units and their operators.\n    let uArray = [];\n\n    // Continue if we didn't hit a problem\n    if (!endProcessing) {\n      uStr = parensResp[0];\n      origString = parensResp[1];\n\n      // Call _makeUnitsArray to convert the string to an array of unit\n      // descriptors with operators.\n      let mkUArray = this._makeUnitsArray(uStr, origString);\n\n      endProcessing = mkUArray[2] ;\n      if (!endProcessing) {\n        uArray = mkUArray[0];\n        origString = mkUArray[1];\n        // Create a unit object out of each un element\n        let uLen = uArray.length;\n        for (let u1 = 0; u1 < uLen; u1++) {\n          //for (let u1 = 0; u1 < uLen && !endProcessing; u1++) {\n          let curCode = uArray[u1]['un'];\n\n          // Determine the type of the \"un\" attribute of the current array element\n\n          // Check to see if it's a number.  If so write the number version of\n          // the number back to the \"un\" attribute and move on\n          if (intUtils_.isIntegerUnit(curCode)) {\n            uArray[u1]['un'] = Number(curCode);\n          }\n\n          else {\n            // The current unit array element is a string.  Check now to see\n            // if it is or contains a parenthesized unit from this.parensUnits_.\n            // If so, call _getParens to process the string and get the unit.\n\n            if (curCode.indexOf(this.parensFlag_) >= 0) {\n              let parenUnit = this._getParensUnit(curCode, origString);\n              // if we couldn't process the string, set the end flag and bypass\n              // further processing.\n              if (!endProcessing)\n                endProcessing = parenUnit[1];\n\n              // If we're good, put the unit in the uArray and replace the\n              // curCode, which contains the parentheses placeholders, etc.,\n              // with the unit's code - including any substitutions.\n              if (!endProcessing) {\n                uArray[u1]['un'] = parenUnit[0];\n              }\n            } // end if the curCode contains a parenthesized unit\n\n            // Else it's not a parenthetical unit and not a number. Call\n            // _makeUnit to create a unit for it.\n            else {\n              let uRet = this._makeUnit(curCode, origString);\n              // If we didn't get a unit, set the endProcessing flag.\n              if (uRet[0] === null) {\n                endProcessing = true;\n              }\n              else {\n                uArray[u1]['un'] = uRet[0];\n                origString = uRet[1];\n              }\n            } // end if the curCode is not a parenthetical expression\n          } // end if the \"un\" array is a not a number\n        } // end do for each element in the units array\n      } // end if _makeUnitsArray did not return an error\n    } // end if _processParens did not find an error that causes a stop\n\n    // If we're still good, continue\n    if (!endProcessing) {\n      // Process the units (and numbers) to create one final unit object\n      if ((uArray[0] === null || uArray[0] === ' ' ||\n           uArray[0]['un'] === undefined || uArray[0]['un'] === null)\n          && this.retMsg_.length === 0) {\n        // not sure what this might be, but this is a safeguard\n        this.retMsg_.push(`Unit string (${origString}) did not contain ` +\n          `anything that could be used to create a unit, or else something ` +\n          `that is not handled yet by this package.  Sorry`);\n        endProcessing = true;\n      }\n    }\n    if (!endProcessing) {\n      finalUnit = this._performUnitArithmetic(uArray, origString);\n    }\n    return [finalUnit, origString];\n  } // end _parseTheString\n\n\n  /**\n   * Extracts all annotations from a unit string, replacing them with\n   * placeholders for later evaluation.  The annotations are stored in the\n   * this.annotations_ array.  This should only be called from within this\n   * class (or by test code).\n   *\n   * @param uString the unit string being parsed\n   * @returns the string after the annotations are replaced with placeholders\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   * the this.annotations_ array is populated by this method\n   */\n  _getAnnotations(uString) {\n    let openBrace = uString.indexOf('{');\n    while (openBrace >= 0) {\n\n      let closeBrace = uString.indexOf('}');\n      if (closeBrace < 0) {\n        this.retMsg_.push('Missing closing brace for annotation starting at ' +\n          this.openEmph_ + uString.substr(openBrace) +\n          this.closeEmph_);\n        openBrace = -1;\n      }\n      else {\n        let braceStr = uString.substring(openBrace, closeBrace + 1);\n        let aIdx = this.annotations_.length.toString();\n        uString = uString.replace(braceStr, this.braceFlag_ + aIdx +\n          this.braceFlag_);\n        this.annotations_.push(braceStr);\n        openBrace = uString.indexOf('{');\n      }\n    } // end do while we have an opening brace\n\n    // check for a stray/unmatched closing brace\n    let closeBrace = uString.indexOf('}');\n    if (closeBrace >= 0)\n      this.retMsg_.push('Missing opening brace for closing brace found at ' +\n        this.openEmph_ + uString.substring(0, closeBrace + 1) +\n        this.closeEmph_);\n    return uString;\n  } // end _getAnnotations\n\n\n  /**\n   * Finds and processes any/all parenthesized unit strings. This should only\n   * be called from within this class (or by test code).\n   *\n   * Nested parenthesized strings are processed from the inside out.  The\n   * parseString function is called from within this one for each parenthesized\n   * unit string, and the resulting unit object is stored in this.parensUnits_,\n   * to be processed after all strings are translated to units.\n   *\n   * A placeholder is placed in the unit string returned to indicate that the\n   * unit object should be obtained from the this.parensUnits_ array.  The\n   * placeholder consists of the parenthesis flag (this.parensFlag_) followed\n   * by the index of the unit in this.parensUnits_ followed by this.parensFlag_.\n   *\n   * @param uString the unit string being parsed, where this will be the full\n   *  string the first time this is called and parenthesized strings on any\n   *  subsequent calls\n   * @param origString the original string first passed in to parseString\n   * @returns\n   *  an array containing:\n   *   the string after the parentheses are replaced;\n   *   the original string; and\n   *   a boolean flag indicating whether or not an error occurred that\n   *     should stop processing.\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   * this this.parensUnits_ array will be populated with units found for\n   *   parenthetical unit strings\n   */\n  _processParens(uString, origString) {\n\n    // Unit strings array and index\n    let uStrArray = [];\n    let uStrAryPos = 0;\n    let stopProcessing = false;\n\n    let pu = this.parensUnits_.length;\n\n    // Count of characters trimmed off the beginning of the unit string (uString)\n    // as units are removed from it; used for error messages to provide\n    // context.\n    let trimmedCt = 0;\n\n    // Break the unit string into pieces that consist of text outside of\n    // parenthetical strings and placeholders for the parenthetical units.\n    // This method is called recursively for parenthetical strings and the units\n    // returned are stored in the this.parensUnits_ array.\n    while (uString !== \"\" && !stopProcessing) {\n      let openCt = 0;\n      let closeCt = 0;\n      let openPos = uString.indexOf('(');\n\n      // If an opening parenthesis was not found, check for an unmatched\n      // close parenthesis.  If one was found report the error and end\n      // processing.\n      if (openPos < 0) {\n        let closePos = uString.indexOf(')');\n        if (closePos >= 0) {\n          let theMsg = `Missing open parenthesis for close ` +\n            `parenthesis at ${uString.substring(0, closePos + trimmedCt)}` +\n            `${this.openEmph_}${uString.substr(closePos, 1)}${this.closeEmph_}`;\n          if (closePos < uString.length - 1) {\n            theMsg += `${uString.substr(closePos + 1)}`;\n          }\n          this.retMsg_.push(theMsg);\n          uStrArray[uStrAryPos] = uString;\n          stopProcessing = true;\n        } // end if a close parenthesis was found\n\n        // If no parentheses were found in the current unit string, transfer\n        // it to the units array and blank out the string, which will end\n        // the search for parenthetical units.\n        else {\n          uStrArray[uStrAryPos] = uString;\n          uString = \"\";\n        } // end if no close parenthesis was found\n      } // end if no open parenthesis was found\n\n      // Otherwise an open parenthesis was found. Process the string that\n      // includes the parenthetical group\n      else {\n        openCt += 1;\n        // Write the text before the parentheses (if any) to the unit strings array\n        let uLen = uString.length;\n        if (openPos > 0) {\n          uStrArray[uStrAryPos++] = uString.substr(0, openPos);\n        }\n\n        // Find the matching closePos, i.e., the one that closes the\n        // parenthetical group that this one opens.  Look also for\n        // another open parenthesis, in case this includes nested parenthetical\n        // strings.  This continues until it finds the same number of close\n        // parentheses as open parentheses, or runs out of string to check.\n        // In the case of nested parentheses this will identify the outer set\n        // of parentheses.\n        let closePos = 0;\n        let c = openPos + 1;\n        for (; c < uLen && openCt != closeCt; c++) {\n          if (uString[c] === '(')\n            openCt += 1;\n          else if (uString[c] === ')')\n            closeCt += 1;\n        }\n\n        // Put a placeholder for the group in the unit strings array and recursively\n        // call this method for the parenthetical group.  Put the unit returned\n        // in this.parensUnits_.  Set the unit string to whatever follows\n        // the position of the closing parenthesis for this group, to be\n        // processed by the next iteration of this loop.  If there's nothing\n        // left uString is set to \"\".\n        if (openCt === closeCt) {\n          closePos = c;\n          uStrArray[uStrAryPos++] = this.parensFlag_ + pu.toString() + this.parensFlag_;\n          let parseResp = this._parseTheString(\n            uString.substring(openPos + 1, closePos - 1), origString);\n          if (parseResp[0] === null)\n            stopProcessing = true;\n          else {\n            origString = parseResp[1];\n            this.parensUnits_[pu++] = parseResp[0];\n            uString = uString.substr(closePos);\n            trimmedCt = closePos;\n          }\n        } // end if the number of open and close parentheses matched\n\n        // If the number of open and close parentheses doesn't match, indicate\n        // an error.\n        else {\n          uStrArray.push(origString.substr(openPos));\n          this.retMsg_.push(`Missing close parenthesis for open parenthesis at ` +\n            `${origString.substring(0, openPos + trimmedCt)}` +\n            `${this.openEmph_}${origString.substr(openPos, 1)}` +\n            `${this.closeEmph_}${origString.substr(openPos + 1)}`);\n          stopProcessing = true;\n        }\n      } // end if an open parenthesis was found\n    } // end do while the input string is not empty\n    if (stopProcessing)\n      this.parensUnits_ = [];\n    return [uStrArray.join(''), origString, stopProcessing]\n  } // end _processParens\n\n\n  /**\n   * Breaks the unit string into an array of unit descriptors and operators.\n   * If a unit descriptor consists of a number preceding a unit code, with\n   * no multiplication operator, e.g., 2mg instead of 2.mg, it is handled\n   * as if it were a parenthetical expression.\n   *\n   * This should only be called from within this class (or by test code).\n   *\n   * @param uStr the unit string being parsed\n   * @param origString the original string passed to parseString\n   * @returns\n   *  an array containing:\n   *    the array representing the unit string;\n   *    the original string passed in, possibly updated with corrections; and\n   *    and a flag indicating whether or not processing can continue.\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   */\n  _makeUnitsArray(uStr, origString) {\n\n    // Separate the string into pieces based on delimiters / (division) and .\n    // (multiplication).  The idea is to get an array of units on which we\n    // can then perform any operations (prefixes, multiplication, division).\n\n    let uArray1 = uStr.match(/([./]|[^./]+)/g);\n    let endProcessing = false ;\n    let uArray = [];\n    let startNumCheck = /(^[0-9]+)(\\[?[a-zA-Z\\_0-9a-zA-Z\\_]+\\]?$)/ ;\n\n    // If the first element in the array is the division operator (/), the\n    // string started with '/'.  Add a first element containing 1 to the\n    // array, which will cause the correct computation to be performed (inversion).\n    if (uArray1[0] === \"/\") {\n      uArray1.unshift(\"1\");\n    }\n    // If the first element in the array is the multiplication operator (.)\n    // return an error.\n    else if (uArray1[0] === '.') {\n      this.retMsg_.push(`${origString} is not a valid UCUM code. ` +\n          `The multiplication operator at the beginning of the expression is ` +\n          `not valid. A multiplication operator must appear only between ` +\n          `two codes.`);\n      endProcessing = true ;\n    }\n    if (!endProcessing) {\n      // Check to see if there is a number preceding a unit code, e.g., 2mg\n      // If so, update the first element to remove the number (2mg -> mg) and\n      // add two elements to the beginning of the array - the number and the\n      // multiplication operator.\n\n      if (!intUtils_.isNumericString(uArray1[0])) {\n        let numRes = uArray1[0].match(startNumCheck);\n        if (numRes && numRes.length === 3 && numRes[1] !== '' &&\n          numRes[2] !== '' && numRes[2].indexOf(this.braceFlag_) !== 0) {\n          let dispVal = numRes[2] ;\n\n          if (!endProcessing && numRes[2].indexOf(this.parensFlag_) !== -1) {\n            let parensback = this._getParensUnit(numRes[2], origString);\n            numRes[2] = parensback[0]['csCode_'];\n            dispVal = `(${numRes[2]})`;\n            endProcessing = parensback[1];\n          }\n          if (!endProcessing) {\n            this.retMsg_.push(`${numRes[1]}${dispVal} is not a valid UCUM code.` +\n              `  ${this.vcMsgStart_}${numRes[1]}.${dispVal}${this.vcMsgEnd_}`);\n            origString = origString.replace(`${numRes[1]}${dispVal}`,\n              `${numRes[1]}.${dispVal}`);\n            uArray1[0] = numRes[2];\n            uArray1.unshift(numRes[1], '.');\n          }\n        }\n      } // end if the first element is not a number (only)\n\n      // Create an array of unit/operator objects.  The unit is, for now, the\n      // string containing the unit code (e.g., Hz for hertz) including\n      // a possible prefix and exponent.   The operator is the operator to be\n      // applied to that unit and the one preceding it.  So, a.b would give\n      // us two objects.  The first will have a unit of a, and a blank operator\n      // (because it's the first unit).  The second would have a unit of b\n      // and the multiplication operator (.).\n      if (!endProcessing) {\n        let u1 = uArray1.length;\n        uArray = [{op: \"\", un: uArray1[0]}];\n        for (let n = 1; n < u1; n++) {\n\n          // check to make sure that we don't have two operators together, e.g.,\n          // mg./K.  If so, let the user know the problem.\n          let theOp = uArray1[n++];\n          // oh wait - check to make sure something is even there, that the\n          // user didn't end the expression with an operator.\n          if (!uArray1[n]) {\n            this.retMsg_.push(`${origString} is not a valid UCUM code. ` +\n              `It is terminated with the operator ${this.openEmph_}` +\n              `${theOp}${this.closeEmph_}.`);\n            n = u1;\n            endProcessing = true;\n          }\n          else if (Ucum.validOps_.indexOf(uArray1[n]) !== -1) {\n            this.retMsg_.push(`${origString} is not a valid UCUM code. ` +\n              `A unit code is missing between${this.openEmph_}` +\n              `${theOp}${this.closeEmph_}and${this.openEmph_}` +\n              `${uArray1[n]}${this.closeEmph_}in${this.openEmph_}` +\n              `${theOp}${uArray1[n]}${this.closeEmph_}.`);\n            n = u1;\n            endProcessing = true;\n          }\n          else {\n            // Check to see if a number precedes a unit code.\n            // If so, send the element to _processParens, inserting the multiplication\n            // operator where it belongs.  Treating it as parenthetical keeps it from\n            // being interpreted incorrectly because of operator parentheses.  For\n            // example, if the whole string is mg/2kJ we don't want to rewrite it as\n            // mg/2.kJ - because mg/2 would be performed, followed by .kJ.  Instead,\n            // handling 2kJ as a parenthesized unit will make sure mg is divided by\n            // 2.kJ.\n            if (!intUtils_.isNumericString(uArray1[n])) {\n              let numRes2 = uArray1[n].match(startNumCheck);\n              if (numRes2 && numRes2.length === 3 && numRes2[1] !== '' &&\n                numRes2[2] !== '' && numRes2[2].indexOf(this.braceFlag_) !== 0) {\n                let invalidString = numRes2[0];\n                if (!endProcessing && numRes2[2].indexOf(this.parensFlag_) !== -1) {\n                  let parensback = this._getParensUnit(numRes2[2], origString);\n                  numRes2[2] = parensback[0]['csCode_'];\n                  invalidString = `(${numRes2[2]})`;\n                  endProcessing = parensback[1];\n                  if (!endProcessing) {\n                    this.retMsg_.push(`${numRes2[1]}${invalidString} is not a ` +\n                      `valid UCUM code.  ${this.vcMsgStart_}${numRes2[1]}.${invalidString}` +\n                      `${this.vcMsgEnd_}`);\n                    let parensString = `(${numRes2[1]}.${invalidString})`;\n                    origString = origString.replace(`${numRes2[1]}${invalidString}`,\n                      parensString);\n                    let nextParens = this._processParens(parensString, origString);\n                    endProcessing = nextParens[2];\n                    if (!endProcessing) {\n                      uArray.push({op: theOp, un: nextParens[0]});\n                    }\n                    //uArray.push({op: '.', un: numRes2[2]});\n                  }\n                } // end if the string represents a parenthesized unit\n                else {\n                  let parensStr = '(' + numRes2[1] + '.' + numRes2[2] + ')';\n                  let parensResp = this._processParens(parensStr, origString);\n                  // if a \"stop processing\" flag was returned, set the n index to end\n                  // the loop and set the endProcessing flag\n                  if (parensResp[2]) {\n                    n = u1;\n                    endProcessing = true;\n                  }\n                  else {\n                    this.retMsg_.push(`${numRes2[0]} is not a ` +\n                      `valid UCUM code.  ${this.vcMsgStart_}${numRes2[1]}.${numRes2[2]}` +\n                      `${this.vcMsgEnd_}`);\n                    origString = origString.replace(numRes2[0], parensStr);\n                    uArray.push({op: theOp, un: parensResp[0]});\n                  } // end if no error on the processParens call\n                } // end if the string does not represent a parenthesized unit\n              } // end if the string is a number followed by a string\n              else {\n                uArray.push({op: theOp, un: uArray1[n]});\n              }\n            }\n            else {\n              uArray.push({op: theOp, un: uArray1[n]});\n            }\n          } // end if there isn't a missing operator or unit code\n        } // end do for each element in uArray1\n      } // end if a processing error didn't occur in getParensUnit\n    } // end if the string did not begin with a '.' with no following digit\n    return [uArray, origString, endProcessing];\n  } // end _makeUnitsArray\n\n\n  /**\n   * Takes a unit string containing parentheses flags and returns the unit they\n   * represent.  Any text found before and/or after the parenthetical\n   * expression is checked to see if we can tell what the user meant and\n   * let them know what it should have been.  For example, 2(mg), which\n   * would resolve to 2mg, should be 2.mg.\n   *\n   * This should only be called from within this class (or by test code).\n   *\n   * @param pStr the string being parsed\n   * @param origString the original unit string passed in; passed through\n   *  to _getAnnonText if annotation flags are found in any text preceding\n   *  or following the parenthetical unit\n   * @returns\n   *   an array containing\n   *     the unit object; and\n   *     a flag indicating whether or not processing should be ended.\n   *       True indicates that the string was invalid and no corrections\n   *         (substitutions or suggestions) could be found;\n   *       False indicates that it was either valid or substitutions/suggestions\n   *          were made.\n   *   the this.retMsg_ array will be updated with any user messages\n   *     (informational, error or warning) generated by this or called methods\n   *   this this.parensUnits_ array contains the units that are acquired by\n   *     this method\n   * @throws an error if an invalid parensUnit index was found.  This is\n   *    a processing error.\n   */\n  _getParensUnit(pStr, origString) {\n    let endProcessing = false;\n    let retAry = [];\n    let retUnit = null;\n    let befAnnoText = null;\n    let aftAnnoText = null;\n\n    // Get the location of the flags.  We're assuming there are only two\n    // because _processParens takes care of nesting.  By the time we get\n    // here we should not be looking a nested parens.  Also get any text\n    // before and after the parentheses.  Once we get the unit we update\n    // the input string with the unit's csCode_, which will wipe out any\n    // before and after text\n    let psIdx = pStr.indexOf(this.parensFlag_);\n    let befText = null;\n    if (psIdx > 0) {\n      befText = pStr.substr(0, psIdx - 1);\n    }\n    let peIdx = pStr.lastIndexOf(this.parensFlag_);\n    let aftText = null;\n    if (peIdx + this.pFlagLen_ < pStr.length) {\n      aftText = pStr.substr(peIdx + this.pFlagLen_);\n    }\n\n    // Get the text between the flags\n    let pNumText = pStr.substring(psIdx + this.pFlagLen_, peIdx);\n\n    // Make sure the index is a number, and if it is, get the unit from the\n    // this.parensUnits_ array\n    if (intUtils_.isNumericString(pNumText)) {\n      retUnit = this.parensUnits_[Number(pNumText)];\n      if (!intUtils_.isIntegerUnit(retUnit)) {\n        pStr = retUnit.csCode_;\n      }\n      else {\n        pStr = retUnit ;\n      }\n    }\n    // If it's not a number, it's a programming error.  Throw a fit.\n    else {\n      throw (new Error(`Processing error - invalid parens number ${pNumText} ` +\n        `found in ${pStr}.`));\n    }\n\n    // If there's something in front of the starting parentheses flag, check to\n    // see if it's a number or an annotation.\n    if (befText) {\n      // If it's a number, assume that multiplication was assumed\n      if (intUtils_.isNumericString(befText)) {\n        let nMag = retUnit.getProperty('magnitude_');\n        nMag *= Number(befText);\n        retUnit.assignVals({'magnitude_': nMag});\n        pStr = `${befText}.${pStr}`;\n        this.retMsg_.push(`${befText}${pStr} is not a valid UCUM code.\\n` +\n          this.vcMsgStart_ + pStr + this.vcMsgEnd_);\n      }\n      else {\n        if (befText.indexOf(this.braceFlag_) >= 0) {\n          let annoRet = this._getAnnoText(befText, origString);\n          // if we found not only an annotation, but text before or after\n          // the annotation (remembering that this is all before the\n          // parentheses) throw an error - because we don't know what\n          // to do with it.  Could it be missing an operator?\n          if (annoRet[1] || annoRet[2]) {\n            throw (new Error(`Text found before the parentheses (` +\n              `${befText}) included an annotation along with other text ` +\n              `for parenthetical unit ${retUnit.csCode_}`));\n          }\n          // Otherwise put the annotation after the unit string and note\n          // the misplacement.\n          pStr += annoRet[0];\n          this.retMsg_.push(`The annotation ${annoRet[0]} before the unit ` +\n            `code is invalid.\\n` + this.vcMsgStart_ + pStr + this.vcMsgEnd_);\n        }\n        // else the text before the parentheses is neither a number nor\n        // an annotation.  If suggestions were NOT requested, record an\n        // error.\n        else if (!this.suggestions_) {\n          this.retMsg_.push(`${befText} preceding the unit code ${pStr} ` +\n            `is invalid.  Unable to make a substitution.`);\n          endProcessing = true;\n        }\n        // otherwise try for suggestions\n        else {\n          let suggestStat = this._getSuggestions(befText);\n          endProcessing =  (suggestStat !== 'succeeded');\n\n        } // end if a brace was found or, if not, suggestions were not or\n          // were requested\n      } // end if text preceding the parentheses was not a number\n    } // end if there was text before the parentheses\n\n    // Process any text after the parentheses\n    if (aftText) {\n      // if it's an annotation, get it and add it to the pStr\n      if (aftText.indexOf(this.braceFlag_) >= 0) {\n        let annoRet = this._getAnnoText(aftText, origString);\n        // if we found not only an annotation, but text before or after\n        // the annotation (remembering that this is all after the\n        // parentheses) throw an error - because we don't know what\n        // to do with it.  Could it be missing an operator?\n        if (annoRet[1] || annoRet[2]) {\n          throw (new Error(`Text found after the parentheses (` +\n            `${aftText}) included an annotation along with other text ` +\n            `for parenthetical unit ${retUnit.csCode_}`));\n        }\n        // Otherwise put the annotation after the unit string - no message\n        // needed.\n        pStr += annoRet[0];\n      }\n      // Otherwise check to see if it's an exponent.  If so, warn the\n      // user that it's not valid - but try it anyway\n      else {\n\n        if (intUtils_.isNumericString(aftText)) {\n          pStr += aftText;\n          retUnit = retUnit.power(Number(aftText));\n          this.retMsg_.push(`An exponent (${aftText}) following a parenthesis ` +\n            `is invalid as of revision 1.9 of the UCUM Specification.\\n  ` +\n            this.vcMsgStart_ + pStr + this.vcMsgEnd_);\n        }\n        // else the text after the parentheses is neither a number nor\n        // an annotation.  If suggestions were NOT requested, record an\n        // error.\n        else if (!this.suggestions_) {\n          this.retMsg_.push(`Text ${aftText} following the unit code ${pStr} ` +\n            `is invalid.  Unable to make a substitution.`);\n          endProcessing = true;\n        }\n        // otherwise try for suggestions\n        else {\n          let suggestStat = this._getSuggestions(befText);\n          endProcessing =  (suggestStat !== 'succeeded');\n        } // end if text following the parentheses not an exponent\n      } // end if text following the parentheses is not an annotation\n    } // end if there is text following the parentheses\n    if (!endProcessing) {\n      if (!retUnit) {\n        retUnit = new Unit({\n          'csCode_': pStr,\n          'magnitude_': 1,\n          'name_': pStr});\n      }\n      else if (intUtils_.isIntegerUnit(retUnit)) {\n        retUnit = new Unit({'csCode_': retUnit,\n        'magnitude_': retUnit,\n        'name_': retUnit});\n      }\n      else {\n        retUnit.csCode_ = pStr;\n      }\n    }\n    return [retUnit, endProcessing];\n  } // end _getParensUnit\n\n  /**\n   * Takes a unit string containing annotation flags and returns the\n   * annotation they represent.  This also returns any text found before\n   * the annotation and any found after the annotation.\n   *\n   * This should only be called from within this class (or by test code).\n   * NEEDS FIX in next branch to handle string with multiple annotations.\n   *\n   * @param pStr the string being parsed\n   * @param origString the original string being parsed; used in error msg\n   *  thrown for an invalid index to the annotations array\n   * @returns\n   *  an array containing\n   *    the annotation for the pStr;\n   *    any text found before the annotation; and\n   *    any text found after the annotation.\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   * the this.annotations_ array is used as the source for the annotations text\n   * @throws an error if for a processing error - an invalid annotation index.\n   */\n  _getAnnoText(pStr, origString) {\n\n    // if the starting braces flag is not at index 0, get the starting\n    // text and the adjust the pStr to omit it.\n    let asIdx = pStr.indexOf(this.braceFlag_);\n    let startText = (asIdx > 0) ? pStr.substring(0, asIdx) : null;\n    if (asIdx !== 0) {\n      pStr = pStr.substr(asIdx);\n    }\n\n    // Get the location of the end flag and, if text follows it, get the text\n    let aeIdx = pStr.indexOf(this.braceFlag_, 1);\n    let endText = ((aeIdx + this.bFlagLen_) < pStr.length) ?\n      pStr.substr(aeIdx + this.bFlagLen_) : null;\n\n    // Get the index of the annotation in this.annotations_.\n    // Check it to make sure it's valid, and if not, throw an error\n    let idx = pStr.substring(this.bFlagLen_, aeIdx);\n    let idxNum = Number(idx);\n    if (!intUtils_.isNumericString(idx) || idxNum >= this.annotations_.length) {\n      throw (new Error(`Processing Error - invalid annotation index ${idx} found ` +\n        `in ${pStr} that was created from ${origString}`));\n    }\n\n    // Replace the flags and annotation index with the annotation expression\n    pStr = this.annotations_[idxNum];\n    return [pStr, startText, endText];\n  } // end _getAnnoText\n\n\n  /**\n   * Takes a unit string and looks for suggested units.  This should be\n   * called for unit strings that cannot be resolved to unit codes.  The\n   * string is searched for in the synonyms table found in the UnitTables\n   * class.  That table includes all synonyms and unit names for the units\n   * in the unit data table.\n   *\n   * @param pStr the string being parsed\n   * @returns an object that contains an element named 'status', whose\n   *  value indicates the status of the request:\n   *   'succeeded' indicates that synonyms were found;\n   *   'failed' indicates that no synonyms were found; or\n   *   'error' which indicates that an error occurred\n   *\n   * the this.retMsg_ array will be updated with a message indicating whether\n   *  or not synonyms/suggestions  were found\n   * the this.suggestions_ array will be updated with a hash (added to the\n   *   array if it already contains others) that contains three elements:\n   *   'msg' which is a message indicating what unit expression the\n   *      suggestions are for;\n   *   'invalidUnit' which is the unit expression the suggestions are for; and\n   *   'units' which is an array of data for each suggested unit found.\n   *       Each array will contain the unit code, the unit name and the\n   *       unit guidance (if any).\n   */\n  _getSuggestions(pStr) {\n\n    let retObj = intUtils_.getSynonyms(pStr);\n    if (retObj['status'] === 'succeeded') {\n      let suggSet = {} ;\n      suggSet['msg'] = `${pStr} is not a valid UCUM code.  We found possible ` +\n                       `units that might be what was meant:`;\n      suggSet['invalidUnit'] = pStr ;\n      let synLen = retObj['units'].length ;\n      suggSet['units'] = [] ;\n      for (let s = 0; s < synLen; s++) {\n        let unit = retObj['units'][s];\n        let unitArray = [unit['code'], unit['name'], unit['guidance']];\n\n        suggSet['units'].push(unitArray) ;\n      }\n      this.suggestions_.push(suggSet);\n    }\n    else {\n      this.retMsg_.push(`${pStr} is not a valid UCUM code.  No alternatives ` +\n                  `were found.`);\n    }\n    return retObj['status'] ;\n  } // end getSuggestions\n\n\n  /**\n   * Creates a unit object from a string defining one unit.  The string\n   * should consist of a unit code for a unit already defined (base or\n   * otherwise).  It may include a prefix and an exponent, e.g., cm2\n   * (centimeter squared).  This should only be called from within this\n   * class (or by test code).\n   *\n   * @params uCode the string defining the unit\n   * @param origString the original string to be parsed; used to provide\n   *  context for messages\n   * @returns\n   *  an array containing:\n   *    a unit object, or null if there were problems creating the unit; and\n   *    the origString passed in, which may be updated if a unit name was\n   *    translated to a unit code.\n   *\n   *  the this.retMsg_ array will be updated with any user messages\n   *    (informational, error or warning) generated by this or called methods\n   *  the this.suggestions_ array will be populated if no unit (with or without\n   *    substitutions) could be found and suggestions were requested\n   */\n  _makeUnit(uCode, origString) {\n\n    // First try the code just as is, without looking for annotations,\n    // prefixes, exponents, or elephants.\n    let retUnit = this.utabs_.getUnitByCode(uCode);\n    if (retUnit) {\n      retUnit = retUnit.clone();\n    }\n\n    // If we found it, we're done.  No need to parse for those elephants (or\n    // other stuff).\n    else if (uCode.indexOf(this.braceFlag_) >= 0) {\n      let getAnnoRet = this._getUnitWithAnnotation(uCode, origString);\n      retUnit = getAnnoRet[0];\n      if (retUnit) {\n        origString = getAnnoRet[1];\n      }\n      // If a unit is not found, retUnit will be returned null and\n      // the this.retMsg_ array will contain a message describing the problem.\n      // If a unit is found, of course, all is good. So ... nothing left\n      // to see here, move along.\n    } // end if the uCode includes an annotation\n\n    else {\n\n      // So we didn't find a unit for the full uCode or for one with\n      // annotations.  Try looking for a unit that uses a carat (^)\n      // instead of an asterisk (*)\n\n      if (uCode.indexOf('^') > -1) {\n        let tryCode = uCode.replace('^', '*');\n        retUnit = this.utabs_.getUnitByCode(tryCode);\n        if (retUnit) {\n          retUnit = retUnit.clone();\n          retUnit.csCode_ = retUnit.csCode_.replace('*', '^');\n          retUnit.ciCode_ = retUnit.ciCode_.replace('*', '^');\n        }\n      }\n      // If that didn't work, check to see if it should have brackets\n      // around it (uCode = degF when it should be [degF]\n      if (!retUnit) {\n        let addBrackets = '[' + uCode + ']' ;\n        retUnit = this.utabs_.getUnitByCode(addBrackets);\n        if (retUnit) {\n          retUnit = retUnit.clone();\n          origString = origString.replace(uCode, addBrackets);\n          this.retMsg_.push(`${uCode} is not a valid unit expression, but ` +\n            `${addBrackets} is.\\n` + this.vcMsgStart_ +\n            `${addBrackets} (${retUnit.name_})${this.vcMsgEnd_}`);\n        } // end if we found the unit after adding brackets\n      } // end trying to add brackets\n\n      // If we didn't find it, try it as a name\n      if (!retUnit) {\n        let retUnitAry = this.utabs_.getUnitByName(uCode);\n        if (retUnitAry && retUnitAry.length > 0) {\n          retUnit = retUnitAry[0].clone();\n          let mString = 'The UCUM code for ' + uCode + ' is ' +\n            retUnit.csCode_ + '.\\n' + this.vcMsgStart_ +\n            retUnit.csCode_ + this.vcMsgEnd_;\n          let dupMsg = false;\n          for (let r = 0; r < this.retMsg_.length && !dupMsg; r++)\n            dupMsg = this.retMsg_[r] === mString;\n          if (!dupMsg)\n            this.retMsg_.push(mString);\n          let rStr = new RegExp('(^|[.\\/({])(' + uCode + ')($|[.\\/)}])');\n          let res = origString.match(rStr);\n          origString = origString.replace(rStr, res[1] + retUnit.csCode_ + res[3]);\n          uCode = retUnit.csCode_;\n        }\n      }\n\n      // If we still don't have a unit, try assuming a modifier (prefix and/or\n      // exponent) and look for a unit without the modifier\n      if (!retUnit) {\n\n        // Well, first see if it's one of the special units.  If so,\n        // replace the placeholder text with the actual unit string, keeping\n        // whatever text (probably a prefix) goes with the unit string.\n        let sUnit = null;\n        for (sUnit in Ucum.specUnits_) {\n          if (uCode.indexOf(Ucum.specUnits_[sUnit]) !== -1)\n            uCode = uCode.replace(Ucum.specUnits_[sUnit], sUnit);\n        }\n        retUnit = this.utabs_.getUnitByCode(uCode);\n        if (retUnit)\n          retUnit = retUnit.clone();\n      }\n      if (!retUnit) {\n\n        let origCode = uCode;\n        let origUnit = null;\n        let exp = null;\n        let pfxCode = null;\n        let pfxObj = null;\n        let pfxVal = null;\n        let pfxExp = null;\n\n        // Look first for an exponent.  If we got one, separate it out and\n        // try to get the unit again\n        let codeAndExp = this._isCodeWithExponent(uCode);\n        if (codeAndExp) {\n          uCode = codeAndExp[0];\n          exp = codeAndExp[1];\n          origUnit = this.utabs_.getUnitByCode(uCode);\n        }\n\n\n        // If we still don't have a unit, separate out the prefix, if any,\n        // and try without it.\n        if (!origUnit) {\n          // Try for a single character prefix first.\n          pfxCode = uCode.charAt(0);\n          pfxObj = this.pfxTabs_.getPrefixByCode(pfxCode);\n\n          // if we got a prefix, get its info and remove it from the unit code\n          if (pfxObj) {\n            pfxVal = pfxObj.getValue();\n            pfxExp = pfxObj.getExp();\n            let pCodeLen = pfxCode.length;\n            uCode = uCode.substr(pCodeLen);\n\n            // try again for the unit\n            origUnit = this.utabs_.getUnitByCode(uCode);\n\n            // If we still don't have a unit, see if the prefix could be the\n            // two character \"da\" (deka) prefix.  That's the only prefix with\n            // two characters, and without this check it's interpreted as \"d\"\n            // (deci) and the \"a\" is considered part of the unit code.\n\n            if (!origUnit && pfxCode == 'd' && uCode.substr(0, 1) == 'a') {\n              pfxCode = 'da';\n              pfxObj = this.pfxTabs_.getPrefixByCode(pfxCode);\n              pfxVal = pfxObj.getValue();\n              uCode = uCode.substr(1);\n\n              // try one more time for the unit\n              origUnit = this.utabs_.getUnitByCode(uCode);\n            }\n          } // end if we found a prefix\n        } // end if we didn't get a unit after removing an exponent\n\n        // If we still haven't found anything, we're done looking.\n        // (We tried with the full unit string, with the unit string\n        // without the exponent, the unit string without a prefix,\n        // common errors, etc. That's all we can try).\n        if (!origUnit) {\n          retUnit = null ;\n          // BUT if the user asked for suggestions, at least look for them\n          if (this.suggestions_) {\n            let suggestStat = this._getSuggestions(origCode);\n          }\n          else {\n            this.retMsg_.push(`${origCode} is not a valid UCUM code.`);\n          }\n        }\n        else {\n          // Otherwise we found a unit object.  Clone it and then apply the\n          // prefix and exponent, if any, to it.  And remove the guidance.\n          retUnit = origUnit.clone();\n          retUnit.guidance_ = '';\n          let theDim = retUnit.getProperty('dim_');\n          let theMag = retUnit.getProperty('magnitude_');\n          let theName = retUnit.getProperty('name_');\n          let theCiCode = retUnit.getProperty('ciCode_');\n          let thePrintSymbol = retUnit.getProperty('printSymbol_');\n          // If there is an exponent for the unit, apply it to the dimension\n          // and magnitude now\n          if (exp) {\n            exp = parseInt(exp);\n            let expMul = exp;\n            if (theDim)\n              theDim = theDim.mul(exp);\n            theMag = Math.pow(theMag, exp);\n            retUnit.assignVals({'magnitude_': theMag});\n\n            // If there is also a prefix, apply the exponent to the prefix.\n            if (pfxObj) {\n\n              // if the prefix base is 10 it will have an exponent.  Multiply\n              // the current prefix exponent by the exponent for the unit\n              // we're working with.  Then raise the prefix value to the level\n              // defined by the exponent.\n              if (pfxExp) {\n                expMul *= pfxObj.getExp();\n                pfxVal = Math.pow(10, expMul);\n              }\n              // If the prefix base is not 10, it won't have an exponent.\n              // At the moment I don't see any units using the prefixes\n              // that aren't base 10.   But if we get one the prefix value\n              // will be applied to the magnitude (below) if the unit does\n              // not have a conversion function, and to the conversion prefix\n              // if it does.\n            } // end if there's a prefix as well as the exponent\n          } // end if there's an exponent\n\n          // Now apply the prefix, if there is one, to the conversion\n          // prefix or the magnitude\n          if (pfxObj) {\n            if (retUnit.cnv_) {\n              retUnit.assignVals({'cnvPfx_': pfxVal});\n            }\n            else {\n              theMag *= pfxVal;\n              retUnit.assignVals({'magnitude_': theMag})\n            }\n          }\n          // if we have a prefix and/or an exponent, add them to the unit\n          // attributes - name, csCode, ciCode and print symbol\n          let theCode = retUnit.csCode_;\n          if (pfxObj) {\n            theName = pfxObj.getName() + theName;\n            theCode = pfxCode + theCode;\n            theCiCode = pfxObj.getCiCode() + theCiCode;\n            thePrintSymbol = pfxObj.getPrintSymbol() + thePrintSymbol;\n            retUnit.assignVals({\n              'name_': theName,\n              'csCode_': theCode,\n              'ciCode_': theCiCode,\n              'printSymbol_': thePrintSymbol\n            });\n          }\n          if (exp) {\n            let expStr = exp.toString();\n            retUnit.assignVals({\n              'name_': theName + '<sup>' + expStr + '</sup>',\n              'csCode_': theCode + expStr,\n              'ciCode_': theCiCode + expStr,\n              'printSymbol_': thePrintSymbol + '<sup>' + expStr + '</sup>'\n            });\n          }\n        } // end if an original unit was found (without prefix and/or exponent)\n\n      } // end if we didn't get a unit for the full unit code (w/out modifiers)\n    } // end if we didn't find the unit on the first try, before parsing\n    return [retUnit, origString];\n  } // end _makeUnit\n\n\n  /**\n   * This method handles unit creation when an annotation is included\n   * in the unit string.  This basically isolates and retrieves the\n   * annotation and then calls _makeUnit to try to get a unit from\n   * any text that precedes or follows the annotation.\n   *\n   * @param uCode the string defining the unit\n   * @param origString the original full string submitted to parseString\n   * @returns the unit object found, or null if one could not be found\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   */\n  _getUnitWithAnnotation(uCode, origString) {\n\n    let retUnit = null;\n\n    // Get the annotation and anything that precedes or follows it.\n    let annoRet = this._getAnnoText(uCode, origString);\n    let annoText = annoRet[0];\n    let befAnnoText = annoRet[1];\n    let aftAnnoText = annoRet[2];\n\n    // Add the warning about annotations - just once.\n\n    if (this.bracesMsg_ && this.retMsg_.indexOf(this.bracesMsg_) === -1)\n      this.retMsg_.push(this.bracesMsg_);\n\n    // If there's no text before or after the annotation, it's probably\n    // something that should be interpreted as a 1, e.g., {KCT'U}.\n    // HOWEVER, it could also be a case where someone used braces instead\n    // of brackets, e.g., {degF} instead of [degF].  Check for that before\n    // we assume it should be a 1.\n    let msgLen = this.retMsg_.length;\n    if (!befAnnoText && !aftAnnoText) {\n      let tryBrackets = '[' + annoText.substring(1, annoText.length - 1) + ']';\n      let mkUnitRet = this._makeUnit(tryBrackets, origString);\n\n      // If we got back a unit, assign it to the returned unit, and add\n      // a message to advise the user that brackets should enclose the code\n      if (mkUnitRet[0]) {\n        retUnit = mkUnitRet[0];\n        origString = origString.replace(annoText, tryBrackets);\n        this.retMsg_.push(`${annoText} is not a valid unit expression, but ` +\n          `${tryBrackets} is.\\n` + this.vcMsgStart_ +\n          `${tryBrackets} (${retUnit.name_})${this.vcMsgEnd_}`);\n      }\n      // Otherwise assume that this should be interpreted as a 1\n      else {\n        // remove error message generated for trybrackets\n        if (this.retMsg_.length > msgLen) {\n          this.retMsg_.pop();\n        }\n        uCode = 1;\n        retUnit = 1;\n      }\n    } // end if it's only an annotation\n\n    else {\n      // if there's text before and no text after, assume the text before\n      // the annotation is the unit code (with an annotation following it).\n      // Call _makeUnit for the text before the annotation.\n      if (befAnnoText && !aftAnnoText) {\n        // make sure that what's before the annoText is not a number, e.g.,\n        // /100{cells}.  But f it is a number, just set the return unit to\n        // the number.\n        if (intUtils_.isIntegerUnit(befAnnoText)) {\n          retUnit = befAnnoText ;\n        }\n        // Otherwise try to find a unit\n        else {\n          let mkUnitRet = this._makeUnit(befAnnoText, origString);\n\n          // if a unit was returned\n          if (mkUnitRet[0]) {\n            retUnit = mkUnitRet[0];\n            retUnit.csCode_ += annoText;\n            origString = mkUnitRet[1];\n          }\n          // Otherwise add a not found message\n          else {\n            this.retMsg_.push(`Unable to find a unit for ${befAnnoText} that ` +\n              `precedes the annotation ${annoText}.`);\n          }\n        }\n      }\n      // else if there's only text after the annotation, try for a unit\n      // from the after text and assume the user put the annotation in\n      // the wrong place (and tell them)\n      else if (!befAnnoText && aftAnnoText) {\n\n        // Again, test for a number and if it is a number, set the return\n        // unit to the number.\n        if (intUtils_.isIntegerUnit(aftAnnoText)) {\n          retUnit = aftAnnoText + annoText ;\n          this.retMsg_.push(`The annotation ${annoText} before the `\n            `${aftAnnoText} is invalid.\\n` + this.vcMsgStart_ + retUnit +\n            this.vcMsgEnd_);\n        }\n        else {\n          let mkUnitRet = this._makeUnit(aftAnnoText, origString);\n          if (mkUnitRet[0]) {\n            retUnit = mkUnitRet[0];\n            retUnit.csCode_ += annoText;\n            origString = retUnit.csCode_;\n            this.retMsg_.push(`The annotation ${annoText} before the unit ` +\n              `code is invalid.\\n` + this.vcMsgStart_ + retUnit.csCode_ +\n              this.vcMsgEnd_);\n          }\n          // Otherwise add a not found message\n          else {\n            this.retMsg_.push(`Unable to find a unit for ${befAnnoText} that ` +\n              `follows the annotation ${annoText}.`);\n          }\n        }\n      }\n      // else it's got text before AND after the annotation.  Now what?\n      // For now this is an error.  This may be a case of a missing\n      // operator but that is not handled yet.\n      else {\n        this.retMsg_.push(`Unable to find a unit for ${befAnnoText}${annoText}` +\n          `${aftAnnoText}.\\nWe are not sure how to interpret text both before ` +\n          `and after the annotation.  Sorry`);\n      }\n    } // else if there's text before/and or after the annotation\n\n    return [retUnit , origString];\n\n  } // end _getUnitWithAnnotations\n\n\n  /**\n   * Performs unit arithmetic for the units in the units array.  That array\n   * contains units/numbers and the operators (division or multiplication) to\n   * be performed on each unit/unit or unit/number pair in the array.  This\n   * should only be called from within this class (or by test code).\n   *\n   * @params uArray the array that contains the units, numbers and operators\n   *  derived from the unit string passed in to parseString\n   * @param origString the original string to be parsed; used to provide\n   *  context for messages\n   *\n   * @returns a single unit object that is the result of the unit arithmetic\n   *\n   * the this.retMsg_ array will be updated with any user messages\n   *   (informational, error or warning) generated by this or called methods\n   */\n  _performUnitArithmetic(uArray, origString) {\n\n    let finalUnit = uArray[0]['un'];\n    if (intUtils_.isIntegerUnit(finalUnit)) {\n      finalUnit = new Unit({'csCode_' : finalUnit,\n        'magnitude_' : Number(finalUnit),\n        'name_' : finalUnit}) ;\n    }\n    let uLen = uArray.length ;\n    let endProcessing = false ;\n    // Perform the arithmetic for the units, starting with the first 2 units.\n    // We only need to do the arithmetic if we have more than one unit.\n    for (let u2 = 1; (u2 < uLen) && !endProcessing; u2++) {\n      let nextUnit = uArray[u2]['un'];\n      if (intUtils_.isIntegerUnit(nextUnit)) {\n        nextUnit = new Unit({'csCode_' : nextUnit ,\n          'magnitude_' : Number(nextUnit),\n          'name_': nextUnit});\n      }\n      if (nextUnit === null ||\n          ((typeof nextUnit !== 'number') && (!nextUnit.getProperty))) {\n        let msgString = `Unit string (${origString}) contains unrecognized ` +\n                        'element' ;\n        if (nextUnit) {\n          msgString += ` (${this.openEmph_}${nextUnit.toString()}` +\n                       `${this.closeEmph_})`;\n        }\n        msgString += '; could not parse full string.  Sorry';\n        this.retMsg_.push(msgString);\n        endProcessing = true;\n      }\n      else {\n        try {\n          // Is the operation division?\n          let thisOp = uArray[u2]['op'];\n          let isDiv = thisOp === '/';\n\n          // Perform the operation.  Both the finalUnit and nextUnit\n          // are unit objects.\n          isDiv ? finalUnit = finalUnit.divide(nextUnit) :\n                  finalUnit = finalUnit.multiplyThese(nextUnit);\n        }\n        catch (err) {\n          this.retMsg_.unshift(err.message) ;\n          endProcessing = true ;\n          finalUnit = null ;\n        }\n      } // end if we have another valid unit/number to process\n    } // end do for each unit after the first one\n    return finalUnit ;\n  }  // end _performUnitArithmetic\n\n\n  /**\n   * This tests a string to see if it starts with characters and ends with\n   * digits.  This is used to test for an exponent on a UCUM code (or what\n   * we think might be a UCUM code).  This is broken out to a separate\n   * function so that the regular expression can be verified to provide the\n   * results we expect, in case someone changes it.  (Per Paul Lynch)\n   * See \"Test _isCodeWithExponent method\" in testUnitString.spec.js\n   *\n   * This particular regex has been tweaked several times.  This one\n   * works with the following test strings:\n   * \"m[H2O]-21 gives [\"m[H2O]-21\", \"m[H2O]\", \"-21\"]\n   * \"m[H2O]+21 gives [\"m[H2O]+21\", \"m[H2O]\", \"+21\"]\n   * \"m[H2O]21 gives [\"m[H2O]-21\", \"m[H2O]\", \"21\"]\n   * \"s2\" gives [\"s2\", \"s, \"2\"]\n   * \"kg\" gives null\n   * \"m[H2O]\" gives null\n   * \"m[H2O]23X\" gives null\n   *\n   * @params uCode the code being tested\n   * @returns an array containing: (1) the code without the exponent (or\n   *  trailing number); and (2) the exponent/trailing number.  Returns null\n   *  if there is no trailing number or something follows the trailing\n   *  number, or if the first part is not characters.\n   */\n  _isCodeWithExponent(uCode) {\n\n    let ret = [] ;\n    let res = uCode.match(/(^[^\\-\\+]+?)([\\-\\+\\d]+)$/);\n\n    // If we got a return with an exponent, separate the exponent from the\n    // unit and return both (as separate values)\n    if (res && res[2] && res[2] !== \"\") {\n      ret.push(res[1]);\n      ret.push(res[2]);\n    } // end if we got an exponent\n    else {\n      ret = null ;\n    }\n    return ret ;\n  } // end _isCodeWithExponent\n\n} // end class UnitString\n\n\n/**\n *  This function exists ONLY until the original UnitString constructor\n *  is called for the first time.  It's defined here in case getInstance\n *  is called before the constructor.   This calls the constructor.\n *\n *  The constructor redefines the getInstance function to return the\n *  singleton UnitString object.  This is based on the UnitTables singleton\n *  implementation; see more detail in the UnitTables constructor description.\n *\n *  @return the singleton UnitString object.\n */\nUnitString.getInstance = function(){\n  return new UnitString();\n} ;\n\n/*\n// Perform the first request for the object, to set the getInstance method.\nUnitString.getInstance();\n\n*/\n","/**\n * This class manages Hashtables that provide references to\n * defined units.\n *\n * @author Lee Mericle, based on java version by Gunther Schadow\n *\n */\n\nvar Ucum = require('./config.js').Ucum;\n\nclass UnitTablesFactory {\n\n  /**\n   * Constructor.  This creates the empty unit tables (hashes) once. After the\n   * tables are created, it redefines this constructor to throw an error\n   * stating that the constructor is no longer available and that the\n   * getInstance function must be used.   Here's a description of the first\n   * and then all subsequent calls to this constructor.\n   *\n   * First call to constructor:\n   * 1. creates  OBJECT1\n   * 2. initializes attributes of OBJECT1\n   * 3. stores reference to OBJECT1.prototype in holdthis local variable\n   * 4. redefines OBJECT1 as a function that throws an error\n   * 5. defines the getInstance function (which is also defined outside of\n   *    the class definition - see below).\n   *\n   * All subsequent calls to constructor:\n   * 1. throw error message referring to getInstance\n   * 2. call getInstance, returns this - which is OBJECT1.\n   */\n  constructor() {\n\n    /**\n     * Tracks units by name\n     * @type hash - key is the name;\n     *              value is an array of references to the Unit objects\n     *              with the name.  More than one unit may have the same\n     *              name, e.g., \"second\", which is shared by the base unit\n     *              with the code = \"s\" and the unit with code = \"'\".\n     */\n    this.unitNames_ = {};\n\n    /**\n     * Tracks units by code using case-sensitive version.\n     *\n     * @type hash - key is the code;\n     *              value is the reference to the Unit object.  Codes must\n     *              be unique.\n     */\n    this.unitCodes_ = {};\n\n    /**\n     * Keeps track of the order in which units are defined.  The order is\n     * important because unit definitions build on previous definitions.\n     *\n     * @type {Array}\n     */\n    this.codeOrder_ = [] ;\n\n    /**\n     * Tracks units by unit strings, e.g., cm-1\n     *\n     * @type hash - key is the unit string\n     *              value is an array of unit objects with that ciUnitString.\n     */\n    this.unitStrings_ = {};\n\n    /**\n     * Tracks units by Dimension vector\n     *\n     * @type hash - key is the dimension vector (not the object, just the\n     *              vector);\n     *              value is an array of references to the Unit objects\n     *              with that vector.  More than one unit may have the same\n     *              unit vector, and this can be used to provide a list\n     *              of commensurable units.\n     */\n    this.unitDimensions_ = {};\n\n    /**\n     * Maps synonyms to units.   Not built until first requested.\n     *\n     * @type hash - key is the synonym\n     *              value is an array of references to Unit objects that\n     *              include that synonym.\n     */\n     this.unitSynonyms_ = {};\n\n    /*\n     * Holds onto the index of the index of the dimension vector flag for\n     * the base mass unit (gram).  This is set when the base unit (gram) is\n     * created, and is stored here so that it doesn't have to be found\n     * over and over again to try to determine whether or not a unit is\n     * mass-based (for mole<->mass conversions)\n     *\n     * @type integer\n     */\n    this.massDimIndex_ = 0;\n  }\n\n\n  /**\n   * Provides the number of unit objects written to the tables, using the\n   * codes table since codes must be unique.\n   *\n   * @returns count of the number of unit objects in the unitCodes_ table.\n   */\n  unitsCount() {\n    return Object.keys(this.unitCodes_).length ;\n  }\n\n\n  /**\n   * Adds a Unit object to the tables.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   * @throws passes on an error if one is thrown by the called functions for\n   *  a problem with the unit code or unit name\n   */\n  addUnit(theUnit) {\n\n    let uName = theUnit['name_'] ;\n    if (uName) {\n      this.addUnitName(theUnit);\n    }\n\n    this.addUnitCode(theUnit);\n    this.addUnitString(theUnit);\n\n    try {\n      if (theUnit['dim_'].getProperty('dimVec_'))\n        this.addUnitDimension(theUnit);\n    }\n    catch(err){\n      // do nothing - throws error if the property is null\n      // and that's OK here.\n    }\n\n  } // end addUnit\n\n\n  /**\n   * Adds a Unit object to the unitNames_ table.  More than one unit\n   * can have the same name, e.g., the two units with the name \"second\",\n   * where the code for one of them is 's' and the code for the other is\n   * \"'\".  Because of this, an array of unit objects is stored for the\n   * name.  In most cases it will be an array of one object, but this\n   * clarifies that there may be more than one.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   * @throws an error if the unit has no name\n   */\n  addUnitName(theUnit) {\n\n    let uName = theUnit['name_'];\n\n    if (uName) {\n      if (this.unitNames_[uName])\n        this.unitNames_[uName].push(theUnit);\n      else\n        this.unitNames_[uName] = [theUnit];\n    }\n    else\n      throw(new Error('UnitTables.addUnitName called for a unit with no name.  ' +\n            `Unit code = ${theUnit['csCode_']}.`));\n\n  } // end addUnitName\n\n\n  /**\n   * Adds a Unit object to the unitCodes_, unitUcCodes_, unitLcCodes_ and\n   * codeOrder_ tables.  This also sets the mass dimension index when the\n   * base mass unit (gram) is read.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   * @throws an error if the unitCodes_ table already contains a unit with\n   *  the code\n   */\n  addUnitCode(theUnit) {\n\n    let uCode = theUnit['csCode_'];\n    if (uCode) {\n\n      if (this.unitCodes_[uCode])\n        throw(new Error(`UnitTables.addUnitCode called, already contains entry for ` +\n              `unit with code = ${uCode}`));\n      else {\n        this.unitCodes_[uCode] = theUnit;\n        this.codeOrder_.push(uCode);\n        if (uCode == 'g') {\n          let dimVec = theUnit.dim_.dimVec_;\n          let d = 0;\n          for (; d < dimVec.length && dimVec[d] < 1; d++) ;\n          this.massDimIndex_ = d;\n        }\n      }\n    }\n    else\n      throw(new Error('UnitTables.addUnitCode called for unit that has ' +\n                      'no code.')) ;\n\n  } // end addUnitCode\n\n\n  /**\n   * Adds a unit object to the unitStrings_ table.  More than one unit\n   * can have the same string, so an array of unit objects is stored\n   * for the string.  The unit string is the string that creates a non-base\n   * unit, e.g., a Newton has a unit code of N, a name of Newton, and a\n   * unitString of kg.m/s2.\n   *\n   * If the unit has no string, nothing is stored and no error is reported.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   */\n  addUnitString(theUnit) {\n\n    let uString = null;\n    if (Ucum.caseSensitive_ == true)\n      uString = theUnit['csUnitString_'];\n    else\n      uString = theUnit['ciUnitString_'];\n\n    if (uString) {\n      let uEntry = {mag: theUnit['baseFactorStr_'], unit: theUnit};\n      if (this.unitStrings_[uString])\n        this.unitStrings_[uString].push(uEntry);\n      else\n        this.unitStrings_[uString] = [uEntry];\n    }\n  } // end addUnitString\n\n\n  /**\n   * Adds a Unit object to the unitDimensions_ table.  More than one unit\n   * can have the same dimension (commensurable units have the same dimension).\n   * Because of this, an array of unit objects is stored for the\n   * dimension.\n   *\n   * @param theUnit the unit to be added\n   * @returns nothing\n   * @throws an error if the unit has no dimension\n   */\n  addUnitDimension(theUnit) {\n\n    let uDim = theUnit['dim_'].getProperty('dimVec_');\n\n    if (uDim) {\n      if (this.unitDimensions_[uDim])\n        this.unitDimensions_[uDim].push(theUnit);\n      else\n        this.unitDimensions_[uDim] = [theUnit];\n    }\n    else\n      throw(new Error('UnitTables.addUnitDimension called for a unit with no dimension.  ' +\n          `Unit code = ${theUnit['csCode_']}.`));\n\n  } // end addUnitDimension\n\n\n  /**\n   * Builds the unitSynonyms_ table. This is called the first time the\n   * getUnitsBySynonym method is called.  The table/hash contains each word\n   * (once) from each synonym as well as each word from each unit name.\n   *\n   * Hash keys are the words.  Hash values are an array of unit codes for\n   * each unit that has that word in its synonyms or name.\n   *\n   * @returns nothing\n   */\n  buildUnitSynonyms() {\n\n    for (let code in this.unitCodes_) {\n      let theUnit = this.unitCodes_[code];\n      let uSyns = theUnit.synonyms_ ;\n\n      // If the current unit has synonyms, process each synonym (often multiples)\n      if (uSyns) {\n        let synsAry = uSyns.split(';');\n        if (synsAry[0] !== '') {\n          let aLen = synsAry.length;\n          for (let a = 0; a < aLen; a++) {\n            let theSyn = synsAry[a].trim();\n\n            // call addSynonymCodes to process each word in the\n            // synonym, e.g., \"British fluid ounces\"\n            this.addSynonymCodes(code, theSyn) ;\n          } // end do for each synonym\n        } // end if the current unit has a non-null synonym attribute\n      } // end if the unit has any synonyms\n\n      // Now call addSynonymCodes to process each word in the unit's name\n      this.addSynonymCodes(code, theUnit.name_) ;\n    } // end do for each unit\n   } // end buildUnitSynonyms\n\n\n  /**\n   * Adds unit code entries to the synonyms table for a string containing\n   * one or more words to be considered as synonyms.\n   *\n   * @param theCode the unit code to be connected to the synonyms\n   * @param theSynonyms a string containing one or more words to be\n   *  considered synonyms (and thus to be added to the unitSynonyms hash).\n   */\n  addSynonymCodes(theCode, theSynonyms) {\n\n    let words = theSynonyms.split(' ');\n    let wLen = words.length;\n\n    for (let w = 0; w < wLen; w++) {\n      let word = words[w];\n\n      // if there is already a synonyms entry for the word,\n      // get the array of unit codes currently assigned to\n      // the word and add the code for the current word to\n      // the synonyms array if it's not already there.\n      if (this.unitSynonyms_[word]) {\n        let synCodes = this.unitSynonyms_[word];\n        if (synCodes.indexOf(theCode) === -1) {\n          this.unitSynonyms_[word].push(theCode);\n        }\n      }\n      // else there are no synonyms entry for the word.  Create a\n      // synonyms array for the word, setting it to contain the unit code.\n      else {\n        this.unitSynonyms_[word] = [theCode];\n      }\n    } // end do for each word in the synonyms being processed\n\n  } // end addSynonymCodes\n\n\n  /**\n   *  Returns a unit object with a case-sensitive code matching the\n   *  uCode parameter, or null if no unit is found with that code.\n   *\n   *  @param uCode the code of the unit to be returned\n   *  @returns the unit object or null if it is not found\n   */\n  getUnitByCode(uCode) {\n    let retUnit = null ;\n    if (uCode) {\n      retUnit = this.unitCodes_[uCode];\n    }\n    return retUnit ;\n  }\n\n\n  /**\n   *  Returns a array of unit objects based on the unit's name.  Usually this\n   *  will be an array of one, but there may be more, since unit names are\n   *  not necessarily unique.\n   *\n   *  @param uName the name of the unit to be returned.  If more than one\n   *  unit has the same name and you only want one specific unit, append the\n   *  csCode of the unit you want to the end of the name, separated by the\n   *  Ucum.codeSep_ value, e.g., inch - [in_i] vs. inch - [in_us].\n   *  @returns null if no unit was found for the specified name OR an array of\n   *  unit objects with the specified name.  Normally this will be an array\n   *  of one object.\n   *  @throws an error if no name is provided to search on\n   */\n  getUnitByName(uName) {\n\n    if (uName === null || uName === undefined) {\n      throw (new Error('Unable to find unit by name because no name was provided.'));\n    }\n    let sepPos = uName.indexOf(Ucum.codeSep_);\n    let uCode = null;\n    if (sepPos >= 1) {\n      uCode = uName.substr(sepPos + Ucum.codeSep_.length);\n      uName = uName.substr(0, sepPos);\n    }\n    let retUnits = this.unitNames_[uName] ;\n    if (retUnits) {\n      let uLen = retUnits.length ;\n\n      if (uCode && uLen > 1) {\n        let i = 0;\n        for (; retUnits[i].csCode_ !== uCode && i < uLen; i++);\n        if (i < uLen)\n          retUnits = [retUnits[i]];\n        else {\n          retUnits = null;\n        }\n      } // end if we need to find both a name and a code\n    } // end if we got an array of units\n    return retUnits ;\n\n  } // end getUnitByName\n\n\n  /**\n   *  Returns an array of unit objects with the specified unit string.\n   *  The array may contain one or more unit reference objects.\n   *  Or none, if no units have a matching unit string (which is not\n   *  considered an error)\n   *\n   *  @param name the name of the unit to be returned\n   *  @returns the array of unit references or null if none were found\n   */\n  getUnitByString(uString) {\n    let retAry = null ;\n    if (uString) {\n      retAry = this.unitStrings_[uString] ;\n      if (retAry === undefined)\n        retAry = null;\n    }\n    return retAry ;\n  }\n\n\n  /**\n   *  Returns a array of unit objects based on the unit's dimension vector.\n   *\n   *  @param uName the dimension vector of the units to be returned.\n   *\n   *  @returns null if no unit was found for the specified vector OR an array of\n   *  one or more unit objects with the specified vector.\n   *  @throws an error if no vector is provided to search on\n   *  logs an error to the console if no unit is found\n   */\n  getUnitsByDimension(uDim) {\n\n    let unitsArray = null ;\n    if (uDim === null || uDim === undefined) {\n      throw (new Error('Unable to find unit by because no dimension ' +\n                       'vector was provided.'));\n    }\n\n    unitsArray = this.unitDimensions_[uDim] ;\n    if (unitsArray === undefined || unitsArray === null) {\n      console.log(`Unable to find unit with dimension = ${uDim}`);\n    }\n\n    return unitsArray ;\n\n  } // end getUnitsByDimension\n\n\n  /**\n   *  Returns a array of unit objects that include the specified synonym.\n   *\n   *  @param uSyn the synonym of the units to be returned.\n   *\n   *  @returns an object with two of the following three elements:\n   *   'status' will be error, failed or succeeded\n   *   'msg' will be included for returns with status = error or failed and\n   *     will explain why the request did not return any units\n   *   'units' any array of unit objects with the specified synonym will be\n   *     returned for requests with status = succeeded\n   */\n  getUnitBySynonym(uSyn) {\n\n    let retObj = {} ;\n    let unitsArray = [];\n\n    try {\n      if (uSyn === null || uSyn === undefined) {\n        retObj['status'] = 'error' ;\n        throw (new Error('Unable to find unit by synonym because no synonym ' +\n            'was provided.'));\n      }\n      // If this is the first request for a unit by synonym, build the hash map\n      if (Object.keys(this.unitSynonyms_).length === 0) {\n        this.buildUnitSynonyms();\n      }\n      let foundCodes = [];\n      foundCodes = this.unitSynonyms_[uSyn];\n      if (foundCodes) {\n        retObj['status'] = 'succeeded';\n        let fLen = foundCodes.length;\n        for (let f = 0; f < fLen; f++) {\n          unitsArray.push(this.unitCodes_[foundCodes[f]]);\n        }\n        retObj['units'] = unitsArray ;\n      }\n      if (unitsArray.length === 0) {\n        retObj['status'] = 'failed' ;\n        retObj['msg'] = `Unable to find any units with synonym = ${uSyn}`;\n      }\n    }\n    catch(err) {\n      retObj['msg'] = err.message ;\n    }\n    return retObj ;\n  } // end getUnitBySynonym\n\n\n  /**\n   * Gets a list of all unit names in the Unit tables\n   *\n   * @returns an array of the unit names\n   */\n  getAllUnitNames() {\n    return Object.keys(this.unitNames_);\n  } // end getAllUnitNames\n\n\n  /**\n   * Gets a list of all unit names in the tables.  Where more than one\n   * unit has the same name, the unit code, in parentheses, is appended\n   * to the end of the name.\n   *\n   * @returns {Array}\n   */\n  getUnitNamesList() {\n    let nameList = [];\n    let codes = Object.keys(this.unitCodes_);\n    codes.sort(this.compareCodes) ;\n    let uLen = codes.length;\n    for (let i = 0; i < uLen; i++) {\n      nameList[i] = codes[i] + Ucum.codeSep_ + this.unitCodes_[codes[i]].name_\n    } // end do for each code\n    return nameList ;\n  }\n\n\n  /*\n   * Returns the mass dimension index\n   * @returns this.massDimIndex_\n   */\n  getMassDimensionIndex() {\n    return this.massDimIndex_ ;\n  }\n\n  /**\n   * This provides a sort function for unit codes so that sorting ignores\n   * square brackets and case.\n   *\n   * @param a first value\n   * @param b second value\n   * @returns -1 if a is should fall before b; otherwise 1.\n   */\n  compareCodes(a, b) {\n    a = a.replace(/[\\[\\]]/g, '');\n    a = a.toLowerCase();\n    b = b.replace(/[\\[\\]]/g, '');\n    b = b.toLowerCase();\n    return (a < b) ? -1 : 1 ;\n  }\n\n\n  /**\n   * Gets a list of all unit codes in the Unit tables\n   *\n   * @returns an array of the unit names\n   */\n  getAllUnitCodes() {\n    return Object.keys(this.unitCodes_);\n  } // end getAllUnitNames\n\n\n  /**\n   * This is used to get all unit objects.  Currently it is used\n   * to get the objects to write to the json ucum definitions file\n   * that is used to provide prefix and unit definition objects for\n   * conversions and validations.\n   *\n   * @returns an array containing all unit objects, ordered by definition\n   * order\n   */\n  allUnitsByDef() {\n\n    let unitsList = [];\n    let uLen = this.codeOrder_.length ;\n    for (let u = 0; u < uLen; u++) {\n      unitsList.push(this.getUnitByCode(this.codeOrder_[u]));\n    }\n    return unitsList ;\n  } // end allUnitsByDef\n\n\n  /**\n   * This is used to get all unit objects, ordered by unit name.  Currently it\n   * is used to create a csv list of all units.\n   * @param sep separator character (or string) to be used to separate each\n   *  column in the output.  Optional, defaults to '|' if not specified.\n   *  (Used to use ; but the synonyms use that extensively).  Don't use a\n   *  comma or any other punctuation found in the output data.\n   * @returns a buffer containing all unit objects, ordered by name\n   * order\n   */\n  allUnitsByName(cols, sep) {\n    if (sep === undefined || sep === null)\n      sep = '|';\n    let unitBuff = '';\n    let unitsList = this.getAllUnitNames();\n    let uLen = unitsList.length;\n    let cLen = cols.length;\n    for (let i = 0; i < uLen; i++) {\n      let nameRecs = this.getUnitByName(unitsList[i]);\n      for (let u = 0; u < nameRecs.length; u++) {\n        let rec = nameRecs[u];\n        for (let c = 0; c < cLen; c++) {\n          if (c > 0)\n            unitBuff += sep;\n          if (cols[c] === 'dim_') {\n            if (rec.dim_ !== null && rec.dim_ !== undefined &&\n                rec.dim_.dimVec_ instanceof Array)\n              unitBuff += '[' + rec.dim_.dimVec_.join(',') + ']';\n            else\n              unitBuff += '';\n          }\n          else {\n            let cbuf = rec[cols[c]];\n            if (typeof cbuf === 'string')\n              unitBuff += cbuf.replace(/[\\n\\r]/g, ' ');\n            else\n              unitBuff += cbuf ;\n          }\n        } // end do for each column requested\n        unitBuff += '\\r\\n';\n      } // end do for each unit in the unit names array\n    }\n    return unitBuff ;\n  } // end allUnitsByName\n\n\n  /**\n   * This creates a list of all units in the tables.  It uses the byCode\n   * table, and uses the codeOrder_ array to determine the order in which\n   * the units are listed.\n   *\n   * @param doLong boolean indicating how much to output.  If true, all data\n   *  from the unit objects is included.   If false, only a few major values\n   *  are included.\n   * @param sep separator character (or string) to be used to separate each\n   *  column in the output.  Optional, defaults to '|' if not specified.\n   *  (Used to use ; but the synonyms use that extensively).\n   * @returns {string} buffer containing all the listings\n   */\n  printUnits(doLong, sep) {\n    if (doLong === undefined)\n      doLong = false ;\n    if (sep === undefined)\n      sep = '|';\n    let codeList = '';\n    let uLen = this.codeOrder_.length ;\n    let unitString = 'csCode' + sep  ;\n    if (doLong) {\n      unitString += 'ciCode' + sep ;\n    }\n    unitString += 'name' + sep ;\n    if (doLong)\n      unitString += 'isBase' + sep ;\n    unitString += 'magnitude' + sep + 'dimension' + sep + 'from unit(s)' + sep +\n                  'value' + sep + 'function' + sep ;\n    if (doLong)\n      unitString += 'property' + sep + 'printSymbol' + sep + 'synonyms' + sep +\n                    'source' + sep + 'class' + sep + 'isMetric' + sep +\n                    'variable' + sep + 'isSpecial' + sep + 'isAbitrary' + sep ;\n    unitString += 'comment';\n    codeList = unitString + '\\n' ;\n\n    for (let u = 0; u < uLen; u++) {\n      let curUnit = this.getUnitByCode(this.codeOrder_[u]);\n      unitString = this.codeOrder_[u] + sep ;\n      if (doLong) {\n        unitString += curUnit.getProperty('ciCode_') + sep ;\n      }\n      unitString += curUnit.getProperty('name_') + sep ;\n      if (doLong) {\n        if (curUnit.getProperty('isBase_'))\n          unitString += 'true' + sep ;\n        else\n          unitString += 'false' + sep ;\n      }\n      unitString += curUnit.getProperty('magnitude_')  + sep;\n      let curDim = curUnit.getProperty('dim_');\n      if (curDim) {\n        unitString += curDim.dimVec_ + sep ;\n      }\n      else {\n        unitString += 'null' + sep;\n      }\n      if (curUnit.csUnitString_)\n        unitString += curUnit.csUnitString_ + sep + curUnit.baseFactor_ + sep ;\n      else\n        unitString += 'null' + sep + 'null' + sep;\n\n      if (curUnit.cnv_)\n        unitString += curUnit.cnv_ + sep ;\n      else\n        unitString += 'null' + sep ;\n\n      if (doLong) {\n        unitString += curUnit.getProperty('property_') + sep +\n                      curUnit.getProperty('printSymbol_') + sep +\n                      curUnit.getProperty('synonyms_') + sep +\n                      curUnit.getProperty('source_') + sep +\n                      curUnit.getProperty('class_') + sep +\n                      curUnit.getProperty('isMetric_') + sep +\n                      curUnit.getProperty('variable_') + sep +\n                      curUnit.getProperty('isSpecial_') + sep +\n                      curUnit.getProperty('isArbitrary_') + sep ;\n      }\n      if (curUnit.defError_)\n        unitString += 'problem parsing this one, deferred to later.' ;\n      codeList += unitString + '\\n' ;\n    }\n    return codeList ;\n  }\n\n} // end UnitTablesFactory\n\n\n// Create a singleton instance and (to preserve the existing API) an object that\n// provides that instance via getInstance().\nvar unitTablesInstance = new UnitTablesFactory();\nexport const UnitTables = {\n  getInstance: function() {\n    return unitTablesInstance;\n  }\n}\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar cql = require('cql-execution');\n\nvar load = require('./load');\n\nvar FHIRv102XML = require('./modelInfos/fhir-modelinfo-1.0.2.xml.js');\n\nvar FHIRv300XML = require('./modelInfos/fhir-modelinfo-3.0.0.xml.js');\n\nvar FHIRv400XML = require('./modelInfos/fhir-modelinfo-4.0.0.xml.js');\n\nvar FHIRv401XML = require('./modelInfos/fhir-modelinfo-4.0.1.xml.js');\n\nvar FHIRWrapper = /*#__PURE__*/function () {\n  function FHIRWrapper(filePathOrXML) {\n    _classCallCheck(this, FHIRWrapper);\n\n    this._modelInfo = load(filePathOrXML);\n  }\n\n  _createClass(FHIRWrapper, [{\n    key: \"wrap\",\n    value: function wrap(fhirJson) {\n      var fhirResourceType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var targetClassName = fhirResourceType || fhirJson.resourceType;\n\n      var targetClass = this._modelInfo.findClass(targetClassName); // If the FHIR resource specifies a type and a target type is specified, verify they are compatible\n\n\n      if (fhirResourceType && fhirJson.resourceType) {\n        var currentClass = this._modelInfo.findClass(fhirJson.resourceType);\n\n        if (!this._typeCastIsAllowed(currentClass, targetClass)) throw \"Incompatible types: FHIR resourceType is \".concat(fhirJson.resourceType, \" which cannot be cast as \").concat(fhirResourceType);\n      }\n\n      return new FHIRObject(fhirJson, targetClass, this._modelInfo);\n    }\n  }, {\n    key: \"_typeCastIsAllowed\",\n    value: function _typeCastIsAllowed(currentClass, targetClass) {\n      return targetClass == currentClass || currentClass.parentClasses().includes(targetClass) || // upcasting, safe\n      targetClass.parentClasses().includes(currentClass); // downcasting, unsafe but allowed\n    }\n  }], [{\n    key: \"FHIRv102\",\n    value: function FHIRv102() {\n      return new FHIRWrapper(FHIRv102XML);\n    }\n  }, {\n    key: \"FHIRv300\",\n    value: function FHIRv300() {\n      return new FHIRWrapper(FHIRv300XML);\n    }\n  }, {\n    key: \"FHIRv400\",\n    value: function FHIRv400() {\n      return new FHIRWrapper(FHIRv400XML);\n    }\n  }, {\n    key: \"FHIRv401\",\n    value: function FHIRv401() {\n      return new FHIRWrapper(FHIRv401XML);\n    }\n  }]);\n\n  return FHIRWrapper;\n}();\n\nvar PatientSource = /*#__PURE__*/function () {\n  function PatientSource(filePathOrXML) {\n    _classCallCheck(this, PatientSource);\n\n    this._index = 0;\n    this._bundles = [];\n    this._modelInfo = load(filePathOrXML);\n  } // Convenience factory method for getting a FHIR 1.0.2 (DSTU2) Patient Source\n\n\n  _createClass(PatientSource, [{\n    key: \"version\",\n    get: function get() {\n      return this._modelInfo.version;\n    }\n  }, {\n    key: \"loadBundles\",\n    value: function loadBundles(bundles) {\n      this._bundles = this._bundles.concat(bundles);\n    }\n  }, {\n    key: \"currentPatient\",\n    value: function currentPatient() {\n      if (this._index < this._bundles.length) {\n        return new Patient(this._bundles[this._index], this._modelInfo);\n      }\n    }\n  }, {\n    key: \"nextPatient\",\n    value: function nextPatient() {\n      // Advance the index to go to the next patient, allowing to advance one beyond the length (but no more)\n      if (this._index < this._bundles.length) {\n        this._index++;\n      }\n\n      return this.currentPatient();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._index = 0;\n      this._bundles = [];\n    }\n  }], [{\n    key: \"FHIRv102\",\n    value: function FHIRv102() {\n      return new PatientSource(FHIRv102XML);\n    } // Convenience factory method for getting a FHIR 3.0.0 (STU3) Patient Source\n\n  }, {\n    key: \"FHIRv300\",\n    value: function FHIRv300() {\n      return new PatientSource(FHIRv300XML);\n    } // Convenience factory method for getting a FHIR 4.0.0 (R4) Patient Source\n\n  }, {\n    key: \"FHIRv400\",\n    value: function FHIRv400() {\n      return new PatientSource(FHIRv400XML);\n    } // Convenience factory method for getting a FHIR 4.0.1 (R4) Patient Source\n\n  }, {\n    key: \"FHIRv401\",\n    value: function FHIRv401() {\n      return new PatientSource(FHIRv401XML);\n    }\n  }]);\n\n  return PatientSource;\n}();\n\nvar FHIRObject = /*#__PURE__*/function () {\n  function FHIRObject(json, typeInfo, modelInfo) {\n    var _this = this;\n\n    _classCallCheck(this, FHIRObject);\n\n    // Define \"private\" un-enumerable properties to hold internal data\n    Object.defineProperties(this, {\n      _json: {\n        value: json,\n        enumerable: false\n      },\n      _typeInfo: {\n        value: typeInfo,\n        enumerable: false\n      },\n      _modelInfo: {\n        value: modelInfo,\n        enumerable: false\n      }\n    });\n\n    if (typeInfo == null) {\n      console.error(\"Failed to locate typeInfo for \".concat(json));\n      return;\n    }\n\n    var elementNames = new Set();\n\n    for (var currentInfo = typeInfo; currentInfo != null;) {\n      currentInfo.elements.forEach(function (e) {\n        return elementNames.add(e.name);\n      });\n\n      if (currentInfo.baseTypeSpecifier != null) {\n        currentInfo = modelInfo.findClass(currentInfo.baseTypeSpecifier.fqn);\n      } else {\n        currentInfo = null;\n      }\n    }\n\n    var _iterator = _createForOfIteratorHelper(elementNames),\n        _step;\n\n    try {\n      var _loop = function _loop() {\n        var name = _step.value;\n        Object.defineProperty(_this, name, {\n          get: function get() {\n            return this.get(name);\n          },\n          enumerable: true\n        });\n      };\n\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } // Required by cql-execution API\n\n\n  _createClass(FHIRObject, [{\n    key: \"get\",\n    value: function get(field) {\n      if (this._json == null) {\n        // preserve distinction between null or undefined\n        return this._json;\n      }\n\n      var parts = field.split('.');\n      var root = parts[0];\n      var suffix = parts.length > 1 ? parts.splice(1).join('.') : undefined;\n\n      var element = this._typeInfo.findElement(root, true); // true: support explicit choices\n\n\n      if (typeof element === 'undefined') {\n        console.error(\"Failed to locate element for \".concat(this._typeInfo.name, \".\").concat(root));\n        return;\n      }\n\n      var choicePropertyName = function choicePropertyName(element, choice) {\n        return \"\".concat(element.name).concat(choice.name[0].toUpperCase()).concat(choice.name.slice(1));\n      };\n\n      var property, typeSpecifier;\n\n      if (root !== element.name && element.typeSpecifier.isChoice) {\n        // This only happens when the root was explicit (e.g., medicationCodeableConcept) but the\n        // property is a choice (e.g., medication). In this case we need to find the matchin choice\n        // and use it. We don't want other choices, even if they're in the data.\n        property = root; // keep the explicit name\n\n        typeSpecifier = element.typeSpecifier.choices.find(function (c) {\n          return property === choicePropertyName(element, c);\n        });\n      } else {\n        property = element.name;\n        typeSpecifier = element.typeSpecifier;\n\n        if (typeSpecifier.isChoice) {\n          // Special handling for choices to find the right value in the FHIR data (e.g., the property\n          // might be 'value', but in JSON, it's spelled out as 'valueDateTime').\n          var _iterator2 = _createForOfIteratorHelper(typeSpecifier.choices),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var choice = _step2.value;\n\n              if (choice.isNamed) {\n                var choiceProperty = choicePropertyName(element, choice);\n\n                if (this._json[choiceProperty] != null || this._json[\"_\".concat(choiceProperty)] != null) {\n                  property = choiceProperty;\n                  typeSpecifier = choice;\n                  break;\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }\n\n      if (typeSpecifier.namespace === 'System') {\n        // TODO: If there is a suffix, we need to drill into the CQL system type!\n        if (suffix != null) {\n          console.error(\"Traversing into CQL system types isn't supported: \".concat(this._typeInfo.name, \".\").concat(root, \".\").concat(suffix, \".\"));\n          return;\n        }\n\n        return toSystemObject(this._json[property], typeSpecifier.name);\n      }\n\n      var data = getPropertyFromJSON(this._json, property, typeSpecifier, this._modelInfo);\n\n      if (data == null) {\n        // preserve distinction between null or undefined\n        return data;\n      }\n\n      return toFHIRObject(data, typeSpecifier, this._modelInfo, suffix);\n    } // Required by cql-execution API (starting w/ 1.2.1)\n\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this._json.id;\n    } // Required by cql-execution API\n\n  }, {\n    key: \"getCode\",\n    value: function getCode(field) {\n      var code = this.get(field);\n\n      if (!(code instanceof cql.Code)) {\n        code = toCode(code);\n      }\n\n      return code;\n    } // Required by cql-execution API (but not currently used in FHIR data model)\n\n  }, {\n    key: \"getDate\",\n    value: function getDate(field) {\n      var date = this.get(field);\n\n      if (!(date instanceof cql.DateTime) && date && date.value) {\n        date = date.value;\n      }\n\n      return date;\n    } // Required by cql-execution API (but not currently used in FHIR data model)\n\n  }, {\n    key: \"getInterval\",\n    value: function getInterval(field) {\n      var ivl = this.get(field);\n\n      if (!(ivl instanceof cql.Interval) && ivl && ivl.value) {\n        ivl = ivl.value;\n      }\n\n      return ivl;\n    } // Required by cql-execution API (but not currently used in FHIR data model)\n\n  }, {\n    key: \"getDateOrInterval\",\n    value: function getDateOrInterval(field) {\n      var dateOrIvl = this.get(field);\n\n      if (!(dateOrIvl instanceof cql.DateTime) && !(dateOrIvl instanceof cql.Interval) && dateOrIvl && dateOrIvl.value) {\n        dateOrIvl = dateOrIvl.value;\n      }\n\n      return dateOrIvl;\n    }\n  }, {\n    key: \"_is\",\n    value: function _is(typeSpecifier) {\n      return this._typeHierarchy().some(function (t) {\n        return t.type === typeSpecifier.type && t.name == typeSpecifier.name;\n      });\n    }\n  }, {\n    key: \"_typeHierarchy\",\n    value: function _typeHierarchy() {\n      var typeHierarchy = [];\n\n      if (this.getTypeInfo() != null) {\n        typeHierarchy = [this.getTypeInfo()].concat(_toConsumableArray(this.getTypeInfo().parentClasses())).map(function (c) {\n          // Account for when the namespace comes in as the model name rather than the model url\n          var namespace = c.namespace;\n\n          if (namespace === c.modelInfo.name) {\n            namespace = c.modelInfo.url;\n          } else if (namespace === 'System') {\n            namespace = 'urn:hl7-org:elm-types:r1';\n          } // Account for when the name is prefixed by the model name and a dot\n\n\n          var name = c.name;\n\n          if (name.startsWith(\"\".concat(c.modelInfo.name, \".\"))) {\n            name = name.slice(c.modelInfo.name.length + 1);\n          }\n\n          name = \"{\".concat(namespace, \"}\").concat(name); // At this point, all the FHIR models are considered named types\n\n          return {\n            name: name,\n            type: 'NamedTypeSpecifier'\n          };\n        });\n      } // TODO: This currently doesn't include System types in the hierarchy.  We should fix this in the parentClasses\n      // function, but until then, we know that everything eventually inherits from System.Any, so force that here:\n\n\n      typeHierarchy.push({\n        name: '{urn:hl7-org:elm-types:r1}Any',\n        type: 'NamedTypeSpecifier'\n      });\n      return typeHierarchy;\n    }\n  }, {\n    key: \"getTypeInfo\",\n    value: function getTypeInfo() {\n      return this._typeInfo;\n    }\n  }]);\n\n  return FHIRObject;\n}();\n\nvar Patient = /*#__PURE__*/function (_FHIRObject) {\n  _inherits(Patient, _FHIRObject);\n\n  var _super = _createSuper(Patient);\n\n  function Patient(bundle, modelInfo) {\n    var _this2;\n\n    _classCallCheck(this, Patient);\n\n    var patientClass = modelInfo.patientClassIdentifier ? modelInfo.patientClassIdentifier : modelInfo.patientClassName;\n    var resourceType = modelInfo.patientClassName.replace(/^FHIR\\./, '');\n    var ptEntry = bundle.entry.find(function (e) {\n      return e.resource && e.resource.resourceType == resourceType;\n    });\n    var ptClass = modelInfo.findClass(patientClass);\n    _this2 = _super.call(this, ptEntry.resource, ptClass, modelInfo); // Define a \"private\" un-enumerable property to hold the bundle\n\n    Object.defineProperty(_assertThisInitialized(_this2), '_bundle', {\n      value: bundle,\n      enumerable: false\n    });\n    return _this2;\n  }\n\n  _createClass(Patient, [{\n    key: \"findRecord\",\n    value: function findRecord(profile) {\n      var records = this.findRecords(profile);\n\n      if (records.length > 0) {\n        return records[0];\n      }\n    }\n  }, {\n    key: \"findRecords\",\n    value: function findRecords(profile) {\n      var _this3 = this;\n\n      var classInfo = this._modelInfo.findClass(profile);\n\n      if (classInfo == null) {\n        console.error(\"Failed to find type info for \".concat(profile));\n        return [];\n      }\n\n      var resourceType = classInfo.name.replace(/^FHIR\\./, '');\n\n      var records = this._bundle.entry.filter(function (e) {\n        return e.resource && e.resource.resourceType == resourceType;\n      }).map(function (e) {\n        return new FHIRObject(e.resource, classInfo, _this3._modelInfo);\n      });\n\n      return records;\n    }\n  }]);\n\n  return Patient;\n}(FHIRObject);\n/**\n * Extracts a property from the JSON, with special support for handling FHIR primitives that\n * may be spread out over two properties (`${property}` and `_${property}`).\n * @see http://hl7.org/fhir/STU3/json.html#primitive\n * @param {Object} json - the JSON representation from which to extract the property\n * @param {string} property - the property name to extract\n * @param {Object} typeSpecifier - the element information for the property being retrieved\n * @param {Object} modelInfo - the ModelInfo from which the element came\n * @returns {Object}\n */\n\n\nfunction getPropertyFromJSON(json, property, typeSpecifier, modelInfo) {\n  var value = json[property];\n  var extra = json[\"_\".concat(property)];\n\n  if (value == null && extra == null) {\n    return json[property];\n  } // Special handling for FHIR ids and extensions on primitives.\n\n\n  if (isFHIRPrimitiveOrListOfFHIRPrimitives(typeSpecifier, modelInfo)) {\n    // Normalize (or copy) to arrays to better share code between lists and non-lists\n    var valueArr = typeSpecifier.isList && Array.isArray(value) ? _toConsumableArray(value) : [value];\n    var extraArr = typeSpecifier.isList && Array.isArray(extra) ? _toConsumableArray(extra) : [extra]; // Make sure arrays are of same length for easier processing\n\n    while (valueArr.length > extraArr.length) {\n      extraArr.push(undefined);\n    }\n\n    while (extraArr.length > valueArr.length) {\n      valueArr.push(undefined);\n    }\n\n    var data = [];\n\n    for (var i = 0; i < valueArr.length; i++) {\n      var item = {};\n\n      if (typeof valueArr[i] !== 'undefined') {\n        item.value = valueArr[i];\n      }\n\n      if (extraArr[i] != null) {\n        Object.assign(item, extraArr[i]);\n      }\n\n      if (valueArr[i] == null && extraArr[i] == null) {\n        // preserve undefined/null nature of value if neither value nor extra were found\n        item = valueArr[i];\n      }\n\n      data.push(item);\n    }\n\n    return typeSpecifier.isList ? data : data[0];\n  }\n\n  return json[property];\n}\n\nfunction isFHIRPrimitiveOrListOfFHIRPrimitives(typeSpecifier, modelInfo) {\n  if (typeSpecifier.isNamed) {\n    // If its namespace is FHIR and its name starts w/ a lowercase letter, it's a FHIR primitive\n    if (typeSpecifier.namespace === 'FHIR' && typeSpecifier.name[0].toLowerCase() === typeSpecifier.name[0]) {\n      return true;\n    } // The FHIR modelinfo represents code elements as a unique class type with a single string 'value'.\n    // e.g., Goal's 'status' element has type 'GoalStatus', which just has a string value element.\n\n\n    var typeInfo = modelInfo.findClass(typeSpecifier.fqn);\n\n    if (typeInfo && typeInfo.baseTypeSpecifier && typeInfo.baseTypeSpecifier.fqn === 'FHIR.Element' && typeInfo.elements.length === 1) {\n      var property = typeInfo.findElement('value');\n      return property && property.typeSpecifier.fqn === 'System.String';\n    }\n\n    return false;\n  } else if (typeSpecifier.isList) {\n    return isFHIRPrimitiveOrListOfFHIRPrimitives(typeSpecifier.elementType, modelInfo);\n  }\n\n  return false;\n}\n/**\n * Converts JSON data to the proper CQL System Type as necessary.\n * @param {Object} data - the data to convert to the proper CQL System type\n * @param {string} name - the name of the CQL System Type (e.g., 'Boolean')\n * @returns {Object}\n */\n\n\nfunction toSystemObject(data, name) {\n  if (data == null) {\n    // preserve distinction between null or undefined\n    return data;\n  }\n\n  switch (name) {\n    case 'Boolean':\n    case 'Decimal':\n    case 'Integer':\n    case 'String':\n      return data;\n\n    case 'Code':\n    case 'Concept':\n    case 'Quantity':\n      // Currently, these aren't used as leaf nodes in the FHIR model infos!\n      return;\n\n    case 'DateTime':\n      // CQL DateTime doesn't support 'Z' right now, so account for that.\n      return cql.DateTime.parse(data.replace('Z', '+00:00'));\n\n    case 'Date':\n      // cql-execution v1.3.2 currently doesn't export the new Date class, so we need to use this workaround\n      return cql.DateTime.parse(data) != null ? cql.DateTime.parse(data).getDate() : undefined;\n\n    case 'Time':\n      {\n        // CQL DateTime doesn't support 'Z' right now, so account for that. In addition Time should not\n        // have an offset, so clear the offset as well.\n        // NOTE: Current CQL execution treats time as a DateTime w/ date fixed to 0000-01-01.\n        var time = cql.DateTime.parse(\"0000-01-01T\".concat(data.replace('Z', '+00:00')));\n        time.timezoneOffset = null;\n        return time;\n      }\n  }\n}\n/**\n * Converts data to a FHIRObject class instance\n * @param {Object} data - the JSON data to populate the FHIR object with\n * @param {Object} typeSpecifier - the TypeSpecifier describing the data\n * @param {ModelInfo} modelInfo - the overall ModelInfo from which this class comes\n * @param {string} suffix - the trailing part of the path to get (e.g., x.y.z)\n * @returns {FHIRObject}\n */\n\n\nfunction toFHIRObject(data, typeSpecifier, modelInfo, suffix) {\n  if (data == null) {\n    // preserve distinction between null or undefined\n    return data;\n  }\n\n  if (typeSpecifier.isNamed) {\n    var rootClassInfo = modelInfo.findClass(typeSpecifier.fqn);\n    var rootObject = new FHIRObject(data, rootClassInfo, modelInfo);\n\n    if (suffix != null) {\n      return rootObject.get(suffix);\n    }\n\n    return rootObject;\n  } else if (typeSpecifier.isList) {\n    if (suffix != null) {\n      console.error('List type found in the middle of a path.');\n      return;\n    }\n\n    return data.map(function (item) {\n      return toFHIRObject(item, typeSpecifier.elementType, modelInfo);\n    });\n  } else if (typeSpecifier.isInterval) {\n    return new cql.Interval(toFHIRObject(data.low, typeSpecifier.pointType, modelInfo), toFHIRObject(data.high, typeSpecifier.pointType, modelInfo), data.lowClosed, data.highClosed);\n  }\n\n  return;\n}\n/**\n * Converts a FHIRObject instance representing a FHIR.CodeableConcept, FHIR.Coding, or FHIR.code\n * to a CQL Code.\n * @param {FHIRObject} f - the FHIRObject instance to convert to a CQL Code\n * @returns {cql.Code}\n */\n\n\nfunction toCode(f) {\n  if (f == null) {\n    // preserve distinction between null or undefined\n    return f;\n  }\n\n  if (Array.isArray(f)) {\n    return f.map(function (c) {\n      return toCode(c);\n    });\n  }\n\n  var typeName = f.getTypeInfo().name.replace(/^FHIR\\./, '');\n\n  if (typeName === 'CodeableConcept') {\n    if (f.coding == null) {\n      // preserve distinction between null or undefined\n      return f.coding;\n    } else {\n      var codings = f.coding.map(function (c) {\n        return toCode(c);\n      });\n      return codings.length === 1 ? codings[0] : codings;\n    }\n  } else if (typeName === 'Coding') {\n    return new cql.Code(f.code ? f.code.value : f.code, f.system ? f.system.value : f.system, f.version ? f.version.value : f.version, f.display ? f.display.value : f.display);\n  } else if (typeName === 'code') {\n    return f.value;\n  }\n}\n\nmodule.exports = {\n  PatientSource: PatientSource,\n  FHIRWrapper: FHIRWrapper\n};","\"use strict\";\n\nmodule.exports = require('./fhir');","\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar fs = require('fs');\n\nvar xml2js = require('xml2js');\n\nvar processors = require('xml2js/lib/processors');\n\nfunction load(filePathOrXML) {\n  var xml, name;\n\n  if (/^\\s*<[\\s\\S]+>\\s*$/.test(filePathOrXML)) {\n    xml = filePathOrXML;\n    name = 'XML';\n  } else {\n    xml = fs.readFileSync(filePathOrXML, 'utf8');\n    name = filePathOrXML;\n  }\n\n  var modelInfo;\n  var opts = {\n    async: false,\n    tagNameProcessors: [processors.stripPrefix],\n    attrNameProcessors: [processors.stripPrefix]\n  };\n  xml2js.parseString(xml, opts, function (err, result) {\n    if (err != null) {\n      console.error(\"Failed to load model info from \".concat(name, \":\"), err);\n      return;\n    } else if (result.modelInfo == null) {\n      console.error(\"Model info is not valid for \".concat(name));\n      return;\n    }\n\n    modelInfo = new ModelInfo(result.modelInfo);\n  });\n  return modelInfo;\n}\n\nvar ModelInfo = /*#__PURE__*/function () {\n  function ModelInfo(xml) {\n    _classCallCheck(this, ModelInfo);\n\n    this._name = xml.$.name;\n    this._version = xml.$.version;\n    this._url = xml.$.url;\n    this._schemaLocation = xml.$.schemaLocation;\n    this._targetQualifier = xml.$.targetQualifier;\n    this._patientClassName = xml.$.patientClassName;\n    this._patientClassIdentifier = xml.$.patientClassIdentifier;\n    this._patientBirthDatePropertyName = xml.$.patientBirthDatePropertyName;\n    this._caseSensitive = xml.$.caseSensitive;\n    this._strictRetrieveTyping = xml.$.strictRetrieveTyping;\n    this._classesByLabel = new Map();\n    this._classesByIdentifier = new Map();\n    this._classesByName = new Map();\n\n    var _iterator = _createForOfIteratorHelper(xml.typeInfo),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var t = _step.value;\n\n        if (t.$ != null && (stripNS(t.$.type) === 'ClassInfo' || stripNS(t.$.type) === 'ProfileInfo')) {\n          var classInfo = new ClassInfo(t, this);\n\n          if (classInfo.label != null) {\n            this._classesByLabel.set(classInfo.label, classInfo);\n          }\n\n          if (classInfo.identifier != null) {\n            this._classesByIdentifier.set(classInfo.identifier, classInfo);\n          }\n\n          if (classInfo.name != null) {\n            this._classesByName.set(classInfo.name, classInfo);\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  _createClass(ModelInfo, [{\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this._version;\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this._url;\n    }\n  }, {\n    key: \"schemaLocation\",\n    get: function get() {\n      return this._schemaLocation;\n    }\n  }, {\n    key: \"targetQualifier\",\n    get: function get() {\n      return this._targetQualifier;\n    }\n  }, {\n    key: \"patientClassName\",\n    get: function get() {\n      return this._patientClassName;\n    }\n  }, {\n    key: \"patientClassIdentifier\",\n    get: function get() {\n      return this._patientClassIdentifier;\n    }\n  }, {\n    key: \"patientBirthDatePropertyName\",\n    get: function get() {\n      return this._patientBirthDatePropertyName;\n    }\n  }, {\n    key: \"caseSensitive\",\n    get: function get() {\n      return this._caseSensitive;\n    }\n  }, {\n    key: \"strictRetrieveTyping\",\n    get: function get() {\n      return this._strictRetrieveTyping;\n    }\n  }, {\n    key: \"findClass\",\n    value: function findClass(klass) {\n      // First check label, then identifier, then name\n      if (this._classesByLabel.has(klass)) {\n        return this._classesByLabel.get(klass);\n      } else if (this._classesByIdentifier.has(klass)) {\n        return this._classesByIdentifier.get(klass);\n      } // If label or identifier aren't used, it might come in as something like {http://hl7.org/fhir}MedicationStatement.\n      // If the URL matches the model URL, then swap out the namespace with the model name (and a dot).  Otherwise this\n      // will keep the name as-is.\n\n\n      var klassName = klass.replace(\"{\".concat(this.url, \"}\"), \"\".concat(this.name, \".\"));\n\n      if (this._classesByName.has(klassName)) {\n        return this._classesByName.get(klassName);\n      } // Last ditch effort by name: if it starts with the model prefix (e.g., FHIR.Patient) then remove it; OR if it\n      // doesn't start with the model prefix (e.g. Patient), add it.\n\n\n      var modKlassName = klassName.startsWith(\"\".concat(this.name, \".\")) ? klassName.slice(this.name.length + 1) : \"\".concat(this.name, \".\").concat(klassName);\n      return this._classesByName.get(modKlassName);\n    }\n  }]);\n\n  return ModelInfo;\n}();\n\nvar ClassInfo = /*#__PURE__*/function () {\n  function ClassInfo(xml, modelInfo) {\n    _classCallCheck(this, ClassInfo);\n\n    this._namespace = xml.$.namespace || modelInfo.url;\n    this._name = xml.$.name;\n    this._identifier = xml.$.identifier;\n    this._label = xml.$.label;\n    this._isRetrievable = xml.$.retrievable == 'true';\n    this._primaryCodePath = xml.$.primaryCodePath;\n    this._baseTypeSpecifier = getTypeSpecifierFromXML(xml, 'base');\n    this._modelInfo = modelInfo;\n    this._elementsByName = new Map();\n\n    if (xml.element != null) {\n      var _iterator2 = _createForOfIteratorHelper(xml.element),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          var element = new ClassElement(e, modelInfo);\n\n          this._elementsByName.set(element.name, element);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    this._parentClasses = null; //lazy loaded\n  }\n\n  _createClass(ClassInfo, [{\n    key: \"namespace\",\n    get: function get() {\n      return this._namespace;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"identifier\",\n    get: function get() {\n      return this._identifier;\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._label;\n    }\n  }, {\n    key: \"isRetrievable\",\n    get: function get() {\n      return this._isRetrievable;\n    }\n  }, {\n    key: \"primaryCodePath\",\n    get: function get() {\n      return this._primaryCodePath;\n    }\n  }, {\n    key: \"baseTypeSpecifier\",\n    get: function get() {\n      return this._baseTypeSpecifier;\n    }\n  }, {\n    key: \"modelInfo\",\n    get: function get() {\n      return this._modelInfo;\n    }\n  }, {\n    key: \"elements\",\n    get: function get() {\n      return Array.from(this._elementsByName.values());\n    } // @return NamedTypeSpecifier\n\n  }, {\n    key: \"parentClasses\",\n    value: function parentClasses() {\n      if (!this._parentClasses) {\n        this._parentClasses = [];\n\n        if (this.baseTypeSpecifier) {\n          var _this$_parentClasses;\n\n          var parentClass = this._modelInfo.findClass(this.baseTypeSpecifier.name);\n\n          if (parentClass) (_this$_parentClasses = this._parentClasses).push.apply(_this$_parentClasses, [parentClass].concat(_toConsumableArray(parentClass.parentClasses())));\n        }\n      }\n\n      return this._parentClasses;\n    }\n    /**\n     * Finds an element by name, optionally allowing for explicit choice names. If explicit choice names\n     * are allowed, then if 'medicationCodeableConcept' is passed in, but the real element name is\n     * 'medication' and it is a choice where 'CodeableConcept' is a valid option type, then it will return\n     * that.  If explicit choice names are not allowed, it will return `undefined`.  Technically, explicit\n     * choicenames won't come up often -- likely only when a ModelInfo uses one as its primaryCodePath or\n     * primaryDatePath (and even then, some might consider that a bug in the ModelInfo).\n     * @param {string} el - the name of the element to find\n     * @param {boolean} allowExplicitChoice - indicates if explicit choice names are allowed\n     * @return {ClassElement}\n     */\n\n  }, {\n    key: \"findElement\",\n    value: function findElement(el) {\n      var allowExplicitChoice = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var element = this._elementsByName.get(el); // TODO: Should we add support for when the base type is a System type?\n\n\n      if (element == null && this.baseTypeSpecifier != null && this.baseTypeSpecifier.namespace !== 'System') {\n        element = this._modelInfo.findClass(this.baseTypeSpecifier.fqn).findElement(el);\n      }\n\n      if (element == null && allowExplicitChoice) {\n        // Now go through the name checking possible combinations of name and type for explicit choices\n        // E.g., medicationCodeableConcept -> medication / CodeableConcept -> medicationCodeable / Concept\n        for (var i = 0; i < el.length; i++) {\n          if (/^[A-Z]$/.test(el[i])) {\n            var name = el.slice(0, i);\n            var potential = this.findElement(name, false);\n\n            if (potential != null && potential.typeSpecifier && potential.typeSpecifier.isChoice) {\n              var _ret = function () {\n                var explicitType = el.slice(i);\n                var typeMatchesChoice = potential.typeSpecifier.choices.find(function (c) {\n                  return c.name === explicitType || c.name === \"\".concat(explicitType[0].toLowerCase()).concat(explicitType.slice(1));\n                });\n\n                if (typeMatchesChoice) {\n                  element = potential;\n                  return \"break\";\n                }\n              }();\n\n              if (_ret === \"break\") break;\n            }\n          }\n        }\n      }\n\n      return element;\n    }\n  }]);\n\n  return ClassInfo;\n}();\n\nvar ClassElement = /*#__PURE__*/function () {\n  function ClassElement(xml, modelInfo) {\n    _classCallCheck(this, ClassElement);\n\n    this._name = xml.$.name;\n    this._typeSpecifier = getTypeSpecifierFromXML(xml, '', 'element');\n    this._isProhibited = xml.$.prohibited == 'true';\n    this._isOneBased = xml.$.oneBased === 'true';\n    this._modelInfo = modelInfo;\n  }\n\n  _createClass(ClassElement, [{\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"typeSpecifier\",\n    get: function get() {\n      return this._typeSpecifier;\n    }\n  }, {\n    key: \"isProhibited\",\n    get: function get() {\n      return this._isProhibited;\n    }\n  }]);\n\n  return ClassElement;\n}();\n\nvar NAMED_TYPE_NAME = 'NamedTypeSpecifier';\nvar NAMED_TYPE_RE = /^(([^.<>]+)\\.)?([^<>]+)$/;\n\nvar NamedTypeSpecifier = /*#__PURE__*/function () {\n  function NamedTypeSpecifier(name, namespace) {\n    _classCallCheck(this, NamedTypeSpecifier);\n\n    this._name = name;\n    this._namespace = namespace;\n  }\n\n  _createClass(NamedTypeSpecifier, [{\n    key: \"isNamed\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"namespace\",\n    get: function get() {\n      return this._namespace;\n    }\n  }, {\n    key: \"fqn\",\n    get: function get() {\n      return this.namespace == null ? this.name : \"\".concat(this.namespace, \".\").concat(this.name);\n    }\n  }]);\n\n  return NamedTypeSpecifier;\n}();\n\nvar LIST_TYPE_NAME = 'ListTypeSpecifier';\nvar LIST_TYPE_RE = /^[Ll]ist\\s*<\\s*(.*[^\\s])\\s*>$/;\n\nvar ListTypeSpecifier = /*#__PURE__*/function () {\n  function ListTypeSpecifier(elementType) {\n    _classCallCheck(this, ListTypeSpecifier);\n\n    this._elementType = elementType;\n  }\n\n  _createClass(ListTypeSpecifier, [{\n    key: \"isList\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"elementType\",\n    get: function get() {\n      return this._elementType;\n    }\n  }]);\n\n  return ListTypeSpecifier;\n}();\n\nvar INTERVAL_TYPE_NAME = 'IntervalTypeSpecifier';\nvar INTERVAL_TYPE_RE = /^[Ii]nterval\\s*<\\s*(.*[^\\s])\\s*>$/;\n\nvar IntervalTypeSpecifier = /*#__PURE__*/function () {\n  function IntervalTypeSpecifier(pointType) {\n    _classCallCheck(this, IntervalTypeSpecifier);\n\n    this._pointType = pointType;\n  }\n\n  _createClass(IntervalTypeSpecifier, [{\n    key: \"isInterval\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"pointType\",\n    get: function get() {\n      return this._pointType;\n    }\n  }]);\n\n  return IntervalTypeSpecifier;\n}();\n\nvar CHOICE_TYPE_NAME = 'ChoiceTypeSpecifier';\nvar CHOICE_TYPE_RE = /^[Cc]hoice\\s*<\\s*(.*[^\\s])\\s*>$/;\n\nvar ChoiceTypeSpecifier = /*#__PURE__*/function () {\n  function ChoiceTypeSpecifier(choices) {\n    _classCallCheck(this, ChoiceTypeSpecifier);\n\n    this._choices = choices;\n  }\n\n  _createClass(ChoiceTypeSpecifier, [{\n    key: \"isChoice\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"choices\",\n    get: function get() {\n      return this._choices;\n    }\n  }]);\n\n  return ChoiceTypeSpecifier;\n}();\n\nfunction getTypeSpecifierFromXML(xml) {\n  var type, typeSpecifier; // loop through prefixes looking for type property (e.g., type, elementType, pointType, etc.)\n\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n\n  if (xml.$) {\n    for (var i = 0; type == null && i < prefixes.length; i++) {\n      type = prefixes[i] === '' ? stripNS(xml.$.type) : stripNS(xml.$[\"\".concat(prefixes[i], \"Type\")]);\n    }\n  } // loop through prefixes looking for typeSpecifier property (e.g., typeSpecifier, elementTypeSpecifier, etc.)\n\n\n  for (var _i = 0; typeSpecifier == null && _i < prefixes.length; _i++) {\n    typeSpecifier = prefixes[_i] === '' ? xml.typeSpecifier : xml[\"\".concat(prefixes[_i], \"TypeSpecifier\")];\n  }\n\n  if (typeSpecifier && typeSpecifier.length > 0) {\n    typeSpecifier = typeSpecifier[0];\n  }\n\n  return getTypeSpecifier(type, typeSpecifier);\n}\n\nfunction getTypeSpecifier(stringType, xmlTypeSpecifier) {\n  // NamedTypeSpecifier\n  if (stringType && NAMED_TYPE_RE.test(stringType)) {\n    var m = NAMED_TYPE_RE.exec(stringType);\n    return new NamedTypeSpecifier(m[3], m[2]);\n  } else if (xmlTypeSpecifier && stripNS(xmlTypeSpecifier.$.type) === NAMED_TYPE_NAME) {\n    var name = xmlTypeSpecifier.$.name;\n    var namespace = xmlTypeSpecifier.$.modelName || xmlTypeSpecifier.$.namespace;\n    return new NamedTypeSpecifier(name, namespace);\n  } // ListTypeSpecifier\n  else if (stringType && LIST_TYPE_RE.test(stringType)) {\n    var _m = LIST_TYPE_RE.exec(stringType);\n\n    return new ListTypeSpecifier(getTypeSpecifier(_m[1]));\n  } else if (xmlTypeSpecifier && stripNS(xmlTypeSpecifier.$.type) === LIST_TYPE_NAME) {\n    return new ListTypeSpecifier(getTypeSpecifierFromXML(xmlTypeSpecifier, 'element'));\n  } // IntervalTypeSpecifier\n  else if (stringType && INTERVAL_TYPE_RE.test(stringType)) {\n    var _m2 = INTERVAL_TYPE_RE.exec(stringType);\n\n    return new IntervalTypeSpecifier(getTypeSpecifier(_m2[1]));\n  } else if (xmlTypeSpecifier && stripNS(xmlTypeSpecifier.$.type) === INTERVAL_TYPE_NAME) {\n    return new IntervalTypeSpecifier(getTypeSpecifierFromXML(xmlTypeSpecifier, 'point'));\n  } // ChoiceTypeSpecifier\n  else if (stringType && CHOICE_TYPE_RE.test(stringType)) {\n    // NOTE: The string type attribute variant does not support choices nested in choices\n    var _m3 = INTERVAL_TYPE_RE.exec(stringType);\n\n    var choiceStrings = _m3[1].split(',').map(function (c) {\n      return c.trim();\n    });\n\n    var choices = choiceStrings.map(function (c) {\n      return getTypeSpecifier(c);\n    });\n    return new ChoiceTypeSpecifier(choices);\n  } else if (xmlTypeSpecifier && stripNS(xmlTypeSpecifier.$.type) === CHOICE_TYPE_NAME) {\n    var _choices = xmlTypeSpecifier.choice.map(function (c) {\n      return getTypeSpecifier(null, c);\n    });\n\n    return new ChoiceTypeSpecifier(_choices);\n  }\n\n  return;\n}\n\nfunction stripNS(str) {\n  if (str == null) {\n    return str;\n  }\n\n  return str.replace(/.*:/, '');\n}\n\nmodule.exports = load;","\"use strict\";// This file exists so that these FHIR modelinfos can also be used in a browser where Node's 'fs' module isn't\n// available.\nmodule.exports=\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<modelInfo xmlns=\\\"urn:hl7-org:elm-modelinfo:r1\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" name=\\\"FHIR\\\" version=\\\"4.0.1\\\" url=\\\"http://hl7.org/fhir\\\" targetQualifier=\\\"fhir\\\" patientClassName=\\\"FHIR.Patient\\\" patientBirthDatePropertyName=\\\"birthDate.value\\\">\\n   <requiredModelInfo name=\\\"System\\\" version=\\\"1.0.0\\\"/>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Account\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Account\\\" label=\\\"Account\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.AccountStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"servicePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"coverage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Account.Coverage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"owner\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"guarantor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Account.Guarantor\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Account.Coverage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"coverage\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Account.Guarantor\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"party\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"onHold\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AccountStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActionCardinalityBehavior\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActionConditionKind\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActionGroupingBehavior\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActionParticipantType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActionPrecheckBehavior\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActionRelationshipType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActionRequiredBehavior\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActionSelectionBehavior\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ActivityDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ActivityDefinition\\\" label=\\\"ActivityDefinition\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"topic\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"usage\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"library\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.ActivityDefinitionKind\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.RequestIntent\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.RequestPriority\\\"/>\\n      <element name=\\\"doNotPerform\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"timing\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"participant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ActivityDefinition.Participant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"product\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"dosage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Dosage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specimenRequirement\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"observationRequirement\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"observationResultRequirement\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"transform\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"dynamicValue\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ActivityDefinition.DynamicValue\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ActivityDefinition.DynamicValue\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.Expression\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ActivityDefinition.Participant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ActivityParticipantType\\\"/>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActivityDefinitionKind\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ActivityParticipantType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Address\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Address\\\" label=\\\"Address\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.AddressUse\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.AddressType\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"line\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"city\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"district\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"state\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"postalCode\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"country\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AddressType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AddressUse\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AdministrativeGender\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"AdverseEvent\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/AdverseEvent\\\" label=\\\"AdverseEvent\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"event\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"actuality\\\" elementType=\\\"FHIR.AdverseEventActuality\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"event\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"detected\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"recordedDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"resultingCondition\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"seriousness\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"severity\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"recorder\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"contributor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"suspectEntity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.AdverseEvent.SuspectEntity\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subjectMedicalHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"referenceDocument\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"study\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"recorder\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"recorder\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"AdverseEvent.SuspectEntity\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"instance\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"causality\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.AdverseEvent.SuspectEntity.Causality\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"AdverseEvent.SuspectEntity.Causality\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"assessment\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productRelatedness\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AdverseEventActuality\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Quantity\\\" namespace=\\\"FHIR\\\" name=\\\"Age\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Age\\\" label=\\\"Age\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AggregationMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"AllergyIntolerance\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/AllergyIntolerance\\\" label=\\\"AllergyIntolerance\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"clinicalStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"verificationStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.AllergyIntoleranceType\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.AllergyIntoleranceCategory\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"criticality\\\" elementType=\\\"FHIR.AllergyIntoleranceCriticality\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"onset\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"recordedDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"recorder\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"asserter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"lastOccurrence\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reaction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.AllergyIntolerance.Reaction\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"recorder\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"asserter\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"recorder\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"asserter\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"asserter\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"AllergyIntolerance.Reaction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"substance\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"manifestation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"onset\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"severity\\\" elementType=\\\"FHIR.AllergyIntoleranceSeverity\\\"/>\\n      <element name=\\\"exposureRoute\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AllergyIntoleranceCategory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AllergyIntoleranceCriticality\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AllergyIntoleranceSeverity\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AllergyIntoleranceType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Annotation\\\" label=\\\"Annotation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"time\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Appointment\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Appointment\\\" label=\\\"Appointment\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"serviceType\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.AppointmentStatus\\\"/>\\n      <element name=\\\"cancelationReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"serviceCategory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviceType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"appointmentType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"supportingInformation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"minutesDuration\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"slot\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"patientInstruction\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"participant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Appointment.Participant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"requestedPeriod\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Period\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"actor\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Appointment.Participant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"required\\\" elementType=\\\"FHIR.ParticipantRequired\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ParticipationStatus\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"AppointmentResponse\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/AppointmentResponse\\\" label=\\\"AppointmentResponse\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"appointment\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"participantType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"participantStatus\\\" elementType=\\\"FHIR.ParticipantStatus\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"actor\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AppointmentStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AssertionDirectionType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AssertionOperatorType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AssertionResponseTypes\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Attachment\\\" label=\\\"Attachment\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"contentType\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"data\\\" elementType=\\\"FHIR.base64Binary\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.url\\\"/>\\n      <element name=\\\"size\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"hash\\\" elementType=\\\"FHIR.base64Binary\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"creation\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEvent\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/AuditEvent\\\" label=\\\"AuditEvent\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"subtype\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"action\\\" elementType=\\\"FHIR.AuditEventAction\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"recorded\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.AuditEventOutcome\\\"/>\\n      <element name=\\\"outcomeDesc\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"purposeOfEvent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"agent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.AuditEvent.Agent\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.AuditEvent.Source\\\"/>\\n      <element name=\\\"entity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.AuditEvent.Entity\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"who\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"where(resolve() is Patient)\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"who\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEvent.Agent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"role\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"who\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"altId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"requestor\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"policy\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"media\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"network\\\" elementType=\\\"FHIR.AuditEvent.Agent.Network\\\"/>\\n      <element name=\\\"purposeOfUse\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEvent.Agent.Network\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"address\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.AuditEventAgentNetworkType\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEvent.Entity\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"what\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"lifecycle\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"securityLabel\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"query\\\" elementType=\\\"FHIR.base64Binary\\\"/>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.AuditEvent.Entity.Detail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEvent.Entity.Detail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEvent.Source\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"site\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"observer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEventAction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEventAgentNetworkType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"AuditEventOutcome\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"BackboneElement\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/BackboneElement\\\" label=\\\"BackboneElement\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"modifierExtension\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Extension\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Basic\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Basic\\\" label=\\\"Basic\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"where(resolve() is Patient)\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"author\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Resource\\\" namespace=\\\"FHIR\\\" name=\\\"Binary\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Binary\\\" label=\\\"Binary\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"contentType\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"securityContext\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"data\\\" elementType=\\\"FHIR.base64Binary\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"BindingStrength\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"BiologicallyDerivedProduct\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProduct\\\" label=\\\"BiologicallyDerivedProduct\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"productCategory\\\" elementType=\\\"FHIR.BiologicallyDerivedProductCategory\\\"/>\\n      <element name=\\\"productCode\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.BiologicallyDerivedProductStatus\\\"/>\\n      <element name=\\\"request\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"parent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"collection\\\" elementType=\\\"FHIR.BiologicallyDerivedProduct.Collection\\\"/>\\n      <element name=\\\"processing\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.BiologicallyDerivedProduct.Processing\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"manipulation\\\" elementType=\\\"FHIR.BiologicallyDerivedProduct.Manipulation\\\"/>\\n      <element name=\\\"storage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.BiologicallyDerivedProduct.Storage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"BiologicallyDerivedProduct.Collection\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"collector\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"collected\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"BiologicallyDerivedProduct.Manipulation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"time\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"BiologicallyDerivedProduct.Processing\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"procedure\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"additive\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"time\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"BiologicallyDerivedProduct.Storage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"temperature\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"scale\\\" elementType=\\\"FHIR.BiologicallyDerivedProductStorageScale\\\"/>\\n      <element name=\\\"duration\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"BiologicallyDerivedProductCategory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"BiologicallyDerivedProductStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"BiologicallyDerivedProductStorageScale\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"BodyStructure\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/BodyStructure\\\" label=\\\"BodyStructure\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"location\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"morphology\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"locationQualifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"image\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Attachment\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Resource\\\" namespace=\\\"FHIR\\\" name=\\\"Bundle\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Bundle\\\" label=\\\"Bundle\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.BundleType\\\"/>\\n      <element name=\\\"timestamp\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"total\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"link\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Bundle.Link\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"entry\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Bundle.Entry\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"signature\\\" elementType=\\\"FHIR.Signature\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Bundle.Entry\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"link\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Bundle.Link\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"fullUrl\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"resource\\\" elementType=\\\"FHIR.Resource\\\"/>\\n      <element name=\\\"search\\\" elementType=\\\"FHIR.Bundle.Entry.Search\\\"/>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.Bundle.Entry.Request\\\"/>\\n      <element name=\\\"response\\\" elementType=\\\"FHIR.Bundle.Entry.Response\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Bundle.Entry.Request\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.HTTPVerb\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"ifNoneMatch\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"ifModifiedSince\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"ifMatch\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"ifNoneExist\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Bundle.Entry.Response\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"etag\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"lastModified\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.Resource\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Bundle.Entry.Search\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.SearchEntryMode\\\"/>\\n      <element name=\\\"score\\\" elementType=\\\"FHIR.decimal\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Bundle.Link\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"relation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"BundleType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CapabilityStatement\\\" label=\\\"CapabilityStatement\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.CapabilityStatementKind\\\"/>\\n      <element name=\\\"instantiates\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"imports\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"software\\\" elementType=\\\"FHIR.CapabilityStatement.Software\\\"/>\\n      <element name=\\\"implementation\\\" elementType=\\\"FHIR.CapabilityStatement.Implementation\\\"/>\\n      <element name=\\\"fhirVersion\\\" elementType=\\\"FHIR.FHIRVersion\\\"/>\\n      <element name=\\\"format\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MimeType\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patchFormat\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MimeType\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"implementationGuide\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"rest\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Rest\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"messaging\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Messaging\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"document\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Document\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Document\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.DocumentMode\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Implementation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.url\\\"/>\\n      <element name=\\\"custodian\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Messaging\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Messaging.Endpoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reliableCache\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"supportedMessage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Messaging.SupportedMessage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Messaging.Endpoint\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"protocol\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"address\\\" elementType=\\\"FHIR.url\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Messaging.SupportedMessage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.EventCapabilityMode\\\"/>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.RestfulCapabilityMode\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"security\\\" elementType=\\\"FHIR.CapabilityStatement.Rest.Security\\\"/>\\n      <element name=\\\"resource\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Rest.Resource\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"interaction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Rest.Interaction\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"searchParam\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest.Resource.SearchParam\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"operation\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest.Resource.Operation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"compartment\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest.Interaction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.SystemRestfulInteraction\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest.Resource\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ResourceType\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"supportedProfile\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"interaction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Rest.Resource.Interaction\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"versioning\\\" elementType=\\\"FHIR.ResourceVersionPolicy\\\"/>\\n      <element name=\\\"readHistory\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"updateCreate\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"conditionalCreate\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"conditionalRead\\\" elementType=\\\"FHIR.ConditionalReadStatus\\\"/>\\n      <element name=\\\"conditionalUpdate\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"conditionalDelete\\\" elementType=\\\"FHIR.ConditionalDeleteStatus\\\"/>\\n      <element name=\\\"referencePolicy\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ReferenceHandlingPolicy\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"searchInclude\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"searchRevInclude\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"searchParam\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Rest.Resource.SearchParam\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"operation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CapabilityStatement.Rest.Resource.Operation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest.Resource.Interaction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.TypeRestfulInteraction\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest.Resource.Operation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest.Resource.SearchParam\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.SearchParamType\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Rest.Security\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"cors\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"service\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatement.Software\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"releaseDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CapabilityStatementKind\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CarePlan\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CarePlan\\\" label=\\\"CarePlan\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"category\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"replaces\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CarePlanStatus\\\"/>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.CarePlanIntent\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"contributor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"careTeam\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"addresses\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingInfo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"goal\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"activity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CarePlan.Activity\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"performer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CarePlan.Activity\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"outcomeCodeableConcept\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"outcomeReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"progress\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"detail\\\" elementType=\\\"FHIR.CarePlan.Activity.Detail\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CarePlan.Activity.Detail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.CarePlanActivityKind\\\"/>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"goal\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CarePlanActivityStatus\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"doNotPerform\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"scheduled\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"product\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"dailyAmount\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CarePlanActivityKind\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CarePlanActivityStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CarePlanIntent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CarePlanStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CareTeam\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CareTeam\\\" label=\\\"CareTeam\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"category\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CareTeamStatus\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"participant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CareTeam.Participant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"managingOrganization\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"member\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"member\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"member\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CareTeam.Participant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"role\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"member\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"onBehalfOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CareTeamStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CatalogEntry\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CatalogEntry\\\" label=\\\"CatalogEntry\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"orderable\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"referencedItem\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"additionalIdentifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"classification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"validityPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"validTo\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"lastUpdated\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"additionalCharacteristic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"additionalClassification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedEntry\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CatalogEntry.RelatedEntry\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CatalogEntry.RelatedEntry\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"relationtype\\\" elementType=\\\"FHIR.CatalogEntryRelationType\\\"/>\\n      <element name=\\\"item\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CatalogEntryRelationType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ChargeItem\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ChargeItem\\\" label=\\\"ChargeItem\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"definitionUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"definitionCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ChargeItemStatus\\\"/>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ChargeItem.Performer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"performingOrganization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"requestingOrganization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"costCenter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"bodysite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"factorOverride\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"priceOverride\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"overrideReason\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"enterer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"enteredDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"reason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"service\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"product\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"account\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingInformation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"enterer\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"context\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"enterer\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"enterer\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"actor\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ChargeItem.Performer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"function\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ChargeItemDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ChargeItemDefinition\\\" label=\\\"ChargeItemDefinition\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"derivedFromUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"replaces\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"instance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"applicability\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ChargeItemDefinition.Applicability\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"propertyGroup\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ChargeItemDefinition.PropertyGroup\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ChargeItemDefinition.Applicability\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ChargeItemDefinition.PropertyGroup\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"applicability\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ChargeItemDefinition.Applicability\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"priceComponent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ChargeItemDefinition.PropertyGroup.PriceComponent\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ChargeItemDefinition.PropertyGroup.PriceComponent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ChargeItemDefinitionPriceComponentType\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ChargeItemDefinitionPriceComponentType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ChargeItemStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Claim\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Claim\\\" label=\\\"Claim\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ClaimStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.Use\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"billablePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"enterer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"insurer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"fundsReserve\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"related\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.Related\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"prescription\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"originalPrescription\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"payee\\\" elementType=\\\"FHIR.Claim.Payee\\\"/>\\n      <element name=\\\"referral\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"facility\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"careTeam\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.CareTeam\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingInfo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.SupportingInfo\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"diagnosis\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.Diagnosis\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"procedure\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.Procedure\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.Insurance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"accident\\\" elementType=\\\"FHIR.Claim.Accident\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.Item\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"total\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"enterer\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"provider\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"party\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"provider\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"party\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"udi\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"udi\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"udi\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"udi\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"party\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Accident\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.CareTeam\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"responsible\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"qualification\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Diagnosis\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"diagnosis\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"onAdmission\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"packageCode\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Insurance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"focal\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"coverage\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"businessArrangement\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"preAuthRef\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"claimResponse\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Item\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"careTeamSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"diagnosisSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"procedureSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"informationSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"revenue\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviced\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"udi\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subSite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"encounter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.Item.Detail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Item.Detail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"revenue\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"udi\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subDetail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Claim.Item.Detail.SubDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Item.Detail.SubDetail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"revenue\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"udi\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Payee\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"party\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Procedure\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"procedure\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"udi\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.Related\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"claim\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"relationship\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Claim.SupportingInfo\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"timing\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"reason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ClaimResponse\\\" label=\\\"ClaimResponse\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ClaimResponseStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.Use\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"insurer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"requestor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.RemittanceOutcome\\\"/>\\n      <element name=\\\"disposition\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"preAuthRef\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"preAuthPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"payeeType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.Item\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"addItem\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.AddItem\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"total\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.Total\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"payment\\\" elementType=\\\"FHIR.ClaimResponse.Payment\\\"/>\\n      <element name=\\\"fundsReserve\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"formCode\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"form\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"processNote\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.ProcessNote\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"communicationRequest\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.Insurance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"error\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.Error\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"requestor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.AddItem\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"itemSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detailSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subdetailSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"provider\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviced\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subSite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.AddItem.Detail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.AddItem.Detail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subDetail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.AddItem.Detail.SubDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.AddItem.Detail.SubDetail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Error\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"itemSequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"detailSequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"subDetailSequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Insurance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"focal\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"coverage\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"businessArrangement\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"claimResponse\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"itemSequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.Item.Adjudication\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.Item.Detail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Adjudication\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.decimal\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Detail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"detailSequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subDetail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClaimResponse.Item.Detail.SubDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Detail.SubDetail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"subDetailSequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Payment\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"adjustment\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"adjustmentReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.ProcessNote\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"number\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.NoteType\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponse.Total\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimResponseStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ClaimStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ClinicalImpression\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ClinicalImpression\\\" label=\\\"ClinicalImpression\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ClinicalImpressionStatus\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"effective\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"assessor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"previous\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"problem\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"investigation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClinicalImpression.Investigation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"protocol\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"summary\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"finding\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ClinicalImpression.Finding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"prognosisCodeableConcept\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"prognosisReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingInfo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"assessor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClinicalImpression.Finding\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"itemCodeableConcept\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"itemReference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"basis\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ClinicalImpression.Investigation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ClinicalImpressionStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSearchSupport\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSystem\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CodeSystem\\\" label=\\\"CodeSystem\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"caseSensitive\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"valueSet\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"hierarchyMeaning\\\" elementType=\\\"FHIR.CodeSystemHierarchyMeaning\\\"/>\\n      <element name=\\\"compositional\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"versionNeeded\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"content\\\" elementType=\\\"FHIR.CodeSystemContentMode\\\"/>\\n      <element name=\\\"supplements\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"count\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"filter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeSystem.Filter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"property\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeSystem.Property\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"concept\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeSystem.Concept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSystem.Concept\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"designation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeSystem.Concept.Designation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"property\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeSystem.Concept.Property\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"concept\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"CodeSystem.Concept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSystem.Concept.Designation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSystem.Concept.Property\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSystem.Filter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"operator\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.FilterOperator\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSystem.Property\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"uri\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.PropertyType\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSystemContentMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CodeSystemHierarchyMeaning\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CodeableConcept\\\" label=\\\"CodeableConcept\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"coding\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Coding\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Coding\\\" label=\\\"Coding\\\" retrievable=\\\"false\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"userSelected\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Communication\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Communication\\\" label=\\\"Communication\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"category\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"inResponseTo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CommunicationStatus\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.CommunicationPriority\\\"/>\\n      <element name=\\\"medium\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"topic\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"about\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"sent\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"received\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"recipient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"sender\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"payload\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Communication.Payload\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"sender\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"sender\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"sender\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"sender\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"recipient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Communication.Payload\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"content\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CommunicationPriority\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CommunicationRequest\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CommunicationRequest\\\" label=\\\"CommunicationRequest\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"category\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"replaces\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"groupIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CommunicationRequestStatus\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.CommunicationPriority\\\"/>\\n      <element name=\\\"doNotPerform\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"medium\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"about\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"payload\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CommunicationRequest.Payload\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"authoredOn\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"requester\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"recipient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"sender\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"sender\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"sender\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"sender\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"sender\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"requester\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CommunicationRequest.Payload\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"content\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CommunicationRequestStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CommunicationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CompartmentCode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CompartmentDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CompartmentDefinition\\\" label=\\\"CompartmentDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CompartmentType\\\"/>\\n      <element name=\\\"search\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"resource\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CompartmentDefinition.Resource\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CompartmentDefinition.Resource\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.ResourceType\\\"/>\\n      <element name=\\\"param\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CompartmentType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Composition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Composition\\\" label=\\\"Composition\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CompositionStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"confidentiality\\\" elementType=\\\"FHIR.DocumentConfidentiality\\\"/>\\n      <element name=\\\"attester\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Composition.Attester\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"custodian\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"relatesTo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Composition.RelatesTo\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"event\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Composition.Event\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"section\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Composition.Section\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"party\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"party\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"author\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Composition.Attester\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.CompositionAttestationMode\\\"/>\\n      <element name=\\\"time\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"party\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Composition.Event\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Composition.RelatesTo\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.DocumentRelationshipType\\\"/>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Composition.Section\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"focus\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.Narrative\\\"/>\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.SectionMode\\\"/>\\n      <element name=\\\"orderedBy\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"entry\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"emptyReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"section\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Composition.Section\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CompositionAttestationMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CompositionStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ConceptMap\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ConceptMap\\\" label=\\\"ConceptMap\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"group\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ConceptMap.Group\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ConceptMap.Group\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"sourceVersion\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"target\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"targetVersion\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"element\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ConceptMap.Group.Element\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"unmapped\\\" elementType=\\\"FHIR.ConceptMap.Group.Unmapped\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ConceptMap.Group.Element\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ConceptMap.Group.Element.Target\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ConceptMap.Group.Element.Target\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"equivalence\\\" elementType=\\\"FHIR.ConceptMapEquivalence\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"dependsOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ConceptMap.Group.Element.Target.DependsOn\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"product\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ConceptMap.Group.Element.Target.DependsOn\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ConceptMap.Group.Element.Target.DependsOn\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"property\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ConceptMap.Group.Unmapped\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.ConceptMapGroupUnmappedMode\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ConceptMapEquivalence\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ConceptMapGroupUnmappedMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Condition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Condition\\\" label=\\\"Condition\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"clinicalStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"verificationStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"severity\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"bodySite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"onset\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"abatement\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"recordedDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"recorder\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"asserter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"stage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Condition.Stage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"evidence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Condition.Evidence\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"asserter\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"asserter\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"asserter\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Condition.Evidence\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Condition.Stage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"summary\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"assessment\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ConditionalDeleteStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ConditionalReadStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Consent\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Consent\\\" label=\\\"Consent\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"category\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ConsentState\\\"/>\\n      <element name=\\\"scope\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"dateTime\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"organization\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"policy\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Consent.Policy\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"policyRule\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"verification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Consent.Verification\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"provision\\\" elementType=\\\"FHIR.Consent.Provision\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Consent.Policy\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"authority\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"uri\\\" elementType=\\\"FHIR.uri\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Consent.Provision\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ConsentProvisionType\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"actor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Consent.Provision.Actor\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"securityLabel\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"class\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dataPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"data\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Consent.Provision.Data\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"provision\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Consent.Provision\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Consent.Provision.Actor\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Consent.Provision.Data\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"meaning\\\" elementType=\\\"FHIR.ConsentDataMeaning\\\"/>\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Consent.Verification\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"verified\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"verifiedWith\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"verificationDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ConsentDataMeaning\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ConsentProvisionType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ConsentState\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ConstraintSeverity\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ContactDetail\\\" label=\\\"ContactDetail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ContactPoint\\\" label=\\\"ContactPoint\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.ContactPointSystem\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.ContactPointUse\\\"/>\\n      <element name=\\\"rank\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ContactPointSystem\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ContactPointUse\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Contract\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Contract\\\" label=\\\"Contract\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ContractStatus\\\"/>\\n      <element name=\\\"legalState\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"instantiatesCanonical\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"instantiatesUri\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"contentDerivative\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"issued\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"applies\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"expirationType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"authority\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"domain\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"site\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"alias\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"scope\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"contentDefinition\\\" elementType=\\\"FHIR.Contract.ContentDefinition\\\"/>\\n      <element name=\\\"term\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingInfo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relevantHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"signer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Signer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"friendly\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Friendly\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"legal\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Legal\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"rule\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Rule\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"legallyBinding\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.ContentDefinition\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"publicationDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publicationStatus\\\" elementType=\\\"FHIR.ContractPublicationStatus\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Friendly\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"content\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Legal\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"content\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Rule\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"content\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Signer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"party\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"signature\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Signature\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"issued\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"applies\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"securityLabel\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term.SecurityLabel\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"offer\\\" elementType=\\\"FHIR.Contract.Term.Offer\\\"/>\\n      <element name=\\\"asset\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term.Asset\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"group\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Contract.Term\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"doNotPerform\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term.Action.Subject\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"linkId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"contextLinkId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"requester\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"requesterLinkId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"performerType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"performerRole\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"performer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performerLinkId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonLinkId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"securityLabelNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.unsignedInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Action.Subject\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"reference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Asset\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"scope\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"typeReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subtype\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relationship\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"context\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term.Asset.Context\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"condition\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"periodType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Period\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"usePeriod\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Period\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"linkId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"answer\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Offer.Answer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"securityLabelNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.unsignedInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"valuedItem\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term.Asset.ValuedItem\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Asset.Context\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Asset.ValuedItem\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"entity\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"effectiveTime\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"points\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"payment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"paymentDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"responsible\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"recipient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"linkId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"securityLabelNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.unsignedInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Offer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"party\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term.Offer.Party\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"topic\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"decision\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"decisionMode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"answer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Contract.Term.Offer.Answer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"linkId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"securityLabelNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.unsignedInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Offer.Answer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.Offer.Party\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"reference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Contract.Term.SecurityLabel\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"number\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.unsignedInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"classification\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"control\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ContractPublicationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ContractStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Contributor\\\" label=\\\"Contributor\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ContributorType\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ContributorType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Quantity\\\" namespace=\\\"FHIR\\\" name=\\\"Count\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Count\\\" label=\\\"Count\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Coverage\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Coverage\\\" label=\\\"Coverage\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CoverageStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"policyHolder\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"subscriber\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"subscriberId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"beneficiary\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"dependent\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"relationship\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"payor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"class\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coverage.Class\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"order\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"network\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"costToBeneficiary\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coverage.CostToBeneficiary\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subrogation\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"contract\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"policyHolder\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subscriber\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"beneficiary\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"payor\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"policyHolder\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"subscriber\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"payor\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Coverage.Class\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Coverage.CostToBeneficiary\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"exception\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coverage.CostToBeneficiary.Exception\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Coverage.CostToBeneficiary.Exception\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityRequest\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CoverageEligibilityRequest\\\" label=\\\"CoverageEligibilityRequest\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EligibilityRequestStatus\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"purpose\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EligibilityRequestPurpose\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"serviced\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"enterer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"insurer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"facility\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"supportingInfo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CoverageEligibilityRequest.SupportingInfo\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CoverageEligibilityRequest.Insurance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CoverageEligibilityRequest.Item\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"enterer\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"provider\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityRequest.Insurance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"focal\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"coverage\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"businessArrangement\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityRequest.Item\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"supportingInfoSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"facility\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"diagnosis\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CoverageEligibilityRequest.Item.Diagnosis\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityRequest.Item.Diagnosis\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"diagnosis\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityRequest.SupportingInfo\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"information\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"appliesToAll\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityResponse\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/CoverageEligibilityResponse\\\" label=\\\"CoverageEligibilityResponse\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EligibilityResponseStatus\\\"/>\\n      <element name=\\\"purpose\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EligibilityResponsePurpose\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"serviced\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"requestor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.RemittanceOutcome\\\"/>\\n      <element name=\\\"disposition\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"insurer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CoverageEligibilityResponse.Insurance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"preAuthRef\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"form\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"error\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CoverageEligibilityResponse.Error\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"requestor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityResponse.Error\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityResponse.Insurance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"coverage\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"inforce\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"benefitPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CoverageEligibilityResponse.Insurance.Item\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityResponse.Insurance.Item\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"excluded\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"network\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"unit\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"term\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"benefit\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CoverageEligibilityResponse.Insurance.Item.Benefit\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"authorizationRequired\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"authorizationSupporting\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"authorizationUrl\\\" elementType=\\\"FHIR.uri\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageEligibilityResponse.Insurance.Item.Benefit\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"allowed\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"used\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CoverageStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"CurrencyCode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DataRequirement\\\" label=\\\"DataRequirement\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.FHIRAllTypes\\\"/>\\n      <element name=\\\"profile\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"mustSupport\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"codeFilter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DataRequirement.CodeFilter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dateFilter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DataRequirement.DateFilter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"limit\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"sort\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DataRequirement.Sort\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DataRequirement.CodeFilter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"searchParam\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"valueSet\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DataRequirement.DateFilter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"searchParam\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DataRequirement.Sort\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"direction\\\" elementType=\\\"FHIR.SortDirection\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DayOfWeek\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DaysOfWeek\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"DetectedIssue\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DetectedIssue\\\" label=\\\"DetectedIssue\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.DetectedIssueStatus\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"severity\\\" elementType=\\\"FHIR.DetectedIssueSeverity\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"identified\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"implicated\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"evidence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DetectedIssue.Evidence\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detail\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"mitigation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DetectedIssue.Mitigation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"author\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DetectedIssue.Evidence\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DetectedIssue.Mitigation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"action\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DetectedIssueSeverity\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DetectedIssueStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Device\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Device\\\" label=\\\"Device\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"udiCarrier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Device.UdiCarrier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.FHIRDeviceStatus\\\"/>\\n      <element name=\\\"statusReason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"distinctIdentifier\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"manufacturer\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"manufactureDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"expirationDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"lotNumber\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"serialNumber\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"deviceName\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Device.DeviceName\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"modelNumber\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"partNumber\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"specialization\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Device.Specialization\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Device.Version\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"property\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Device.Property\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"owner\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"safety\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"parent\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Device.DeviceName\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.DeviceNameType\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Device.Property\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"valueQuantity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Quantity\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"valueCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Device.Specialization\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"systemType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Device.UdiCarrier\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"deviceIdentifier\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"issuer\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"jurisdiction\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"carrierAIDC\\\" elementType=\\\"FHIR.base64Binary\\\"/>\\n      <element name=\\\"carrierHRF\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"entryType\\\" elementType=\\\"FHIR.UDIEntryType\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Device.Version\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"component\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DeviceDefinition\\\" label=\\\"DeviceDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"udiDeviceIdentifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DeviceDefinition.UdiDeviceIdentifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"manufacturer\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"deviceName\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DeviceDefinition.DeviceName\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"modelNumber\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"specialization\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DeviceDefinition.Specialization\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"safety\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"shelfLifeStorage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ProductShelfLife\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"physicalCharacteristics\\\" elementType=\\\"FHIR.ProdCharacteristic\\\"/>\\n      <element name=\\\"languageCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"capability\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DeviceDefinition.Capability\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"property\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DeviceDefinition.Property\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"owner\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"onlineInformation\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"parentDevice\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"material\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DeviceDefinition.Material\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceDefinition.Capability\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceDefinition.DeviceName\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.DeviceNameType\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceDefinition.Material\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"substance\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"alternate\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"allergenicIndicator\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceDefinition.Property\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"valueQuantity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Quantity\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"valueCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceDefinition.Specialization\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"systemType\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceDefinition.UdiDeviceIdentifier\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"deviceIdentifier\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"issuer\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"jurisdiction\\\" elementType=\\\"FHIR.uri\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceMetric\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DeviceMetric\\\" label=\\\"DeviceMetric\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"unit\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"parent\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"operationalStatus\\\" elementType=\\\"FHIR.DeviceMetricOperationalStatus\\\"/>\\n      <element name=\\\"color\\\" elementType=\\\"FHIR.DeviceMetricColor\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.DeviceMetricCategory\\\"/>\\n      <element name=\\\"measurementPeriod\\\" elementType=\\\"FHIR.Timing\\\"/>\\n      <element name=\\\"calibration\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DeviceMetric.Calibration\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceMetric.Calibration\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.DeviceMetricCalibrationType\\\"/>\\n      <element name=\\\"state\\\" elementType=\\\"FHIR.DeviceMetricCalibrationState\\\"/>\\n      <element name=\\\"time\\\" elementType=\\\"FHIR.instant\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceMetricCalibrationState\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceMetricCalibrationType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceMetricCategory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceMetricColor\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceMetricOperationalStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceNameType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceRequest\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DeviceRequest\\\" label=\\\"DeviceRequest\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"priorRequest\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"groupIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.DeviceRequestStatus\\\"/>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.RequestIntent\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.RequestPriority\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DeviceRequest.Parameter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"authoredOn\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"requester\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performerType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"performer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingInfo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relevantHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"code as Reference)\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"performer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceRequest.Parameter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceRequestStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceUseStatement\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DeviceUseStatement\\\" label=\\\"DeviceUseStatement\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"device.code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.DeviceUseStatementStatus\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"derivedFrom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"timing\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"recordedOn\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"device\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"device\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DeviceUseStatementStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"DiagnosticReport\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DiagnosticReport\\\" label=\\\"DiagnosticReport\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.DiagnosticReportStatus\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"effective\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"issued\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"resultsInterpreter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specimen\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"result\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"imagingStudy\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"media\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DiagnosticReport.Media\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"conclusion\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"conclusionCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"presentedForm\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Attachment\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DiagnosticReport.Media\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"link\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DiagnosticReportStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DiscriminatorType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Quantity\\\" namespace=\\\"FHIR\\\" name=\\\"Distance\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Distance\\\" label=\\\"Distance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentConfidentiality\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentManifest\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DocumentManifest\\\" label=\\\"DocumentManifest\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"masterIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.DocumentReferenceStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"recipient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"content\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"related\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DocumentManifest.Related\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"ref\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"recipient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentManifest.Related\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"ref\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentReference\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DocumentReference\\\" label=\\\"DocumentReference\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"masterIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.DocumentReferenceStatus\\\"/>\\n      <element name=\\\"docStatus\\\" elementType=\\\"FHIR.ReferredDocumentStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"authenticator\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"custodian\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"relatesTo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DocumentReference.RelatesTo\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"securityLabel\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"content\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DocumentReference.Content\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.DocumentReference.Context\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"authenticator\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"author\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentReference.Content\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"attachment\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"format\\\" elementType=\\\"FHIR.Coding\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentReference.Context\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"encounter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"event\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"facilityType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"practiceSetting\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"sourcePatientInfo\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"related\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentReference.RelatesTo\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.DocumentRelationshipType\\\"/>\\n      <element name=\\\"target\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentReferenceStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"DocumentRelationshipType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Resource\\\" namespace=\\\"FHIR\\\" name=\\\"DomainResource\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/DomainResource\\\" label=\\\"DomainResource\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.Narrative\\\"/>\\n      <element name=\\\"contained\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Resource\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"extension\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Extension\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"modifierExtension\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Extension\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Dosage\\\" label=\\\"Dosage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"additionalInstruction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patientInstruction\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"timing\\\" elementType=\\\"FHIR.Timing\\\"/>\\n      <element name=\\\"asNeeded\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"site\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"route\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"doseAndRate\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Dosage.DoseAndRate\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"maxDosePerPeriod\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"maxDosePerAdministration\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"maxDosePerLifetime\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Dosage.DoseAndRate\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"dose\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"rate\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Quantity\\\" namespace=\\\"FHIR\\\" name=\\\"Duration\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Duration\\\" label=\\\"Duration\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"EffectEvidenceSynthesis\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/EffectEvidenceSynthesis\\\" label=\\\"EffectEvidenceSynthesis\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"synthesisType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"studyType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"population\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"exposure\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"exposureAlternative\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"sampleSize\\\" elementType=\\\"FHIR.EffectEvidenceSynthesis.SampleSize\\\"/>\\n      <element name=\\\"resultsByExposure\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EffectEvidenceSynthesis.ResultsByExposure\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"effectEstimate\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EffectEvidenceSynthesis.EffectEstimate\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"certainty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EffectEvidenceSynthesis.Certainty\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EffectEvidenceSynthesis.Certainty\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"rating\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"certaintySubcomponent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EffectEvidenceSynthesis.Certainty.CertaintySubcomponent\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EffectEvidenceSynthesis.Certainty.CertaintySubcomponent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"rating\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EffectEvidenceSynthesis.EffectEstimate\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"variantState\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"unitOfMeasure\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"precisionEstimate\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EffectEvidenceSynthesis.EffectEstimate.PrecisionEstimate\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EffectEvidenceSynthesis.EffectEstimate.PrecisionEstimate\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"level\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"from\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"to\\\" elementType=\\\"FHIR.decimal\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EffectEvidenceSynthesis.ResultsByExposure\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"exposureState\\\" elementType=\\\"FHIR.ExposureState\\\"/>\\n      <element name=\\\"variantState\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"riskEvidenceSynthesis\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EffectEvidenceSynthesis.SampleSize\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"numberOfStudies\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"numberOfParticipants\\\" elementType=\\\"FHIR.integer\\\"/>\\n   </typeInfo>\\n   <typeInfo namespace=\\\"FHIR\\\" name=\\\"Element\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Element\\\" label=\\\"Element\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\" baseType=\\\"System.Any\\\">\\n      <element name=\\\"id\\\" elementType=\\\"System.String\\\"/>\\n      <element name=\\\"extension\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Extension\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ElementDefinition\\\" label=\\\"ElementDefinition\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"representation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PropertyRepresentation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"sliceName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"sliceIsConstraining\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"label\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"slicing\\\" elementType=\\\"FHIR.ElementDefinition.Slicing\\\"/>\\n      <element name=\\\"short\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"requirements\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"alias\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"min\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"max\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"base\\\" elementType=\\\"FHIR.ElementDefinition.Base\\\"/>\\n      <element name=\\\"contentReference\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ElementDefinition.Type\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"defaultValue\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"meaningWhenMissing\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"orderMeaning\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"fixed\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"pattern\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"example\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ElementDefinition.Example\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"minValue\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"maxValue\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"maxLength\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"condition\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.id\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"constraint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ElementDefinition.Constraint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"mustSupport\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"isModifier\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"isModifierReason\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"isSummary\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"binding\\\" elementType=\\\"FHIR.ElementDefinition.Binding\\\"/>\\n      <element name=\\\"mapping\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ElementDefinition.Mapping\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition.Base\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"min\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"max\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition.Binding\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"strength\\\" elementType=\\\"FHIR.BindingStrength\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"valueSet\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition.Constraint\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"key\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"requirements\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"severity\\\" elementType=\\\"FHIR.ConstraintSeverity\\\"/>\\n      <element name=\\\"human\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"xpath\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition.Example\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"label\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition.Mapping\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identity\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"map\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition.Slicing\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"discriminator\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ElementDefinition.Slicing.Discriminator\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"ordered\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"rules\\\" elementType=\\\"FHIR.SlicingRules\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition.Slicing.Discriminator\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.DiscriminatorType\\\"/>\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ElementDefinition.Type\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"targetProfile\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"versioning\\\" elementType=\\\"FHIR.ReferenceVersionRules\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EligibilityRequestPurpose\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EligibilityRequestStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EligibilityResponsePurpose\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EligibilityResponseStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EnableWhenBehavior\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Encounter\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Encounter\\\" label=\\\"Encounter\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EncounterStatus\\\"/>\\n      <element name=\\\"statusHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Encounter.StatusHistory\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"class\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"classHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Encounter.ClassHistory\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviceType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"episodeOfCare\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"participant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Encounter.Participant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"appointment\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"length\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"diagnosis\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Encounter.Diagnosis\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"account\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"hospitalization\\\" elementType=\\\"FHIR.Encounter.Hospitalization\\\"/>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Encounter.Location\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviceProvider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"partOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"where(resolve() is Practitioner)\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"individual\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"individual\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Encounter.ClassHistory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"class\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Encounter.Diagnosis\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"condition\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"rank\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Encounter.Hospitalization\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"preAdmissionIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"origin\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"admitSource\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reAdmission\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"dietPreference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialCourtesy\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialArrangement\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"destination\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"dischargeDisposition\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Encounter.Location\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EncounterLocationStatus\\\"/>\\n      <element name=\\\"physicalType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Encounter.Participant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"individual\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Encounter.StatusHistory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EncounterStatus\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EncounterLocationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EncounterStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Endpoint\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Endpoint\\\" label=\\\"Endpoint\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EndpointStatus\\\"/>\\n      <element name=\\\"connectionType\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"managingOrganization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"payloadType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"payloadMimeType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MimeType\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"address\\\" elementType=\\\"FHIR.url\\\"/>\\n      <element name=\\\"header\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EndpointStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"EnrollmentRequest\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/EnrollmentRequest\\\" label=\\\"EnrollmentRequest\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EnrollmentRequestStatus\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"insurer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"candidate\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"coverage\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"candidate\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EnrollmentRequestStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"EnrollmentResponse\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/EnrollmentResponse\\\" label=\\\"EnrollmentResponse\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EnrollmentResponseStatus\\\"/>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.RemittanceOutcome\\\"/>\\n      <element name=\\\"disposition\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"organization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"requestProvider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EnrollmentResponseStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"EpisodeOfCare\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/EpisodeOfCare\\\" label=\\\"EpisodeOfCare\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EpisodeOfCareStatus\\\"/>\\n      <element name=\\\"statusHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EpisodeOfCare.StatusHistory\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"diagnosis\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EpisodeOfCare.Diagnosis\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"managingOrganization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"referralRequest\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"careManager\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"team\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"account\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"where(resolve() is Practitioner)\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EpisodeOfCare.Diagnosis\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"condition\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"rank\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EpisodeOfCare.StatusHistory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.EpisodeOfCareStatus\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EpisodeOfCareStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EventCapabilityMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"EventDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/EventDefinition\\\" label=\\\"EventDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"usage\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"trigger\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TriggerDefinition\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EventTiming\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Evidence\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Evidence\\\" label=\\\"Evidence\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"shortTitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"exposureBackground\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"exposureVariant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"outcome\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"EvidenceVariable\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/EvidenceVariable\\\" label=\\\"EvidenceVariable\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"shortTitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.EvidenceVariableType\\\"/>\\n      <element name=\\\"characteristic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EvidenceVariable.Characteristic\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"EvidenceVariable.Characteristic\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"definition\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"usageContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"exclude\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"participantEffective\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"timeFromStart\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"groupMeasure\\\" elementType=\\\"FHIR.GroupMeasure\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"EvidenceVariableType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ExampleScenario\\\" label=\\\"ExampleScenario\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"actor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExampleScenario.Actor\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExampleScenario.Instance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"process\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExampleScenario.Process\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"workflow\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Actor\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"actorId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ExampleScenarioActorType\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Instance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"resourceId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"resourceType\\\" elementType=\\\"FHIR.FHIRResourceType\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"version\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExampleScenario.Instance.Version\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"containedInstance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExampleScenario.Instance.ContainedInstance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Instance.ContainedInstance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"resourceId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"versionId\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Instance.Version\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"versionId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Process\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"preConditions\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"postConditions\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"step\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExampleScenario.Process.Step\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Process.Step\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"process\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Process\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"pause\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"operation\\\" elementType=\\\"FHIR.ExampleScenario.Process.Step.Operation\\\"/>\\n      <element name=\\\"alternative\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExampleScenario.Process.Step.Alternative\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Process.Step.Alternative\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"step\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Process.Step\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenario.Process.Step.Operation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"number\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"initiator\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"receiver\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"initiatorActive\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"receiverActive\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.ExampleScenario.Instance.ContainedInstance\\\"/>\\n      <element name=\\\"response\\\" elementType=\\\"FHIR.ExampleScenario.Instance.ContainedInstance\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ExampleScenarioActorType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit\\\" label=\\\"ExplanationOfBenefit\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ExplanationOfBenefitStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.Use\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"billablePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"enterer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"insurer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"fundsReserveRequested\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"fundsReserve\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"related\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Related\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"prescription\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"originalPrescription\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"payee\\\" elementType=\\\"FHIR.ExplanationOfBenefit.Payee\\\"/>\\n      <element name=\\\"referral\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"facility\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"claim\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"claimResponse\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.RemittanceOutcome\\\"/>\\n      <element name=\\\"disposition\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"preAuthRef\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"preAuthRefPeriod\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Period\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"careTeam\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.CareTeam\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingInfo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.SupportingInfo\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"diagnosis\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Diagnosis\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"procedure\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Procedure\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"precedence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Insurance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"accident\\\" elementType=\\\"FHIR.ExplanationOfBenefit.Accident\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Item\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"addItem\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.AddItem\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"total\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Total\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"payment\\\" elementType=\\\"FHIR.ExplanationOfBenefit.Payment\\\"/>\\n      <element name=\\\"formCode\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"form\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"processNote\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.ProcessNote\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"benefitPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"benefitBalance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.BenefitBalance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"enterer\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"provider\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"party\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"provider\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"party\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"udi\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"udi\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"udi\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"udi\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"party\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Accident\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.AddItem\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"itemSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detailSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subDetailSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"provider\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviced\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subSite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.AddItem.Detail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.AddItem.Detail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subDetail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.AddItem.Detail.SubDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.AddItem.Detail.SubDetail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.BenefitBalance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"excluded\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"network\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"unit\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"term\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"financial\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.BenefitBalance.Financial\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.BenefitBalance.Financial\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"allowed\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"used\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.CareTeam\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"responsible\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"qualification\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Diagnosis\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"diagnosis\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"onAdmission\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"packageCode\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Insurance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"focal\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"coverage\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"preAuthRef\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"careTeamSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"diagnosisSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"procedureSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"informationSequence\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"revenue\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviced\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"udi\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subSite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"encounter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Item.Adjudication\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Item.Detail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Adjudication\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.decimal\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Detail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"revenue\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"udi\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subDetail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ExplanationOfBenefit.Item.Detail.SubDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Detail.SubDetail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"revenue\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productOrService\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"unitPrice\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"net\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"udi\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"noteNumber\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.positiveInt\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"adjudication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Item.Adjudication\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Payee\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"party\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Payment\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"adjustment\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"adjustmentReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Procedure\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"procedure\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"udi\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.ProcessNote\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"number\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.NoteType\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Related\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"claim\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"relationship\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.SupportingInfo\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"timing\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"reason\\\" elementType=\\\"FHIR.Coding\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefit.Total\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ExplanationOfBenefitStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ExposureState\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Expression\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Expression\\\" label=\\\"Expression\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.uri\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Extension\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Extension\\\" label=\\\"Extension\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ExtensionContextType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FHIRAllTypes\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FHIRDefinedType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FHIRDeviceStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FHIRResourceType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FHIRSubstanceStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FHIRVersion\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FamilyHistoryStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"FamilyMemberHistory\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/FamilyMemberHistory\\\" label=\\\"FamilyMemberHistory\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.FamilyHistoryStatus\\\"/>\\n      <element name=\\\"dataAbsentReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"relationship\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"sex\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"born\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"age\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"estimatedAge\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"deceased\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"condition\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.FamilyMemberHistory.Condition\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"FamilyMemberHistory.Condition\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"contributedToDeath\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"onset\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FilterOperator\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Flag\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Flag\\\" label=\\\"Flag\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.FlagStatus\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"author\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"FlagStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Goal\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Goal\\\" label=\\\"Goal\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"category\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"lifecycleStatus\\\" elementType=\\\"FHIR.GoalLifecycleStatus\\\"/>\\n      <element name=\\\"achievementStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"start\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Goal.Target\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"statusDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"expressedBy\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"addresses\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"outcomeCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"outcomeReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Goal.Target\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"measure\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"due\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"GoalLifecycleStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"GraphCompartmentRule\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"GraphCompartmentUse\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"GraphDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/GraphDefinition\\\" label=\\\"GraphDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.ResourceType\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"link\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.GraphDefinition.Link\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"GraphDefinition.Link\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"sliceName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"min\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"max\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.GraphDefinition.Link.Target\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"GraphDefinition.Link.Target\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ResourceType\\\"/>\\n      <element name=\\\"params\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"compartment\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.GraphDefinition.Link.Target.Compartment\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"link\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"GraphDefinition.Link\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"GraphDefinition.Link.Target.Compartment\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.GraphCompartmentUse\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CompartmentCode\\\"/>\\n      <element name=\\\"rule\\\" elementType=\\\"FHIR.GraphCompartmentRule\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Group\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Group\\\" label=\\\"Group\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.GroupType\\\"/>\\n      <element name=\\\"actual\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"managingEntity\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"characteristic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Group.Characteristic\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"member\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Group.Member\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"entity\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"entity\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"entity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Group.Characteristic\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"exclude\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Group.Member\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"entity\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"inactive\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"GroupMeasure\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"GroupType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"GuidanceResponse\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/GuidanceResponse\\\" label=\\\"GuidanceResponse\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"module\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"requestIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"module\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.GuidanceResponseStatus\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"occurrenceDateTime\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"performer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"evaluationMessage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"outputParameters\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"result\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"dataRequirement\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DataRequirement\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"GuidanceResponseStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"GuidePageGeneration\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"GuideParameterCode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"HTTPVerb\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"HealthcareService\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/HealthcareService\\\" label=\\\"HealthcareService\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"providedBy\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"extraDetails\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"photo\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"coverageArea\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviceProvisionCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"eligibility\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.HealthcareService.Eligibility\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"program\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"characteristic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"communication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"referralMethod\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"appointmentRequired\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"availableTime\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.HealthcareService.AvailableTime\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"notAvailable\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.HealthcareService.NotAvailable\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"availabilityExceptions\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"HealthcareService.AvailableTime\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"daysOfWeek\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DaysOfWeek\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"allDay\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"availableStartTime\\\" elementType=\\\"FHIR.time\\\"/>\\n      <element name=\\\"availableEndTime\\\" elementType=\\\"FHIR.time\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"HealthcareService.Eligibility\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"HealthcareService.NotAvailable\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"during\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/HumanName\\\" label=\\\"HumanName\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.NameUse\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"family\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"given\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"prefix\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"suffix\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Identifier\\\" label=\\\"Identifier\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.IdentifierUse\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"assigner\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"IdentifierUse\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"IdentityAssuranceLevel\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ImagingStudy\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ImagingStudy\\\" label=\\\"ImagingStudy\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ImagingStudyStatus\\\"/>\\n      <element name=\\\"modality\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"started\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"referrer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"interpreter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"numberOfSeries\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"numberOfInstances\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"procedureReference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"procedureCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"series\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImagingStudy.Series\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImagingStudy.Series\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"uid\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"number\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"modality\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"numberOfInstances\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"laterality\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"specimen\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"started\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImagingStudy.Series.Performer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImagingStudy.Series.Instance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImagingStudy.Series.Instance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"uid\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"sopClass\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"number\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImagingStudy.Series.Performer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"function\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ImagingStudyStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Immunization\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Immunization\\\" label=\\\"Immunization\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"vaccineCode\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ImmunizationStatus\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"vaccineCode\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"recorded\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"primarySource\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"reportOrigin\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"manufacturer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"lotNumber\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"expirationDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"site\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"route\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"doseQuantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Immunization.Performer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"isSubpotent\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"subpotentReason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"education\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Immunization.Education\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"programEligibility\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"fundingSource\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reaction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Immunization.Reaction\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"protocolApplied\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Immunization.ProtocolApplied\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Immunization.Education\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"documentType\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"publicationDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"presentationDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Immunization.Performer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"function\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Immunization.ProtocolApplied\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"series\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"authority\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"targetDisease\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"doseNumber\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"seriesDoses\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Immunization.Reaction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"detail\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reported\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ImmunizationEvaluation\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ImmunizationEvaluation\\\" label=\\\"ImmunizationEvaluation\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ImmunizationEvaluationStatus\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"authority\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"targetDisease\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"immunizationEvent\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"doseStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"doseStatusReason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"series\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"doseNumber\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"seriesDoses\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ImmunizationEvaluationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ImmunizationRecommendation\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation\\\" label=\\\"ImmunizationRecommendation\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"authority\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"recommendation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImmunizationRecommendation.Recommendation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImmunizationRecommendation.Recommendation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"vaccineCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"targetDisease\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"contraindicatedVaccineCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"forecastStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"forecastReason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dateCriterion\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImmunizationRecommendation.Recommendation.DateCriterion\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"series\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"doseNumber\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"seriesDoses\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"supportingImmunization\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingPatientInformation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImmunizationRecommendation.Recommendation.DateCriterion\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ImmunizationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ImplementationGuide\\\" label=\\\"ImplementationGuide\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"packageId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"license\\\" elementType=\\\"FHIR.SPDXLicense\\\"/>\\n      <element name=\\\"fhirVersion\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.FHIRVersion\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dependsOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImplementationGuide.DependsOn\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"global\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImplementationGuide.Global\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.ImplementationGuide.Definition\\\"/>\\n      <element name=\\\"manifest\\\" elementType=\\\"FHIR.ImplementationGuide.Manifest\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Definition\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"grouping\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImplementationGuide.Definition.Grouping\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"resource\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImplementationGuide.Definition.Resource\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"page\\\" elementType=\\\"FHIR.ImplementationGuide.Definition.Page\\\"/>\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImplementationGuide.Definition.Parameter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"template\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImplementationGuide.Definition.Template\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Definition.Grouping\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Definition.Page\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"generation\\\" elementType=\\\"FHIR.GuidePageGeneration\\\"/>\\n      <element name=\\\"page\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Definition.Page\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Definition.Parameter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.GuideParameterCode\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Definition.Resource\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"fhirVersion\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.FHIRVersion\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"example\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"groupingId\\\" elementType=\\\"FHIR.id\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Definition.Template\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"scope\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.DependsOn\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"uri\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"packageId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Global\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ResourceType\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Manifest\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"rendering\\\" elementType=\\\"FHIR.url\\\"/>\\n      <element name=\\\"resource\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImplementationGuide.Manifest.Resource\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"page\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ImplementationGuide.Manifest.Page\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"image\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"other\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Manifest.Page\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"anchor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ImplementationGuide.Manifest.Resource\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"example\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"relativePath\\\" elementType=\\\"FHIR.url\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/InsurancePlan\\\" label=\\\"InsurancePlan\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"alias\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"ownedBy\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"administeredBy\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"coverageArea\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Contact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"network\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"coverage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Coverage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"plan\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Plan\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Contact\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.HumanName\\\"/>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"address\\\" elementType=\\\"FHIR.Address\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Coverage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"network\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"benefit\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Coverage.Benefit\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Coverage.Benefit\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"requirement\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"limit\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Coverage.Benefit.Limit\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Coverage.Benefit.Limit\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Plan\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"coverageArea\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"network\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"generalCost\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Plan.GeneralCost\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specificCost\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Plan.SpecificCost\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Plan.GeneralCost\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"groupSize\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"cost\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Plan.SpecificCost\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"benefit\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Plan.SpecificCost.Benefit\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Plan.SpecificCost.Benefit\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"cost\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.InsurancePlan.Plan.SpecificCost.Benefit.Cost\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"InsurancePlan.Plan.SpecificCost.Benefit.Cost\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"applicability\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"qualifiers\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Invoice\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Invoice\\\" label=\\\"Invoice\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.InvoiceStatus\\\"/>\\n      <element name=\\\"cancelledReason\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"recipient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"participant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Invoice.Participant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"issuer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"account\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"lineItem\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Invoice.LineItem\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"totalPriceComponent\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Invoice.LineItem.PriceComponent\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"totalNet\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"totalGross\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"paymentTerms\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"where(resolve() is Patient)\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"recipient\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"recipient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Invoice.LineItem\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"chargeItem\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"priceComponent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Invoice.LineItem.PriceComponent\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Invoice.LineItem.PriceComponent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.InvoicePriceComponentType\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Invoice.Participant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"InvoicePriceComponentType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"InvoiceStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"IssueSeverity\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"IssueType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Library\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Library\\\" label=\\\"Library\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"topic\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"usage\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ParameterDefinition\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dataRequirement\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DataRequirement\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"content\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Attachment\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"LinkType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Linkage\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Linkage\\\" label=\\\"Linkage\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Linkage.Item\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Linkage.Item\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.LinkageType\\\"/>\\n      <element name=\\\"resource\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"LinkageType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"List\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/List\\\" label=\\\"List\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ListStatus\\\"/>\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.ListMode\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"orderedBy\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"entry\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.List.Entry\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"emptyReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"source\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"source\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"source\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"List.Entry\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"flag\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"deleted\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"item\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ListMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ListStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Location\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Location\\\" label=\\\"Location\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.LocationStatus\\\"/>\\n      <element name=\\\"operationalStatus\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"alias\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.LocationMode\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"address\\\" elementType=\\\"FHIR.Address\\\"/>\\n      <element name=\\\"physicalType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"position\\\" elementType=\\\"FHIR.Location.Position\\\"/>\\n      <element name=\\\"managingOrganization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"partOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"hoursOfOperation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Location.HoursOfOperation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"availabilityExceptions\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Location.HoursOfOperation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"daysOfWeek\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DaysOfWeek\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"allDay\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"openingTime\\\" elementType=\\\"FHIR.time\\\"/>\\n      <element name=\\\"closingTime\\\" elementType=\\\"FHIR.time\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Location.Position\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"longitude\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"latitude\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"altitude\\\" elementType=\\\"FHIR.decimal\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"LocationMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"LocationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MarketingStatus\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MarketingStatus\\\" label=\\\"MarketingStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"country\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"jurisdiction\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"dateRange\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"restoreDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Measure\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Measure\\\" label=\\\"Measure\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"topic\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"usage\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"library\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"disclaimer\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"scoring\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"compositeScoring\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"riskAdjustment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"rateAggregation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"rationale\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"clinicalRecommendationStatement\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"improvementNotation\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"definition\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.markdown\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"guidance\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"group\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Measure.Group\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supplementalData\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Measure.SupplementalData\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Measure.Group\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"population\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Measure.Group.Population\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"stratifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Measure.Group.Stratifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Measure.Group.Population\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"criteria\\\" elementType=\\\"FHIR.Expression\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Measure.Group.Stratifier\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"criteria\\\" elementType=\\\"FHIR.Expression\\\"/>\\n      <element name=\\\"component\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Measure.Group.Stratifier.Component\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Measure.Group.Stratifier.Component\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"criteria\\\" elementType=\\\"FHIR.Expression\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Measure.SupplementalData\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"usage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"criteria\\\" elementType=\\\"FHIR.Expression\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReport\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MeasureReport\\\" label=\\\"MeasureReport\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"measure.topic\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.MeasureReportStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.MeasureReportType\\\"/>\\n      <element name=\\\"measure\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"reporter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"improvementNotation\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"group\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MeasureReport.Group\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"evaluatedResource\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"where(resolve() is Patient)\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReport.Group\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"population\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MeasureReport.Group.Population\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"measureScore\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"stratifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MeasureReport.Group.Stratifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReport.Group.Population\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"count\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"subjectResults\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReport.Group.Stratifier\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"stratum\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MeasureReport.Group.Stratifier.Stratum\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReport.Group.Stratifier.Stratum\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"component\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MeasureReport.Group.Stratifier.Stratum.Component\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"population\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MeasureReport.Group.Stratifier.Stratum.Population\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"measureScore\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReport.Group.Stratifier.Stratum.Component\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReport.Group.Stratifier.Stratum.Population\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"count\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"subjectResults\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReportStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MeasureReportType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Media\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Media\\\" label=\\\"Media\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.MediaStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"modality\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"view\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"created\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"issued\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"operator\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"deviceName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"device\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"height\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"width\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"frames\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"duration\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"content\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"operator\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MediaStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Medication\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Medication\\\" label=\\\"Medication\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.MedicationStatus\\\"/>\\n      <element name=\\\"manufacturer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"form\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"ingredient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Medication.Ingredient\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"batch\\\" elementType=\\\"FHIR.Medication.Batch\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Medication.Batch\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"lotNumber\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"expirationDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Medication.Ingredient\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"isActive\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"strength\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationAdministration\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicationAdministration\\\" label=\\\"MedicationAdministration\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"medication\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiates\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.MedicationAdministrationStatus\\\"/>\\n      <element name=\\\"statusReason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"medication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"supportingInformation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"effective\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationAdministration.Performer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"device\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dosage\\\" elementType=\\\"FHIR.MedicationAdministration.Dosage\\\"/>\\n      <element name=\\\"eventHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"context\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"device\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"actor\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationAdministration.Dosage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"site\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"route\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"dose\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"rate\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationAdministration.Performer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"function\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationAdministrationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationDispense\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicationDispense\\\" label=\\\"MedicationDispense\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"medication\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.MedicationDispenseStatus\\\"/>\\n      <element name=\\\"statusReason\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"medication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"supportingInformation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationDispense.Performer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"authorizingPrescription\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"daysSupply\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"whenPrepared\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"whenHandedOver\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"destination\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"receiver\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dosageInstruction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Dosage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"substitution\\\" elementType=\\\"FHIR.MedicationDispense.Substitution\\\"/>\\n      <element name=\\\"detectedIssue\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"eventHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"receiver\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"receiver\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationDispense.Performer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"function\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationDispense.Substitution\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"wasSubstituted\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"responsibleParty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationDispenseStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicationKnowledge\\\" label=\\\"MedicationKnowledge\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.MedicationKnowledgeStatus\\\"/>\\n      <element name=\\\"manufacturer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"doseForm\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"synonym\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedMedicationKnowledge\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.RelatedMedicationKnowledge\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"associatedMedication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"productType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"monograph\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.Monograph\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"ingredient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.Ingredient\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"preparationInstruction\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"intendedRoute\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"cost\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.Cost\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"monitoringProgram\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.MonitoringProgram\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"administrationGuidelines\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.AdministrationGuidelines\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"medicineClassification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.MedicineClassification\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"packaging\\\" elementType=\\\"FHIR.MedicationKnowledge.Packaging\\\"/>\\n      <element name=\\\"drugCharacteristic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.DrugCharacteristic\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"contraindication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"regulatory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.Regulatory\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"kinetics\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.Kinetics\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.AdministrationGuidelines\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"dosage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.AdministrationGuidelines.Dosage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"indication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"patientCharacteristics\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.AdministrationGuidelines.Dosage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"dosage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Dosage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"characteristic\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Cost\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"cost\\\" elementType=\\\"FHIR.Money\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.DrugCharacteristic\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Ingredient\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"isActive\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"strength\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Kinetics\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"areaUnderCurve\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SimpleQuantity\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"lethalDose50\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SimpleQuantity\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"halfLifePeriod\\\" elementType=\\\"FHIR.Duration\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.MedicineClassification\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"classification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.MonitoringProgram\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Monograph\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Packaging\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Regulatory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"regulatoryAuthority\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"substitution\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.Regulatory.Substitution\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"schedule\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicationKnowledge.Regulatory.Schedule\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"maxDispense\\\" elementType=\\\"FHIR.MedicationKnowledge.Regulatory.MaxDispense\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Regulatory.MaxDispense\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Duration\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Regulatory.Schedule\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"schedule\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.Regulatory.Substitution\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"allowed\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledge.RelatedMedicationKnowledge\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationKnowledgeStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationRequest\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicationRequest\\\" label=\\\"MedicationRequest\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"medication\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.MedicationRequestStatus\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.MedicationRequestIntent\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.MedicationRequestPriority\\\"/>\\n      <element name=\\\"doNotPerform\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"reported\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"medication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"supportingInformation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"authoredOn\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"requester\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performerType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"recorder\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"groupIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"courseOfTherapyType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dosageInstruction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Dosage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dispenseRequest\\\" elementType=\\\"FHIR.MedicationRequest.DispenseRequest\\\"/>\\n      <element name=\\\"substitution\\\" elementType=\\\"FHIR.MedicationRequest.Substitution\\\"/>\\n      <element name=\\\"priorPrescription\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"detectedIssue\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"eventHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationRequest.DispenseRequest\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"initialFill\\\" elementType=\\\"FHIR.MedicationRequest.DispenseRequest.InitialFill\\\"/>\\n      <element name=\\\"dispenseInterval\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"validityPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"numberOfRepeatsAllowed\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"expectedSupplyDuration\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"performer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationRequest.DispenseRequest.InitialFill\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"duration\\\" elementType=\\\"FHIR.Duration\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationRequest.Substitution\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"allowed\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"reason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationRequestIntent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationRequestPriority\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationRequestStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationStatement\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicationStatement\\\" label=\\\"MedicationStatement\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"medication\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.MedicationStatementStatus\\\"/>\\n      <element name=\\\"statusReason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"medication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"effective\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"dateAsserted\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"informationSource\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"derivedFrom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"dosage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Dosage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"informationSource\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"informationSource\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationStatementStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MedicationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProduct\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProduct\\\" label=\\\"MedicinalProduct\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"domain\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"combinedPharmaceuticalDoseForm\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"legalStatusOfSupply\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"additionalMonitoringIndicator\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"specialMeasures\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"paediatricUseIndicator\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productClassification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"marketingStatus\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MarketingStatus\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"pharmaceuticalProduct\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"packagedMedicinalProduct\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"attachedDocument\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"masterFile\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"clinicalTrial\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProduct.Name\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"crossReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"manufacturingBusinessOperation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProduct.ManufacturingBusinessOperation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialDesignation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProduct.SpecialDesignation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProduct.ManufacturingBusinessOperation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"operationType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"authorisationReferenceNumber\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"effectiveDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"confidentialityIndicator\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"manufacturer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"regulator\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProduct.Name\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"productName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"namePart\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProduct.Name.NamePart\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"countryLanguage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProduct.Name.CountryLanguage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProduct.Name.CountryLanguage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"country\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"jurisdiction\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProduct.Name.NamePart\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"part\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.Coding\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProduct.SpecialDesignation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"intendedUse\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"indication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"species\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductAuthorization\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductAuthorization\\\" label=\\\"MedicinalProductAuthorization\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"country\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"statusDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"restoreDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"validityPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"dataExclusivityPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"dateOfFirstAuthorization\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"internationalBirthDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"legalBasis\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"jurisdictionalAuthorization\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductAuthorization.JurisdictionalAuthorization\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"holder\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"regulator\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"procedure\\\" elementType=\\\"FHIR.MedicinalProductAuthorization.Procedure\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductAuthorization.JurisdictionalAuthorization\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"country\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"legalStatusOfSupply\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"validityPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductAuthorization.Procedure\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"date\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"application\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"MedicinalProductAuthorization.Procedure\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductContraindication\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductContraindication\\\" label=\\\"MedicinalProductContraindication\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"disease\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"diseaseStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"comorbidity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"therapeuticIndication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"otherTherapy\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductContraindication.OtherTherapy\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"population\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Population\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductContraindication.OtherTherapy\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"therapyRelationshipType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"medication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductIndication\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductIndication\\\" label=\\\"MedicinalProductIndication\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"diseaseSymptomProcedure\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"diseaseStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"comorbidity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"intendedEffect\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"duration\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"otherTherapy\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductIndication.OtherTherapy\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"undesirableEffect\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"population\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Population\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductIndication.OtherTherapy\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"therapyRelationshipType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"medication\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductIngredient\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductIngredient\\\" label=\\\"MedicinalProductIngredient\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"allergenicIndicator\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"manufacturer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specifiedSubstance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductIngredient.SpecifiedSubstance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"substance\\\" elementType=\\\"FHIR.MedicinalProductIngredient.Substance\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductIngredient.SpecifiedSubstance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"group\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"confidentiality\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"strength\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductIngredient.SpecifiedSubstance.Strength\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductIngredient.SpecifiedSubstance.Strength\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"presentation\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"presentationLowLimit\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"concentration\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"concentrationLowLimit\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"measurementPoint\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"country\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"referenceStrength\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductIngredient.SpecifiedSubstance.Strength.ReferenceStrength\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductIngredient.SpecifiedSubstance.Strength.ReferenceStrength\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"substance\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"strength\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"strengthLowLimit\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"measurementPoint\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"country\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductIngredient.Substance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"strength\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"MedicinalProductIngredient.SpecifiedSubstance.Strength\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductInteraction\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductInteraction\\\" label=\\\"MedicinalProductInteraction\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"interactant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductInteraction.Interactant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"effect\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"incidence\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"management\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductInteraction.Interactant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductManufactured\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductManufactured\\\" label=\\\"MedicinalProductManufactured\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"manufacturedDoseForm\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"unitOfPresentation\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"manufacturer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"ingredient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"physicalCharacteristics\\\" elementType=\\\"FHIR.ProdCharacteristic\\\"/>\\n      <element name=\\\"otherCharacteristics\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPackaged\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductPackaged\\\" label=\\\"MedicinalProductPackaged\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"legalStatusOfSupply\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"marketingStatus\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MarketingStatus\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"marketingAuthorization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"manufacturer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"batchIdentifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductPackaged.BatchIdentifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"packageItem\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductPackaged.PackageItem\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPackaged.BatchIdentifier\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"outerPackaging\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"immediatePackaging\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPackaged.PackageItem\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"material\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"alternateMaterial\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"device\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"manufacturedItem\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"packageItem\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPackaged.PackageItem\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"physicalCharacteristics\\\" elementType=\\\"FHIR.ProdCharacteristic\\\"/>\\n      <element name=\\\"otherCharacteristics\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"shelfLifeStorage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ProductShelfLife\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"manufacturer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPharmaceutical\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductPharmaceutical\\\" label=\\\"MedicinalProductPharmaceutical\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"administrableDoseForm\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"unitOfPresentation\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"ingredient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"device\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"characteristics\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductPharmaceutical.Characteristics\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"routeOfAdministration\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductPharmaceutical.RouteOfAdministration\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPharmaceutical.Characteristics\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPharmaceutical.RouteOfAdministration\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"firstDose\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"maxSingleDose\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"maxDosePerDay\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"maxDosePerTreatmentPeriod\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"maxTreatmentPeriod\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"targetSpecies\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"withdrawalPeriod\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies.WithdrawalPeriod\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies.WithdrawalPeriod\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"tissue\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"supportingInformation\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MedicinalProductUndesirableEffect\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MedicinalProductUndesirableEffect\\\" label=\\\"MedicinalProductUndesirableEffect\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"symptomConditionEffect\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"classification\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"frequencyOfOccurrence\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"population\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Population\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MessageDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MessageDefinition\\\" label=\\\"MessageDefinition\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"event\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"replaces\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"base\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"parent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"event\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.MessageSignificanceCategory\\\"/>\\n      <element name=\\\"focus\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MessageDefinition.Focus\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"responseRequired\\\" elementType=\\\"FHIR.Messageheader_Response_Request\\\"/>\\n      <element name=\\\"allowedResponse\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MessageDefinition.AllowedResponse\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"graph\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MessageDefinition.AllowedResponse\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"message\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"situation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MessageDefinition.Focus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.ResourceType\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"min\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n      <element name=\\\"max\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MessageHeader\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MessageHeader\\\" label=\\\"MessageHeader\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"event\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"destination\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MessageHeader.Destination\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"sender\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"enterer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.MessageHeader.Source\\\"/>\\n      <element name=\\\"responsible\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"response\\\" elementType=\\\"FHIR.MessageHeader.Response\\\"/>\\n      <element name=\\\"focus\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"receiver\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"responsible\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"enterer\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"target\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MessageHeader.Destination\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"target\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"endpoint\\\" elementType=\\\"FHIR.url\\\"/>\\n      <element name=\\\"receiver\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MessageHeader.Response\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.ResponseType\\\"/>\\n      <element name=\\\"details\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MessageHeader.Source\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"software\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\" elementType=\\\"FHIR.ContactPoint\\\"/>\\n      <element name=\\\"endpoint\\\" elementType=\\\"FHIR.url\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MessageSignificanceCategory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Messageheader_Response_Request\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Meta\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Meta\\\" label=\\\"Meta\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"versionId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"lastUpdated\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"profile\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"security\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"tag\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"MimeType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MolecularSequence\\\" label=\\\"MolecularSequence\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.SequenceType\\\"/>\\n      <element name=\\\"coordinateSystem\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"specimen\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"device\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"referenceSeq\\\" elementType=\\\"FHIR.MolecularSequence.ReferenceSeq\\\"/>\\n      <element name=\\\"variant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MolecularSequence.Variant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"observedSeq\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"quality\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MolecularSequence.Quality\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"readCoverage\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"repository\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MolecularSequence.Repository\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"pointer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"structureVariant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.MolecularSequence.StructureVariant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence.Quality\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.QualityType\\\"/>\\n      <element name=\\\"standardSequence\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"score\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"truthTP\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"queryTP\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"truthFN\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"queryFP\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"gtFP\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"precision\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"recall\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"fScore\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"roc\\\" elementType=\\\"FHIR.MolecularSequence.Quality.Roc\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence.Quality.Roc\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"score\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.integer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"numTP\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.integer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"numFP\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.integer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"numFN\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.integer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"precision\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.decimal\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"sensitivity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.decimal\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"fMeasure\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.decimal\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence.ReferenceSeq\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"chromosome\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"genomeBuild\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"orientation\\\" elementType=\\\"FHIR.OrientationType\\\"/>\\n      <element name=\\\"referenceSeqId\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"referenceSeqPointer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"referenceSeqString\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"strand\\\" elementType=\\\"FHIR.StrandType\\\"/>\\n      <element name=\\\"windowStart\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"windowEnd\\\" elementType=\\\"FHIR.integer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence.Repository\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.RepositoryType\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"datasetId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"variantsetId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"readsetId\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence.StructureVariant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"variantType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"exact\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"length\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"outer\\\" elementType=\\\"FHIR.MolecularSequence.StructureVariant.Outer\\\"/>\\n      <element name=\\\"inner\\\" elementType=\\\"FHIR.MolecularSequence.StructureVariant.Inner\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence.StructureVariant.Inner\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.integer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence.StructureVariant.Outer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.integer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"MolecularSequence.Variant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"observedAllele\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"referenceAllele\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"cigar\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"variantPointer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Money\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Money\\\" label=\\\"Money\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"currency\\\" elementType=\\\"FHIR.CurrencyCode\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Quantity\\\" namespace=\\\"FHIR\\\" name=\\\"MoneyQuantity\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/MoneyQuantity\\\" label=\\\"MoneyQuantity\\\" retrievable=\\\"false\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"comparator\\\" elementType=\\\"FHIR.QuantityComparator\\\"/>\\n      <element name=\\\"unit\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"NameUse\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"NamingSystem\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/NamingSystem\\\" label=\\\"NamingSystem\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.NamingSystemType\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"responsible\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"usage\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"uniqueId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.NamingSystem.UniqueId\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"NamingSystem.UniqueId\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.NamingSystemIdentifierType\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"preferred\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"NamingSystemIdentifierType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"NamingSystemType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Narrative\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Narrative\\\" label=\\\"Narrative\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.NarrativeStatus\\\"/>\\n      <element name=\\\"div\\\" elementType=\\\"FHIR.xhtml\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"NarrativeStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"NoteType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"NutritiionOrderIntent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"NutritionOrder\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/NutritionOrder\\\" label=\\\"NutritionOrder\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiates\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.NutritionOrderStatus\\\"/>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.NutritiionOrderIntent\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"dateTime\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"orderer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"allergyIntolerance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"foodPreferenceModifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"excludeFoodModifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"oralDiet\\\" elementType=\\\"FHIR.NutritionOrder.OralDiet\\\"/>\\n      <element name=\\\"supplement\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.NutritionOrder.Supplement\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"enteralFormula\\\" elementType=\\\"FHIR.NutritionOrder.EnteralFormula\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"orderer\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"NutritionOrder.EnteralFormula\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"baseFormulaType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"baseFormulaProductName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"additiveType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"additiveProductName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"caloricDensity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"routeofAdministration\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"administration\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.NutritionOrder.EnteralFormula.Administration\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"maxVolumeToDeliver\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"administrationInstruction\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"NutritionOrder.EnteralFormula.Administration\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"schedule\\\" elementType=\\\"FHIR.Timing\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"rate\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"NutritionOrder.OralDiet\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"schedule\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Timing\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"nutrient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.NutritionOrder.OralDiet.Nutrient\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"texture\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.NutritionOrder.OralDiet.Texture\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"fluidConsistencyType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instruction\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"NutritionOrder.OralDiet.Nutrient\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"modifier\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"NutritionOrder.OralDiet.Texture\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"modifier\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"foodType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"NutritionOrder.Supplement\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"productName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"schedule\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Timing\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"instruction\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"NutritionOrderStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Observation\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Observation\\\" label=\\\"Observation\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ObservationStatus\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"focus\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"effective\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"issued\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"dataAbsentReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"interpretation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"specimen\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"device\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"referenceRange\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Observation.ReferenceRange\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"hasMember\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"derivedFrom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"component\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Observation.Component\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"device\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"performer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Observation.Component\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"dataAbsentReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"interpretation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"referenceRange\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Observation.ReferenceRange\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Observation.ReferenceRange\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"low\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"high\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"appliesTo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"age\\\" elementType=\\\"FHIR.Range\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ObservationDataType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ObservationDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ObservationDefinition\\\" label=\\\"ObservationDefinition\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"permittedDataType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ObservationDataType\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"multipleResultsAllowed\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"preferredReportName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"quantitativeDetails\\\" elementType=\\\"FHIR.ObservationDefinition.QuantitativeDetails\\\"/>\\n      <element name=\\\"qualifiedInterval\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ObservationDefinition.QualifiedInterval\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"validCodedValueSet\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"normalCodedValueSet\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"abnormalCodedValueSet\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"criticalCodedValueSet\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ObservationDefinition.QualifiedInterval\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.ObservationRangeCategory\\\"/>\\n      <element name=\\\"range\\\" elementType=\\\"FHIR.Range\\\"/>\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"appliesTo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"gender\\\" elementType=\\\"FHIR.AdministrativeGender\\\"/>\\n      <element name=\\\"age\\\" elementType=\\\"FHIR.Range\\\"/>\\n      <element name=\\\"gestationalAge\\\" elementType=\\\"FHIR.Range\\\"/>\\n      <element name=\\\"condition\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ObservationDefinition.QuantitativeDetails\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"customaryUnit\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"unit\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"conversionFactor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"decimalPrecision\\\" elementType=\\\"FHIR.integer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ObservationRangeCategory\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ObservationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"OperationDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/OperationDefinition\\\" label=\\\"OperationDefinition\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.OperationKind\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"affectsState\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"base\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"resource\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ResourceType\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"instance\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"inputProfile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"outputProfile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.OperationDefinition.Parameter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"overload\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.OperationDefinition.Overload\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"OperationDefinition.Overload\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"parameterName\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"OperationDefinition.Parameter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.OperationParameterUse\\\"/>\\n      <element name=\\\"min\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"max\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.FHIRAllTypes\\\"/>\\n      <element name=\\\"targetProfile\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"searchType\\\" elementType=\\\"FHIR.SearchParamType\\\"/>\\n      <element name=\\\"binding\\\" elementType=\\\"FHIR.OperationDefinition.Parameter.Binding\\\"/>\\n      <element name=\\\"referencedFrom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.OperationDefinition.Parameter.ReferencedFrom\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"part\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"OperationDefinition.Parameter\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"OperationDefinition.Parameter.Binding\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"strength\\\" elementType=\\\"FHIR.BindingStrength\\\"/>\\n      <element name=\\\"valueSet\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"OperationDefinition.Parameter.ReferencedFrom\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"sourceId\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"OperationKind\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"OperationOutcome\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/OperationOutcome\\\" label=\\\"OperationOutcome\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"issue.code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"issue\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.OperationOutcome.Issue\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"OperationOutcome.Issue\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"severity\\\" elementType=\\\"FHIR.IssueSeverity\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.IssueType\\\"/>\\n      <element name=\\\"details\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"diagnostics\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"expression\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"OperationParameterUse\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Organization\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Organization\\\" label=\\\"Organization\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"alias\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"address\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Address\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Organization.Contact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Organization.Contact\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.HumanName\\\"/>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"address\\\" elementType=\\\"FHIR.Address\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"OrganizationAffiliation\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/OrganizationAffiliation\\\" label=\\\"OrganizationAffiliation\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"organization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"participatingOrganization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"network\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"healthcareService\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"OrientationType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ParameterDefinition\\\" label=\\\"ParameterDefinition\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.ParameterUse\\\"/>\\n      <element name=\\\"min\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"max\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.FHIRAllTypes\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ParameterUse\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Resource\\\" namespace=\\\"FHIR\\\" name=\\\"Parameters\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Parameters\\\" label=\\\"Parameters\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Parameters.Parameter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Parameters.Parameter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"resource\\\" elementType=\\\"FHIR.Resource\\\"/>\\n      <element name=\\\"part\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Parameters.Parameter\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ParticipantRequired\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ParticipantStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ParticipationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Patient\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Patient\\\" label=\\\"Patient\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"name\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.HumanName\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"gender\\\" elementType=\\\"FHIR.AdministrativeGender\\\"/>\\n      <element name=\\\"birthDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"deceased\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"address\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Address\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"maritalStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"multipleBirth\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"photo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Attachment\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Patient.Contact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"communication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Patient.Communication\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"generalPractitioner\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"managingOrganization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"link\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Patient.Link\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"generalPractitioner\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"other\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"other\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Patient.Communication\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"preferred\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Patient.Contact\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"relationship\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.HumanName\\\"/>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"address\\\" elementType=\\\"FHIR.Address\\\"/>\\n      <element name=\\\"gender\\\" elementType=\\\"FHIR.AdministrativeGender\\\"/>\\n      <element name=\\\"organization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Patient.Link\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"other\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.LinkType\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"PaymentNotice\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/PaymentNotice\\\" label=\\\"PaymentNotice\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PaymentNoticeStatus\\\"/>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"response\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"provider\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"payment\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"paymentDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"payee\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"recipient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"paymentStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"provider\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"PaymentNoticeStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"PaymentReconciliation\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/PaymentReconciliation\\\" label=\\\"PaymentReconciliation\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PaymentReconciliationStatus\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"paymentIssuer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"requestor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.RemittanceOutcome\\\"/>\\n      <element name=\\\"disposition\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"paymentDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"paymentAmount\\\" elementType=\\\"FHIR.Money\\\"/>\\n      <element name=\\\"paymentIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PaymentReconciliation.Detail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"formCode\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"processNote\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PaymentReconciliation.ProcessNote\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"requestor\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PaymentReconciliation.Detail\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"predecessor\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"request\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"submitter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"response\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"responsible\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"payee\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Money\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PaymentReconciliation.ProcessNote\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.NoteType\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"PaymentReconciliationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Period\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Period\\\" label=\\\"Period\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Person\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Person\\\" label=\\\"Person\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.HumanName\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"gender\\\" elementType=\\\"FHIR.AdministrativeGender\\\"/>\\n      <element name=\\\"birthDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"address\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Address\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"photo\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"managingOrganization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"link\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Person.Link\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"where(resolve() is Practitioner)\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"where(resolve() is Patient)\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"target\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Person.Link\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"target\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"assurance\\\" elementType=\\\"FHIR.IdentityAssuranceLevel\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"PlanDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/PlanDefinition\\\" label=\\\"PlanDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"usage\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"library\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"goal\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PlanDefinition.Goal\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PlanDefinition.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PlanDefinition.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"prefix\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"textEquivalent\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.RequestPriority\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"documentation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"goalId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.id\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"trigger\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TriggerDefinition\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"condition\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PlanDefinition.Action.Condition\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"input\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DataRequirement\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"output\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DataRequirement\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedAction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PlanDefinition.Action.RelatedAction\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"timing\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"participant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PlanDefinition.Action.Participant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"groupingBehavior\\\" elementType=\\\"FHIR.ActionGroupingBehavior\\\"/>\\n      <element name=\\\"selectionBehavior\\\" elementType=\\\"FHIR.ActionSelectionBehavior\\\"/>\\n      <element name=\\\"requiredBehavior\\\" elementType=\\\"FHIR.ActionRequiredBehavior\\\"/>\\n      <element name=\\\"precheckBehavior\\\" elementType=\\\"FHIR.ActionPrecheckBehavior\\\"/>\\n      <element name=\\\"cardinalityBehavior\\\" elementType=\\\"FHIR.ActionCardinalityBehavior\\\"/>\\n      <element name=\\\"definition\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"transform\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"dynamicValue\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PlanDefinition.Action.DynamicValue\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"PlanDefinition.Action\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PlanDefinition.Action.Condition\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.ActionConditionKind\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.Expression\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PlanDefinition.Action.DynamicValue\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.Expression\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PlanDefinition.Action.Participant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ActionParticipantType\\\"/>\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PlanDefinition.Action.RelatedAction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"actionId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"relationship\\\" elementType=\\\"FHIR.ActionRelationshipType\\\"/>\\n      <element name=\\\"offset\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PlanDefinition.Goal\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"addresses\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"documentation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PlanDefinition.Goal.Target\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PlanDefinition.Goal.Target\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"measure\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"detail\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"due\\\" elementType=\\\"FHIR.Duration\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Population\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Population\\\" label=\\\"Population\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"age\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"gender\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"race\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"physiologicalCondition\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Practitioner\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Practitioner\\\" label=\\\"Practitioner\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"name\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.HumanName\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"address\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Address\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"gender\\\" elementType=\\\"FHIR.AdministrativeGender\\\"/>\\n      <element name=\\\"birthDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"photo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Attachment\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"qualification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Practitioner.Qualification\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"communication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Practitioner.Qualification\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"issuer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"PractitionerRole\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/PractitionerRole\\\" label=\\\"PractitionerRole\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"practitioner\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"organization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"healthcareService\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"availableTime\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PractitionerRole.AvailableTime\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"notAvailable\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.PractitionerRole.NotAvailable\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"availabilityExceptions\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"endpoint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"practitioner\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PractitionerRole.AvailableTime\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"daysOfWeek\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DaysOfWeek\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"allDay\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"availableStartTime\\\" elementType=\\\"FHIR.time\\\"/>\\n      <element name=\\\"availableEndTime\\\" elementType=\\\"FHIR.time\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"PractitionerRole.NotAvailable\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"during\\\" elementType=\\\"FHIR.Period\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Procedure\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Procedure\\\" label=\\\"Procedure\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ProcedureStatus\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performed\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"recorder\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"asserter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Procedure.Performer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"report\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"complication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"complicationDetail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"followUp\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"focalDevice\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Procedure.FocalDevice\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"usedReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"usedCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"actor\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Procedure.FocalDevice\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"action\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"manipulated\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Procedure.Performer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"function\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"actor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"onBehalfOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ProcedureStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ProdCharacteristic\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ProdCharacteristic\\\" label=\\\"ProdCharacteristic\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"height\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"width\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"depth\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"weight\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"nominalVolume\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"externalDiameter\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"shape\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"color\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"imprint\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"image\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Attachment\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"scoring\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ProductShelfLife\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ProductShelfLife\\\" label=\\\"ProductShelfLife\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"specialPrecautionsForStorage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"PropertyRepresentation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"PropertyType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Provenance\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Provenance\\\" label=\\\"Provenance\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"occurred\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"recorded\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"policy\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reason\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"activity\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"agent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Provenance.Agent\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"entity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Provenance.Entity\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"signature\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Signature\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"who\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"where(resolve() is Patient)\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"who\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"who\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Provenance.Agent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"role\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"who\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"onBehalfOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Provenance.Entity\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.ProvenanceEntityRole\\\"/>\\n      <element name=\\\"what\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"agent\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Provenance.Agent\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ProvenanceEntityRole\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"PublicationStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"QualityType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Quantity\\\" label=\\\"Quantity\\\" retrievable=\\\"false\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"comparator\\\" elementType=\\\"FHIR.QuantityComparator\\\"/>\\n      <element name=\\\"unit\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"QuantityComparator\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Questionnaire\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Questionnaire\\\" label=\\\"Questionnaire\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"name\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"derivedFrom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"subjectType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ResourceType\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Questionnaire.Item\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Questionnaire.Item\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"linkId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"prefix\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.QuestionnaireItemType\\\"/>\\n      <element name=\\\"enableWhen\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Questionnaire.Item.EnableWhen\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"enableBehavior\\\" elementType=\\\"FHIR.EnableWhenBehavior\\\"/>\\n      <element name=\\\"required\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"repeats\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"readOnly\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"maxLength\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"answerValueSet\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"answerOption\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Questionnaire.Item.AnswerOption\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"initial\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Questionnaire.Item.Initial\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"Questionnaire.Item\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Questionnaire.Item.AnswerOption\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"initialSelected\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Questionnaire.Item.EnableWhen\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"question\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"operator\\\" elementType=\\\"FHIR.QuestionnaireItemOperator\\\"/>\\n      <element name=\\\"answer\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Questionnaire.Item.Initial\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"QuestionnaireItemOperator\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"QuestionnaireItemType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"QuestionnaireResponse\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse\\\" label=\\\"QuestionnaireResponse\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"questionnaire\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.QuestionnaireResponseStatus\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"authored\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"source\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.QuestionnaireResponse.Item\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"source\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"source\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"QuestionnaireResponse.Item\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"linkId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"text\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"answer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.QuestionnaireResponse.Item.Answer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"QuestionnaireResponse.Item\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"QuestionnaireResponse.Item.Answer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"QuestionnaireResponse.Item\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"QuestionnaireResponseStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Range\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Range\\\" label=\\\"Range\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"low\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"high\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Ratio\\\" label=\\\"Ratio\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"numerator\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"denominator\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Reference\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Reference\\\" label=\\\"Reference\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"reference\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ReferenceHandlingPolicy\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ReferenceVersionRules\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ReferredDocumentStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/RelatedArtifact\\\" label=\\\"RelatedArtifact\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.RelatedArtifactType\\\"/>\\n      <element name=\\\"label\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"citation\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.url\\\"/>\\n      <element name=\\\"document\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"resource\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RelatedArtifactType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"RelatedPerson\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/RelatedPerson\\\" label=\\\"RelatedPerson\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"relationship\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"relationship\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.HumanName\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"telecom\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"gender\\\" elementType=\\\"FHIR.AdministrativeGender\\\"/>\\n      <element name=\\\"birthDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"address\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Address\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"photo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Attachment\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"communication\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedPerson.Communication\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RelatedPerson.Communication\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"preferred\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RemittanceOutcome\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RepositoryType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"RequestGroup\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/RequestGroup\\\" label=\\\"RequestGroup\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"replaces\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"groupIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.RequestStatus\\\"/>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.RequestIntent\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.RequestPriority\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"authoredOn\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"author\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RequestGroup.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"participant\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"participant\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"author\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"participant\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RequestGroup.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"prefix\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"textEquivalent\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.RequestPriority\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"documentation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"condition\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RequestGroup.Action.Condition\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedAction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RequestGroup.Action.RelatedAction\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"timing\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"participant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"groupingBehavior\\\" elementType=\\\"FHIR.ActionGroupingBehavior\\\"/>\\n      <element name=\\\"selectionBehavior\\\" elementType=\\\"FHIR.ActionSelectionBehavior\\\"/>\\n      <element name=\\\"requiredBehavior\\\" elementType=\\\"FHIR.ActionRequiredBehavior\\\"/>\\n      <element name=\\\"precheckBehavior\\\" elementType=\\\"FHIR.ActionPrecheckBehavior\\\"/>\\n      <element name=\\\"cardinalityBehavior\\\" elementType=\\\"FHIR.ActionCardinalityBehavior\\\"/>\\n      <element name=\\\"resource\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"RequestGroup.Action\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RequestGroup.Action.Condition\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.ActionConditionKind\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.Expression\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RequestGroup.Action.RelatedAction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"actionId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"relationship\\\" elementType=\\\"FHIR.ActionRelationshipType\\\"/>\\n      <element name=\\\"offset\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RequestIntent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RequestPriority\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RequestStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ResearchDefinition\\\" label=\\\"ResearchDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"shortTitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"comment\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"usage\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"library\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"population\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"exposure\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"exposureAlternative\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchElementDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ResearchElementDefinition\\\" label=\\\"ResearchElementDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"shortTitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"subtitle\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"subject\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"comment\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"usage\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"library\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ResearchElementType\\\"/>\\n      <element name=\\\"variableType\\\" elementType=\\\"FHIR.VariableType\\\"/>\\n      <element name=\\\"characteristic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ResearchElementDefinition.Characteristic\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchElementDefinition.Characteristic\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"definition\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"usageContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"exclude\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"unitOfMeasure\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"studyEffectiveDescription\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"studyEffective\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"studyEffectiveTimeFromStart\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"studyEffectiveGroupMeasure\\\" elementType=\\\"FHIR.GroupMeasure\\\"/>\\n      <element name=\\\"participantEffectiveDescription\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"participantEffective\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"participantEffectiveTimeFromStart\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"participantEffectiveGroupMeasure\\\" elementType=\\\"FHIR.GroupMeasure\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchElementType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchStudy\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ResearchStudy\\\" label=\\\"ResearchStudy\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"protocol\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ResearchStudyStatus\\\"/>\\n      <element name=\\\"primaryPurposeType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"phase\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"focus\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"condition\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"keyword\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"location\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"enrollment\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"sponsor\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"principalInvestigator\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"site\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonStopped\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"arm\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ResearchStudy.Arm\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"objective\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ResearchStudy.Objective\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"principalInvestigator\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchStudy.Arm\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchStudy.Objective\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchStudyStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchSubject\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ResearchSubject\\\" label=\\\"ResearchSubject\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ResearchSubjectStatus\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"study\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"individual\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"assignedArm\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"actualArm\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"consent\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"individual\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ResearchSubjectStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo namespace=\\\"FHIR\\\" name=\\\"Resource\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Resource\\\" label=\\\"Resource\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\" baseType=\\\"System.Any\\\">\\n      <element name=\\\"id\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"meta\\\" elementType=\\\"FHIR.Meta\\\"/>\\n      <element name=\\\"implicitRules\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.code\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ResourceType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ResourceVersionPolicy\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ResponseType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RestfulCapabilityMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"RiskAssessment\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/RiskAssessment\\\" label=\\\"RiskAssessment\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"parent\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.RiskAssessmentStatus\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"condition\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basis\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"prediction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RiskAssessment.Prediction\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"mitigation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"performer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RiskAssessment.Prediction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"probability\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"qualitativeRisk\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"relativeRisk\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"when\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"rationale\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"RiskAssessmentStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"RiskEvidenceSynthesis\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/RiskEvidenceSynthesis\\\" label=\\\"RiskEvidenceSynthesis\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"approvalDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"lastReviewDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"effectivePeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"topic\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"editor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reviewer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"endorser\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relatedArtifact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RelatedArtifact\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"synthesisType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"studyType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"population\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"exposure\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"outcome\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"sampleSize\\\" elementType=\\\"FHIR.RiskEvidenceSynthesis.SampleSize\\\"/>\\n      <element name=\\\"riskEstimate\\\" elementType=\\\"FHIR.RiskEvidenceSynthesis.RiskEstimate\\\"/>\\n      <element name=\\\"certainty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RiskEvidenceSynthesis.Certainty\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RiskEvidenceSynthesis.Certainty\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"rating\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"certaintySubcomponent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RiskEvidenceSynthesis.Certainty.CertaintySubcomponent\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RiskEvidenceSynthesis.Certainty.CertaintySubcomponent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"rating\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RiskEvidenceSynthesis.RiskEstimate\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"unitOfMeasure\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"denominatorCount\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"numeratorCount\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"precisionEstimate\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.RiskEvidenceSynthesis.RiskEstimate.PrecisionEstimate\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RiskEvidenceSynthesis.RiskEstimate.PrecisionEstimate\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"level\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"from\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"to\\\" elementType=\\\"FHIR.decimal\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"RiskEvidenceSynthesis.SampleSize\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"numberOfStudies\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"numberOfParticipants\\\" elementType=\\\"FHIR.integer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SPDXLicense\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SampledData\\\" label=\\\"SampledData\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"origin\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"factor\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"lowerLimit\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"upperLimit\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"dimensions\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"data\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Schedule\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Schedule\\\" label=\\\"Schedule\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"active\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"serviceCategory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviceType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"actor\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"planningHorizon\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"actor\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"actor\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SearchComparator\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SearchEntryMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SearchModifierCode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SearchParamType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SearchParameter\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SearchParameter\\\" label=\\\"SearchParameter\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"target\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"derivedFrom\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"base\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ResourceType\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.SearchParamType\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"xpath\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"xpathUsage\\\" elementType=\\\"FHIR.XPathUsageType\\\"/>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ResourceType\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"multipleOr\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"multipleAnd\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"comparator\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SearchComparator\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"modifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SearchModifierCode\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"chain\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"component\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SearchParameter.Component\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SearchParameter.Component\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"definition\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SectionMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SequenceType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ServiceRequest\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ServiceRequest\\\" label=\\\"ServiceRequest\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesUri\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"replaces\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"requisition\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.ServiceRequestStatus\\\"/>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.ServiceRequestIntent\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.ServiceRequestPriority\\\"/>\\n      <element name=\\\"doNotPerform\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"orderDetail\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"quantity\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"asNeeded\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"authoredOn\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"requester\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performerType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"performer\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"locationCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"locationReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"supportingInfo\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specimen\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"bodySite\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"patientInstruction\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"relevantHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"performer\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"performer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ServiceRequestIntent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ServiceRequestPriority\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"ServiceRequestStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Signature\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Signature\\\" label=\\\"Signature\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"when\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"who\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"onBehalfOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"targetFormat\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"sigFormat\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"data\\\" elementType=\\\"FHIR.base64Binary\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Quantity\\\" namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SimpleQuantity\\\" label=\\\"SimpleQuantity\\\" retrievable=\\\"false\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"unit\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SlicingRules\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Slot\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Slot\\\" label=\\\"Slot\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviceCategory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"serviceType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"specialty\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"appointmentType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"schedule\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.SlotStatus\\\"/>\\n      <element name=\\\"start\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"overbooked\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SlotStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SortDirection\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Specimen\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Specimen\\\" label=\\\"Specimen\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"accessionIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.SpecimenStatus\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subject\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"receivedTime\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"parent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"request\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"collection\\\" elementType=\\\"FHIR.Specimen.Collection\\\"/>\\n      <element name=\\\"processing\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Specimen.Processing\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"container\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Specimen.Container\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"condition\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"collector\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"subject\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"subject\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Specimen.Collection\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"collector\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"collected\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"duration\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"bodySite\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"fastingStatus\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Specimen.Container\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"capacity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"specimenQuantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"additive\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Specimen.Processing\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"procedure\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"additive\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"time\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SpecimenContainedPreference\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SpecimenDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SpecimenDefinition\\\" label=\\\"SpecimenDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"typeCollected\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"patientPreparation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"timeAspect\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"collection\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"typeTested\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SpecimenDefinition.TypeTested\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SpecimenDefinition.TypeTested\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"isDerived\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"preference\\\" elementType=\\\"FHIR.SpecimenContainedPreference\\\"/>\\n      <element name=\\\"container\\\" elementType=\\\"FHIR.SpecimenDefinition.TypeTested.Container\\\"/>\\n      <element name=\\\"requirement\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"retentionTime\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"rejectionCriterion\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"handling\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SpecimenDefinition.TypeTested.Handling\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SpecimenDefinition.TypeTested.Container\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"material\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"cap\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"capacity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"minimumVolume\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SimpleQuantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"additive\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SpecimenDefinition.TypeTested.Container.Additive\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"preparation\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SpecimenDefinition.TypeTested.Container.Additive\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"additive\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SpecimenDefinition.TypeTested.Handling\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"temperatureQualifier\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"temperatureRange\\\" elementType=\\\"FHIR.Range\\\"/>\\n      <element name=\\\"maxDuration\\\" elementType=\\\"FHIR.Duration\\\"/>\\n      <element name=\\\"instruction\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SpecimenStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Status\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StrandType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"StructureDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/StructureDefinition\\\" label=\\\"StructureDefinition\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"keyword\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Coding\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"fhirVersion\\\" elementType=\\\"FHIR.FHIRVersion\\\"/>\\n      <element name=\\\"mapping\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureDefinition.Mapping\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.StructureDefinitionKind\\\"/>\\n      <element name=\\\"abstract\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"context\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureDefinition.Context\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"contextInvariant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"baseDefinition\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"derivation\\\" elementType=\\\"FHIR.TypeDerivationRule\\\"/>\\n      <element name=\\\"snapshot\\\" elementType=\\\"FHIR.StructureDefinition.Snapshot\\\"/>\\n      <element name=\\\"differential\\\" elementType=\\\"FHIR.StructureDefinition.Differential\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureDefinition.Context\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.ExtensionContextType\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureDefinition.Differential\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"element\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ElementDefinition\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureDefinition.Mapping\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identity\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"uri\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureDefinition.Snapshot\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"element\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ElementDefinition\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StructureDefinitionKind\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/StructureMap\\\" label=\\\"StructureMap\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"structure\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMap.Structure\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"import\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"group\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMap.Group\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap.Group\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"extends\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"typeMode\\\" elementType=\\\"FHIR.StructureMapGroupTypeMode\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"input\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMap.Group.Input\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"rule\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMap.Group.Rule\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap.Group.Input\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.StructureMapInputMode\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap.Group.Rule\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMap.Group.Rule.Source\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMap.Group.Rule.Target\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"rule\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"StructureMap.Group.Rule\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"dependent\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMap.Group.Rule.Dependent\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap.Group.Rule.Dependent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"variable\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap.Group.Rule.Source\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"min\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"max\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"defaultValue\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"element\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"listMode\\\" elementType=\\\"FHIR.StructureMapSourceListMode\\\"/>\\n      <element name=\\\"variable\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"condition\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"check\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"logMessage\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap.Group.Rule.Target\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"context\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"contextType\\\" elementType=\\\"FHIR.StructureMapContextType\\\"/>\\n      <element name=\\\"element\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"variable\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"listMode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMapTargetListMode\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"listRuleId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"transform\\\" elementType=\\\"FHIR.StructureMapTransform\\\"/>\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.StructureMap.Group.Rule.Target.Parameter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap.Group.Rule.Target.Parameter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMap.Structure\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"mode\\\" elementType=\\\"FHIR.StructureMapModelMode\\\"/>\\n      <element name=\\\"alias\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMapContextType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMapGroupTypeMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMapInputMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMapModelMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMapSourceListMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMapTargetListMode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"StructureMapTransform\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Subscription\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Subscription\\\" label=\\\"Subscription\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.SubscriptionStatus\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactPoint\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"end\\\" elementType=\\\"FHIR.instant\\\"/>\\n      <element name=\\\"reason\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"criteria\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"error\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"channel\\\" elementType=\\\"FHIR.Subscription.Channel\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Subscription.Channel\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.SubscriptionChannelType\\\"/>\\n      <element name=\\\"endpoint\\\" elementType=\\\"FHIR.url\\\"/>\\n      <element name=\\\"payload\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"header\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SubscriptionChannelType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SubscriptionStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Substance\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Substance\\\" label=\\\"Substance\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.FHIRSubstanceStatus\\\"/>\\n      <element name=\\\"category\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"instance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Substance.Instance\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"ingredient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Substance.Ingredient\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Substance.Ingredient\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"substance\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Substance.Instance\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"expiry\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceAmount\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SubstanceAmount\\\" label=\\\"SubstanceAmount\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"amount\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"amountType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amountText\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"referenceRange\\\" elementType=\\\"FHIR.SubstanceAmount.ReferenceRange\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceAmount.ReferenceRange\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"lowLimit\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"highLimit\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceNucleicAcid\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SubstanceNucleicAcid\\\" label=\\\"SubstanceNucleicAcid\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequenceType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"numberOfSubunits\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"areaOfHybridisation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"oligoNucleotideType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subunit\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceNucleicAcid.Subunit\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceNucleicAcid.Subunit\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"subunit\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"length\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"sequenceAttachment\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"fivePrime\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"threePrime\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"linkage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceNucleicAcid.Subunit.Linkage\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"sugar\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceNucleicAcid.Subunit.Sugar\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceNucleicAcid.Subunit.Linkage\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"connectivity\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"residueSite\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceNucleicAcid.Subunit.Sugar\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"residueSite\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SubstancePolymer\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SubstancePolymer\\\" label=\\\"SubstancePolymer\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"class\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"geometry\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"copolymerConnectivity\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"modification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"monomerSet\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstancePolymer.MonomerSet\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"repeat\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstancePolymer.Repeat\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstancePolymer.MonomerSet\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"ratioType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"startingMaterial\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstancePolymer.MonomerSet.StartingMaterial\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstancePolymer.MonomerSet.StartingMaterial\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"material\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"isDefining\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.SubstanceAmount\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstancePolymer.Repeat\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"numberOfUnits\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"averageMolecularFormula\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"repeatUnitAmountType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"repeatUnit\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstancePolymer.Repeat.RepeatUnit\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstancePolymer.Repeat.RepeatUnit\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"orientationOfPolymerisation\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"repeatUnit\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.SubstanceAmount\\\"/>\\n      <element name=\\\"degreeOfPolymerisation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"structuralRepresentation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"degree\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.SubstanceAmount\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"representation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"attachment\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceProtein\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SubstanceProtein\\\" label=\\\"SubstanceProtein\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sequenceType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"numberOfSubunits\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"disulfideLinkage\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subunit\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceProtein.Subunit\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceProtein.Subunit\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"subunit\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"sequence\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"length\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"sequenceAttachment\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n      <element name=\\\"nTerminalModificationId\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"nTerminalModification\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"cTerminalModificationId\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"cTerminalModification\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceReferenceInformation\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SubstanceReferenceInformation\\\" label=\\\"SubstanceReferenceInformation\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"gene\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceReferenceInformation.Gene\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"geneElement\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceReferenceInformation.GeneElement\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"classification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceReferenceInformation.Classification\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceReferenceInformation.Target\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceReferenceInformation.Classification\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"domain\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"classification\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"subtype\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceReferenceInformation.Gene\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"geneSequenceOrigin\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"gene\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceReferenceInformation.GeneElement\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"element\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceReferenceInformation.Target\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"target\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"interaction\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"organism\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"organismType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"amountType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSourceMaterial\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SubstanceSourceMaterial\\\" label=\\\"SubstanceSourceMaterial\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"sourceMaterialClass\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"sourceMaterialType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"sourceMaterialState\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"organismId\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"organismName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"parentSubstanceId\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"parentSubstanceName\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"countryOfOrigin\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"geographicalLocation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"developmentStage\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"fractionDescription\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSourceMaterial.FractionDescription\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"organism\\\" elementType=\\\"FHIR.SubstanceSourceMaterial.Organism\\\"/>\\n      <element name=\\\"partDescription\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSourceMaterial.PartDescription\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSourceMaterial.FractionDescription\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"fraction\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"materialType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSourceMaterial.Organism\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"family\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"genus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"species\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"intraspecificType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"intraspecificDescription\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"author\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSourceMaterial.Organism.Author\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"hybrid\\\" elementType=\\\"FHIR.SubstanceSourceMaterial.Organism.Hybrid\\\"/>\\n      <element name=\\\"organismGeneral\\\" elementType=\\\"FHIR.SubstanceSourceMaterial.Organism.OrganismGeneral\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSourceMaterial.Organism.Author\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"authorType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"authorDescription\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSourceMaterial.Organism.Hybrid\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"maternalOrganismId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"maternalOrganismName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"paternalOrganismId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"paternalOrganismName\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"hybridType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSourceMaterial.Organism.OrganismGeneral\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"kingdom\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"phylum\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"class\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"order\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSourceMaterial.PartDescription\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"part\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"partLocation\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SubstanceSpecification\\\" label=\\\"SubstanceSpecification\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"domain\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"moiety\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSpecification.Moiety\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"property\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSpecification.Property\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"referenceInformation\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"structure\\\" elementType=\\\"FHIR.SubstanceSpecification.Structure\\\"/>\\n      <element name=\\\"code\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSpecification.Code\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"name\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSpecification.Name\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"molecularWeight\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Structure.Isotope.MolecularWeight\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"relationship\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSpecification.Relationship\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"nucleicAcid\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"polymer\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"protein\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"sourceMaterial\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Code\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"statusDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"comment\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Moiety\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"role\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"stereochemistry\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"opticalActivity\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"molecularFormula\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"amount\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Name\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"preferred\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"language\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"domain\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"synonym\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Name\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"translation\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Name\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"official\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSpecification.Name.Official\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Name.Official\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"authority\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Property\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"parameters\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"definingSubstance\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"amount\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Relationship\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"substance\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"relationship\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"isDefining\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"amount\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"amountRatioLowLimit\\\" elementType=\\\"FHIR.Ratio\\\"/>\\n      <element name=\\\"amountType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Structure\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"stereochemistry\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"opticalActivity\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"molecularFormula\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"molecularFormulaByMoiety\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"isotope\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSpecification.Structure.Isotope\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"molecularWeight\\\" elementType=\\\"FHIR.SubstanceSpecification.Structure.Isotope.MolecularWeight\\\"/>\\n      <element name=\\\"source\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"representation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SubstanceSpecification.Structure.Representation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Structure.Isotope\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"substitution\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"halfLife\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"molecularWeight\\\" elementType=\\\"FHIR.SubstanceSpecification.Structure.Isotope.MolecularWeight\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Structure.Isotope.MolecularWeight\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SubstanceSpecification.Structure.Representation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"representation\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"attachment\\\" elementType=\\\"FHIR.Attachment\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SupplyDelivery\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SupplyDelivery\\\" label=\\\"SupplyDelivery\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"type\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.SupplyDeliveryStatus\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"suppliedItem\\\" elementType=\\\"FHIR.SupplyDelivery.SuppliedItem\\\"/>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"supplier\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"destination\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"receiver\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"supplier\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"receiver\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SupplyDelivery.SuppliedItem\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SupplyDeliveryStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"SupplyRequest\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/SupplyRequest\\\" label=\\\"SupplyRequest\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"category\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.SupplyRequestStatus\\\"/>\\n      <element name=\\\"category\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.RequestPriority\\\"/>\\n      <element name=\\\"item\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"quantity\\\" elementType=\\\"FHIR.Quantity\\\"/>\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.SupplyRequest.Parameter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"occurrence\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"authoredOn\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"requester\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"supplier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonCode\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"reasonReference\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"deliverFrom\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"deliverTo\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"deliverTo\\\"/>\\n      <contextRelationship context=\\\"Device\\\" relatedKeyElement=\\\"requester\\\"/>\\n      <contextRelationship context=\\\"RelatedPerson\\\" relatedKeyElement=\\\"requester\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"SupplyRequest.Parameter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SupplyRequestStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"SystemRestfulInteraction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"Task\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Task\\\" label=\\\"Task\\\" retrievable=\\\"true\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"instantiatesCanonical\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"instantiatesUri\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"basedOn\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"groupIdentifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"partOf\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.TaskStatus\\\"/>\\n      <element name=\\\"statusReason\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"businessStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"intent\\\" elementType=\\\"FHIR.TaskIntent\\\"/>\\n      <element name=\\\"priority\\\" elementType=\\\"FHIR.TaskPriority\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"focus\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"for\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"executionPeriod\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"authoredOn\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"lastModified\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"requester\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"performerType\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"owner\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"location\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"reasonCode\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"reasonReference\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"insurance\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"relevantHistory\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"restriction\\\" elementType=\\\"FHIR.Task.Restriction\\\"/>\\n      <element name=\\\"input\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Task.Input\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"output\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Task.Output\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Task.Input\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Task.Output\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"canonical\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"id\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"instant\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"markdown\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"oid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"time\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"url\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uuid\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Address\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Age\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Annotation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Attachment\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Coding\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactPoint\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Count\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Distance\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"HumanName\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Identifier\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Money\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Ratio\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"SampledData\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Signature\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ContactDetail\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Contributor\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"DataRequirement\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Expression\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"ParameterDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"RelatedArtifact\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Dosage\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Meta\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Task.Restriction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"repetitions\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.Period\\\"/>\\n      <element name=\\\"recipient\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TaskIntent\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TaskPriority\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TaskStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/TerminologyCapabilities\\\" label=\\\"TerminologyCapabilities\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"kind\\\" elementType=\\\"FHIR.CapabilityStatementKind\\\"/>\\n      <element name=\\\"software\\\" elementType=\\\"FHIR.TerminologyCapabilities.Software\\\"/>\\n      <element name=\\\"implementation\\\" elementType=\\\"FHIR.TerminologyCapabilities.Implementation\\\"/>\\n      <element name=\\\"lockedDate\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"codeSystem\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TerminologyCapabilities.CodeSystem\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"expansion\\\" elementType=\\\"FHIR.TerminologyCapabilities.Expansion\\\"/>\\n      <element name=\\\"codeSearch\\\" elementType=\\\"FHIR.CodeSearchSupport\\\"/>\\n      <element name=\\\"validateCode\\\" elementType=\\\"FHIR.TerminologyCapabilities.ValidateCode\\\"/>\\n      <element name=\\\"translation\\\" elementType=\\\"FHIR.TerminologyCapabilities.Translation\\\"/>\\n      <element name=\\\"closure\\\" elementType=\\\"FHIR.TerminologyCapabilities.Closure\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.Closure\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"translation\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.CodeSystem\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"uri\\\" elementType=\\\"FHIR.canonical\\\"/>\\n      <element name=\\\"version\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TerminologyCapabilities.CodeSystem.Version\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"subsumption\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.CodeSystem.Version\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"isDefault\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"compositional\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"language\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.code\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"filter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TerminologyCapabilities.CodeSystem.Version.Filter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"property\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.code\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.CodeSystem.Version.Filter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"op\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.code\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.Expansion\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"hierarchical\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"paging\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"incomplete\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TerminologyCapabilities.Expansion.Parameter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"textFilter\\\" elementType=\\\"FHIR.markdown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.Expansion.Parameter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"documentation\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.Implementation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.url\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.Software\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.Translation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"needsMap\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TerminologyCapabilities.ValidateCode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"translations\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/TestReport\\\" label=\\\"TestReport\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.TestReportStatus\\\"/>\\n      <element name=\\\"testScript\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"result\\\" elementType=\\\"FHIR.TestReportResult\\\"/>\\n      <element name=\\\"score\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"tester\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"issued\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"participant\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestReport.Participant\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"setup\\\" elementType=\\\"FHIR.TestReport.Setup\\\"/>\\n      <element name=\\\"test\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestReport.Test\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"teardown\\\" elementType=\\\"FHIR.TestReport.Teardown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Participant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.TestReportParticipantType\\\"/>\\n      <element name=\\\"uri\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Setup\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestReport.Setup.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Setup.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"operation\\\" elementType=\\\"FHIR.TestReport.Setup.Action.Operation\\\"/>\\n      <element name=\\\"assert\\\" elementType=\\\"FHIR.TestReport.Setup.Action.Assert\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Setup.Action.Assert\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"result\\\" elementType=\\\"FHIR.TestReportActionResult\\\"/>\\n      <element name=\\\"message\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"detail\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Setup.Action.Operation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"result\\\" elementType=\\\"FHIR.TestReportActionResult\\\"/>\\n      <element name=\\\"message\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"detail\\\" elementType=\\\"FHIR.uri\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Teardown\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestReport.Teardown.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Teardown.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"operation\\\" elementType=\\\"FHIR.TestReport.Setup.Action.Operation\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Test\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestReport.Test.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestReport.Test.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"operation\\\" elementType=\\\"FHIR.TestReport.Setup.Action.Operation\\\"/>\\n      <element name=\\\"assert\\\" elementType=\\\"FHIR.TestReport.Setup.Action.Assert\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TestReportActionResult\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TestReportParticipantType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TestReportResult\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TestReportStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/TestScript\\\" label=\\\"TestScript\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.Identifier\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"origin\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Origin\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"destination\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Destination\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"metadata\\\" elementType=\\\"FHIR.TestScript.Metadata\\\"/>\\n      <element name=\\\"fixture\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Fixture\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"profile\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"variable\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Variable\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"setup\\\" elementType=\\\"FHIR.TestScript.Setup\\\"/>\\n      <element name=\\\"test\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Test\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"teardown\\\" elementType=\\\"FHIR.TestScript.Teardown\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Destination\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"index\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.Coding\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Fixture\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"autocreate\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"autodelete\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"resource\\\" elementType=\\\"FHIR.Reference\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Metadata\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"link\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Metadata.Link\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"capability\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Metadata.Capability\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Metadata.Capability\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"required\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"validated\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"origin\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.integer\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"destination\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"link\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.uri\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"capabilities\\\" elementType=\\\"FHIR.canonical\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Metadata.Link\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Origin\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"index\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"profile\\\" elementType=\\\"FHIR.Coding\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Setup\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Setup.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Setup.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"operation\\\" elementType=\\\"FHIR.TestScript.Setup.Action.Operation\\\"/>\\n      <element name=\\\"assert\\\" elementType=\\\"FHIR.TestScript.Setup.Action.Assert\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Setup.Action.Assert\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"label\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"direction\\\" elementType=\\\"FHIR.AssertionDirectionType\\\"/>\\n      <element name=\\\"compareToSourceId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"compareToSourceExpression\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"compareToSourcePath\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contentType\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"headerField\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"minimumId\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"navigationLinks\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"operator\\\" elementType=\\\"FHIR.AssertionOperatorType\\\"/>\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"requestMethod\\\" elementType=\\\"FHIR.TestScriptRequestMethodCode\\\"/>\\n      <element name=\\\"requestURL\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"resource\\\" elementType=\\\"FHIR.FHIRDefinedType\\\"/>\\n      <element name=\\\"response\\\" elementType=\\\"FHIR.AssertionResponseTypes\\\"/>\\n      <element name=\\\"responseCode\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"sourceId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"validateProfileId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"warningOnly\\\" elementType=\\\"FHIR.boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Setup.Action.Operation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"resource\\\" elementType=\\\"FHIR.FHIRDefinedType\\\"/>\\n      <element name=\\\"label\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"accept\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"contentType\\\" elementType=\\\"FHIR.MimeType\\\"/>\\n      <element name=\\\"destination\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"encodeRequestUrl\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"method\\\" elementType=\\\"FHIR.TestScriptRequestMethodCode\\\"/>\\n      <element name=\\\"origin\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"params\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"requestHeader\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Setup.Action.Operation.RequestHeader\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"requestId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"responseId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"sourceId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"targetId\\\" elementType=\\\"FHIR.id\\\"/>\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Setup.Action.Operation.RequestHeader\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"field\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Teardown\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Teardown.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Teardown.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"operation\\\" elementType=\\\"FHIR.TestScript.Setup.Action.Operation\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Test\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"action\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.TestScript.Test.Action\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Test.Action\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"operation\\\" elementType=\\\"FHIR.TestScript.Setup.Action.Operation\\\"/>\\n      <element name=\\\"assert\\\" elementType=\\\"FHIR.TestScript.Setup.Action.Assert\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"TestScript.Variable\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"defaultValue\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"expression\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"headerField\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"hint\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"path\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"sourceId\\\" elementType=\\\"FHIR.id\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TestScriptRequestMethodCode\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"Timing\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/Timing\\\" label=\\\"Timing\\\" retrievable=\\\"false\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"event\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.dateTime\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"repeat\\\" elementType=\\\"FHIR.Timing.Repeat\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Timing.Repeat\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"bounds\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Duration\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Period\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"count\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"countMax\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"duration\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"durationMax\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"durationUnit\\\" elementType=\\\"FHIR.UnitsOfTime\\\"/>\\n      <element name=\\\"frequency\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"frequencyMax\\\" elementType=\\\"FHIR.positiveInt\\\"/>\\n      <element name=\\\"period\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"periodMax\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"periodUnit\\\" elementType=\\\"FHIR.UnitsOfTime\\\"/>\\n      <element name=\\\"dayOfWeek\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DayOfWeek\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"timeOfDay\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.time\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"when\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.EventTiming\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"offset\\\" elementType=\\\"FHIR.unsignedInt\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TriggerDefinition\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/TriggerDefinition\\\" label=\\\"TriggerDefinition\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"type\\\" elementType=\\\"FHIR.TriggerType\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"timing\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Timing\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"date\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"data\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.DataRequirement\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"condition\\\" elementType=\\\"FHIR.Expression\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TriggerType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TypeDerivationRule\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"TypeRestfulInteraction\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"UDIEntryType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"UnitsOfTime\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"UsageContext\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/UsageContext\\\" label=\\\"UsageContext\\\" retrievable=\\\"false\\\" primaryCodePath=\\\"code\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"CodeableConcept\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Quantity\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Range\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"Reference\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"Use\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/ValueSet\\\" label=\\\"ValueSet\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"url\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"title\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.PublicationStatus\\\"/>\\n      <element name=\\\"experimental\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"publisher\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"contact\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ContactDetail\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"description\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"useContext\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.UsageContext\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"jurisdiction\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"immutable\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"purpose\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"copyright\\\" elementType=\\\"FHIR.markdown\\\"/>\\n      <element name=\\\"compose\\\" elementType=\\\"FHIR.ValueSet.Compose\\\"/>\\n      <element name=\\\"expansion\\\" elementType=\\\"FHIR.ValueSet.Expansion\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet.Compose\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"lockedDate\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"inactive\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"include\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ValueSet.Compose.Include\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"exclude\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ValueSet.Compose.Include\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet.Compose.Include\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"concept\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ValueSet.Compose.Include.Concept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"filter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ValueSet.Compose.Include.Filter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"valueSet\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.canonical\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet.Compose.Include.Concept\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"designation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ValueSet.Compose.Include.Concept.Designation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet.Compose.Include.Concept.Designation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"language\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"use\\\" elementType=\\\"FHIR.Coding\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet.Compose.Include.Filter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"property\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"op\\\" elementType=\\\"FHIR.FilterOperator\\\"/>\\n      <element name=\\\"value\\\" elementType=\\\"FHIR.string\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet.Expansion\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"timestamp\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"total\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"offset\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"parameter\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ValueSet.Expansion.Parameter\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"contains\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.ValueSet.Expansion.Contains\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet.Expansion.Contains\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"system\\\" elementType=\\\"FHIR.uri\\\"/>\\n      <element name=\\\"abstract\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"inactive\\\" elementType=\\\"FHIR.boolean\\\"/>\\n      <element name=\\\"version\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"code\\\" elementType=\\\"FHIR.code\\\"/>\\n      <element name=\\\"display\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"designation\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ValueSet.Compose.Include.Concept.Designation\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n      <element name=\\\"contains\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ListTypeSpecifier\\\">\\n            <elementTypeSpecifier namespace=\\\"FHIR\\\" name=\\\"ValueSet.Expansion.Contains\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"ValueSet.Expansion.Parameter\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"name\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"value\\\">\\n         <elementTypeSpecifier xsi:type=\\\"ChoiceTypeSpecifier\\\">\\n            <choice namespace=\\\"FHIR\\\" name=\\\"string\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"boolean\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"integer\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"decimal\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"uri\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"code\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n            <choice namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" xsi:type=\\\"NamedTypeSpecifier\\\"/>\\n         </elementTypeSpecifier>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"VariableType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"VerificationResult\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/VerificationResult\\\" label=\\\"VerificationResult\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"target\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Reference\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"targetLocation\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.string\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"need\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.Status\\\"/>\\n      <element name=\\\"statusDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"validationType\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"validationProcess\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"frequency\\\" elementType=\\\"FHIR.Timing\\\"/>\\n      <element name=\\\"lastPerformed\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"nextScheduled\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"failureAction\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"primarySource\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.VerificationResult.PrimarySource\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"attestation\\\" elementType=\\\"FHIR.VerificationResult.Attestation\\\"/>\\n      <element name=\\\"validator\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.VerificationResult.Validator\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"VerificationResult.Attestation\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"who\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"onBehalfOf\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"communicationMethod\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"date\\\" elementType=\\\"FHIR.date\\\"/>\\n      <element name=\\\"sourceIdentityCertificate\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"proxyIdentityCertificate\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"proxySignature\\\" elementType=\\\"FHIR.Signature\\\"/>\\n      <element name=\\\"sourceSignature\\\" elementType=\\\"FHIR.Signature\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"VerificationResult.PrimarySource\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"who\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"type\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"communicationMethod\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"validationStatus\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"validationDate\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"canPushUpdates\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"pushTypeAvailable\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.CodeableConcept\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"VerificationResult.Validator\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"organization\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"identityCertificate\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"attestationSignature\\\" elementType=\\\"FHIR.Signature\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"VisionBase\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"VisionEyes\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.DomainResource\\\" namespace=\\\"FHIR\\\" name=\\\"VisionPrescription\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/VisionPrescription\\\" label=\\\"VisionPrescription\\\" retrievable=\\\"true\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"identifier\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Identifier\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"status\\\" elementType=\\\"FHIR.VisionStatus\\\"/>\\n      <element name=\\\"created\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"patient\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"encounter\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"dateWritten\\\" elementType=\\\"FHIR.dateTime\\\"/>\\n      <element name=\\\"prescriber\\\" elementType=\\\"FHIR.Reference\\\"/>\\n      <element name=\\\"lensSpecification\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.VisionPrescription.LensSpecification\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <contextRelationship context=\\\"Practitioner\\\" relatedKeyElement=\\\"prescriber\\\"/>\\n      <contextRelationship context=\\\"Patient\\\" relatedKeyElement=\\\"patient\\\"/>\\n      <contextRelationship context=\\\"Encounter\\\" relatedKeyElement=\\\"encounter\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"VisionPrescription.LensSpecification\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"product\\\" elementType=\\\"FHIR.CodeableConcept\\\"/>\\n      <element name=\\\"eye\\\" elementType=\\\"FHIR.VisionEyes\\\"/>\\n      <element name=\\\"sphere\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"cylinder\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"axis\\\" elementType=\\\"FHIR.integer\\\"/>\\n      <element name=\\\"prism\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.VisionPrescription.LensSpecification.Prism\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n      <element name=\\\"add\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"power\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"backCurve\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"diameter\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"duration\\\" elementType=\\\"FHIR.SimpleQuantity\\\"/>\\n      <element name=\\\"color\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"brand\\\" elementType=\\\"FHIR.string\\\"/>\\n      <element name=\\\"note\\\">\\n         <elementTypeSpecifier elementType=\\\"FHIR.Annotation\\\" xsi:type=\\\"ListTypeSpecifier\\\"/>\\n      </element>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.BackboneElement\\\" namespace=\\\"FHIR\\\" name=\\\"VisionPrescription.LensSpecification.Prism\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"amount\\\" elementType=\\\"FHIR.decimal\\\"/>\\n      <element name=\\\"base\\\" elementType=\\\"FHIR.VisionBase\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"VisionStatus\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"XPathUsageType\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"base64Binary\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/base64Binary\\\" label=\\\"base64Binary\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"boolean\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/boolean\\\" label=\\\"boolean\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.Boolean\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.uri\\\" namespace=\\\"FHIR\\\" name=\\\"canonical\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/canonical\\\" label=\\\"canonical\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.string\\\" namespace=\\\"FHIR\\\" name=\\\"code\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/code\\\" label=\\\"code\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"date\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/date\\\" label=\\\"date\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.Date\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"dateTime\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/dateTime\\\" label=\\\"dateTime\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.DateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"decimal\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/decimal\\\" label=\\\"decimal\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.Decimal\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.string\\\" namespace=\\\"FHIR\\\" name=\\\"id\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/id\\\" label=\\\"id\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"instant\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/instant\\\" label=\\\"instant\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.DateTime\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"integer\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/integer\\\" label=\\\"integer\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.Integer\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.string\\\" namespace=\\\"FHIR\\\" name=\\\"markdown\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/markdown\\\" label=\\\"markdown\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.uri\\\" namespace=\\\"FHIR\\\" name=\\\"oid\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/oid\\\" label=\\\"oid\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.integer\\\" namespace=\\\"FHIR\\\" name=\\\"positiveInt\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/positiveInt\\\" label=\\\"positiveInt\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"string\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/string\\\" label=\\\"string\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"time\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/time\\\" label=\\\"time\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.Time\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.integer\\\" namespace=\\\"FHIR\\\" name=\\\"unsignedInt\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/unsignedInt\\\" label=\\\"unsignedInt\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"uri\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/uri\\\" label=\\\"uri\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <typeInfo baseType=\\\"FHIR.uri\\\" namespace=\\\"FHIR\\\" name=\\\"url\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/url\\\" label=\\\"url\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.uri\\\" namespace=\\\"FHIR\\\" name=\\\"uuid\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/uuid\\\" label=\\\"uuid\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\"/>\\n   <typeInfo baseType=\\\"FHIR.Element\\\" namespace=\\\"FHIR\\\" name=\\\"xhtml\\\" identifier=\\\"http://hl7.org/fhir/StructureDefinition/xhtml\\\" label=\\\"xhtml\\\" retrievable=\\\"false\\\" xsi:type=\\\"ClassInfo\\\">\\n      <element name=\\\"value\\\" elementType=\\\"System.String\\\"/>\\n   </typeInfo>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToCode\\\" fromType=\\\"FHIR.Coding\\\" toType=\\\"System.Code\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToConcept\\\" fromType=\\\"FHIR.CodeableConcept\\\" toType=\\\"System.Concept\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToQuantity\\\" fromType=\\\"FHIR.Quantity\\\" toType=\\\"System.Quantity\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToInterval\\\" fromType=\\\"FHIR.Period\\\" toType=\\\"Interval&lt;System.DateTime>\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToInterval\\\" fromType=\\\"FHIR.Range\\\" toType=\\\"Interval&lt;System.Quantity>\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToRatio\\\" fromType=\\\"FHIR.Ratio\\\" toType=\\\"System.Ratio\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EnrollmentRequestStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TestScriptRequestMethodCode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SortDirection\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.BiologicallyDerivedProductStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.UnitsOfTime\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AddressType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AllergyIntoleranceCategory\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.IssueSeverity\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CareTeamStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StructureDefinitionKind\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EncounterStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.PublicationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FHIRVersion\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CarePlanActivityKind\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StructureMapSourceListMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.RequestStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.QuestionnaireResponseStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SearchComparator\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ChargeItemStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.xhtml\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActionParticipantType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AllergyIntoleranceType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.InvoiceStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CarePlanActivityStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ParticipationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DeviceNameType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DocumentMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AssertionOperatorType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DaysOfWeek\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.IssueType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StructureMapContextType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FamilyHistoryStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ExtensionContextType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CommunicationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AssertionResponseTypes\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.RequestIntent\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EnrollmentResponseStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.string\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActionRequiredBehavior\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.GraphCompartmentUse\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AccountStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MedicationDispenseStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ParameterUse\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ClaimStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.IdentifierUse\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StructureMapTargetListMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ExposureState\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TestReportParticipantType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.BindingStrength\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.RequestPriority\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MimeType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.QualityType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ParticipantRequired\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.XPathUsageType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CoverageStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FilterOperator\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.NamingSystemType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ResearchSubjectStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StructureMapTransform\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ResponseType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToDecimal\\\" fromType=\\\"FHIR.decimal\\\" toType=\\\"System.Decimal\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AggregationMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SystemRestfulInteraction\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.Messageheader_Response_Request\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.NutritiionOrderIntent\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MedicationKnowledgeStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AdverseEventActuality\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SubscriptionChannelType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActivityDefinitionKind\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AssertionDirectionType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CarePlanIntent\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ConsentState\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AllergyIntoleranceCriticality\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MedicationRequestPriority\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.PropertyRepresentation\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TriggerType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CompositionStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AppointmentStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MessageSignificanceCategory\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ListMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ResearchElementType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TaskPriority\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ObservationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.PaymentNoticeStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ResourceType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.PaymentReconciliationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToBoolean\\\" fromType=\\\"FHIR.boolean\\\" toType=\\\"System.Boolean\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StructureMapGroupTypeMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.OrientationType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SupplyRequestStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EncounterLocationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CommunicationPriority\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CarePlanStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ConditionalDeleteStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ContractPublicationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.NutritionOrderStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ImmunizationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.uri\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.Use\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.IdentityAssuranceLevel\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DeviceMetricColor\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToTime\\\" fromType=\\\"FHIR.time\\\" toType=\\\"System.Time\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ConditionalReadStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AllergyIntoleranceSeverity\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.OperationKind\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SubscriptionStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.GoalLifecycleStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ObservationDataType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DocumentReferenceStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.LocationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SectionMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.NoteType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TestReportStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CodeSystemContentMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FHIRDeviceStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ContactPointSystem\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SlotStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.PropertyType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DeviceRequestStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TypeDerivationRule\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.GuidanceResponseStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.RelatedArtifactType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SequenceType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ReferredDocumentStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MediaStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CompartmentType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.InvoicePriceComponentType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DeviceMetricCalibrationState\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.GroupType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EnableWhenBehavior\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TaskIntent\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ImmunizationEvaluationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToDate\\\" fromType=\\\"FHIR.date\\\" toType=\\\"System.Date\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ExampleScenarioActorType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ProvenanceEntityRole\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EligibilityRequestStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SpecimenStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CurrencyCode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.RestfulCapabilityMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DetectedIssueSeverity\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.VisionEyes\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.VisionStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ConsentDataMeaning\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.GuidePageGeneration\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DocumentRelationshipType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ClaimResponseStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.VariableType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.RepositoryType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TestReportResult\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ConceptMapGroupUnmappedMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToDateTime\\\" fromType=\\\"FHIR.instant\\\" toType=\\\"System.DateTime\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ClinicalImpressionStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EligibilityResponsePurpose\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.NarrativeStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ImagingStudyStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EndpointStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.BiologicallyDerivedProductCategory\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MedicationRequestStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ResourceVersionPolicy\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToDateTime\\\" fromType=\\\"FHIR.dateTime\\\" toType=\\\"System.DateTime\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MedicationAdministrationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActionCardinalityBehavior\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MedicationRequestIntent\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.GroupMeasure\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.NamingSystemIdentifierType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FHIRResourceType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.RiskAssessmentStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CompartmentCode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DiscriminatorType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StructureMapInputMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.LinkageType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ReferenceHandlingPolicy\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MedicationStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ResearchStudyStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FHIRDefinedType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AuditEventOutcome\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SpecimenContainedPreference\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActionRelationshipType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ConstraintSeverity\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ProcedureStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EventCapabilityMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CodeSearchSupport\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ObservationRangeCategory\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.UDIEntryType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DeviceMetricCategory\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TestReportActionResult\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ChargeItemDefinitionPriceComponentType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CapabilityStatementKind\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActivityParticipantType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EventTiming\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SearchParamType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActionGroupingBehavior\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StructureMapModelMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TaskStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ServiceRequestStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.BiologicallyDerivedProductStorageScale\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.GraphCompartmentRule\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ServiceRequestIntent\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SlicingRules\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ExplanationOfBenefitStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.GuideParameterCode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CatalogEntryRelationType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.LinkType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FHIRAllTypes\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ConceptMapEquivalence\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AuditEventAction\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EligibilityResponseStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SearchModifierCode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.OperationParameterUse\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ConsentProvisionType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActionConditionKind\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ParticipantStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AdministrativeGender\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.QuestionnaireItemType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DeviceMetricCalibrationType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EvidenceVariableType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActionSelectionBehavior\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SupplyDeliveryStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DiagnosticReportStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FlagStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SPDXLicense\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ListStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.base64Binary\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DeviceUseStatementStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AuditEventAgentNetworkType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.AddressUse\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ContactPointUse\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DeviceMetricOperationalStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ContributorType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ReferenceVersionRules\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DetectedIssueStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MeasureReportStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.SearchEntryMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.NameUse\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CommunicationRequestStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.LocationMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToInteger\\\" fromType=\\\"FHIR.integer\\\" toType=\\\"System.Integer\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.FHIRSubstanceStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.QuestionnaireItemOperator\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.HTTPVerb\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EpisodeOfCareStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.RemittanceOutcome\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.StrandType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.Status\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MedicationStatementStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.EligibilityRequestPurpose\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ServiceRequestPriority\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.QuantityComparator\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.MeasureReportType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ActionPrecheckBehavior\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DayOfWeek\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CompositionAttestationMode\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.TypeRestfulInteraction\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.ContractStatus\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.CodeSystemHierarchyMeaning\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.VisionBase\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.BundleType\\\" toType=\\\"System.String\\\"/>\\n   <conversionInfo functionName=\\\"FHIRHelpers.ToString\\\" fromType=\\\"FHIR.DocumentConfidentiality\\\" toType=\\\"System.String\\\"/>\\n   <contextInfo name=\\\"Practitioner\\\" keyElement=\\\"id\\\">\\n      <contextType namespace=\\\"FHIR\\\" name=\\\"Practitioner\\\"/>\\n   </contextInfo>\\n   <contextInfo name=\\\"Device\\\" keyElement=\\\"id\\\">\\n      <contextType namespace=\\\"FHIR\\\" name=\\\"Device\\\"/>\\n   </contextInfo>\\n   <contextInfo name=\\\"Patient\\\" keyElement=\\\"id\\\" birthDateElement=\\\"birthDate.value\\\">\\n      <contextType namespace=\\\"FHIR\\\" name=\\\"Patient\\\"/>\\n   </contextInfo>\\n   <contextInfo name=\\\"Encounter\\\" keyElement=\\\"id\\\">\\n      <contextType namespace=\\\"FHIR\\\" name=\\\"Encounter\\\"/>\\n   </contextInfo>\\n   <contextInfo name=\\\"RelatedPerson\\\" keyElement=\\\"id\\\">\\n      <contextType namespace=\\\"FHIR\\\" name=\\\"RelatedPerson\\\"/>\\n   </contextInfo>\\n</modelInfo>\";",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\nmodule.exports = Number.isFinite || function (value) {\n\treturn !(typeof value !== 'number' || value !== value || value === Infinity || value === -Infinity);\n};\n","// https://github.com/paulmillr/es6-shim\n// http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger\nvar isFinite = require(\"is-finite\");\nmodule.exports = Number.isInteger || function(val) {\n  return typeof val === \"number\" &&\n    isFinite(val) &&\n    Math.floor(val) === val;\n};\n","// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nexport class InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid DateTime: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Interval: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Duration: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nexport class InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(`Invalid unit ${unit}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nexport class ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}\n","/**\n * @private\n */\n\nconst n = \"numeric\",\n  s = \"short\",\n  l = \"long\";\n\nexport const DATE_SHORT = {\n  year: n,\n  month: n,\n  day: n\n};\n\nexport const DATE_MED = {\n  year: n,\n  month: s,\n  day: n\n};\n\nexport const DATE_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s\n};\n\nexport const DATE_FULL = {\n  year: n,\n  month: l,\n  day: n\n};\n\nexport const DATE_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l\n};\n\nexport const TIME_SIMPLE = {\n  hour: n,\n  minute: n\n};\n\nexport const TIME_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n\n};\n\nexport const TIME_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s\n};\n\nexport const TIME_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l\n};\n\nexport const TIME_24_SIMPLE = {\n  hour: n,\n  minute: n,\n  hour12: false\n};\n\n/**\n * {@link toLocaleString}; format like '09:30:23', always 24-hour.\n */\nexport const TIME_24_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n  hour12: false\n};\n\n/**\n * {@link toLocaleString}; format like '09:30:23 EDT', always 24-hour.\n */\nexport const TIME_24_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hour12: false,\n  timeZoneName: s\n};\n\n/**\n * {@link toLocaleString}; format like '09:30:23 Eastern Daylight Time', always 24-hour.\n */\nexport const TIME_24_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hour12: false,\n  timeZoneName: l\n};\n\n/**\n * {@link toLocaleString}; format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n */\nexport const DATETIME_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n\n};\n\n/**\n * {@link toLocaleString}; format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n */\nexport const DATETIME_SHORT_WITH_SECONDS = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n\n};\n\nexport const DATETIME_MED = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n\n};\n\nexport const DATETIME_MED_WITH_SECONDS = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n\n};\n\nexport const DATETIME_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n  hour: n,\n  minute: n\n};\n\nexport const DATETIME_FULL = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  timeZoneName: s\n};\n\nexport const DATETIME_FULL_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s\n};\n\nexport const DATETIME_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  timeZoneName: l\n};\n\nexport const DATETIME_HUGE_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l\n};\n","/*\n  This is just a junk drawer, containing anything used across multiple classes.\n  Because Luxon is small(ish), this should stay small and we won't worry about splitting\n  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.\n*/\n\nimport { InvalidArgumentError } from \"../errors.js\";\n\n/**\n * @private\n */\n\n// TYPES\n\nexport function isUndefined(o) {\n  return typeof o === \"undefined\";\n}\n\nexport function isNumber(o) {\n  return typeof o === \"number\";\n}\n\nexport function isInteger(o) {\n  return typeof o === \"number\" && o % 1 === 0;\n}\n\nexport function isString(o) {\n  return typeof o === \"string\";\n}\n\nexport function isDate(o) {\n  return Object.prototype.toString.call(o) === \"[object Date]\";\n}\n\n// CAPABILITIES\n\nexport function hasIntl() {\n  try {\n    return typeof Intl !== \"undefined\" && Intl.DateTimeFormat;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function hasFormatToParts() {\n  return !isUndefined(Intl.DateTimeFormat.prototype.formatToParts);\n}\n\nexport function hasRelative() {\n  try {\n    return typeof Intl !== \"undefined\" && !!Intl.RelativeTimeFormat;\n  } catch (e) {\n    return false;\n  }\n}\n\n// OBJECTS AND ARRAYS\n\nexport function maybeArray(thing) {\n  return Array.isArray(thing) ? thing : [thing];\n}\n\nexport function bestBy(arr, by, compare) {\n  if (arr.length === 0) {\n    return undefined;\n  }\n  return arr.reduce((best, next) => {\n    const pair = [by(next), next];\n    if (!best) {\n      return pair;\n    } else if (compare(best[0], pair[0]) === best[0]) {\n      return best;\n    } else {\n      return pair;\n    }\n  }, null)[1];\n}\n\nexport function pick(obj, keys) {\n  return keys.reduce((a, k) => {\n    a[k] = obj[k];\n    return a;\n  }, {});\n}\n\nexport function hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n// NUMBERS AND STRINGS\n\nexport function integerBetween(thing, bottom, top) {\n  return isInteger(thing) && thing >= bottom && thing <= top;\n}\n\n// x % n but takes the sign of n instead of x\nexport function floorMod(x, n) {\n  return x - n * Math.floor(x / n);\n}\n\nexport function padStart(input, n = 2) {\n  const minus = input < 0 ? \"-\" : \"\";\n  const target = minus ? input * -1 : input;\n  let result;\n\n  if (target.toString().length < n) {\n    result = (\"0\".repeat(n) + target).slice(-n);\n  } else {\n    result = target.toString();\n  }\n\n  return `${minus}${result}`;\n}\n\nexport function parseInteger(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseInt(string, 10);\n  }\n}\n\nexport function parseMillis(fraction) {\n  // Return undefined (instead of 0) in these cases, where fraction is not set\n  if (isUndefined(fraction) || fraction === null || fraction === \"\") {\n    return undefined;\n  } else {\n    const f = parseFloat(\"0.\" + fraction) * 1000;\n    return Math.floor(f);\n  }\n}\n\nexport function roundTo(number, digits, towardZero = false) {\n  const factor = 10 ** digits,\n    rounder = towardZero ? Math.trunc : Math.round;\n  return rounder(number * factor) / factor;\n}\n\n// DATE BASICS\n\nexport function isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nexport function daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function daysInMonth(year, month) {\n  const modMonth = floorMod(month - 1, 12) + 1,\n    modYear = year + (month - modMonth) / 12;\n\n  if (modMonth === 2) {\n    return isLeapYear(modYear) ? 29 : 28;\n  } else {\n    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];\n  }\n}\n\n// covert a calendar object to a local timestamp (epoch, but with the offset baked in)\nexport function objToLocalTS(obj) {\n  let d = Date.UTC(\n    obj.year,\n    obj.month - 1,\n    obj.day,\n    obj.hour,\n    obj.minute,\n    obj.second,\n    obj.millisecond\n  );\n\n  // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that\n  if (obj.year < 100 && obj.year >= 0) {\n    d = new Date(d);\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n  return +d;\n}\n\nexport function weeksInWeekYear(weekYear) {\n  const p1 =\n      (weekYear +\n        Math.floor(weekYear / 4) -\n        Math.floor(weekYear / 100) +\n        Math.floor(weekYear / 400)) %\n      7,\n    last = weekYear - 1,\n    p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;\n  return p1 === 4 || p2 === 3 ? 53 : 52;\n}\n\nexport function untruncateYear(year) {\n  if (year > 99) {\n    return year;\n  } else return year > 60 ? 1900 + year : 2000 + year;\n}\n\n// PARSING\n\nexport function parseZoneInfo(ts, offsetFormat, locale, timeZone = null) {\n  const date = new Date(ts),\n    intlOpts = {\n      hour12: false,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n\n  if (timeZone) {\n    intlOpts.timeZone = timeZone;\n  }\n\n  const modified = Object.assign({ timeZoneName: offsetFormat }, intlOpts),\n    intl = hasIntl();\n\n  if (intl && hasFormatToParts()) {\n    const parsed = new Intl.DateTimeFormat(locale, modified)\n      .formatToParts(date)\n      .find(m => m.type.toLowerCase() === \"timezonename\");\n    return parsed ? parsed.value : null;\n  } else if (intl) {\n    // this probably doesn't work for all locales\n    const without = new Intl.DateTimeFormat(locale, intlOpts).format(date),\n      included = new Intl.DateTimeFormat(locale, modified).format(date),\n      diffed = included.substring(without.length),\n      trimmed = diffed.replace(/^[, \\u200e]+/, \"\");\n    return trimmed;\n  } else {\n    return null;\n  }\n}\n\n// signedOffset('-5', '30') -> -330\nexport function signedOffset(offHourStr, offMinuteStr) {\n  let offHour = parseInt(offHourStr, 10);\n\n  // don't || this because we want to preserve -0\n  if (Number.isNaN(offHour)) {\n    offHour = 0;\n  }\n\n  const offMin = parseInt(offMinuteStr, 10) || 0,\n    offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;\n  return offHour * 60 + offMinSigned;\n}\n\n// COERCION\n\nexport function asNumber(value) {\n  const numericValue = Number(value);\n  if (typeof value === \"boolean\" || value === \"\" || Number.isNaN(numericValue))\n    throw new InvalidArgumentError(`Invalid unit value ${value}`);\n  return numericValue;\n}\n\nexport function normalizeObject(obj, normalizer, nonUnitKeys) {\n  const normalized = {};\n  for (const u in obj) {\n    if (hasOwnProperty(obj, u)) {\n      if (nonUnitKeys.indexOf(u) >= 0) continue;\n      const v = obj[u];\n      if (v === undefined || v === null) continue;\n      normalized[normalizer(u)] = asNumber(v);\n    }\n  }\n  return normalized;\n}\n\nexport function formatOffset(offset, format) {\n  const hours = Math.trunc(Math.abs(offset / 60)),\n    minutes = Math.trunc(Math.abs(offset % 60)),\n    sign = offset >= 0 ? \"+\" : \"-\";\n\n  switch (format) {\n    case \"short\":\n      return `${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;\n    case \"narrow\":\n      return `${sign}${hours}${minutes > 0 ? `:${minutes}` : \"\"}`;\n    case \"techie\":\n      return `${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;\n    default:\n      throw new RangeError(`Value format ${format} is out of range for property format`);\n  }\n}\n\nexport function timeObject(obj) {\n  return pick(obj, [\"hour\", \"minute\", \"second\", \"millisecond\"]);\n}\n\nexport const ianaRegex = /[A-Za-z_+-]{1,256}(:?\\/[A-Za-z_+-]{1,256}(\\/[A-Za-z_+-]{1,256})?)?/;\n","import * as Formats from \"./formats.js\";\nimport { pick } from \"./util.js\";\n\nfunction stringify(obj) {\n  return JSON.stringify(obj, Object.keys(obj).sort());\n}\n\n/**\n * @private\n */\n\nexport const monthsLong = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nexport const monthsShort = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n\nexport const monthsNarrow = [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"];\n\nexport function months(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...monthsNarrow];\n    case \"short\":\n      return [...monthsShort];\n    case \"long\":\n      return [...monthsLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n    case \"2-digit\":\n      return [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    default:\n      return null;\n  }\n}\n\nexport const weekdaysLong = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\"\n];\n\nexport const weekdaysShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\nexport const weekdaysNarrow = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n\nexport function weekdays(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...weekdaysNarrow];\n    case \"short\":\n      return [...weekdaysShort];\n    case \"long\":\n      return [...weekdaysLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n    default:\n      return null;\n  }\n}\n\nexport const meridiems = [\"AM\", \"PM\"];\n\nexport const erasLong = [\"Before Christ\", \"Anno Domini\"];\n\nexport const erasShort = [\"BC\", \"AD\"];\n\nexport const erasNarrow = [\"B\", \"A\"];\n\nexport function eras(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...erasNarrow];\n    case \"short\":\n      return [...erasShort];\n    case \"long\":\n      return [...erasLong];\n    default:\n      return null;\n  }\n}\n\nexport function meridiemForDateTime(dt) {\n  return meridiems[dt.hour < 12 ? 0 : 1];\n}\n\nexport function weekdayForDateTime(dt, length) {\n  return weekdays(length)[dt.weekday - 1];\n}\n\nexport function monthForDateTime(dt, length) {\n  return months(length)[dt.month - 1];\n}\n\nexport function eraForDateTime(dt, length) {\n  return eras(length)[dt.year < 0 ? 0 : 1];\n}\n\nexport function formatRelativeTime(unit, count, numeric = \"always\", narrow = false) {\n  const units = {\n    years: [\"year\", \"yr.\"],\n    quarters: [\"quarter\", \"qtr.\"],\n    months: [\"month\", \"mo.\"],\n    weeks: [\"week\", \"wk.\"],\n    days: [\"day\", \"day\", \"days\"],\n    hours: [\"hour\", \"hr.\"],\n    minutes: [\"minute\", \"min.\"],\n    seconds: [\"second\", \"sec.\"]\n  };\n\n  const lastable = [\"hours\", \"minutes\", \"seconds\"].indexOf(unit) === -1;\n\n  if (numeric === \"auto\" && lastable) {\n    const isDay = unit === \"days\";\n    switch (count) {\n      case 1:\n        return isDay ? \"tomorrow\" : `next ${units[unit][0]}`;\n      case -1:\n        return isDay ? \"yesterday\" : `last ${units[unit][0]}`;\n      case 0:\n        return isDay ? \"today\" : `this ${units[unit][0]}`;\n      default: // fall through\n    }\n  }\n\n  const isInPast = Object.is(count, -0) || count < 0,\n    fmtValue = Math.abs(count),\n    singular = fmtValue === 1,\n    lilUnits = units[unit],\n    fmtUnit = narrow\n      ? singular\n        ? lilUnits[1]\n        : lilUnits[2] || lilUnits[1]\n      : singular\n        ? units[unit][0]\n        : unit;\n  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;\n}\n\nexport function formatString(knownFormat) {\n  // these all have the offsets removed because we don't have access to them\n  // without all the intl stuff this is backfilling\n  const filtered = pick(knownFormat, [\n      \"weekday\",\n      \"era\",\n      \"year\",\n      \"month\",\n      \"day\",\n      \"hour\",\n      \"minute\",\n      \"second\",\n      \"timeZoneName\",\n      \"hour12\"\n    ]),\n    key = stringify(filtered),\n    dateTimeHuge = \"EEEE, LLLL d, yyyy, h:mm a\";\n  switch (key) {\n    case stringify(Formats.DATE_SHORT):\n      return \"M/d/yyyy\";\n    case stringify(Formats.DATE_MED):\n      return \"LLL d, yyyy\";\n    case stringify(Formats.DATE_MED_WITH_WEEKDAY):\n      return \"EEE, LLL d, yyyy\";\n    case stringify(Formats.DATE_FULL):\n      return \"LLLL d, yyyy\";\n    case stringify(Formats.DATE_HUGE):\n      return \"EEEE, LLLL d, yyyy\";\n    case stringify(Formats.TIME_SIMPLE):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_SECONDS):\n      return \"h:mm:ss a\";\n    case stringify(Formats.TIME_WITH_SHORT_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_LONG_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_24_SIMPLE):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_SECONDS):\n      return \"HH:mm:ss\";\n    case stringify(Formats.TIME_24_WITH_SHORT_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_LONG_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.DATETIME_SHORT):\n      return \"M/d/yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_MED):\n      return \"LLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL):\n      return \"LLLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_HUGE):\n      return dateTimeHuge;\n    case stringify(Formats.DATETIME_SHORT_WITH_SECONDS):\n      return \"M/d/yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_SECONDS):\n      return \"LLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_WEEKDAY):\n      return \"EEE, d LLL yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL_WITH_SECONDS):\n      return \"LLLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_HUGE_WITH_SECONDS):\n      return \"EEEE, LLLL d, yyyy, h:mm:ss a\";\n    default:\n      return dateTimeHuge;\n  }\n}\n","import * as English from \"./english.js\";\nimport * as Formats from \"./formats.js\";\nimport { hasFormatToParts, padStart } from \"./util.js\";\n\nfunction stringifyTokens(splits, tokenToString) {\n  let s = \"\";\n  for (const token of splits) {\n    if (token.literal) {\n      s += token.val;\n    } else {\n      s += tokenToString(token.val);\n    }\n  }\n  return s;\n}\n\nconst macroTokenToFormatOpts = {\n  D: Formats.DATE_SHORT,\n  DD: Formats.DATE_MED,\n  DDD: Formats.DATE_FULL,\n  DDDD: Formats.DATE_HUGE,\n  t: Formats.TIME_SIMPLE,\n  tt: Formats.TIME_WITH_SECONDS,\n  ttt: Formats.TIME_WITH_SHORT_OFFSET,\n  tttt: Formats.TIME_WITH_LONG_OFFSET,\n  T: Formats.TIME_24_SIMPLE,\n  TT: Formats.TIME_24_WITH_SECONDS,\n  TTT: Formats.TIME_24_WITH_SHORT_OFFSET,\n  TTTT: Formats.TIME_24_WITH_LONG_OFFSET,\n  f: Formats.DATETIME_SHORT,\n  ff: Formats.DATETIME_MED,\n  fff: Formats.DATETIME_FULL,\n  ffff: Formats.DATETIME_HUGE,\n  F: Formats.DATETIME_SHORT_WITH_SECONDS,\n  FF: Formats.DATETIME_MED_WITH_SECONDS,\n  FFF: Formats.DATETIME_FULL_WITH_SECONDS,\n  FFFF: Formats.DATETIME_HUGE_WITH_SECONDS\n};\n\n/**\n * @private\n */\n\nexport default class Formatter {\n  static create(locale, opts = {}) {\n    return new Formatter(locale, opts);\n  }\n\n  static parseFormat(fmt) {\n    let current = null,\n      currentFull = \"\",\n      bracketed = false;\n    const splits = [];\n    for (let i = 0; i < fmt.length; i++) {\n      const c = fmt.charAt(i);\n      if (c === \"'\") {\n        if (currentFull.length > 0) {\n          splits.push({ literal: bracketed, val: currentFull });\n        }\n        current = null;\n        currentFull = \"\";\n        bracketed = !bracketed;\n      } else if (bracketed) {\n        currentFull += c;\n      } else if (c === current) {\n        currentFull += c;\n      } else {\n        if (currentFull.length > 0) {\n          splits.push({ literal: false, val: currentFull });\n        }\n        currentFull = c;\n        current = c;\n      }\n    }\n\n    if (currentFull.length > 0) {\n      splits.push({ literal: bracketed, val: currentFull });\n    }\n\n    return splits;\n  }\n\n  static macroTokenToFormatOpts(token) {\n    return macroTokenToFormatOpts[token];\n  }\n\n  constructor(locale, formatOpts) {\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n\n  formatWithSystemDefault(dt, opts) {\n    if (this.systemLoc === null) {\n      this.systemLoc = this.loc.redefaultToSystem();\n    }\n    const df = this.systemLoc.dtFormatter(dt, Object.assign({}, this.opts, opts));\n    return df.format();\n  }\n\n  formatDateTime(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));\n    return df.format();\n  }\n\n  formatDateTimeParts(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));\n    return df.formatToParts();\n  }\n\n  resolvedOptions(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));\n    return df.resolvedOptions();\n  }\n\n  num(n, p = 0) {\n    // we get some perf out of doing this here, annoyingly\n    if (this.opts.forceSimple) {\n      return padStart(n, p);\n    }\n\n    const opts = Object.assign({}, this.opts);\n\n    if (p > 0) {\n      opts.padTo = p;\n    }\n\n    return this.loc.numberFormatter(opts).format(n);\n  }\n\n  formatDateTimeFromString(dt, fmt) {\n    const knownEnglish = this.loc.listingMode() === \"en\",\n      useDateTimeFormatter =\n        this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\" && hasFormatToParts(),\n      string = (opts, extract) => this.loc.extract(dt, opts, extract),\n      formatOffset = opts => {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n      meridiem = () =>\n        knownEnglish\n          ? English.meridiemForDateTime(dt)\n          : string({ hour: \"numeric\", hour12: true }, \"dayperiod\"),\n      month = (length, standalone) =>\n        knownEnglish\n          ? English.monthForDateTime(dt, length)\n          : string(standalone ? { month: length } : { month: length, day: \"numeric\" }, \"month\"),\n      weekday = (length, standalone) =>\n        knownEnglish\n          ? English.weekdayForDateTime(dt, length)\n          : string(\n              standalone ? { weekday: length } : { weekday: length, month: \"long\", day: \"numeric\" },\n              \"weekday\"\n            ),\n      maybeMacro = token => {\n        const formatOpts = Formatter.macroTokenToFormatOpts(token);\n        if (formatOpts) {\n          return this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n      era = length =>\n        knownEnglish ? English.eraForDateTime(dt, length) : string({ era: length }, \"era\"),\n      tokenToString = token => {\n        // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles\n        switch (token) {\n          // ms\n          case \"S\":\n            return this.num(dt.millisecond);\n          case \"u\":\n          // falls through\n          case \"SSS\":\n            return this.num(dt.millisecond, 3);\n          // seconds\n          case \"s\":\n            return this.num(dt.second);\n          case \"ss\":\n            return this.num(dt.second, 2);\n          // minutes\n          case \"m\":\n            return this.num(dt.minute);\n          case \"mm\":\n            return this.num(dt.minute, 2);\n          // hours\n          case \"h\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n          case \"hh\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n          case \"H\":\n            return this.num(dt.hour);\n          case \"HH\":\n            return this.num(dt.hour, 2);\n          // offset\n          case \"Z\":\n            // like +6\n            return formatOffset({ format: \"narrow\", allowZ: this.opts.allowZ });\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({ format: \"short\", allowZ: this.opts.allowZ });\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({ format: \"techie\", allowZ: this.opts.allowZ });\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, { format: \"short\", locale: this.loc.locale });\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, { format: \"long\", locale: this.loc.locale });\n          // zone\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n          case \"a\":\n            return meridiem();\n          // dates\n          case \"d\":\n            return useDateTimeFormatter ? string({ day: \"numeric\" }, \"day\") : this.num(dt.day);\n          case \"dd\":\n            return useDateTimeFormatter ? string({ day: \"2-digit\" }, \"day\") : this.num(dt.day, 2);\n          // weekdays - standalone\n          case \"c\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n          case \"E\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({ year: \"numeric\" }, \"year\") : this.num(dt.year);\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter\n              ? string({ year: \"2-digit\" }, \"year\")\n              : this.num(dt.year.toString().slice(-2), 2);\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 4);\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 6);\n          // eras\n          case \"G\":\n            // like AD\n            return era(\"short\");\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n          case \"GGGGG\":\n            return era(\"narrow\");\n          case \"kk\":\n            return this.num(dt.weekYear.toString().slice(-2), 2);\n          case \"kkkk\":\n            return this.num(dt.weekYear, 4);\n          case \"W\":\n            return this.num(dt.weekNumber);\n          case \"WW\":\n            return this.num(dt.weekNumber, 2);\n          case \"o\":\n            return this.num(dt.ordinal);\n          case \"ooo\":\n            return this.num(dt.ordinal, 3);\n          case \"q\":\n            // like 1\n            return this.num(dt.quarter);\n          case \"qq\":\n            // like 01\n            return this.num(dt.quarter, 2);\n          case \"X\":\n            return this.num(Math.floor(dt.ts / 1000));\n          case \"x\":\n            return this.num(dt.ts);\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n  }\n\n  formatDurationFromString(dur, fmt) {\n    const tokenToField = token => {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n          case \"s\":\n            return \"second\";\n          case \"m\":\n            return \"minute\";\n          case \"h\":\n            return \"hour\";\n          case \"d\":\n            return \"day\";\n          case \"M\":\n            return \"month\";\n          case \"y\":\n            return \"year\";\n          default:\n            return null;\n        }\n      },\n      tokenToString = lildur => token => {\n        const mapped = tokenToField(token);\n        if (mapped) {\n          return this.num(lildur.get(mapped), token.length);\n        } else {\n          return token;\n        }\n      },\n      tokens = Formatter.parseFormat(fmt),\n      realTokens = tokens.reduce(\n        (found, { literal, val }) => (literal ? found : found.concat(val)),\n        []\n      ),\n      collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter(t => t));\n    return stringifyTokens(tokens, tokenToString(collapsed));\n  }\n}\n","export default class Invalid {\n  constructor(reason, explanation) {\n    this.reason = reason;\n    this.explanation = explanation;\n  }\n\n  toMessage() {\n    if (this.explanation) {\n      return `${this.reason}: ${this.explanation}`;\n    } else {\n      return this.reason;\n    }\n  }\n}\n","/* eslint no-unused-vars: \"off\" */\nimport { ZoneIsAbstractError } from \"./errors.js\";\n\n/**\n * @interface\n */\nexport default class Zone {\n  /**\n   * The type of zone\n   * @abstract\n   * @type {string}\n   */\n  get type() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * The name of this zone.\n   * @abstract\n   * @type {string}\n   */\n  get name() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year.\n   * @abstract\n   * @type {boolean}\n   */\n  get universal() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's common name (such as EST) at the specified timestamp\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the name\n   * @param {Object} opts - Options to affect the format\n   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n   * @param {string} opts.locale - What locale to return the offset name in.\n   * @return {string}\n   */\n  offsetName(ts, opts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to compute the offset\n   * @return {number}\n   */\n  offset(ts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone\n   * @abstract\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is valid.\n   * @abstract\n   * @type {boolean}\n   */\n  get isValid() {\n    throw new ZoneIsAbstractError();\n  }\n}\n","import { formatOffset, parseZoneInfo, hasIntl } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nexport default class LocalZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {LocalZone}\n   */\n  static get instance() {\n    if (singleton === null) {\n      singleton = new LocalZone();\n    }\n    return singleton;\n  }\n\n  /** @override **/\n  get type() {\n    return \"local\";\n  }\n\n  /** @override **/\n  get name() {\n    if (hasIntl()) {\n      return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n    } else return \"local\";\n  }\n\n  /** @override **/\n  get universal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"local\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n","import { formatOffset, parseZoneInfo, isUndefined, ianaRegex, objToLocalTS } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nconst matchingRegex = RegExp(`^${ianaRegex.source}$`);\n\nlet dtfCache = {};\nfunction makeDTF(zone) {\n  if (!dtfCache[zone]) {\n    dtfCache[zone] = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: zone,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n  }\n  return dtfCache[zone];\n}\n\nconst typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  hour: 3,\n  minute: 4,\n  second: 5\n};\n\nfunction hackyOffset(dtf, date) {\n  const formatted = dtf.format(date).replace(/\\u200E/g, \"\"),\n    parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted),\n    [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed;\n  return [fYear, fMonth, fDay, fHour, fMinute, fSecond];\n}\n\nfunction partsOffset(dtf, date) {\n  const formatted = dtf.formatToParts(date),\n    filled = [];\n  for (let i = 0; i < formatted.length; i++) {\n    const { type, value } = formatted[i],\n      pos = typeToPos[type];\n\n    if (!isUndefined(pos)) {\n      filled[pos] = parseInt(value, 10);\n    }\n  }\n  return filled;\n}\n\nlet ianaZoneCache = {};\n/**\n * A zone identified by an IANA identifier, like America/New_York\n * @implements {Zone}\n */\nexport default class IANAZone extends Zone {\n  /**\n   * @param {string} name - Zone name\n   * @return {IANAZone}\n   */\n  static create(name) {\n    if (!ianaZoneCache[name]) {\n      ianaZoneCache[name] = new IANAZone(name);\n    }\n    return ianaZoneCache[name];\n  }\n\n  /**\n   * Reset local caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCache() {\n    ianaZoneCache = {};\n    dtfCache = {};\n  }\n\n  /**\n   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.\n   * @param {string} s - The string to check validity on\n   * @example IANAZone.isValidSpecifier(\"America/New_York\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Fantasia/Castle\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidSpecifier(s) {\n    return !!(s && s.match(matchingRegex));\n  }\n\n  /**\n   * Returns whether the provided string identifies a real zone\n   * @param {string} zone - The string to check\n   * @example IANAZone.isValidZone(\"America/New_York\") //=> true\n   * @example IANAZone.isValidZone(\"Fantasia/Castle\") //=> false\n   * @example IANAZone.isValidZone(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidZone(zone) {\n    try {\n      new Intl.DateTimeFormat(\"en-US\", { timeZone: zone }).format();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  // Etc/GMT+8 -> -480\n  /** @ignore */\n  static parseGMTOffset(specifier) {\n    if (specifier) {\n      const match = specifier.match(/^Etc\\/GMT(0|[+-]\\d{1,2})$/i);\n      if (match) {\n        return -60 * parseInt(match[1]);\n      }\n    }\n    return null;\n  }\n\n  constructor(name) {\n    super();\n    /** @private **/\n    this.zoneName = name;\n    /** @private **/\n    this.valid = IANAZone.isValidZone(name);\n  }\n\n  /** @override **/\n  get type() {\n    return \"iana\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get universal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale, this.name);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    const date = new Date(ts);\n\n    if (isNaN(date)) return NaN;\n\n    const dtf = makeDTF(this.name),\n      [year, month, day, hour, minute, second] = dtf.formatToParts\n        ? partsOffset(dtf, date)\n        : hackyOffset(dtf, date),\n      // work around https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat\n      adjustedHour = hour === 24 ? 0 : hour;\n\n    const asUTC = objToLocalTS({\n      year,\n      month,\n      day,\n      hour: adjustedHour,\n      minute,\n      second,\n      millisecond: 0\n    });\n\n    let asTS = +date;\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return (asUTC - asTS) / (60 * 1000);\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"iana\" && otherZone.name === this.name;\n  }\n\n  /** @override **/\n  get isValid() {\n    return this.valid;\n  }\n}\n","import { formatOffset, signedOffset } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nexport default class FixedOffsetZone extends Zone {\n  /**\n   * Get a singleton instance of UTC\n   * @return {FixedOffsetZone}\n   */\n  static get utcInstance() {\n    if (singleton === null) {\n      singleton = new FixedOffsetZone(0);\n    }\n    return singleton;\n  }\n\n  /**\n   * Get an instance with a specified offset\n   * @param {number} offset - The offset in minutes\n   * @return {FixedOffsetZone}\n   */\n  static instance(offset) {\n    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n  }\n\n  /**\n   * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n   * @param {string} s - The offset string to parse\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n   * @return {FixedOffsetZone}\n   */\n  static parseSpecifier(s) {\n    if (s) {\n      const r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n      if (r) {\n        return new FixedOffsetZone(signedOffset(r[1], r[2]));\n      }\n    }\n    return null;\n  }\n\n  constructor(offset) {\n    super();\n    /** @private **/\n    this.fixed = offset;\n  }\n\n  /** @override **/\n  get type() {\n    return \"fixed\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.fixed === 0 ? \"UTC\" : `UTC${formatOffset(this.fixed, \"narrow\")}`;\n  }\n\n  /** @override **/\n  offsetName() {\n    return this.name;\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.fixed, format);\n  }\n\n  /** @override **/\n  get universal() {\n    return true;\n  }\n\n  /** @override **/\n  offset() {\n    return this.fixed;\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n","import Zone from \"../zone.js\";\n\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\nexport default class InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n    this.zoneName = zoneName;\n  }\n\n  /** @override **/\n  get type() {\n    return \"invalid\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get universal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName() {\n    return null;\n  }\n\n  /** @override **/\n  formatOffset() {\n    return \"\";\n  }\n\n  /** @override **/\n  offset() {\n    return NaN;\n  }\n\n  /** @override **/\n  equals() {\n    return false;\n  }\n\n  /** @override **/\n  get isValid() {\n    return false;\n  }\n}\n","/**\n * @private\n */\n\nimport Zone from \"../zone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport InvalidZone from \"../zones/invalidZone.js\";\n\nimport { isUndefined, isString, isNumber } from \"./util.js\";\n\nexport function normalizeZone(input, defaultZone) {\n  let offset;\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"local\") return defaultZone;\n    else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;\n    else if ((offset = IANAZone.parseGMTOffset(input)) != null) {\n      // handle Etc/GMT-4, which V8 chokes on\n      return FixedOffsetZone.instance(offset);\n    } else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);\n    else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && input.offset && typeof input.offset === \"number\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}\n","import LocalZone from \"./zones/localZone.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport Locale from \"./impl/locale.js\";\n\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nlet now = () => Date.now(),\n  defaultZone = null, // not setting this directly to LocalZone.instance bc loading order issues\n  defaultLocale = null,\n  defaultNumberingSystem = null,\n  defaultOutputCalendar = null,\n  throwOnInvalid = false;\n\n/**\n * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.\n */\nexport default class Settings {\n  /**\n   * Get the callback for returning the current timestamp.\n   * @type {function}\n   */\n  static get now() {\n    return now;\n  }\n\n  /**\n   * Set the callback for returning the current timestamp.\n   * The function should return a number, which will be interpreted as an Epoch millisecond count\n   * @type {function}\n   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future\n   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time\n   */\n  static set now(n) {\n    now = n;\n  }\n\n  /**\n   * Get the default time zone to create DateTimes in.\n   * @type {string}\n   */\n  static get defaultZoneName() {\n    return Settings.defaultZone.name;\n  }\n\n  /**\n   * Set the default time zone to create DateTimes in. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultZoneName(z) {\n    if (!z) {\n      defaultZone = null;\n    } else {\n      defaultZone = normalizeZone(z);\n    }\n  }\n\n  /**\n   * Get the default time zone object to create DateTimes in. Does not affect existing instances.\n   * @type {Zone}\n   */\n  static get defaultZone() {\n    return defaultZone || LocalZone.instance;\n  }\n\n  /**\n   * Get the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultLocale() {\n    return defaultLocale;\n  }\n\n  /**\n   * Set the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultLocale(locale) {\n    defaultLocale = locale;\n  }\n\n  /**\n   * Get the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultNumberingSystem() {\n    return defaultNumberingSystem;\n  }\n\n  /**\n   * Set the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultNumberingSystem(numberingSystem) {\n    defaultNumberingSystem = numberingSystem;\n  }\n\n  /**\n   * Get the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultOutputCalendar() {\n    return defaultOutputCalendar;\n  }\n\n  /**\n   * Set the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultOutputCalendar(outputCalendar) {\n    defaultOutputCalendar = outputCalendar;\n  }\n\n  /**\n   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static get throwOnInvalid() {\n    return throwOnInvalid;\n  }\n\n  /**\n   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static set throwOnInvalid(t) {\n    throwOnInvalid = t;\n  }\n\n  /**\n   * Reset Luxon's global caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCaches() {\n    Locale.resetCache();\n    IANAZone.resetCache();\n  }\n}\n","import { hasFormatToParts, hasIntl, padStart, roundTo, hasRelative } from \"./util.js\";\nimport * as English from \"./english.js\";\nimport Settings from \"../settings.js\";\nimport DateTime from \"../datetime.js\";\nimport Formatter from \"./formatter.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\nlet intlDTCache = {};\nfunction getCachedDTF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlNumCache = {};\nfunction getCachedINF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\n\nlet intlRelCache = {};\nfunction getCachedRTF(locString, opts = {}) {\n  const { base, ...cacheKeyOpts } = opts; // exclude `base` from the options\n  const key = JSON.stringify([locString, cacheKeyOpts]);\n  let inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\n\nlet sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else if (hasIntl()) {\n    const computedSys = new Intl.DateTimeFormat().resolvedOptions().locale;\n    // node sometimes defaults to \"und\". Override that because that is dumb\n    sysLocaleCache = !computedSys || computedSys === \"und\" ? \"en-US\" : computedSys;\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = \"en-US\";\n    return sysLocaleCache;\n  }\n}\n\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  const uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    let options;\n    const smaller = localeStr.substring(0, uIndex);\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n    } catch (e) {\n      options = getCachedDTF(smaller).resolvedOptions();\n    }\n\n    const { numberingSystem, calendar } = options;\n    // return the smaller one so that we can append the calendar and numbering overrides to it\n    return [smaller, numberingSystem, calendar];\n  }\n}\n\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (hasIntl()) {\n    if (outputCalendar || numberingSystem) {\n      localeStr += \"-u\";\n\n      if (outputCalendar) {\n        localeStr += `-ca-${outputCalendar}`;\n      }\n\n      if (numberingSystem) {\n        localeStr += `-nu-${numberingSystem}`;\n      }\n      return localeStr;\n    } else {\n      return localeStr;\n    }\n  } else {\n    return [];\n  }\n}\n\nfunction mapMonths(f) {\n  const ms = [];\n  for (let i = 1; i <= 12; i++) {\n    const dt = DateTime.utc(2016, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction mapWeekdays(f) {\n  const ms = [];\n  for (let i = 1; i <= 7; i++) {\n    const dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction listStuff(loc, length, defaultOK, englishFn, intlFn) {\n  const mode = loc.listingMode(defaultOK);\n\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\n\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return (\n      loc.numberingSystem === \"latn\" ||\n      !loc.locale ||\n      loc.locale.startsWith(\"en\") ||\n      (hasIntl() && new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\")\n    );\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyNumberFormatter {\n  constructor(intl, forceSimple, opts) {\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n\n    if (!forceSimple && hasIntl()) {\n      const intlOpts = { useGrouping: false };\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n\n  format(i) {\n    if (this.inf) {\n      const fixed = this.floor ? Math.floor(i) : i;\n      return this.inf.format(fixed);\n    } else {\n      // to match the browser's numberformatter defaults\n      const fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n      return padStart(fixed, this.padTo);\n    }\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyDateFormatter {\n  constructor(dt, intl, opts) {\n    this.opts = opts;\n    this.hasIntl = hasIntl();\n\n    let z;\n    if (dt.zone.universal && this.hasIntl) {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      const gmtOffset = -1 * (dt.offset / 60);\n      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;\n      const isOffsetZoneSupported = IANAZone.isValidZone(offsetZ);\n      if (dt.offset !== 0 && isOffsetZoneSupported) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata.\n        // So we have to make do. Two cases:\n        // 1. The format options tell us to show the zone. We can't do that, so the best\n        // we can do is format the date in UTC.\n        // 2. The format options don't tell us to show the zone. Then we can adjust them\n        // the time and tell the formatter to show it to us in UTC, so that the time is right\n        // and the bad zone doesn't show up.\n        z = \"UTC\";\n        if (opts.timeZoneName) {\n          this.dt = dt;\n        } else {\n          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);\n        }\n      }\n    } else if (dt.zone.type === \"local\") {\n      this.dt = dt;\n    } else {\n      this.dt = dt;\n      z = dt.zone.name;\n    }\n\n    if (this.hasIntl) {\n      const intlOpts = Object.assign({}, this.opts);\n      if (z) {\n        intlOpts.timeZone = z;\n      }\n      this.dtf = getCachedDTF(intl, intlOpts);\n    }\n  }\n\n  format() {\n    if (this.hasIntl) {\n      return this.dtf.format(this.dt.toJSDate());\n    } else {\n      const tokenFormat = English.formatString(this.opts),\n        loc = Locale.create(\"en-US\");\n      return Formatter.create(loc).formatDateTimeFromString(this.dt, tokenFormat);\n    }\n  }\n\n  formatToParts() {\n    if (this.hasIntl && hasFormatToParts()) {\n      return this.dtf.formatToParts(this.dt.toJSDate());\n    } else {\n      // This is kind of a cop out. We actually could do this for English. However, we couldn't do it for intl strings\n      // and IMO it's too weird to have an uncanny valley like that\n      return [];\n    }\n  }\n\n  resolvedOptions() {\n    if (this.hasIntl) {\n      return this.dtf.resolvedOptions();\n    } else {\n      return {\n        locale: \"en-US\",\n        numberingSystem: \"latn\",\n        outputCalendar: \"gregory\"\n      };\n    }\n  }\n}\n\n/**\n * @private\n */\nclass PolyRelFormatter {\n  constructor(intl, isEnglish, opts) {\n    this.opts = Object.assign({ style: \"long\" }, opts);\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n\n  format(count, unit) {\n    if (this.rtf) {\n      return this.rtf.format(count, unit);\n    } else {\n      return English.formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n    }\n  }\n\n  formatToParts(count, unit) {\n    if (this.rtf) {\n      return this.rtf.formatToParts(count, unit);\n    } else {\n      return [];\n    }\n  }\n}\n\n/**\n * @private\n */\n\nexport default class Locale {\n  static fromOpts(opts) {\n    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);\n  }\n\n  static create(locale, numberingSystem, outputCalendar, defaultToEN = false) {\n    const specifiedLocale = locale || Settings.defaultLocale,\n      // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n      localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale()),\n      numberingSystemR = numberingSystem || Settings.defaultNumberingSystem,\n      outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);\n  }\n\n  static resetCache() {\n    sysLocaleCache = null;\n    intlDTCache = {};\n    intlNumCache = {};\n    intlRelCache = {};\n  }\n\n  static fromObject({ locale, numberingSystem, outputCalendar } = {}) {\n    return Locale.create(locale, numberingSystem, outputCalendar);\n  }\n\n  constructor(locale, numbering, outputCalendar, specifiedLocale) {\n    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);\n\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n\n    this.weekdaysCache = { format: {}, standalone: {} };\n    this.monthsCache = { format: {}, standalone: {} };\n    this.meridiemCache = null;\n    this.eraCache = {};\n\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n\n  get fastNumbers() {\n    if (this.fastNumbersCached == null) {\n      this.fastNumbersCached = supportsFastNumbers(this);\n    }\n\n    return this.fastNumbersCached;\n  }\n\n  listingMode(defaultOK = true) {\n    const intl = hasIntl(),\n      hasFTP = intl && hasFormatToParts(),\n      isActuallyEn = this.isEnglish(),\n      hasNoWeirdness =\n        (this.numberingSystem === null || this.numberingSystem === \"latn\") &&\n        (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n\n    if (!hasFTP && !(isActuallyEn && hasNoWeirdness) && !defaultOK) {\n      return \"error\";\n    } else if (!hasFTP || (isActuallyEn && hasNoWeirdness)) {\n      return \"en\";\n    } else {\n      return \"intl\";\n    }\n  }\n\n  clone(alts) {\n    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n      return this;\n    } else {\n      return Locale.create(\n        alts.locale || this.specifiedLocale,\n        alts.numberingSystem || this.numberingSystem,\n        alts.outputCalendar || this.outputCalendar,\n        alts.defaultToEN || false\n      );\n    }\n  }\n\n  redefaultToEN(alts = {}) {\n    return this.clone(Object.assign({}, alts, { defaultToEN: true }));\n  }\n\n  redefaultToSystem(alts = {}) {\n    return this.clone(Object.assign({}, alts, { defaultToEN: false }));\n  }\n\n  months(length, format = false, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.months, () => {\n      const intl = format ? { month: length, day: \"numeric\" } : { month: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.monthsCache[formatStr][length]) {\n        this.monthsCache[formatStr][length] = mapMonths(dt => this.extract(dt, intl, \"month\"));\n      }\n      return this.monthsCache[formatStr][length];\n    });\n  }\n\n  weekdays(length, format = false, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.weekdays, () => {\n      const intl = format\n          ? { weekday: length, year: \"numeric\", month: \"long\", day: \"numeric\" }\n          : { weekday: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.weekdaysCache[formatStr][length]) {\n        this.weekdaysCache[formatStr][length] = mapWeekdays(dt =>\n          this.extract(dt, intl, \"weekday\")\n        );\n      }\n      return this.weekdaysCache[formatStr][length];\n    });\n  }\n\n  meridiems(defaultOK = true) {\n    return listStuff(\n      this,\n      undefined,\n      defaultOK,\n      () => English.meridiems,\n      () => {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!this.meridiemCache) {\n          const intl = { hour: \"numeric\", hour12: true };\n          this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(\n            dt => this.extract(dt, intl, \"dayperiod\")\n          );\n        }\n\n        return this.meridiemCache;\n      }\n    );\n  }\n\n  eras(length, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.eras, () => {\n      const intl = { era: length };\n\n      // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n      // to definitely enumerate them.\n      if (!this.eraCache[length]) {\n        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(dt =>\n          this.extract(dt, intl, \"era\")\n        );\n      }\n\n      return this.eraCache[length];\n    });\n  }\n\n  extract(dt, intlOpts, field) {\n    const df = this.dtFormatter(dt, intlOpts),\n      results = df.formatToParts(),\n      matching = results.find(m => m.type.toLowerCase() === field);\n    return matching ? matching.value : null;\n  }\n\n  numberFormatter(opts = {}) {\n    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n    // (in contrast, the rest of the condition is used heavily)\n    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n  }\n\n  dtFormatter(dt, intlOpts = {}) {\n    return new PolyDateFormatter(dt, this.intl, intlOpts);\n  }\n\n  relFormatter(opts = {}) {\n    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n  }\n\n  isEnglish() {\n    return (\n      this.locale === \"en\" ||\n      this.locale.toLowerCase() === \"en-us\" ||\n      (hasIntl() && new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\"))\n    );\n  }\n\n  equals(other) {\n    return (\n      this.locale === other.locale &&\n      this.numberingSystem === other.numberingSystem &&\n      this.outputCalendar === other.outputCalendar\n    );\n  }\n}\n","import {\n  untruncateYear,\n  signedOffset,\n  parseInteger,\n  parseMillis,\n  ianaRegex,\n  isUndefined\n} from \"./util.js\";\nimport * as English from \"./english.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n/*\n * This file handles parsing for well-specified formats. Here's how it works:\n * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.\n * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object\n * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.\n * Extractors can take a \"cursor\" representing the offset in the match to look at. This makes it easy to combine extractors.\n * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.\n * Some extractions are super dumb and simpleParse and fromStrings help DRY them.\n */\n\nfunction combineRegexes(...regexes) {\n  const full = regexes.reduce((f, r) => f + r.source, \"\");\n  return RegExp(`^${full}$`);\n}\n\nfunction combineExtractors(...extractors) {\n  return m =>\n    extractors\n      .reduce(\n        ([mergedVals, mergedZone, cursor], ex) => {\n          const [val, zone, next] = ex(m, cursor);\n          return [Object.assign(mergedVals, val), mergedZone || zone, next];\n        },\n        [{}, null, 1]\n      )\n      .slice(0, 2);\n}\n\nfunction parse(s, ...patterns) {\n  if (s == null) {\n    return [null, null];\n  }\n\n  for (const [regex, extractor] of patterns) {\n    const m = regex.exec(s);\n    if (m) {\n      return extractor(m);\n    }\n  }\n  return [null, null];\n}\n\nfunction simpleParse(...keys) {\n  return (match, cursor) => {\n    const ret = {};\n    let i;\n\n    for (i = 0; i < keys.length; i++) {\n      ret[keys[i]] = parseInteger(match[cursor + i]);\n    }\n    return [ret, null, cursor + i];\n  };\n}\n\n// ISO and SQL parsing\nconst offsetRegex = /(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/,\n  isoTimeBaseRegex = /(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/,\n  isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${offsetRegex.source}?`),\n  isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`),\n  isoYmdRegex = /([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/,\n  isoWeekRegex = /(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/,\n  isoOrdinalRegex = /(\\d{4})-?(\\d{3})/,\n  extractISOWeekData = simpleParse(\"weekYear\", \"weekNumber\", \"weekDay\"),\n  extractISOOrdinalData = simpleParse(\"year\", \"ordinal\"),\n  sqlYmdRegex = /(\\d{4})-(\\d\\d)-(\\d\\d)/, // dumbed-down version of the ISO one\n  sqlTimeRegex = RegExp(\n    `${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`\n  ),\n  sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);\n\nfunction int(match, pos, fallback) {\n  const m = match[pos];\n  return isUndefined(m) ? fallback : parseInteger(m);\n}\n\nfunction extractISOYmd(match, cursor) {\n  const item = {\n    year: int(match, cursor),\n    month: int(match, cursor + 1, 1),\n    day: int(match, cursor + 2, 1)\n  };\n\n  return [item, null, cursor + 3];\n}\n\nfunction extractISOTime(match, cursor) {\n  const item = {\n    hours: int(match, cursor, 0),\n    minutes: int(match, cursor + 1, 0),\n    seconds: int(match, cursor + 2, 0),\n    milliseconds: parseMillis(match[cursor + 3])\n  };\n\n  return [item, null, cursor + 4];\n}\n\nfunction extractISOOffset(match, cursor) {\n  const local = !match[cursor] && !match[cursor + 1],\n    fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),\n    zone = local ? null : FixedOffsetZone.instance(fullOffset);\n  return [{}, zone, cursor + 3];\n}\n\nfunction extractIANAZone(match, cursor) {\n  const zone = match[cursor] ? IANAZone.create(match[cursor]) : null;\n  return [{}, zone, cursor + 1];\n}\n\n// ISO time parsing\n\nconst isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);\n\n// ISO duration parsing\n\nconst isoDuration = /^-?P(?:(?:(-?\\d{1,9})Y)?(?:(-?\\d{1,9})M)?(?:(-?\\d{1,9})W)?(?:(-?\\d{1,9})D)?(?:T(?:(-?\\d{1,9})H)?(?:(-?\\d{1,9})M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,9}))?S)?)?)$/;\n\nfunction extractISODuration(match) {\n  const [\n    s,\n    yearStr,\n    monthStr,\n    weekStr,\n    dayStr,\n    hourStr,\n    minuteStr,\n    secondStr,\n    millisecondsStr\n  ] = match;\n\n  const hasNegativePrefix = s[0] === \"-\";\n  const negativeSeconds = secondStr && secondStr[0] === \"-\";\n\n  const maybeNegate = (num, force = false) =>\n    num !== undefined && (force || (num && hasNegativePrefix)) ? -num : num;\n\n  return [\n    {\n      years: maybeNegate(parseInteger(yearStr)),\n      months: maybeNegate(parseInteger(monthStr)),\n      weeks: maybeNegate(parseInteger(weekStr)),\n      days: maybeNegate(parseInteger(dayStr)),\n      hours: maybeNegate(parseInteger(hourStr)),\n      minutes: maybeNegate(parseInteger(minuteStr)),\n      seconds: maybeNegate(parseInteger(secondStr), secondStr === \"-0\"),\n      milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds)\n    }\n  ];\n}\n\n// These are a little braindead. EDT *should* tell us that we're in, say, America/New_York\n// and not just that we're in -240 *right now*. But since I don't think these are used that often\n// I'm just going to ignore that\nconst obsOffsets = {\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\n\nfunction fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = {\n    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),\n    month: English.monthsShort.indexOf(monthStr) + 1,\n    day: parseInteger(dayStr),\n    hour: parseInteger(hourStr),\n    minute: parseInteger(minuteStr)\n  };\n\n  if (secondStr) result.second = parseInteger(secondStr);\n  if (weekdayStr) {\n    result.weekday =\n      weekdayStr.length > 3\n        ? English.weekdaysLong.indexOf(weekdayStr) + 1\n        : English.weekdaysShort.indexOf(weekdayStr) + 1;\n  }\n\n  return result;\n}\n\n// RFC 2822/5322\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;\n\nfunction extractRFC2822(match) {\n  const [\n      ,\n      weekdayStr,\n      dayStr,\n      monthStr,\n      yearStr,\n      hourStr,\n      minuteStr,\n      secondStr,\n      obsOffset,\n      milOffset,\n      offHourStr,\n      offMinuteStr\n    ] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n\n  let offset;\n  if (obsOffset) {\n    offset = obsOffsets[obsOffset];\n  } else if (milOffset) {\n    offset = 0;\n  } else {\n    offset = signedOffset(offHourStr, offMinuteStr);\n  }\n\n  return [result, new FixedOffsetZone(offset)];\n}\n\nfunction preprocessRFC2822(s) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return s\n    .replace(/\\([^)]*\\)|[\\n\\t]/g, \" \")\n    .replace(/(\\s\\s+)/g, \" \")\n    .trim();\n}\n\n// http date\n\nconst rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  rfc850 = /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;\n\nfunction extractRFC1123Or850(match) {\n  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nfunction extractASCII(match) {\n  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nconst isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);\nconst isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);\nconst isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);\nconst isoTimeCombinedRegex = combineRegexes(isoTimeRegex);\n\nconst extractISOYmdTimeAndOffset = combineExtractors(\n  extractISOYmd,\n  extractISOTime,\n  extractISOOffset\n);\nconst extractISOWeekTimeAndOffset = combineExtractors(\n  extractISOWeekData,\n  extractISOTime,\n  extractISOOffset\n);\nconst extractISOOrdinalDateAndTime = combineExtractors(\n  extractISOOrdinalData,\n  extractISOTime,\n  extractISOOffset\n);\nconst extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset);\n\n/**\n * @private\n */\n\nexport function parseISODate(s) {\n  return parse(\n    s,\n    [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset],\n    [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime],\n    [isoTimeCombinedRegex, extractISOTimeAndOffset]\n  );\n}\n\nexport function parseRFC2822Date(s) {\n  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);\n}\n\nexport function parseHTTPDate(s) {\n  return parse(\n    s,\n    [rfc1123, extractRFC1123Or850],\n    [rfc850, extractRFC1123Or850],\n    [ascii, extractASCII]\n  );\n}\n\nexport function parseISODuration(s) {\n  return parse(s, [isoDuration, extractISODuration]);\n}\n\nconst extractISOTimeOnly = combineExtractors(extractISOTime);\n\nexport function parseISOTimeOnly(s) {\n  return parse(s, [isoTimeOnly, extractISOTimeOnly]);\n}\n\nconst sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);\nconst sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);\n\nconst extractISOYmdTimeOffsetAndIANAZone = combineExtractors(\n  extractISOYmd,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOTimeOffsetAndIANAZone = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\nexport function parseSQL(s) {\n  return parse(\n    s,\n    [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeOffsetAndIANAZone],\n    [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]\n  );\n}\n","import { InvalidArgumentError, InvalidDurationError, InvalidUnitError } from \"./errors.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Locale from \"./impl/locale.js\";\nimport { parseISODuration, parseISOTimeOnly } from \"./impl/regexParser.js\";\nimport {\n  asNumber,\n  hasOwnProperty,\n  isNumber,\n  isUndefined,\n  normalizeObject,\n  roundTo\n} from \"./impl/util.js\";\nimport Settings from \"./settings.js\";\n\nconst INVALID = \"Invalid Duration\";\n\n// unit conversion constants\nconst lowOrderMatrix = {\n    weeks: {\n      days: 7,\n      hours: 7 * 24,\n      minutes: 7 * 24 * 60,\n      seconds: 7 * 24 * 60 * 60,\n      milliseconds: 7 * 24 * 60 * 60 * 1000\n    },\n    days: {\n      hours: 24,\n      minutes: 24 * 60,\n      seconds: 24 * 60 * 60,\n      milliseconds: 24 * 60 * 60 * 1000\n    },\n    hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1000 },\n    minutes: { seconds: 60, milliseconds: 60 * 1000 },\n    seconds: { milliseconds: 1000 }\n  },\n  casualMatrix = Object.assign(\n    {\n      years: {\n        quarters: 4,\n        months: 12,\n        weeks: 52,\n        days: 365,\n        hours: 365 * 24,\n        minutes: 365 * 24 * 60,\n        seconds: 365 * 24 * 60 * 60,\n        milliseconds: 365 * 24 * 60 * 60 * 1000\n      },\n      quarters: {\n        months: 3,\n        weeks: 13,\n        days: 91,\n        hours: 91 * 24,\n        minutes: 91 * 24 * 60,\n        seconds: 91 * 24 * 60 * 60,\n        milliseconds: 91 * 24 * 60 * 60 * 1000\n      },\n      months: {\n        weeks: 4,\n        days: 30,\n        hours: 30 * 24,\n        minutes: 30 * 24 * 60,\n        seconds: 30 * 24 * 60 * 60,\n        milliseconds: 30 * 24 * 60 * 60 * 1000\n      }\n    },\n    lowOrderMatrix\n  ),\n  daysInYearAccurate = 146097.0 / 400,\n  daysInMonthAccurate = 146097.0 / 4800,\n  accurateMatrix = Object.assign(\n    {\n      years: {\n        quarters: 4,\n        months: 12,\n        weeks: daysInYearAccurate / 7,\n        days: daysInYearAccurate,\n        hours: daysInYearAccurate * 24,\n        minutes: daysInYearAccurate * 24 * 60,\n        seconds: daysInYearAccurate * 24 * 60 * 60,\n        milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000\n      },\n      quarters: {\n        months: 3,\n        weeks: daysInYearAccurate / 28,\n        days: daysInYearAccurate / 4,\n        hours: (daysInYearAccurate * 24) / 4,\n        minutes: (daysInYearAccurate * 24 * 60) / 4,\n        seconds: (daysInYearAccurate * 24 * 60 * 60) / 4,\n        milliseconds: (daysInYearAccurate * 24 * 60 * 60 * 1000) / 4\n      },\n      months: {\n        weeks: daysInMonthAccurate / 7,\n        days: daysInMonthAccurate,\n        hours: daysInMonthAccurate * 24,\n        minutes: daysInMonthAccurate * 24 * 60,\n        seconds: daysInMonthAccurate * 24 * 60 * 60,\n        milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000\n      }\n    },\n    lowOrderMatrix\n  );\n\n// units ordered by size\nconst orderedUnits = [\n  \"years\",\n  \"quarters\",\n  \"months\",\n  \"weeks\",\n  \"days\",\n  \"hours\",\n  \"minutes\",\n  \"seconds\",\n  \"milliseconds\"\n];\n\nconst reverseUnits = orderedUnits.slice(0).reverse();\n\n// clone really means \"create another instance just like this one, but with these changes\"\nfunction clone(dur, alts, clear = false) {\n  // deep merge for vals\n  const conf = {\n    values: clear ? alts.values : Object.assign({}, dur.values, alts.values || {}),\n    loc: dur.loc.clone(alts.loc),\n    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy\n  };\n  return new Duration(conf);\n}\n\nfunction antiTrunc(n) {\n  return n < 0 ? Math.floor(n) : Math.ceil(n);\n}\n\n// NB: mutates parameters\nfunction convert(matrix, fromMap, fromUnit, toMap, toUnit) {\n  const conv = matrix[toUnit][fromUnit],\n    raw = fromMap[fromUnit] / conv,\n    sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),\n    // ok, so this is wild, but see the matrix in the tests\n    added =\n      !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);\n  toMap[toUnit] += added;\n  fromMap[fromUnit] -= added * conv;\n}\n\n// NB: mutates parameters\nfunction normalizeValues(matrix, vals) {\n  reverseUnits.reduce((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        convert(matrix, vals, previous, vals, current);\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n}\n\n/**\n * A Duration object represents a period of time, like \"2 months\" or \"1 day, 1 hour\". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime.plus} to add a Duration object to a DateTime, producing another DateTime.\n *\n * Here is a brief overview of commonly used methods and getters in Duration:\n *\n * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.\n * * **Unit values** See the {@link Duration.years}, {@link Duration.months}, {@link Duration.weeks}, {@link Duration.days}, {@link Duration.hours}, {@link Duration.minutes}, {@link Duration.seconds}, {@link Duration.milliseconds} accessors.\n * * **Configuration** See  {@link Duration.locale} and {@link Duration.numberingSystem} accessors.\n * * **Transformation** To create new Durations out of old ones use {@link Duration.plus}, {@link Duration.minus}, {@link Duration.normalize}, {@link Duration.set}, {@link Duration.reconfigure}, {@link Duration.shiftTo}, and {@link Duration.negate}.\n * * **Output** To convert the Duration into other representations, see {@link Duration.as}, {@link Duration.toISO}, {@link Duration.toFormat}, and {@link Duration.toJSON}\n *\n * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.\n */\nexport default class Duration {\n  /**\n   * @private\n   */\n  constructor(config) {\n    const accurate = config.conversionAccuracy === \"longterm\" || false;\n    /**\n     * @access private\n     */\n    this.values = config.values;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.conversionAccuracy = accurate ? \"longterm\" : \"casual\";\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.matrix = accurate ? accurateMatrix : casualMatrix;\n    /**\n     * @access private\n     */\n    this.isLuxonDuration = true;\n  }\n\n  /**\n   * Create Duration from a number of milliseconds.\n   * @param {number} count of milliseconds\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromMillis(count, opts) {\n    return Duration.fromObject(Object.assign({ milliseconds: count }, opts));\n  }\n\n  /**\n   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.\n   * If this object is empty then a zero milliseconds duration is returned.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.years\n   * @param {number} obj.quarters\n   * @param {number} obj.months\n   * @param {number} obj.weeks\n   * @param {number} obj.days\n   * @param {number} obj.hours\n   * @param {number} obj.minutes\n   * @param {number} obj.seconds\n   * @param {number} obj.milliseconds\n   * @param {string} [obj.locale='en-US'] - the locale to use\n   * @param {string} obj.numberingSystem - the numbering system to use\n   * @param {string} [obj.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromObject(obj) {\n    if (obj == null || typeof obj !== \"object\") {\n      throw new InvalidArgumentError(\n        `Duration.fromObject: argument expected to be an object, got ${\n          obj === null ? \"null\" : typeof obj\n        }`\n      );\n    }\n    return new Duration({\n      values: normalizeObject(obj, Duration.normalizeUnit, [\n        \"locale\",\n        \"numberingSystem\",\n        \"conversionAccuracy\",\n        \"zone\" // a bit of debt; it's super inconvenient internally not to be able to blindly pass this\n      ]),\n      loc: Locale.fromObject(obj),\n      conversionAccuracy: obj.conversionAccuracy\n    });\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 duration string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }\n   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }\n   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }\n   * @return {Duration}\n   */\n  static fromISO(text, opts) {\n    const [parsed] = parseISODuration(text);\n    if (parsed) {\n      const obj = Object.assign(parsed, opts);\n      return Duration.fromObject(obj);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 time string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }\n   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @return {Duration}\n   */\n  static fromISOTime(text, opts) {\n    const [parsed] = parseISOTimeOnly(text);\n    if (parsed) {\n      const obj = Object.assign(parsed, opts);\n      return Duration.fromObject(obj);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create an invalid Duration.\n   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Duration}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Duration is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDurationError(invalid);\n    } else {\n      return new Duration({ invalid });\n    }\n  }\n\n  /**\n   * @private\n   */\n  static normalizeUnit(unit) {\n    const normalized = {\n      year: \"years\",\n      years: \"years\",\n      quarter: \"quarters\",\n      quarters: \"quarters\",\n      month: \"months\",\n      months: \"months\",\n      week: \"weeks\",\n      weeks: \"weeks\",\n      day: \"days\",\n      days: \"days\",\n      hour: \"hours\",\n      hours: \"hours\",\n      minute: \"minutes\",\n      minutes: \"minutes\",\n      second: \"seconds\",\n      seconds: \"seconds\",\n      millisecond: \"milliseconds\",\n      milliseconds: \"milliseconds\"\n    }[unit ? unit.toLowerCase() : unit];\n\n    if (!normalized) throw new InvalidUnitError(unit);\n\n    return normalized;\n  }\n\n  /**\n   * Check if an object is a Duration. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDuration(o) {\n    return (o && o.isLuxonDuration) || false;\n  }\n\n  /**\n   * Get  the locale of a Duration, such 'en-GB'\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:\n   * * `S` for milliseconds\n   * * `s` for seconds\n   * * `m` for minutes\n   * * `h` for hours\n   * * `d` for days\n   * * `M` for months\n   * * `y` for years\n   * Notes:\n   * * Add padding by repeating the token, e.g. \"yy\" pads the years to two digits, \"hhhh\" pads the hours out to four digits\n   * * The duration will be converted to the set of units in the format string using {@link Duration.shiftTo} and the Durations's conversion accuracy setting.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - options\n   * @param {boolean} [opts.floor=true] - floor numerical values\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"y d s\") //=> \"1 6 2\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"yy dd sss\") //=> \"01 06 002\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"M S\") //=> \"12 518402000\"\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    // reverse-compat since 1.2; we always round down now, never up, and we do it by default\n    const fmtOpts = Object.assign({}, opts, {\n      floor: opts.round !== false && opts.floor !== false\n    });\n    return this.isValid\n      ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a JavaScript object with this Duration's values.\n   * @param opts - options for generating the object\n   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }\n   * @return {Object}\n   */\n  toObject(opts = {}) {\n    if (!this.isValid) return {};\n\n    const base = Object.assign({}, this.values);\n\n    if (opts.includeConfig) {\n      base.conversionAccuracy = this.conversionAccuracy;\n      base.numberingSystem = this.loc.numberingSystem;\n      base.locale = this.loc.locale;\n    }\n    return base;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'\n   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'\n   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'\n   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'\n   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'\n   * @return {string}\n   */\n  toISO() {\n    // we could use the formatter, but this is an easier way to get the minimum string\n    if (!this.isValid) return null;\n\n    let s = \"P\";\n    if (this.years !== 0) s += this.years + \"Y\";\n    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + \"M\";\n    if (this.weeks !== 0) s += this.weeks + \"W\";\n    if (this.days !== 0) s += this.days + \"D\";\n    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0)\n      s += \"T\";\n    if (this.hours !== 0) s += this.hours + \"H\";\n    if (this.minutes !== 0) s += this.minutes + \"M\";\n    if (this.seconds !== 0 || this.milliseconds !== 0)\n      // this will handle \"floating point madness\" by removing extra decimal places\n      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken\n      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + \"S\";\n    if (s === \"P\") s += \"T0S\";\n    return s;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.\n   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'\n   * @return {string}\n   */\n  toISOTime(opts = {}) {\n    if (!this.isValid) return null;\n\n    const millis = this.toMillis();\n    if (millis < 0 || millis >= 86400000) return null;\n\n    opts = Object.assign(\n      {\n        suppressMilliseconds: false,\n        suppressSeconds: false,\n        includePrefix: false,\n        format: \"extended\"\n      },\n      opts\n    );\n\n    const value = this.shiftTo(\"hours\", \"minutes\", \"seconds\", \"milliseconds\");\n\n    let fmt = opts.format === \"basic\" ? \"hhmm\" : \"hh:mm\";\n\n    if (!opts.suppressSeconds || value.seconds !== 0 || value.milliseconds !== 0) {\n      fmt += opts.format === \"basic\" ? \"ss\" : \":ss\";\n      if (!opts.suppressMilliseconds || value.milliseconds !== 0) {\n        fmt += \".SSS\";\n      }\n    }\n\n    let str = value.toFormat(fmt);\n\n    if (opts.includePrefix) {\n      str = \"T\" + str;\n    }\n\n    return str;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.\n   * @return {string}\n   */\n  toString() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration.\n   * @return {number}\n   */\n  toMillis() {\n    return this.as(\"milliseconds\");\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = friendlyDuration(duration),\n      result = {};\n\n    for (const k of orderedUnits) {\n      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {\n        result[k] = dur.get(k) + this.get(k);\n      }\n    }\n\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = friendlyDuration(duration);\n    return this.plus(dur.negate());\n  }\n\n  /**\n   * Scale this Duration by the specified amount. Return a newly-constructed Duration.\n   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit(x => x * 2) //=> { hours: 2, minutes: 60 }\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit((x, u) => u === \"hour\" ? x * 2 : x) //=> { hours: 2, minutes: 30 }\n   * @return {Duration}\n   */\n  mapUnits(fn) {\n    if (!this.isValid) return this;\n    const result = {};\n    for (const k of Object.keys(this.values)) {\n      result[k] = asNumber(fn(this.values[k], k));\n    }\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2\n   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0\n   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3\n   * @return {number}\n   */\n  get(unit) {\n    return this[Duration.normalizeUnit(unit)];\n  }\n\n  /**\n   * \"Set\" the values of specified units. Return a newly-constructed Duration.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dur.set({ years: 2017 })\n   * @example dur.set({ hours: 8, minutes: 30 })\n   * @return {Duration}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const mixed = Object.assign(this.values, normalizeObject(values, Duration.normalizeUnit, []));\n    return clone(this, { values: mixed });\n  }\n\n  /**\n   * \"Set\" the locale and/or numberingSystem.  Returns a newly-constructed Duration.\n   * @example dur.reconfigure({ locale: 'en-GB' })\n   * @return {Duration}\n   */\n  reconfigure({ locale, numberingSystem, conversionAccuracy } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem }),\n      opts = { loc };\n\n    if (conversionAccuracy) {\n      opts.conversionAccuracy = conversionAccuracy;\n    }\n\n    return clone(this, opts);\n  }\n\n  /**\n   * Return the length of the duration in the specified unit.\n   * @param {string} unit - a unit such as 'minutes' or 'days'\n   * @example Duration.fromObject({years: 1}).as('days') //=> 365\n   * @example Duration.fromObject({years: 1}).as('months') //=> 12\n   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5\n   * @return {number}\n   */\n  as(unit) {\n    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;\n  }\n\n  /**\n   * Reduce this Duration to its canonical representation in its current units.\n   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }\n   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }\n   * @return {Duration}\n   */\n  normalize() {\n    if (!this.isValid) return this;\n    const vals = this.toObject();\n    normalizeValues(this.matrix, vals);\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Convert this Duration into its representation in a different set of units.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }\n   * @return {Duration}\n   */\n  shiftTo(...units) {\n    if (!this.isValid) return this;\n\n    if (units.length === 0) {\n      return this;\n    }\n\n    units = units.map(u => Duration.normalizeUnit(u));\n\n    const built = {},\n      accumulated = {},\n      vals = this.toObject();\n    let lastUnit;\n\n    for (const k of orderedUnits) {\n      if (units.indexOf(k) >= 0) {\n        lastUnit = k;\n\n        let own = 0;\n\n        // anything we haven't boiled down yet should get boiled to this unit\n        for (const ak in accumulated) {\n          own += this.matrix[ak][k] * accumulated[ak];\n          accumulated[ak] = 0;\n        }\n\n        // plus anything that's already in this unit\n        if (isNumber(vals[k])) {\n          own += vals[k];\n        }\n\n        const i = Math.trunc(own);\n        built[k] = i;\n        accumulated[k] = own - i; // we'd like to absorb these fractions in another unit\n\n        // plus anything further down the chain that should be rolled up in to this\n        for (const down in vals) {\n          if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k)) {\n            convert(this.matrix, vals, down, built, k);\n          }\n        }\n        // otherwise, keep it in the wings to boil it later\n      } else if (isNumber(vals[k])) {\n        accumulated[k] = vals[k];\n      }\n    }\n\n    // anything leftover becomes the decimal for the last unit\n    // lastUnit must be defined since units is not empty\n    for (const key in accumulated) {\n      if (accumulated[key] !== 0) {\n        built[lastUnit] +=\n          key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];\n      }\n    }\n\n    return clone(this, { values: built }, true).normalize();\n  }\n\n  /**\n   * Return the negative of this Duration.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }\n   * @return {Duration}\n   */\n  negate() {\n    if (!this.isValid) return this;\n    const negated = {};\n    for (const k of Object.keys(this.values)) {\n      negated[k] = -this.values[k];\n    }\n    return clone(this, { values: negated }, true);\n  }\n\n  /**\n   * Get the years.\n   * @type {number}\n   */\n  get years() {\n    return this.isValid ? this.values.years || 0 : NaN;\n  }\n\n  /**\n   * Get the quarters.\n   * @type {number}\n   */\n  get quarters() {\n    return this.isValid ? this.values.quarters || 0 : NaN;\n  }\n\n  /**\n   * Get the months.\n   * @type {number}\n   */\n  get months() {\n    return this.isValid ? this.values.months || 0 : NaN;\n  }\n\n  /**\n   * Get the weeks\n   * @type {number}\n   */\n  get weeks() {\n    return this.isValid ? this.values.weeks || 0 : NaN;\n  }\n\n  /**\n   * Get the days.\n   * @type {number}\n   */\n  get days() {\n    return this.isValid ? this.values.days || 0 : NaN;\n  }\n\n  /**\n   * Get the hours.\n   * @type {number}\n   */\n  get hours() {\n    return this.isValid ? this.values.hours || 0 : NaN;\n  }\n\n  /**\n   * Get the minutes.\n   * @type {number}\n   */\n  get minutes() {\n    return this.isValid ? this.values.minutes || 0 : NaN;\n  }\n\n  /**\n   * Get the seconds.\n   * @return {number}\n   */\n  get seconds() {\n    return this.isValid ? this.values.seconds || 0 : NaN;\n  }\n\n  /**\n   * Get the milliseconds.\n   * @return {number}\n   */\n  get milliseconds() {\n    return this.isValid ? this.values.milliseconds || 0 : NaN;\n  }\n\n  /**\n   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations\n   * on invalid DateTimes or Intervals.\n   * @return {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this Duration became invalid, or null if the Duration is valid\n   * @return {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Equality check\n   * Two Durations are equal iff they have the same units and the same values for each unit.\n   * @param {Duration} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    if (!this.loc.equals(other.loc)) {\n      return false;\n    }\n\n    function eq(v1, v2) {\n      // Consider 0 and undefined as equal\n      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;\n      return v1 === v2;\n    }\n\n    for (const u of orderedUnits) {\n      if (!eq(this.values[u], other.values[u])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n/**\n * @private\n */\nexport function friendlyDuration(durationish) {\n  if (isNumber(durationish)) {\n    return Duration.fromMillis(durationish);\n  } else if (Duration.isDuration(durationish)) {\n    return durationish;\n  } else if (typeof durationish === \"object\") {\n    return Duration.fromObject(durationish);\n  } else {\n    throw new InvalidArgumentError(\n      `Unknown duration argument ${durationish} of type ${typeof durationish}`\n    );\n  }\n}\n","import DateTime, { friendlyDateTime } from \"./datetime.js\";\nimport Duration, { friendlyDuration } from \"./duration.js\";\nimport Settings from \"./settings.js\";\nimport { InvalidArgumentError, InvalidIntervalError } from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid Interval\";\n\n// checks if the start is equal to or before the end\nfunction validateStartEnd(start, end) {\n  if (!start || !start.isValid) {\n    return Interval.invalid(\"missing or invalid start\");\n  } else if (!end || !end.isValid) {\n    return Interval.invalid(\"missing or invalid end\");\n  } else if (end < start) {\n    return Interval.invalid(\n      \"end before start\",\n      `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`\n    );\n  } else {\n    return null;\n  }\n}\n\n/**\n * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.\n *\n * Here is a brief overview of the most commonly used methods and getters in Interval:\n *\n * * **Creation** To create an Interval, use {@link fromDateTimes}, {@link after}, {@link before}, or {@link fromISO}.\n * * **Accessors** Use {@link start} and {@link end} to get the start and end.\n * * **Interrogation** To analyze the Interval, use {@link count}, {@link length}, {@link hasSame}, {@link contains}, {@link isAfter}, or {@link isBefore}.\n * * **Transformation** To create other Intervals out of this one, use {@link set}, {@link splitAt}, {@link splitBy}, {@link divideEqually}, {@link merge}, {@link xor}, {@link union}, {@link intersection}, or {@link difference}.\n * * **Comparison** To compare this Interval to another one, use {@link equals}, {@link overlaps}, {@link abutsStart}, {@link abutsEnd}, {@link engulfs}.\n * * **Output** To convert the Interval into other representations, see {@link toString}, {@link toISO}, {@link toISODate}, {@link toISOTime}, {@link toFormat}, and {@link toDuration}.\n */\nexport default class Interval {\n  /**\n   * @private\n   */\n  constructor(config) {\n    /**\n     * @access private\n     */\n    this.s = config.start;\n    /**\n     * @access private\n     */\n    this.e = config.end;\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.isLuxonInterval = true;\n  }\n\n  /**\n   * Create an invalid Interval.\n   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Interval}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Interval is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidIntervalError(invalid);\n    } else {\n      return new Interval({ invalid });\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.\n   * @param {DateTime|Date|Object} start\n   * @param {DateTime|Date|Object} end\n   * @return {Interval}\n   */\n  static fromDateTimes(start, end) {\n    const builtStart = friendlyDateTime(start),\n      builtEnd = friendlyDateTime(end);\n\n    const validateError = validateStartEnd(builtStart, builtEnd);\n\n    if (validateError == null) {\n      return new Interval({\n        start: builtStart,\n        end: builtEnd\n      });\n    } else {\n      return validateError;\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and a Duration to extend to.\n   * @param {DateTime|Date|Object} start\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static after(start, duration) {\n    const dur = friendlyDuration(duration),\n      dt = friendlyDateTime(start);\n    return Interval.fromDateTimes(dt, dt.plus(dur));\n  }\n\n  /**\n   * Create an Interval from an end DateTime and a Duration to extend backwards to.\n   * @param {DateTime|Date|Object} end\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static before(end, duration) {\n    const dur = friendlyDuration(duration),\n      dt = friendlyDateTime(end);\n    return Interval.fromDateTimes(dt.minus(dur), dt);\n  }\n\n  /**\n   * Create an Interval from an ISO 8601 string.\n   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.\n   * @param {string} text - the ISO string to parse\n   * @param {Object} [opts] - options to pass {@link DateTime.fromISO} and optionally {@link Duration.fromISO}\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {Interval}\n   */\n  static fromISO(text, opts) {\n    const [s, e] = (text || \"\").split(\"/\", 2);\n    if (s && e) {\n      let start, startIsValid;\n      try {\n        start = DateTime.fromISO(s, opts);\n        startIsValid = start.isValid;\n      } catch (e) {\n        startIsValid = false;\n      }\n\n      let end, endIsValid;\n      try {\n        end = DateTime.fromISO(e, opts);\n        endIsValid = end.isValid;\n      } catch (e) {\n        endIsValid = false;\n      }\n\n      if (startIsValid && endIsValid) {\n        return Interval.fromDateTimes(start, end);\n      }\n\n      if (startIsValid) {\n        const dur = Duration.fromISO(e, opts);\n        if (dur.isValid) {\n          return Interval.after(start, dur);\n        }\n      } else if (endIsValid) {\n        const dur = Duration.fromISO(s, opts);\n        if (dur.isValid) {\n          return Interval.before(end, dur);\n        }\n      }\n    }\n    return Interval.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n  }\n\n  /**\n   * Check if an object is an Interval. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isInterval(o) {\n    return (o && o.isLuxonInterval) || false;\n  }\n\n  /**\n   * Returns the start of the Interval\n   * @type {DateTime}\n   */\n  get start() {\n    return this.isValid ? this.s : null;\n  }\n\n  /**\n   * Returns the end of the Interval\n   * @type {DateTime}\n   */\n  get end() {\n    return this.isValid ? this.e : null;\n  }\n\n  /**\n   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalidReason === null;\n  }\n\n  /**\n   * Returns an error code if this Interval is invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Returns the length of the Interval in the specified unit.\n   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.\n   * @return {number}\n   */\n  length(unit = \"milliseconds\") {\n    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;\n  }\n\n  /**\n   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.\n   * Unlike {@link length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'\n   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'\n   * @param {string} [unit='milliseconds'] - the unit of time to count.\n   * @return {number}\n   */\n  count(unit = \"milliseconds\") {\n    if (!this.isValid) return NaN;\n    const start = this.start.startOf(unit),\n      end = this.end.startOf(unit);\n    return Math.floor(end.diff(start, unit).get(unit)) + 1;\n  }\n\n  /**\n   * Returns whether this Interval's start and end are both in the same unit of time\n   * @param {string} unit - the unit of time to check sameness on\n   * @return {boolean}\n   */\n  hasSame(unit) {\n    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end DateTimes.\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.s.valueOf() === this.e.valueOf();\n  }\n\n  /**\n   * Return whether this Interval's start is after the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isAfter(dateTime) {\n    if (!this.isValid) return false;\n    return this.s > dateTime;\n  }\n\n  /**\n   * Return whether this Interval's end is before the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isBefore(dateTime) {\n    if (!this.isValid) return false;\n    return this.e <= dateTime;\n  }\n\n  /**\n   * Return whether this Interval contains the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  contains(dateTime) {\n    if (!this.isValid) return false;\n    return this.s <= dateTime && this.e > dateTime;\n  }\n\n  /**\n   * \"Sets\" the start and/or end dates. Returns a newly-constructed Interval.\n   * @param {Object} values - the values to set\n   * @param {DateTime} values.start - the starting DateTime\n   * @param {DateTime} values.end - the ending DateTime\n   * @return {Interval}\n   */\n  set({ start, end } = {}) {\n    if (!this.isValid) return this;\n    return Interval.fromDateTimes(start || this.s, end || this.e);\n  }\n\n  /**\n   * Split this Interval at each of the specified DateTimes\n   * @param {...[DateTime]} dateTimes - the unit of time to count.\n   * @return {[Interval]}\n   */\n  splitAt(...dateTimes) {\n    if (!this.isValid) return [];\n    const sorted = dateTimes\n        .map(friendlyDateTime)\n        .filter(d => this.contains(d))\n        .sort(),\n      results = [];\n    let { s } = this,\n      i = 0;\n\n    while (s < this.e) {\n      const added = sorted[i] || this.e,\n        next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      i += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into smaller Intervals, each of the specified length.\n   * Left over time is grouped into a smaller interval\n   * @param {Duration|Object|number} duration - The length of each resulting interval.\n   * @return {[Interval]}\n   */\n  splitBy(duration) {\n    const dur = friendlyDuration(duration);\n\n    if (!this.isValid || !dur.isValid || dur.as(\"milliseconds\") === 0) {\n      return [];\n    }\n\n    let { s } = this,\n      idx = 1,\n      next;\n\n    const results = [];\n    while (s < this.e) {\n      const added = this.start.plus(dur.mapUnits(x => x * idx));\n      next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      idx += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into the specified number of smaller intervals.\n   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.\n   * @return {[Interval]}\n   */\n  divideEqually(numberOfParts) {\n    if (!this.isValid) return [];\n    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);\n  }\n\n  /**\n   * Return whether this Interval overlaps with the specified Interval\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  overlaps(other) {\n    return this.e > other.s && this.s < other.e;\n  }\n\n  /**\n   * Return whether this Interval's end is adjacent to the specified Interval's start.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsStart(other) {\n    if (!this.isValid) return false;\n    return +this.e === +other.s;\n  }\n\n  /**\n   * Return whether this Interval's start is adjacent to the specified Interval's end.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsEnd(other) {\n    if (!this.isValid) return false;\n    return +other.e === +this.s;\n  }\n\n  /**\n   * Return whether this Interval engulfs the start and end of the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  engulfs(other) {\n    if (!this.isValid) return false;\n    return this.s <= other.s && this.e >= other.e;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end as the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    return this.s.equals(other.s) && this.e.equals(other.e);\n  }\n\n  /**\n   * Return an Interval representing the intersection of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.\n   * Returns null if the intersection is empty, meaning, the intervals don't intersect.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  intersection(other) {\n    if (!this.isValid) return this;\n    const s = this.s > other.s ? this.s : other.s,\n      e = this.e < other.e ? this.e : other.e;\n\n    if (s >= e) {\n      return null;\n    } else {\n      return Interval.fromDateTimes(s, e);\n    }\n  }\n\n  /**\n   * Return an Interval representing the union of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  union(other) {\n    if (!this.isValid) return this;\n    const s = this.s < other.s ? this.s : other.s,\n      e = this.e > other.e ? this.e : other.e;\n    return Interval.fromDateTimes(s, e);\n  }\n\n  /**\n   * Merge an array of Intervals into a equivalent minimal set of Intervals.\n   * Combines overlapping and adjacent Intervals.\n   * @param {[Interval]} intervals\n   * @return {[Interval]}\n   */\n  static merge(intervals) {\n    const [found, final] = intervals.sort((a, b) => a.s - b.s).reduce(\n      ([sofar, current], item) => {\n        if (!current) {\n          return [sofar, item];\n        } else if (current.overlaps(item) || current.abutsStart(item)) {\n          return [sofar, current.union(item)];\n        } else {\n          return [sofar.concat([current]), item];\n        }\n      },\n      [[], null]\n    );\n    if (final) {\n      found.push(final);\n    }\n    return found;\n  }\n\n  /**\n   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.\n   * @param {[Interval]} intervals\n   * @return {[Interval]}\n   */\n  static xor(intervals) {\n    let start = null,\n      currentCount = 0;\n    const results = [],\n      ends = intervals.map(i => [{ time: i.s, type: \"s\" }, { time: i.e, type: \"e\" }]),\n      flattened = Array.prototype.concat(...ends),\n      arr = flattened.sort((a, b) => a.time - b.time);\n\n    for (const i of arr) {\n      currentCount += i.type === \"s\" ? 1 : -1;\n\n      if (currentCount === 1) {\n        start = i.time;\n      } else {\n        if (start && +start !== +i.time) {\n          results.push(Interval.fromDateTimes(start, i.time));\n        }\n\n        start = null;\n      }\n    }\n\n    return Interval.merge(results);\n  }\n\n  /**\n   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.\n   * @param {...Interval} intervals\n   * @return {[Interval]}\n   */\n  difference(...intervals) {\n    return Interval.xor([this].concat(intervals))\n      .map(i => this.intersection(i))\n      .filter(i => i && !i.isEmpty());\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for debugging.\n   * @return {string}\n   */\n  toString() {\n    if (!this.isValid) return INVALID;\n    return `[${this.s.toISO()} – ${this.e.toISO()})`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Interval.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime.toISO}\n   * @return {string}\n   */\n  toISO(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of date of this Interval.\n   * The time components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {string}\n   */\n  toISODate() {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISODate()}/${this.e.toISODate()}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of time of this Interval.\n   * The date components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime.toISO}\n   * @return {string}\n   */\n  toISOTime(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this Interval formatted according to the specified format string.\n   * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime.toFormat} for details.\n   * @param {Object} opts - options\n   * @param {string} [opts.separator =  ' – '] - a separator to place between the start and end representations\n   * @return {string}\n   */\n  toFormat(dateFormat, { separator = \" – \" } = {}) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;\n  }\n\n  /**\n   * Return a Duration representing the time spanned by this interval.\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }\n   * @return {Duration}\n   */\n  toDuration(unit, opts) {\n    if (!this.isValid) {\n      return Duration.invalid(this.invalidReason);\n    }\n    return this.e.diff(this.s, unit, opts);\n  }\n\n  /**\n   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes\n   * @param {function} mapFn\n   * @return {Interval}\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))\n   */\n  mapEndpoints(mapFn) {\n    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));\n  }\n}\n","import DateTime from \"./datetime.js\";\nimport Settings from \"./settings.js\";\nimport Locale from \"./impl/locale.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nimport { hasFormatToParts, hasIntl, hasRelative } from \"./impl/util.js\";\n\n/**\n * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.\n */\nexport default class Info {\n  /**\n   * Return whether the specified zone contains a DST.\n   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.\n   * @return {boolean}\n   */\n  static hasDST(zone = Settings.defaultZone) {\n    const proto = DateTime.now()\n      .setZone(zone)\n      .set({ month: 12 });\n\n    return !zone.universal && proto.offset !== proto.set({ month: 6 }).offset;\n  }\n\n  /**\n   * Return whether the specified zone is a valid IANA specifier.\n   * @param {string} zone - Zone to check\n   * @return {boolean}\n   */\n  static isValidIANAZone(zone) {\n    return IANAZone.isValidSpecifier(zone) && IANAZone.isValidZone(zone);\n  }\n\n  /**\n   * Converts the input into a {@link Zone} instance.\n   *\n   * * If `input` is already a Zone instance, it is returned unchanged.\n   * * If `input` is a string containing a valid time zone name, a Zone instance\n   *   with that name is returned.\n   * * If `input` is a string that doesn't refer to a known time zone, a Zone\n   *   instance with {@link Zone.isValid} == false is returned.\n   * * If `input is a number, a Zone instance with the specified fixed offset\n   *   in minutes is returned.\n   * * If `input` is `null` or `undefined`, the default zone is returned.\n   * @param {string|Zone|number} [input] - the value to be converted\n   * @return {Zone}\n   */\n  static normalizeZone(input) {\n    return normalizeZone(input, Settings.defaultZone);\n  }\n\n  /**\n   * Return an array of standalone month names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @example Info.months()[0] //=> 'January'\n   * @example Info.months('short')[0] //=> 'Jan'\n   * @example Info.months('numeric')[0] //=> '1'\n   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'\n   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'\n   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'\n   * @return {[string]}\n   */\n  static months(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);\n  }\n\n  /**\n   * Return an array of format month names.\n   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that\n   * changes the string.\n   * See {@link months}\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @return {[string]}\n   */\n  static monthsFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);\n  }\n\n  /**\n   * Return an array of standalone week names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @example Info.weekdays()[0] //=> 'Monday'\n   * @example Info.weekdays('short')[0] //=> 'Mon'\n   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'\n   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'\n   * @return {[string]}\n   */\n  static weekdays(length = \"long\", { locale = null, numberingSystem = null, locObj = null } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);\n  }\n\n  /**\n   * Return an array of format week names.\n   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that\n   * changes the string.\n   * See {@link weekdays}\n   * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale=null] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @return {[string]}\n   */\n  static weekdaysFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);\n  }\n\n  /**\n   * Return an array of meridiems.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.meridiems() //=> [ 'AM', 'PM' ]\n   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]\n   * @return {[string]}\n   */\n  static meridiems({ locale = null } = {}) {\n    return Locale.create(locale).meridiems();\n  }\n\n  /**\n   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.\n   * @param {string} [length='short'] - the length of the era representation, such as \"short\" or \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.eras() //=> [ 'BC', 'AD' ]\n   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]\n   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]\n   * @return {[string]}\n   */\n  static eras(length = \"short\", { locale = null } = {}) {\n    return Locale.create(locale, null, \"gregory\").eras(length);\n  }\n\n  /**\n   * Return the set of available features in this environment.\n   * Some features of Luxon are not available in all environments. For example, on older browsers, timezone support is not available. Use this function to figure out if that's the case.\n   * Keys:\n   * * `zones`: whether this environment supports IANA timezones\n   * * `intlTokens`: whether this environment supports internationalized token-based formatting/parsing\n   * * `intl`: whether this environment supports general internationalization\n   * * `relative`: whether this environment supports relative time formatting\n   * @example Info.features() //=> { intl: true, intlTokens: false, zones: true, relative: false }\n   * @return {Object}\n   */\n  static features() {\n    let intl = false,\n      intlTokens = false,\n      zones = false,\n      relative = false;\n\n    if (hasIntl()) {\n      intl = true;\n      intlTokens = hasFormatToParts();\n      relative = hasRelative();\n\n      try {\n        zones =\n          new Intl.DateTimeFormat(\"en\", { timeZone: \"America/New_York\" }).resolvedOptions()\n            .timeZone === \"America/New_York\";\n      } catch (e) {\n        zones = false;\n      }\n    }\n\n    return { intl, intlTokens, zones, relative };\n  }\n}\n","import Duration from \"../duration.js\";\n\nfunction dayDiff(earlier, later) {\n  const utcDayStart = dt =>\n      dt\n        .toUTC(0, { keepLocalTime: true })\n        .startOf(\"day\")\n        .valueOf(),\n    ms = utcDayStart(later) - utcDayStart(earlier);\n  return Math.floor(Duration.fromMillis(ms).as(\"days\"));\n}\n\nfunction highOrderDiffs(cursor, later, units) {\n  const differs = [\n    [\"years\", (a, b) => b.year - a.year],\n    [\"quarters\", (a, b) => b.quarter - a.quarter],\n    [\"months\", (a, b) => b.month - a.month + (b.year - a.year) * 12],\n    [\n      \"weeks\",\n      (a, b) => {\n        const days = dayDiff(a, b);\n        return (days - (days % 7)) / 7;\n      }\n    ],\n    [\"days\", dayDiff]\n  ];\n\n  const results = {};\n  let lowestOrder, highWater;\n\n  for (const [unit, differ] of differs) {\n    if (units.indexOf(unit) >= 0) {\n      lowestOrder = unit;\n\n      let delta = differ(cursor, later);\n      highWater = cursor.plus({ [unit]: delta });\n\n      if (highWater > later) {\n        cursor = cursor.plus({ [unit]: delta - 1 });\n        delta -= 1;\n      } else {\n        cursor = highWater;\n      }\n\n      results[unit] = delta;\n    }\n  }\n\n  return [cursor, results, highWater, lowestOrder];\n}\n\nexport default function(earlier, later, units, opts) {\n  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);\n\n  const remainingMillis = later - cursor;\n\n  const lowerOrderUnits = units.filter(\n    u => [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"].indexOf(u) >= 0\n  );\n\n  if (lowerOrderUnits.length === 0) {\n    if (highWater < later) {\n      highWater = cursor.plus({ [lowestOrder]: 1 });\n    }\n\n    if (highWater !== cursor) {\n      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);\n    }\n  }\n\n  const duration = Duration.fromObject(Object.assign(results, opts));\n\n  if (lowerOrderUnits.length > 0) {\n    return Duration.fromMillis(remainingMillis, opts)\n      .shiftTo(...lowerOrderUnits)\n      .plus(duration);\n  } else {\n    return duration;\n  }\n}\n","const numberingSystems = {\n  arab: \"[\\u0660-\\u0669]\",\n  arabext: \"[\\u06F0-\\u06F9]\",\n  bali: \"[\\u1B50-\\u1B59]\",\n  beng: \"[\\u09E6-\\u09EF]\",\n  deva: \"[\\u0966-\\u096F]\",\n  fullwide: \"[\\uFF10-\\uFF19]\",\n  gujr: \"[\\u0AE6-\\u0AEF]\",\n  hanidec: \"[〇|一|二|三|四|五|六|七|八|九]\",\n  khmr: \"[\\u17E0-\\u17E9]\",\n  knda: \"[\\u0CE6-\\u0CEF]\",\n  laoo: \"[\\u0ED0-\\u0ED9]\",\n  limb: \"[\\u1946-\\u194F]\",\n  mlym: \"[\\u0D66-\\u0D6F]\",\n  mong: \"[\\u1810-\\u1819]\",\n  mymr: \"[\\u1040-\\u1049]\",\n  orya: \"[\\u0B66-\\u0B6F]\",\n  tamldec: \"[\\u0BE6-\\u0BEF]\",\n  telu: \"[\\u0C66-\\u0C6F]\",\n  thai: \"[\\u0E50-\\u0E59]\",\n  tibt: \"[\\u0F20-\\u0F29]\",\n  latn: \"\\\\d\"\n};\n\nconst numberingSystemsUTF16 = {\n  arab: [1632, 1641],\n  arabext: [1776, 1785],\n  bali: [6992, 7001],\n  beng: [2534, 2543],\n  deva: [2406, 2415],\n  fullwide: [65296, 65303],\n  gujr: [2790, 2799],\n  khmr: [6112, 6121],\n  knda: [3302, 3311],\n  laoo: [3792, 3801],\n  limb: [6470, 6479],\n  mlym: [3430, 3439],\n  mong: [6160, 6169],\n  mymr: [4160, 4169],\n  orya: [2918, 2927],\n  tamldec: [3046, 3055],\n  telu: [3174, 3183],\n  thai: [3664, 3673],\n  tibt: [3872, 3881]\n};\n\n// eslint-disable-next-line\nconst hanidecChars = numberingSystems.hanidec.replace(/[\\[|\\]]/g, \"\").split(\"\");\n\nexport function parseDigits(str) {\n  let value = parseInt(str, 10);\n  if (isNaN(value)) {\n    value = \"\";\n    for (let i = 0; i < str.length; i++) {\n      const code = str.charCodeAt(i);\n\n      if (str[i].search(numberingSystems.hanidec) !== -1) {\n        value += hanidecChars.indexOf(str[i]);\n      } else {\n        for (const key in numberingSystemsUTF16) {\n          const [min, max] = numberingSystemsUTF16[key];\n          if (code >= min && code <= max) {\n            value += code - min;\n          }\n        }\n      }\n    }\n    return parseInt(value, 10);\n  } else {\n    return value;\n  }\n}\n\nexport function digitRegex({ numberingSystem }, append = \"\") {\n  return new RegExp(`${numberingSystems[numberingSystem || \"latn\"]}${append}`);\n}\n","import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = i => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `( |${NBSP})`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex(i => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  // eslint-disable-next-line no-useless-escape\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = t => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = t => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\", false), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\", false), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true, false), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true, false), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false, false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false, false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false, false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false, false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true, false), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true, false), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\"\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\"\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\"\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\"\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\"\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\"\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\"\n  }\n};\n\nfunction tokenForPart(part, locale, formatOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value\n    };\n  }\n\n  const style = formatOpts[type];\n\n  let val = partTypeStyleToTokenVal[type];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map(u => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = token => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone;\n  if (!isUndefined(matches.Z)) {\n    zone = new FixedOffsetZone(matches.Z);\n  } else if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  } else {\n    zone = null;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n\n  if (!formatOpts) {\n    return token;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n\n  const tokens = parts.map(p => tokenForPart(p, locale, formatOpts));\n\n  if (tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nfunction expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map(t => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map(t => unitForToken(t, locale)),\n    disqualifyingUnit = units.find(t => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone] = matches ? dateTimeFromMatches(matches) : [null, null];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, invalidReason];\n}\n","import {\n  integerBetween,\n  isLeapYear,\n  timeObject,\n  daysInYear,\n  daysInMonth,\n  weeksInWeekYear,\n  isInteger\n} from \"./util.js\";\nimport Invalid from \"./invalid.js\";\n\nconst nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],\n  leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\n\nfunction unitOutOfRange(unit, value) {\n  return new Invalid(\n    \"unit out of range\",\n    `you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`\n  );\n}\n\nfunction dayOfWeek(year, month, day) {\n  const js = new Date(Date.UTC(year, month - 1, day)).getUTCDay();\n  return js === 0 ? 7 : js;\n}\n\nfunction computeOrdinal(year, month, day) {\n  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];\n}\n\nfunction uncomputeOrdinal(year, ordinal) {\n  const table = isLeapYear(year) ? leapLadder : nonLeapLadder,\n    month0 = table.findIndex(i => i < ordinal),\n    day = ordinal - table[month0];\n  return { month: month0 + 1, day };\n}\n\n/**\n * @private\n */\n\nexport function gregorianToWeek(gregObj) {\n  const { year, month, day } = gregObj,\n    ordinal = computeOrdinal(year, month, day),\n    weekday = dayOfWeek(year, month, day);\n\n  let weekNumber = Math.floor((ordinal - weekday + 10) / 7),\n    weekYear;\n\n  if (weekNumber < 1) {\n    weekYear = year - 1;\n    weekNumber = weeksInWeekYear(weekYear);\n  } else if (weekNumber > weeksInWeekYear(year)) {\n    weekYear = year + 1;\n    weekNumber = 1;\n  } else {\n    weekYear = year;\n  }\n\n  return Object.assign({ weekYear, weekNumber, weekday }, timeObject(gregObj));\n}\n\nexport function weekToGregorian(weekData) {\n  const { weekYear, weekNumber, weekday } = weekData,\n    weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),\n    yearInDays = daysInYear(weekYear);\n\n  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,\n    year;\n\n  if (ordinal < 1) {\n    year = weekYear - 1;\n    ordinal += daysInYear(year);\n  } else if (ordinal > yearInDays) {\n    year = weekYear + 1;\n    ordinal -= daysInYear(weekYear);\n  } else {\n    year = weekYear;\n  }\n\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n\n  return Object.assign({ year, month, day }, timeObject(weekData));\n}\n\nexport function gregorianToOrdinal(gregData) {\n  const { year, month, day } = gregData,\n    ordinal = computeOrdinal(year, month, day);\n\n  return Object.assign({ year, ordinal }, timeObject(gregData));\n}\n\nexport function ordinalToGregorian(ordinalData) {\n  const { year, ordinal } = ordinalData,\n    { month, day } = uncomputeOrdinal(year, ordinal);\n\n  return Object.assign({ year, month, day }, timeObject(ordinalData));\n}\n\nexport function hasInvalidWeekData(obj) {\n  const validYear = isInteger(obj.weekYear),\n    validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),\n    validWeekday = integerBetween(obj.weekday, 1, 7);\n\n  if (!validYear) {\n    return unitOutOfRange(\"weekYear\", obj.weekYear);\n  } else if (!validWeek) {\n    return unitOutOfRange(\"week\", obj.week);\n  } else if (!validWeekday) {\n    return unitOutOfRange(\"weekday\", obj.weekday);\n  } else return false;\n}\n\nexport function hasInvalidOrdinalData(obj) {\n  const validYear = isInteger(obj.year),\n    validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validOrdinal) {\n    return unitOutOfRange(\"ordinal\", obj.ordinal);\n  } else return false;\n}\n\nexport function hasInvalidGregorianData(obj) {\n  const validYear = isInteger(obj.year),\n    validMonth = integerBetween(obj.month, 1, 12),\n    validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validMonth) {\n    return unitOutOfRange(\"month\", obj.month);\n  } else if (!validDay) {\n    return unitOutOfRange(\"day\", obj.day);\n  } else return false;\n}\n\nexport function hasInvalidTimeData(obj) {\n  const { hour, minute, second, millisecond } = obj;\n  const validHour =\n      integerBetween(hour, 0, 23) ||\n      (hour === 24 && minute === 0 && second === 0 && millisecond === 0),\n    validMinute = integerBetween(minute, 0, 59),\n    validSecond = integerBetween(second, 0, 59),\n    validMillisecond = integerBetween(millisecond, 0, 999);\n\n  if (!validHour) {\n    return unitOutOfRange(\"hour\", hour);\n  } else if (!validMinute) {\n    return unitOutOfRange(\"minute\", minute);\n  } else if (!validSecond) {\n    return unitOutOfRange(\"second\", second);\n  } else if (!validMillisecond) {\n    return unitOutOfRange(\"millisecond\", millisecond);\n  } else return false;\n}\n","import Duration, { friendlyDuration } from \"./duration.js\";\nimport Interval from \"./interval.js\";\nimport Settings from \"./settings.js\";\nimport Info from \"./info.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport FixedOffsetZone from \"./zones/fixedOffsetZone.js\";\nimport Locale from \"./impl/locale.js\";\nimport {\n  isUndefined,\n  maybeArray,\n  isDate,\n  isNumber,\n  bestBy,\n  daysInMonth,\n  daysInYear,\n  isLeapYear,\n  weeksInWeekYear,\n  normalizeObject,\n  roundTo,\n  objToLocalTS\n} from \"./impl/util.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\nimport diff from \"./impl/diff.js\";\nimport { parseRFC2822Date, parseISODate, parseHTTPDate, parseSQL } from \"./impl/regexParser.js\";\nimport { parseFromTokens, explainFromTokens } from \"./impl/tokenParser.js\";\nimport {\n  gregorianToWeek,\n  weekToGregorian,\n  gregorianToOrdinal,\n  ordinalToGregorian,\n  hasInvalidGregorianData,\n  hasInvalidWeekData,\n  hasInvalidOrdinalData,\n  hasInvalidTimeData\n} from \"./impl/conversions.js\";\nimport * as Formats from \"./impl/formats.js\";\nimport {\n  InvalidArgumentError,\n  ConflictingSpecificationError,\n  InvalidUnitError,\n  InvalidDateTimeError\n} from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid DateTime\";\nconst MAX_DATE = 8.64e15;\n\nfunction unsupportedZone(zone) {\n  return new Invalid(\"unsupported zone\", `the zone \"${zone.name}\" is not supported`);\n}\n\n// we cache week data on the DT object and this intermediates the cache\nfunction possiblyCachedWeekData(dt) {\n  if (dt.weekData === null) {\n    dt.weekData = gregorianToWeek(dt.c);\n  }\n  return dt.weekData;\n}\n\n// clone really means, \"make a new object with these modifications\". all \"setters\" really use this\n// to create a new object while only changing some of the properties\nfunction clone(inst, alts) {\n  const current = {\n    ts: inst.ts,\n    zone: inst.zone,\n    c: inst.c,\n    o: inst.o,\n    loc: inst.loc,\n    invalid: inst.invalid\n  };\n  return new DateTime(Object.assign({}, current, alts, { old: current }));\n}\n\n// find the right offset a given local time. The o input is our guess, which determines which\n// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)\nfunction fixOffset(localTS, o, tz) {\n  // Our UTC time is just a guess because our offset is just a guess\n  let utcGuess = localTS - o * 60 * 1000;\n\n  // Test whether the zone matches the offset for this ts\n  const o2 = tz.offset(utcGuess);\n\n  // If so, offset didn't change and we're done\n  if (o === o2) {\n    return [utcGuess, o];\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= (o2 - o) * 60 * 1000;\n\n  // If that gives us the local time we want, we're done\n  const o3 = tz.offset(utcGuess);\n  if (o2 === o3) {\n    return [utcGuess, o2];\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];\n}\n\n// convert an epoch timestamp into a calendar object with the given offset\nfunction tsToObj(ts, offset) {\n  ts += offset * 60 * 1000;\n\n  const d = new Date(ts);\n\n  return {\n    year: d.getUTCFullYear(),\n    month: d.getUTCMonth() + 1,\n    day: d.getUTCDate(),\n    hour: d.getUTCHours(),\n    minute: d.getUTCMinutes(),\n    second: d.getUTCSeconds(),\n    millisecond: d.getUTCMilliseconds()\n  };\n}\n\n// convert a calendar object to a epoch timestamp\nfunction objToTS(obj, offset, zone) {\n  return fixOffset(objToLocalTS(obj), offset, zone);\n}\n\n// create a new DT instance by adding a duration, adjusting for DSTs\nfunction adjustTime(inst, dur) {\n  const oPre = inst.o,\n    year = inst.c.year + Math.trunc(dur.years),\n    month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,\n    c = Object.assign({}, inst.c, {\n      year,\n      month,\n      day:\n        Math.min(inst.c.day, daysInMonth(year, month)) +\n        Math.trunc(dur.days) +\n        Math.trunc(dur.weeks) * 7\n    }),\n    millisToAdd = Duration.fromObject({\n      years: dur.years - Math.trunc(dur.years),\n      quarters: dur.quarters - Math.trunc(dur.quarters),\n      months: dur.months - Math.trunc(dur.months),\n      weeks: dur.weeks - Math.trunc(dur.weeks),\n      days: dur.days - Math.trunc(dur.days),\n      hours: dur.hours,\n      minutes: dur.minutes,\n      seconds: dur.seconds,\n      milliseconds: dur.milliseconds\n    }).as(\"milliseconds\"),\n    localTS = objToLocalTS(c);\n\n  let [ts, o] = fixOffset(localTS, oPre, inst.zone);\n\n  if (millisToAdd !== 0) {\n    ts += millisToAdd;\n    // that could have changed the offset by going over a DST, but we want to keep the ts the same\n    o = inst.zone.offset(ts);\n  }\n\n  return { ts, o };\n}\n\n// helper useful in turning the results of parsing into real dates\n// by handling the zone options\nfunction parseDataToDateTime(parsed, parsedZone, opts, format, text) {\n  const { setZone, zone } = opts;\n  if (parsed && Object.keys(parsed).length !== 0) {\n    const interpretationZone = parsedZone || zone,\n      inst = DateTime.fromObject(\n        Object.assign(parsed, opts, {\n          zone: interpretationZone,\n          // setZone is a valid option in the calling methods, but not in fromObject\n          setZone: undefined\n        })\n      );\n    return setZone ? inst : inst.setZone(zone);\n  } else {\n    return DateTime.invalid(\n      new Invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ${format}`)\n    );\n  }\n}\n\n// if you want to output a technical format (e.g. RFC 2822), this helper\n// helps handle the details\nfunction toTechFormat(dt, format, allowZ = true) {\n  return dt.isValid\n    ? Formatter.create(Locale.create(\"en-US\"), {\n        allowZ,\n        forceSimple: true\n      }).formatDateTimeFromString(dt, format)\n    : null;\n}\n\n// technical time formats (e.g. the time part of ISO 8601), take some options\n// and this commonizes their handling\nfunction toTechTimeFormat(\n  dt,\n  {\n    suppressSeconds = false,\n    suppressMilliseconds = false,\n    includeOffset,\n    includePrefix = false,\n    includeZone = false,\n    spaceZone = false,\n    format = \"extended\"\n  }\n) {\n  let fmt = format === \"basic\" ? \"HHmm\" : \"HH:mm\";\n\n  if (!suppressSeconds || dt.second !== 0 || dt.millisecond !== 0) {\n    fmt += format === \"basic\" ? \"ss\" : \":ss\";\n    if (!suppressMilliseconds || dt.millisecond !== 0) {\n      fmt += \".SSS\";\n    }\n  }\n\n  if ((includeZone || includeOffset) && spaceZone) {\n    fmt += \" \";\n  }\n\n  if (includeZone) {\n    fmt += \"z\";\n  } else if (includeOffset) {\n    fmt += format === \"basic\" ? \"ZZZ\" : \"ZZ\";\n  }\n\n  let str = toTechFormat(dt, fmt);\n\n  if (includePrefix) {\n    str = \"T\" + str;\n  }\n\n  return str;\n}\n\n// defaults for unspecified units in the supported calendars\nconst defaultUnitValues = {\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  },\n  defaultWeekUnitValues = {\n    weekNumber: 1,\n    weekday: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  },\n  defaultOrdinalUnitValues = {\n    ordinal: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  };\n\n// Units in the supported calendars, sorted by bigness\nconst orderedUnits = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n  orderedWeekUnits = [\n    \"weekYear\",\n    \"weekNumber\",\n    \"weekday\",\n    \"hour\",\n    \"minute\",\n    \"second\",\n    \"millisecond\"\n  ],\n  orderedOrdinalUnits = [\"year\", \"ordinal\", \"hour\", \"minute\", \"second\", \"millisecond\"];\n\n// standardize case and plurality in units\nfunction normalizeUnit(unit) {\n  const normalized = {\n    year: \"year\",\n    years: \"year\",\n    month: \"month\",\n    months: \"month\",\n    day: \"day\",\n    days: \"day\",\n    hour: \"hour\",\n    hours: \"hour\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    quarter: \"quarter\",\n    quarters: \"quarter\",\n    second: \"second\",\n    seconds: \"second\",\n    millisecond: \"millisecond\",\n    milliseconds: \"millisecond\",\n    weekday: \"weekday\",\n    weekdays: \"weekday\",\n    weeknumber: \"weekNumber\",\n    weeksnumber: \"weekNumber\",\n    weeknumbers: \"weekNumber\",\n    weekyear: \"weekYear\",\n    weekyears: \"weekYear\",\n    ordinal: \"ordinal\"\n  }[unit.toLowerCase()];\n\n  if (!normalized) throw new InvalidUnitError(unit);\n\n  return normalized;\n}\n\n// this is a dumbed down version of fromObject() that runs about 60% faster\n// but doesn't do any validation, makes a bunch of assumptions about what units\n// are present, and so on.\nfunction quickDT(obj, zone) {\n  // assume we have the higher-order units\n  for (const u of orderedUnits) {\n    if (isUndefined(obj[u])) {\n      obj[u] = defaultUnitValues[u];\n    }\n  }\n\n  const invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);\n  if (invalid) {\n    return DateTime.invalid(invalid);\n  }\n\n  const tsNow = Settings.now(),\n    offsetProvis = zone.offset(tsNow),\n    [ts, o] = objToTS(obj, offsetProvis, zone);\n\n  return new DateTime({\n    ts,\n    zone,\n    o\n  });\n}\n\nfunction diffRelative(start, end, opts) {\n  const round = isUndefined(opts.round) ? true : opts.round,\n    format = (c, unit) => {\n      c = roundTo(c, round || opts.calendary ? 0 : 2, true);\n      const formatter = end.loc.clone(opts).relFormatter(opts);\n      return formatter.format(c, unit);\n    },\n    differ = unit => {\n      if (opts.calendary) {\n        if (!end.hasSame(start, unit)) {\n          return end\n            .startOf(unit)\n            .diff(start.startOf(unit), unit)\n            .get(unit);\n        } else return 0;\n      } else {\n        return end.diff(start, unit).get(unit);\n      }\n    };\n\n  if (opts.unit) {\n    return format(differ(opts.unit), opts.unit);\n  }\n\n  for (const unit of opts.units) {\n    const count = differ(unit);\n    if (Math.abs(count) >= 1) {\n      return format(count, unit);\n    }\n  }\n  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);\n}\n\n/**\n * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.\n *\n * A DateTime comprises of:\n * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.\n * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).\n * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.\n *\n * Here is a brief overview of the most commonly used functionality it provides:\n *\n * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link local}, {@link utc}, and (most flexibly) {@link fromObject}. To create one from a standard string format, use {@link fromISO}, {@link fromHTTP}, and {@link fromRFC2822}. To create one from a custom string format, use {@link fromFormat}. To create one from a native JS date, use {@link fromJSDate}.\n * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link toObject}), use the {@link year}, {@link month},\n * {@link day}, {@link hour}, {@link minute}, {@link second}, {@link millisecond} accessors.\n * * **Week calendar**: For ISO week calendar attributes, see the {@link weekYear}, {@link weekNumber}, and {@link weekday} accessors.\n * * **Configuration** See the {@link locale} and {@link numberingSystem} accessors.\n * * **Transformation**: To transform the DateTime into other DateTimes, use {@link set}, {@link reconfigure}, {@link setZone}, {@link setLocale}, {@link plus}, {@link minus}, {@link endOf}, {@link startOf}, {@link toUTC}, and {@link toLocal}.\n * * **Output**: To convert the DateTime to other representations, use the {@link toRelative}, {@link toRelativeCalendar}, {@link toJSON}, {@link toISO}, {@link toHTTP}, {@link toObject}, {@link toRFC2822}, {@link toString}, {@link toLocaleString}, {@link toFormat}, {@link toMillis} and {@link toJSDate}.\n *\n * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.\n */\nexport default class DateTime {\n  /**\n   * @access private\n   */\n  constructor(config) {\n    const zone = config.zone || Settings.defaultZone;\n\n    let invalid =\n      config.invalid ||\n      (Number.isNaN(config.ts) ? new Invalid(\"invalid input\") : null) ||\n      (!zone.isValid ? unsupportedZone(zone) : null);\n    /**\n     * @access private\n     */\n    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;\n\n    let c = null,\n      o = null;\n    if (!invalid) {\n      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);\n\n      if (unchanged) {\n        [c, o] = [config.old.c, config.old.o];\n      } else {\n        const ot = zone.offset(this.ts);\n        c = tsToObj(this.ts, ot);\n        invalid = Number.isNaN(c.year) ? new Invalid(\"invalid input\") : null;\n        c = invalid ? null : c;\n        o = invalid ? null : ot;\n      }\n    }\n\n    /**\n     * @access private\n     */\n    this._zone = zone;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.invalid = invalid;\n    /**\n     * @access private\n     */\n    this.weekData = null;\n    /**\n     * @access private\n     */\n    this.c = c;\n    /**\n     * @access private\n     */\n    this.o = o;\n    /**\n     * @access private\n     */\n    this.isLuxonDateTime = true;\n  }\n\n  // CONSTRUCT\n\n  /**\n   * Create a DateTime for the current instant, in the system's time zone.\n   *\n   * Use Settings to override these default values if needed.\n   * @example DateTime.now().toISO() //~> now in the ISO format\n   * @return {DateTime}\n   */\n  static now() {\n    return new DateTime({});\n  }\n\n  /**\n   * Create a local DateTime\n   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month, 1-indexed\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @example DateTime.local()                            //~> now\n   * @example DateTime.local(2017)                        //~> 2017-01-01T00:00:00\n   * @example DateTime.local(2017, 3)                     //~> 2017-03-01T00:00:00\n   * @example DateTime.local(2017, 3, 12)                 //~> 2017-03-12T00:00:00\n   * @example DateTime.local(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00\n   * @example DateTime.local(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765\n   * @return {DateTime}\n   */\n  static local(year, month, day, hour, minute, second, millisecond) {\n    if (isUndefined(year)) {\n      return DateTime.now();\n    } else {\n      return quickDT(\n        {\n          year,\n          month,\n          day,\n          hour,\n          minute,\n          second,\n          millisecond\n        },\n        Settings.defaultZone\n      );\n    }\n  }\n\n  /**\n   * Create a DateTime in UTC\n   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @example DateTime.utc()                            //~> now\n   * @example DateTime.utc(2017)                        //~> 2017-01-01T00:00:00Z\n   * @example DateTime.utc(2017, 3)                     //~> 2017-03-01T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12)                 //~> 2017-03-12T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765Z\n   * @return {DateTime}\n   */\n  static utc(year, month, day, hour, minute, second, millisecond) {\n    if (isUndefined(year)) {\n      return new DateTime({\n        ts: Settings.now(),\n        zone: FixedOffsetZone.utcInstance\n      });\n    } else {\n      return quickDT(\n        {\n          year,\n          month,\n          day,\n          hour,\n          minute,\n          second,\n          millisecond\n        },\n        FixedOffsetZone.utcInstance\n      );\n    }\n  }\n\n  /**\n   * Create a DateTime from a JavaScript Date object. Uses the default zone.\n   * @param {Date} date - a JavaScript Date object\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @return {DateTime}\n   */\n  static fromJSDate(date, options = {}) {\n    const ts = isDate(date) ? date.valueOf() : NaN;\n    if (Number.isNaN(ts)) {\n      return DateTime.invalid(\"invalid input\");\n    }\n\n    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    return new DateTime({\n      ts: ts,\n      zone: zoneToUse,\n      loc: Locale.fromObject(options)\n    });\n  }\n\n  /**\n   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} milliseconds - a number of milliseconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromMillis(milliseconds, options = {}) {\n    if (!isNumber(milliseconds)) {\n      throw new InvalidArgumentError(\n        `fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`\n      );\n    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {\n      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start\n      return DateTime.invalid(\"Timestamp out of range\");\n    } else {\n      return new DateTime({\n        ts: milliseconds,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options)\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} seconds - a number of seconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromSeconds(seconds, options = {}) {\n    if (!isNumber(seconds)) {\n      throw new InvalidArgumentError(\"fromSeconds requires a numerical input\");\n    } else {\n      return new DateTime({\n        ts: seconds * 1000,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options)\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.year - a year, such as 1987\n   * @param {number} obj.month - a month, 1-12\n   * @param {number} obj.day - a day of the month, 1-31, depending on the month\n   * @param {number} obj.ordinal - day of the year, 1-365 or 366\n   * @param {number} obj.weekYear - an ISO week year\n   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year\n   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday\n   * @param {number} obj.hour - hour of the day, 0-23\n   * @param {number} obj.minute - minute of the hour, 0-59\n   * @param {number} obj.second - second of the minute, 0-59\n   * @param {number} obj.millisecond - millisecond of the second, 0-999\n   * @param {string|Zone} [obj.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()\n   * @param {string} [obj.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} obj.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} obj.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'\n   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'utc' }),\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'local' })\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'America/New_York' })\n   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'\n   * @return {DateTime}\n   */\n  static fromObject(obj) {\n    const zoneToUse = normalizeZone(obj.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    const tsNow = Settings.now(),\n      offsetProvis = zoneToUse.offset(tsNow),\n      normalized = normalizeObject(obj, normalizeUnit, [\n        \"zone\",\n        \"locale\",\n        \"outputCalendar\",\n        \"numberingSystem\"\n      ]),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber,\n      loc = Locale.fromObject(obj);\n\n    // cases:\n    // just a weekday -> this week's instance of that weekday, no worries\n    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error\n    // (gregorian month or day) + ordinal -> error\n    // otherwise just use weeks or ordinals or gregorian, depending on what's specified\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    const useWeekData = definiteWeekDef || (normalized.weekday && !containsGregor);\n\n    // configure ourselves to deal with gregorian dates or week stuff\n    let units,\n      defaultValues,\n      objNow = tsToObj(tsNow, offsetProvis);\n    if (useWeekData) {\n      units = orderedWeekUnits;\n      defaultValues = defaultWeekUnitValues;\n      objNow = gregorianToWeek(objNow);\n    } else if (containsOrdinal) {\n      units = orderedOrdinalUnits;\n      defaultValues = defaultOrdinalUnitValues;\n      objNow = gregorianToOrdinal(objNow);\n    } else {\n      units = orderedUnits;\n      defaultValues = defaultUnitValues;\n    }\n\n    // set default values for missing stuff\n    let foundFirst = false;\n    for (const u of units) {\n      const v = normalized[u];\n      if (!isUndefined(v)) {\n        foundFirst = true;\n      } else if (foundFirst) {\n        normalized[u] = defaultValues[u];\n      } else {\n        normalized[u] = objNow[u];\n      }\n    }\n\n    // make sure the values we have are in range\n    const higherOrderInvalid = useWeekData\n        ? hasInvalidWeekData(normalized)\n        : containsOrdinal\n          ? hasInvalidOrdinalData(normalized)\n          : hasInvalidGregorianData(normalized),\n      invalid = higherOrderInvalid || hasInvalidTimeData(normalized);\n\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    // compute the actual time\n    const gregorian = useWeekData\n        ? weekToGregorian(normalized)\n        : containsOrdinal\n          ? ordinalToGregorian(normalized)\n          : normalized,\n      [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse),\n      inst = new DateTime({\n        ts: tsFinal,\n        zone: zoneToUse,\n        o: offsetFinal,\n        loc\n      });\n\n    // gregorian data + weekday serves only to validate\n    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {\n      return DateTime.invalid(\n        \"mismatched weekday\",\n        `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`\n      );\n    }\n\n    return inst;\n  }\n\n  /**\n   * Create a DateTime from an ISO 8601 string\n   * @param {string} text - the ISO string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})\n   * @example DateTime.fromISO('2016-W05-4')\n   * @return {DateTime}\n   */\n  static fromISO(text, opts = {}) {\n    const [vals, parsedZone] = parseISODate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"ISO 8601\", text);\n  }\n\n  /**\n   * Create a DateTime from an RFC 2822 string\n   * @param {string} text - the RFC 2822 string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')\n   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')\n   * @return {DateTime}\n   */\n  static fromRFC2822(text, opts = {}) {\n    const [vals, parsedZone] = parseRFC2822Date(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"RFC 2822\", text);\n  }\n\n  /**\n   * Create a DateTime from an HTTP header date\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @param {string} text - the HTTP header date\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')\n   * @return {DateTime}\n   */\n  static fromHTTP(text, opts = {}) {\n    const [vals, parsedZone] = parseHTTPDate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"HTTP\", opts);\n  }\n\n  /**\n   * Create a DateTime from an input string and format string.\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n   * @see https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromFormat(text, fmt, opts = {}) {\n    if (isUndefined(text) || isUndefined(fmt)) {\n      throw new InvalidArgumentError(\"fromFormat requires an input string and a format\");\n    }\n\n    const { locale = null, numberingSystem = null } = opts,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true\n      }),\n      [vals, parsedZone, invalid] = parseFromTokens(localeToUse, text, fmt);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    } else {\n      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text);\n    }\n  }\n\n  /**\n   * @deprecated use fromFormat instead\n   */\n  static fromString(text, fmt, opts = {}) {\n    return DateTime.fromFormat(text, fmt, opts);\n  }\n\n  /**\n   * Create a DateTime from a SQL date, time, or datetime\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale\n   * @param {string} text - the string to parse\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @example DateTime.fromSQL('2017-05-15')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })\n   * @example DateTime.fromSQL('09:12:34.342')\n   * @return {DateTime}\n   */\n  static fromSQL(text, opts = {}) {\n    const [vals, parsedZone] = parseSQL(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"SQL\", text);\n  }\n\n  /**\n   * Create an invalid DateTime.\n   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {DateTime}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the DateTime is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDateTimeError(invalid);\n    } else {\n      return new DateTime({ invalid });\n    }\n  }\n\n  /**\n   * Check if an object is a DateTime. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDateTime(o) {\n    return (o && o.isLuxonDateTime) || false;\n  }\n\n  // INFO\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7\n   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4\n   * @return {number}\n   */\n  get(unit) {\n    return this[unit];\n  }\n\n  /**\n   * Returns whether the DateTime is valid. Invalid DateTimes occur when:\n   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30\n   * * The DateTime was created by an operation on another invalid date\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get outputCalendar() {\n    return this.isValid ? this.loc.outputCalendar : null;\n  }\n\n  /**\n   * Get the time zone associated with this DateTime.\n   * @type {Zone}\n   */\n  get zone() {\n    return this._zone;\n  }\n\n  /**\n   * Get the name of the time zone.\n   * @type {string}\n   */\n  get zoneName() {\n    return this.isValid ? this.zone.name : null;\n  }\n\n  /**\n   * Get the year\n   * @example DateTime.local(2017, 5, 25).year //=> 2017\n   * @type {number}\n   */\n  get year() {\n    return this.isValid ? this.c.year : NaN;\n  }\n\n  /**\n   * Get the quarter\n   * @example DateTime.local(2017, 5, 25).quarter //=> 2\n   * @type {number}\n   */\n  get quarter() {\n    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;\n  }\n\n  /**\n   * Get the month (1-12).\n   * @example DateTime.local(2017, 5, 25).month //=> 5\n   * @type {number}\n   */\n  get month() {\n    return this.isValid ? this.c.month : NaN;\n  }\n\n  /**\n   * Get the day of the month (1-30ish).\n   * @example DateTime.local(2017, 5, 25).day //=> 25\n   * @type {number}\n   */\n  get day() {\n    return this.isValid ? this.c.day : NaN;\n  }\n\n  /**\n   * Get the hour of the day (0-23).\n   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9\n   * @type {number}\n   */\n  get hour() {\n    return this.isValid ? this.c.hour : NaN;\n  }\n\n  /**\n   * Get the minute of the hour (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30\n   * @type {number}\n   */\n  get minute() {\n    return this.isValid ? this.c.minute : NaN;\n  }\n\n  /**\n   * Get the second of the minute (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52\n   * @type {number}\n   */\n  get second() {\n    return this.isValid ? this.c.second : NaN;\n  }\n\n  /**\n   * Get the millisecond of the second (0-999).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654\n   * @type {number}\n   */\n  get millisecond() {\n    return this.isValid ? this.c.millisecond : NaN;\n  }\n\n  /**\n   * Get the week year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015\n   * @type {number}\n   */\n  get weekYear() {\n    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the week number of the week year (1-52ish).\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21\n   * @type {number}\n   */\n  get weekNumber() {\n    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the day of the week.\n   * 1 is Monday and 7 is Sunday\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 11, 31).weekday //=> 4\n   * @type {number}\n   */\n  get weekday() {\n    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Get the ordinal (meaning the day of the year)\n   * @example DateTime.local(2017, 5, 25).ordinal //=> 145\n   * @type {number|DateTime}\n   */\n  get ordinal() {\n    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;\n  }\n\n  /**\n   * Get the human readable short month name, such as 'Oct'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct\n   * @type {string}\n   */\n  get monthShort() {\n    return this.isValid ? Info.months(\"short\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable long month name, such as 'October'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthLong //=> October\n   * @type {string}\n   */\n  get monthLong() {\n    return this.isValid ? Info.months(\"long\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable short weekday, such as 'Mon'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon\n   * @type {string}\n   */\n  get weekdayShort() {\n    return this.isValid ? Info.weekdays(\"short\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the human readable long weekday, such as 'Monday'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday\n   * @type {string}\n   */\n  get weekdayLong() {\n    return this.isValid ? Info.weekdays(\"long\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the UTC offset of this DateTime in minutes\n   * @example DateTime.now().offset //=> -240\n   * @example DateTime.utc().offset //=> 0\n   * @type {number}\n   */\n  get offset() {\n    return this.isValid ? +this.o : NaN;\n  }\n\n  /**\n   * Get the short human name for the zone's current offset, for example \"EST\" or \"EDT\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameShort() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"short\",\n        locale: this.locale\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the long human name for the zone's current offset, for example \"Eastern Standard Time\" or \"Eastern Daylight Time\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameLong() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"long\",\n        locale: this.locale\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get whether this zone's offset ever changes, as in a DST.\n   * @type {boolean}\n   */\n  get isOffsetFixed() {\n    return this.isValid ? this.zone.universal : null;\n  }\n\n  /**\n   * Get whether the DateTime is in a DST.\n   * @type {boolean}\n   */\n  get isInDST() {\n    if (this.isOffsetFixed) {\n      return false;\n    } else {\n      return (\n        this.offset > this.set({ month: 1 }).offset || this.offset > this.set({ month: 5 }).offset\n      );\n    }\n  }\n\n  /**\n   * Returns true if this DateTime is in a leap year, false otherwise\n   * @example DateTime.local(2016).isInLeapYear //=> true\n   * @example DateTime.local(2013).isInLeapYear //=> false\n   * @type {boolean}\n   */\n  get isInLeapYear() {\n    return isLeapYear(this.year);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's month\n   * @example DateTime.local(2016, 2).daysInMonth //=> 29\n   * @example DateTime.local(2016, 3).daysInMonth //=> 31\n   * @type {number}\n   */\n  get daysInMonth() {\n    return daysInMonth(this.year, this.month);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's year\n   * @example DateTime.local(2016).daysInYear //=> 366\n   * @example DateTime.local(2013).daysInYear //=> 365\n   * @type {number}\n   */\n  get daysInYear() {\n    return this.isValid ? daysInYear(this.year) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2004).weeksInWeekYear //=> 53\n   * @example DateTime.local(2013).weeksInWeekYear //=> 52\n   * @type {number}\n   */\n  get weeksInWeekYear() {\n    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;\n  }\n\n  /**\n   * Returns the resolved Intl options for this DateTime.\n   * This is useful in understanding the behavior of formatting methods\n   * @param {Object} opts - the same options as toLocaleString\n   * @return {Object}\n   */\n  resolvedLocaleOpts(opts = {}) {\n    const { locale, numberingSystem, calendar } = Formatter.create(\n      this.loc.clone(opts),\n      opts\n    ).resolvedOptions(this);\n    return { locale, numberingSystem, outputCalendar: calendar };\n  }\n\n  // TRANSFORM\n\n  /**\n   * \"Set\" the DateTime's zone to UTC. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to {@link setZone}('utc')\n   * @param {number} [offset=0] - optionally, an offset from UTC in minutes\n   * @param {Object} [opts={}] - options to pass to `setZone()`\n   * @return {DateTime}\n   */\n  toUTC(offset = 0, opts = {}) {\n    return this.setZone(FixedOffsetZone.instance(offset), opts);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to `setZone('local')`\n   * @return {DateTime}\n   */\n  toLocal() {\n    return this.setZone(Settings.defaultZone);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.\n   *\n   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link plus}. You may wish to use {@link toLocal} and {@link toUTC} which provide simple convenience wrappers for commonly used zones.\n   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link Zone} class.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.\n   * @return {DateTime}\n   */\n  setZone(zone, { keepLocalTime = false, keepCalendarTime = false } = {}) {\n    zone = normalizeZone(zone, Settings.defaultZone);\n    if (zone.equals(this.zone)) {\n      return this;\n    } else if (!zone.isValid) {\n      return DateTime.invalid(unsupportedZone(zone));\n    } else {\n      let newTS = this.ts;\n      if (keepLocalTime || keepCalendarTime) {\n        const offsetGuess = zone.offset(this.ts);\n        const asObj = this.toObject();\n        [newTS] = objToTS(asObj, offsetGuess, zone);\n      }\n      return clone(this, { ts: newTS, zone });\n    }\n  }\n\n  /**\n   * \"Set\" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.\n   * @param {Object} properties - the properties to set\n   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })\n   * @return {DateTime}\n   */\n  reconfigure({ locale, numberingSystem, outputCalendar } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem, outputCalendar });\n    return clone(this, { loc });\n  }\n\n  /**\n   * \"Set\" the locale. Returns a newly-constructed DateTime.\n   * Just a convenient alias for reconfigure({ locale })\n   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')\n   * @return {DateTime}\n   */\n  setLocale(locale) {\n    return this.reconfigure({ locale });\n  }\n\n  /**\n   * \"Set\" the values of specified units. Returns a newly-constructed DateTime.\n   * You can only set units with this method; for \"setting\" metadata, see {@link reconfigure} and {@link setZone}.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dt.set({ year: 2017 })\n   * @example dt.set({ hour: 8, minute: 30 })\n   * @example dt.set({ weekday: 5 })\n   * @example dt.set({ year: 2005, ordinal: 234 })\n   * @return {DateTime}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const normalized = normalizeObject(values, normalizeUnit, []),\n      settingWeekStuff =\n        !isUndefined(normalized.weekYear) ||\n        !isUndefined(normalized.weekNumber) ||\n        !isUndefined(normalized.weekday),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    let mixed;\n    if (settingWeekStuff) {\n      mixed = weekToGregorian(Object.assign(gregorianToWeek(this.c), normalized));\n    } else if (!isUndefined(normalized.ordinal)) {\n      mixed = ordinalToGregorian(Object.assign(gregorianToOrdinal(this.c), normalized));\n    } else {\n      mixed = Object.assign(this.toObject(), normalized);\n\n      // if we didn't set the day but we ended up on an overflow date,\n      // use the last day of the right month\n      if (isUndefined(normalized.day)) {\n        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);\n      }\n    }\n\n    const [ts, o] = objToTS(mixed, this.o, this.zone);\n    return clone(this, { ts, o });\n  }\n\n  /**\n   * Add a period of time to this DateTime and return the resulting DateTime\n   *\n   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @example DateTime.now().plus(123) //~> in 123 milliseconds\n   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes\n   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow\n   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday\n   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min\n   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min\n   * @return {DateTime}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n    const dur = friendlyDuration(duration);\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * Subtract a period of time to this DateTime and return the resulting DateTime\n   * See {@link plus}\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   @return {DateTime}\n  */\n  minus(duration) {\n    if (!this.isValid) return this;\n    const dur = friendlyDuration(duration).negate();\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * \"Set\" this DateTime to the beginning of a unit of time.\n   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'\n   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'\n   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'\n   * @return {DateTime}\n   */\n  startOf(unit) {\n    if (!this.isValid) return this;\n    const o = {},\n      normalizedUnit = Duration.normalizeUnit(unit);\n    switch (normalizedUnit) {\n      case \"years\":\n        o.month = 1;\n      // falls through\n      case \"quarters\":\n      case \"months\":\n        o.day = 1;\n      // falls through\n      case \"weeks\":\n      case \"days\":\n        o.hour = 0;\n      // falls through\n      case \"hours\":\n        o.minute = 0;\n      // falls through\n      case \"minutes\":\n        o.second = 0;\n      // falls through\n      case \"seconds\":\n        o.millisecond = 0;\n        break;\n      case \"milliseconds\":\n        break;\n      // no default, invalid units throw in normalizeUnit()\n    }\n\n    if (normalizedUnit === \"weeks\") {\n      o.weekday = 1;\n    }\n\n    if (normalizedUnit === \"quarters\") {\n      const q = Math.ceil(this.month / 3);\n      o.month = (q - 1) * 3 + 1;\n    }\n\n    return this.set(o);\n  }\n\n  /**\n   * \"Set\" this DateTime to the end (meaning the last millisecond) of a unit of time\n   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'\n   * @return {DateTime}\n   */\n  endOf(unit) {\n    return this.isValid\n      ? this.plus({ [unit]: 1 })\n          .startOf(unit)\n          .minus(1)\n      : this;\n  }\n\n  // OUTPUT\n\n  /**\n   * Returns a string representation of this DateTime formatted according to the specified format string.\n   * **You may not want this.** See {@link toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens).\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n   * @see https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens\n   * @param {string} fmt - the format string\n   * @param {Object} opts - opts to override the configuration options\n   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'\n   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: \"fr\" }) //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat(\"HH 'hours and' mm 'minutes'\") //=> '20 hours and 55 minutes'\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.\n   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation\n   * of the DateTime in the assigned locale.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param opts {Object} - Intl.DateTimeFormat constructor options and configuration options\n   * @example DateTime.now().toLocaleString(); //=> 4/20/2017\n   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString({ locale: 'en-gb' }); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'\n   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'\n   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'\n   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'\n   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'\n   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hour12: false }); //=> '11:32'\n   * @return {string}\n   */\n  toLocaleString(opts = Formats.DATE_SHORT) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), opts).formatDateTime(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an array of format \"parts\", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts\n   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.\n   * @example DateTime.now().toLocaleParts(); //=> [\n   *                                   //=>   { type: 'day', value: '25' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'month', value: '05' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'year', value: '1982' }\n   *                                   //=> ]\n   */\n  toLocaleParts(opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this)\n      : [];\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'\n   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'\n   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'\n   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'\n   * @return {string}\n   */\n  toISO(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return `${this.toISODate(opts)}T${this.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's date component\n   * @param {Object} opts - options\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'\n   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'\n   * @return {string}\n   */\n  toISODate({ format = \"extended\" } = {}) {\n    let fmt = format === \"basic\" ? \"yyyyMMdd\" : \"yyyy-MM-dd\";\n    if (this.year > 9999) {\n      fmt = \"+\" + fmt;\n    }\n\n    return toTechFormat(this, fmt);\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's week date\n   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'\n   * @return {string}\n   */\n  toISOWeekDate() {\n    return toTechFormat(this, \"kkkk-'W'WW-c\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's time component\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'\n   * @return {string}\n   */\n  toISOTime({\n    suppressMilliseconds = false,\n    suppressSeconds = false,\n    includeOffset = true,\n    includePrefix = false,\n    format = \"extended\"\n  } = {}) {\n    return toTechTimeFormat(this, {\n      suppressSeconds,\n      suppressMilliseconds,\n      includeOffset,\n      includePrefix,\n      format\n    });\n  }\n\n  /**\n   * Returns an RFC 2822-compatible string representation of this DateTime, always in UTC\n   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'\n   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'\n   * @return {string}\n   */\n  toRFC2822() {\n    return toTechFormat(this, \"EEE, dd LLL yyyy HH:mm:ss ZZZ\", false);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in HTTP headers.\n   * Specifically, the string conforms to RFC 1123.\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'\n   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'\n   * @return {string}\n   */\n  toHTTP() {\n    return toTechFormat(this.toUTC(), \"EEE, dd LLL yyyy HH:mm:ss 'GMT'\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Date\n   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'\n   * @return {string}\n   */\n  toSQLDate() {\n    return toTechFormat(this, \"yyyy-MM-dd\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Time\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @example DateTime.utc().toSQL() //=> '05:15:16.345'\n   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'\n   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'\n   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'\n   * @return {string}\n   */\n  toSQLTime({ includeOffset = true, includeZone = false } = {}) {\n    return toTechTimeFormat(this, {\n      includeOffset,\n      includeZone,\n      spaceZone: true\n    });\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'\n   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'\n   * @return {string}\n   */\n  toSQL(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for debugging\n   * @return {string}\n   */\n  toString() {\n    return this.isValid ? this.toISO() : INVALID;\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime. Alias of {@link toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime.\n   * @return {number}\n   */\n  toMillis() {\n    return this.isValid ? this.ts : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds of this DateTime.\n   * @return {number}\n   */\n  toSeconds() {\n    return this.isValid ? this.ts / 1000 : NaN;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a BSON serializable equivalent to this DateTime.\n   * @return {Date}\n   */\n  toBSON() {\n    return this.toJSDate();\n  }\n\n  /**\n   * Returns a JavaScript object with this DateTime's year, month, day, and so on.\n   * @param opts - options for generating the object\n   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }\n   * @return {Object}\n   */\n  toObject(opts = {}) {\n    if (!this.isValid) return {};\n\n    const base = Object.assign({}, this.c);\n\n    if (opts.includeConfig) {\n      base.outputCalendar = this.outputCalendar;\n      base.numberingSystem = this.loc.numberingSystem;\n      base.locale = this.loc.locale;\n    }\n    return base;\n  }\n\n  /**\n   * Returns a JavaScript Date equivalent to this DateTime.\n   * @return {Date}\n   */\n  toJSDate() {\n    return new Date(this.isValid ? this.ts : NaN);\n  }\n\n  // COMPARE\n\n  /**\n   * Return the difference between two DateTimes as a Duration.\n   * @param {DateTime} otherDateTime - the DateTime to compare this one to\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example\n   * var i1 = DateTime.fromISO('1982-05-25T09:45'),\n   *     i2 = DateTime.fromISO('1983-10-14T10:30');\n   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }\n   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }\n   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }\n   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }\n   * @return {Duration}\n   */\n  diff(otherDateTime, unit = \"milliseconds\", opts = {}) {\n    if (!this.isValid || !otherDateTime.isValid) {\n      return Duration.invalid(\n        this.invalid || otherDateTime.invalid,\n        \"created by diffing an invalid DateTime\"\n      );\n    }\n\n    const durOpts = Object.assign(\n      { locale: this.locale, numberingSystem: this.numberingSystem },\n      opts\n    );\n\n    const units = maybeArray(unit).map(Duration.normalizeUnit),\n      otherIsLater = otherDateTime.valueOf() > this.valueOf(),\n      earlier = otherIsLater ? this : otherDateTime,\n      later = otherIsLater ? otherDateTime : this,\n      diffed = diff(earlier, later, units, durOpts);\n\n    return otherIsLater ? diffed.negate() : diffed;\n  }\n\n  /**\n   * Return the difference between this DateTime and right now.\n   * See {@link diff}\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  diffNow(unit = \"milliseconds\", opts = {}) {\n    return this.diff(DateTime.now(), unit, opts);\n  }\n\n  /**\n   * Return an Interval spanning between this DateTime and another DateTime\n   * @param {DateTime} otherDateTime - the other end point of the Interval\n   * @return {Interval}\n   */\n  until(otherDateTime) {\n    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;\n  }\n\n  /**\n   * Return whether this DateTime is in the same unit of time as another DateTime.\n   * Higher-order units must also be identical for this function to return `true`.\n   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link setZone} to convert one of the dates if needed.\n   * @param {DateTime} otherDateTime - the other DateTime\n   * @param {string} unit - the unit of time to check sameness on\n   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day\n   * @return {boolean}\n   */\n  hasSame(otherDateTime, unit) {\n    if (!this.isValid) return false;\n\n    const inputMs = otherDateTime.valueOf();\n    const otherZoneDateTime = this.setZone(otherDateTime.zone, { keepLocalTime: true });\n    return otherZoneDateTime.startOf(unit) <= inputMs && inputMs <= otherZoneDateTime.endOf(unit);\n  }\n\n  /**\n   * Equality check\n   * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.\n   * To compare just the millisecond values, use `+dt1 === +dt2`.\n   * @param {DateTime} other - the other DateTime\n   * @return {boolean}\n   */\n  equals(other) {\n    return (\n      this.isValid &&\n      other.isValid &&\n      this.valueOf() === other.valueOf() &&\n      this.zone.equals(other.zone) &&\n      this.loc.equals(other.loc)\n    );\n  }\n\n  /**\n   * Returns a string representation of a this time relative to now, such as \"in two days\". Can only internationalize if your\n   * platform supports Intl.RelativeTimeFormat. Rounds down by default.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} [options.style=\"long\"] - the style of units, must be \"long\", \"short\", or \"narrow\"\n   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", or \"seconds\"\n   * @param {boolean} [options.round=true] - whether to round the numbers in the output.\n   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> \"in 1 day\"\n   * @example DateTime.now().setLocale(\"es\").toRelative({ days: 1 }) //=> \"dentro de 1 día\"\n   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: \"fr\" }) //=> \"dans 23 heures\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> \"2 days ago\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: \"hours\" }) //=> \"48 hours ago\"\n   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> \"1.5 days ago\"\n   */\n  toRelative(options = {}) {\n    if (!this.isValid) return null;\n    const base = options.base || DateTime.fromObject({ zone: this.zone }),\n      padding = options.padding ? (this < base ? -options.padding : options.padding) : 0;\n    let units = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n    let unit = options.unit;\n    if (Array.isArray(options.unit)) {\n      units = options.unit;\n      unit = undefined;\n    }\n    return diffRelative(\n      base,\n      this.plus(padding),\n      Object.assign(options, {\n        numeric: \"always\",\n        units,\n        unit\n      })\n    );\n  }\n\n  /**\n   * Returns a string representation of this date relative to today, such as \"yesterday\" or \"next month\".\n   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", or \"days\"\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> \"tomorrow\"\n   * @example DateTime.now().setLocale(\"es\").plus({ days: 1 }).toRelative() //=> \"\"mañana\"\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: \"fr\" }) //=> \"demain\"\n   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> \"2 days ago\"\n   */\n  toRelativeCalendar(options = {}) {\n    if (!this.isValid) return null;\n\n    return diffRelative(\n      options.base || DateTime.fromObject({ zone: this.zone }),\n      this,\n      Object.assign(options, {\n        numeric: \"auto\",\n        units: [\"years\", \"months\", \"days\"],\n        calendary: true\n      })\n    );\n  }\n\n  /**\n   * Return the min of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum\n   * @return {DateTime} the min DateTime, or undefined if called with no argument\n   */\n  static min(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"min requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, i => i.valueOf(), Math.min);\n  }\n\n  /**\n   * Return the max of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum\n   * @return {DateTime} the max DateTime, or undefined if called with no argument\n   */\n  static max(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"max requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, i => i.valueOf(), Math.max);\n  }\n\n  // MISC\n\n  /**\n   * Explain how a string would be parsed by fromFormat()\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see description)\n   * @param {Object} options - options taken by fromFormat()\n   * @return {Object}\n   */\n  static fromFormatExplain(text, fmt, options = {}) {\n    const { locale = null, numberingSystem = null } = options,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true\n      });\n    return explainFromTokens(localeToUse, text, fmt);\n  }\n\n  /**\n   * @deprecated use fromFormatExplain instead\n   */\n  static fromStringExplain(text, fmt, options = {}) {\n    return DateTime.fromFormatExplain(text, fmt, options);\n  }\n\n  // FORMAT PRESETS\n\n  /**\n   * {@link toLocaleString} format like 10/14/1983\n   * @type {Object}\n   */\n  static get DATE_SHORT() {\n    return Formats.DATE_SHORT;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED() {\n    return Formats.DATE_MED;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'Fri, Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED_WITH_WEEKDAY() {\n    return Formats.DATE_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_FULL() {\n    return Formats.DATE_FULL;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'Tuesday, October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_HUGE() {\n    return Formats.DATE_HUGE;\n  }\n\n  /**\n   * {@link toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_SIMPLE() {\n    return Formats.TIME_SIMPLE;\n  }\n\n  /**\n   * {@link toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SECONDS() {\n    return Formats.TIME_WITH_SECONDS;\n  }\n\n  /**\n   * {@link toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SHORT_OFFSET() {\n    return Formats.TIME_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_LONG_OFFSET() {\n    return Formats.TIME_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link toLocaleString} format like '09:30', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_SIMPLE() {\n    return Formats.TIME_24_SIMPLE;\n  }\n\n  /**\n   * {@link toLocaleString} format like '09:30:23', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SECONDS() {\n    return Formats.TIME_24_WITH_SECONDS;\n  }\n\n  /**\n   * {@link toLocaleString} format like '09:30:23 EDT', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SHORT_OFFSET() {\n    return Formats.TIME_24_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_LONG_OFFSET() {\n    return Formats.TIME_24_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT() {\n    return Formats.DATETIME_SHORT;\n  }\n\n  /**\n   * {@link toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT_WITH_SECONDS() {\n    return Formats.DATETIME_SHORT_WITH_SECONDS;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED() {\n    return Formats.DATETIME_MED;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_SECONDS() {\n    return Formats.DATETIME_MED_WITH_SECONDS;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_WEEKDAY() {\n    return Formats.DATETIME_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL() {\n    return Formats.DATETIME_FULL;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL_WITH_SECONDS() {\n    return Formats.DATETIME_FULL_WITH_SECONDS;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE() {\n    return Formats.DATETIME_HUGE;\n  }\n\n  /**\n   * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE_WITH_SECONDS() {\n    return Formats.DATETIME_HUGE_WITH_SECONDS;\n  }\n}\n\n/**\n * @private\n */\nexport function friendlyDateTime(dateTimeish) {\n  if (DateTime.isDateTime(dateTimeish)) {\n    return dateTimeish;\n  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {\n    return DateTime.fromJSDate(dateTimeish);\n  } else if (dateTimeish && typeof dateTimeish === \"object\") {\n    return DateTime.fromObject(dateTimeish);\n  } else {\n    throw new InvalidArgumentError(\n      `Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`\n    );\n  }\n}\n","import DateTime from \"./datetime.js\";\nimport Duration from \"./duration.js\";\nimport Interval from \"./interval.js\";\nimport Info from \"./info.js\";\nimport Zone from \"./zone.js\";\nimport FixedOffsetZone from \"./zones/fixedOffsetZone.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport InvalidZone from \"./zones/invalidZone.js\";\nimport LocalZone from \"./zones/localZone.js\";\nimport Settings from \"./settings.js\";\n\nconst VERSION = \"1.28.0\";\n\nexport {\n  VERSION,\n  DateTime,\n  Duration,\n  Interval,\n  Info,\n  Zone,\n  FixedOffsetZone,\n  IANAZone,\n  InvalidZone,\n  LocalZone,\n  Settings\n};\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Emitter = require('emitter');\n\nfunction Stream() {\n  Emitter.call(this);\n}\nStream.prototype = new Emitter();\nmodule.exports = Stream;\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (!this.hasListeners('error')) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.off('data', ondata);\n    dest.off('drain', ondrain);\n\n    source.off('end', onend);\n    source.off('close', onclose);\n\n    source.off('error', onerror);\n    dest.off('error', onerror);\n\n    source.off('end', cleanup);\n    source.off('close', cleanup);\n\n    dest.off('end', cleanup);\n    dest.off('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('end', cleanup);\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function(str) {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          return _this.parseString(str, function(err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      })(this));\n    };\n\n    return Parser;\n\n  })(events);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function(str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n  exports.parseStringPromise = parser.parseStringPromise;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.value = this.stringify.attValue(value);\n      this.type = NodeType.Attribute;\n      this.isId = false;\n      this.schemaTypeInfo = null;\n    }\n\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLAttribute.prototype.debugInfo = function(name) {\n      name = name || this.name;\n      if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else {\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLAttribute.prototype.isEqualNode = function(node) {\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.value !== this.value) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCData, XMLCharacterData,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCharacterData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCharacterData = (function(superClass) {\n    extend(XMLCharacterData, superClass);\n\n    function XMLCharacterData(parent) {\n      XMLCharacterData.__super__.constructor.call(this, parent);\n      this.value = '';\n    }\n\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    XMLCharacterData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCharacterData.prototype.substringData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.appendData = function(arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.insertData = function(offset, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.deleteData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.replaceData = function(offset, count, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.isEqualNode = function(node) {\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.data !== this.data) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLCharacterData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLComment,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLComment;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  module.exports = XMLDOMConfiguration = (function() {\n    function XMLDOMConfiguration() {\n      var clonedSelf;\n      this.defaultParams = {\n        \"canonical-form\": false,\n        \"cdata-sections\": false,\n        \"comments\": false,\n        \"datatype-normalization\": false,\n        \"element-content-whitespace\": true,\n        \"entities\": true,\n        \"error-handler\": new XMLDOMErrorHandler(),\n        \"infoset\": true,\n        \"validate-if-schema\": false,\n        \"namespaces\": true,\n        \"namespace-declarations\": true,\n        \"normalize-characters\": false,\n        \"schema-location\": '',\n        \"schema-type\": '',\n        \"split-cdata-sections\": true,\n        \"validate\": false,\n        \"well-formed\": true\n      };\n      this.params = clonedSelf = Object.create(this.defaultParams);\n    }\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    XMLDOMConfiguration.prototype.getParameter = function(name) {\n      if (this.params.hasOwnProperty(name)) {\n        return this.params[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLDOMConfiguration.prototype.canSetParameter = function(name, value) {\n      return true;\n    };\n\n    XMLDOMConfiguration.prototype.setParameter = function(name, value) {\n      if (value != null) {\n        return this.params[name] = value;\n      } else {\n        return delete this.params[name];\n      }\n    };\n\n    return XMLDOMConfiguration;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = (function() {\n    function XMLDOMErrorHandler() {}\n\n    XMLDOMErrorHandler.prototype.handleError = function(error) {\n      throw new Error(error);\n    };\n\n    return XMLDOMErrorHandler;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = (function() {\n    function XMLDOMImplementation() {}\n\n    XMLDOMImplementation.prototype.hasFeature = function(feature, version) {\n      return true;\n    };\n\n    XMLDOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createHTMLDocument = function(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLDOMImplementation;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    function XMLDOMStringList(arr) {\n      this.arr = arr || [];\n    }\n\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    XMLDOMStringList.prototype.item = function(index) {\n      return this.arr[index] || null;\n    };\n\n    XMLDOMStringList.prototype.contains = function(str) {\n      return this.arr.indexOf(str) !== -1;\n    };\n\n    return XMLDOMStringList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.NotationDeclaration;\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function(node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      this.name = \"#document\";\n      this.type = NodeType.Document;\n      this.documentURI = null;\n      this.domConfig = new XMLDOMConfiguration();\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n    }\n\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      writerOptions = {};\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer;\n      }\n      return writer.document(this, writer.filterOptions(writerOptions));\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocument.prototype.createElement = function(tagName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createDocumentFragment = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTextNode = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createComment = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createCDATASection = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createProcessingInstruction = function(target, data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttribute = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEntityReference = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.importNode = function(importedNode, deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createElementNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementById = function(elementId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.adoptNode = function(source) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.normalizeDocument = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.renameNode = function(node, namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEvent = function(eventInterface) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createRange = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createNodeIterator = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTreeWalker = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function(node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function() {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDummy, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDummy = (function(superClass) {\n    extend(XMLDummy, superClass);\n\n    function XMLDummy(parent) {\n      XMLDummy.__super__.constructor.call(this, parent);\n      this.type = NodeType.Dummy;\n    }\n\n    XMLDummy.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLDummy.prototype.toString = function(options) {\n      return '';\n    };\n\n    return XMLDummy;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      var child, j, len, ref1;\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.Element;\n      this.attribs = {};\n      this.schemaTypeInfo = null;\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.type === NodeType.Document) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n        if (parent.children) {\n          ref1 = parent.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.type === NodeType.DocType) {\n              child.name = this.name;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attribs = {};\n      ref1 = this.attribs;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attribs[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, j, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          attName = name[j];\n          delete this.attribs[attName];\n        }\n      } else {\n        delete this.attribs[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.getAttribute = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].value;\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttribute = function(name, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNode = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttributeNode = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNode = function(oldAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNodeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNodeNS = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.hasAttribute = function(name) {\n      return this.attribs.hasOwnProperty(name);\n    };\n\n    XMLElement.prototype.hasAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttribute = function(name, isId) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].isId;\n      } else {\n        return isId;\n      }\n    };\n\n    XMLElement.prototype.setIdAttributeNS = function(namespaceURI, localName, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttributeNode = function(idAttr, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.isEqualNode = function(node) {\n      var i, j, ref1;\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.attribs.length !== this.attribs.length) {\n        return false;\n      }\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    function XMLNamedNodeMap(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    XMLNamedNodeMap.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItem = function(name) {\n      return this.nodes[name];\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItem = function(node) {\n      var oldNode;\n      oldNode = this.nodes[node.nodeName];\n      this.nodes[node.nodeName] = node;\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItem = function(name) {\n      var oldNode;\n      oldNode = this.nodes[name];\n      delete this.nodes[name];\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.item = function(index) {\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItemNS = function(node) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLNamedNodeMap;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\n    hasProp = {}.hasOwnProperty;\n\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function(parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && (text == null)) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && (val == null)) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function() {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function(name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function(oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function(newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function() {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function(deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function(feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function() {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function(other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function(other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function(node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function(key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function(key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function(other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function(node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function(node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function(node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function(childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    function XMLNodeList(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    XMLNodeList.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNodeList.prototype.item = function(index) {\n      return this.nodes[index] || null;\n    };\n\n    return XMLNodeList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.endline = function(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\n      }\n    };\n\n    XMLStreamWriter.prototype.document = function(doc, options) {\n      var child, i, j, k, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, options, level) {\n      var child, j, len, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalName = bind(this.assertLegalName, this);\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      if (!this.options.version) {\n        this.options.version = '1.0';\n      }\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.name = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalName('' + val || '');\n    };\n\n    XMLStringifier.prototype.text = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.textEscape('' + val || ''));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var regex, res;\n      if (this.options.noValidation) {\n        return str;\n      }\n      regex = '';\n      if (this.options.version === '1.0') {\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      } else if (this.options.version === '1.1') {\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.assertLegalName = function(str) {\n      var regex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      this.assertLegalChar(str);\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n      if (!str.match(regex)) {\n        throw new Error(\"Invalid character in name\");\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.textEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text. \" + this.debugInfo());\n      }\n      this.name = \"#text\";\n      this.type = NodeType.Text;\n      this.value = this.stringify.text(text);\n    }\n\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLText.prototype.splitText = function(offset) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLText.prototype.replaceWholeText = function(content) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLText;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  assign = require('./Utility').assign;\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.filterOptions = function(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n\n    XMLWriterBase.prototype.indent = function(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n\n    XMLWriterBase.prototype.endline = function(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.comment = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.docType = function(node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.raw = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.text = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\n\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  NodeType = require('./NodeType');\n\n  WriterState = require('./WriterState');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default {\n   \"library\" : {\n      \"annotation\" : [ {\n         \"translatorOptions\" : \"\",\n         \"type\" : \"CqlToElmInfo\"\n      }, {\n         \"type\" : \"Annotation\",\n         \"t\" : [ {\n            \"name\" : \"author\",\n            \"value\" : \"Bryn Rhodes\"\n         }, {\n            \"name\" : \"description\",\n            \"value\" : \"This library defines functions to convert between FHIR \\n data types and CQL system-defined types, as well as functions to support\\n FHIRPath implementation. For more information, the FHIRHelpers wiki page:\\n https://github.com/cqframework/clinical_quality_language/wiki/FHIRHelpers\"\n         }, {\n            \"name\" : \"allowFluent\",\n            \"value\" : \"true\"\n         } ]\n      } ],\n      \"identifier\" : {\n         \"id\" : \"FHIRHelpers\",\n         \"version\" : \"4.0.1\"\n      },\n      \"schemaIdentifier\" : {\n         \"id\" : \"urn:hl7-org:elm\",\n         \"version\" : \"r1\"\n      },\n      \"usings\" : {\n         \"def\" : [ {\n            \"localIdentifier\" : \"System\",\n            \"uri\" : \"urn:hl7-org:elm-types:r1\"\n         }, {\n            \"localIdentifier\" : \"FHIR\",\n            \"uri\" : \"http://hl7.org/fhir\",\n            \"version\" : \"4.0.1\"\n         } ]\n      },\n      \"statements\" : {\n         \"def\" : [ {\n            \"name\" : \"ToInterval\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"If\",\n               \"condition\" : {\n                  \"type\" : \"IsNull\",\n                  \"operand\" : {\n                     \"name\" : \"period\",\n                     \"type\" : \"OperandRef\"\n                  }\n               },\n               \"then\" : {\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Null\"\n                  },\n                  \"asTypeSpecifier\" : {\n                     \"type\" : \"IntervalTypeSpecifier\",\n                     \"pointType\" : {\n                        \"name\" : \"{urn:hl7-org:elm-types:r1}DateTime\",\n                        \"type\" : \"NamedTypeSpecifier\"\n                     }\n                  }\n               },\n               \"else\" : {\n                  \"type\" : \"If\",\n                  \"condition\" : {\n                     \"type\" : \"IsNull\",\n                     \"operand\" : {\n                        \"path\" : \"start\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"name\" : \"period\",\n                           \"type\" : \"OperandRef\"\n                        }\n                     }\n                  },\n                  \"then\" : {\n                     \"lowClosed\" : false,\n                     \"highClosed\" : true,\n                     \"type\" : \"Interval\",\n                     \"low\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"start\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"period\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     },\n                     \"high\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"end\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"period\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     }\n                  },\n                  \"else\" : {\n                     \"lowClosed\" : true,\n                     \"highClosed\" : true,\n                     \"type\" : \"Interval\",\n                     \"low\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"start\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"period\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     },\n                     \"high\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"end\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"period\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     }\n                  }\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"period\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Period\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToCalendarUnit\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"Case\",\n               \"comparand\" : {\n                  \"name\" : \"unit\",\n                  \"type\" : \"OperandRef\"\n               },\n               \"caseItem\" : [ {\n                  \"when\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"ms\",\n                     \"type\" : \"Literal\"\n                  },\n                  \"then\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"millisecond\",\n                     \"type\" : \"Literal\"\n                  }\n               }, {\n                  \"when\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"s\",\n                     \"type\" : \"Literal\"\n                  },\n                  \"then\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"second\",\n                     \"type\" : \"Literal\"\n                  }\n               }, {\n                  \"when\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"min\",\n                     \"type\" : \"Literal\"\n                  },\n                  \"then\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"minute\",\n                     \"type\" : \"Literal\"\n                  }\n               }, {\n                  \"when\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"h\",\n                     \"type\" : \"Literal\"\n                  },\n                  \"then\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"hour\",\n                     \"type\" : \"Literal\"\n                  }\n               }, {\n                  \"when\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"d\",\n                     \"type\" : \"Literal\"\n                  },\n                  \"then\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"day\",\n                     \"type\" : \"Literal\"\n                  }\n               }, {\n                  \"when\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"wk\",\n                     \"type\" : \"Literal\"\n                  },\n                  \"then\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"week\",\n                     \"type\" : \"Literal\"\n                  }\n               }, {\n                  \"when\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"mo\",\n                     \"type\" : \"Literal\"\n                  },\n                  \"then\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"month\",\n                     \"type\" : \"Literal\"\n                  }\n               }, {\n                  \"when\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"a\",\n                     \"type\" : \"Literal\"\n                  },\n                  \"then\" : {\n                     \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                     \"value\" : \"year\",\n                     \"type\" : \"Literal\"\n                  }\n               } ],\n               \"else\" : {\n                  \"name\" : \"unit\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"unit\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToQuantity\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"Case\",\n               \"caseItem\" : [ {\n                  \"when\" : {\n                     \"type\" : \"IsNull\",\n                     \"operand\" : {\n                        \"name\" : \"quantity\",\n                        \"type\" : \"OperandRef\"\n                     }\n                  },\n                  \"then\" : {\n                     \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                     \"type\" : \"As\",\n                     \"operand\" : {\n                        \"type\" : \"Null\"\n                     }\n                  }\n               }, {\n                  \"when\" : {\n                     \"type\" : \"IsNull\",\n                     \"operand\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"name\" : \"quantity\",\n                           \"type\" : \"OperandRef\"\n                        }\n                     }\n                  },\n                  \"then\" : {\n                     \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                     \"type\" : \"As\",\n                     \"operand\" : {\n                        \"type\" : \"Null\"\n                     }\n                  }\n               }, {\n                  \"when\" : {\n                     \"type\" : \"Not\",\n                     \"operand\" : {\n                        \"type\" : \"IsNull\",\n                        \"operand\" : {\n                           \"path\" : \"comparator\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"quantity\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     }\n                  },\n                  \"then\" : {\n                     \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                     \"type\" : \"As\",\n                     \"operand\" : {\n                        \"type\" : \"Message\",\n                        \"source\" : {\n                           \"type\" : \"Null\"\n                        },\n                        \"condition\" : {\n                           \"valueType\" : \"{urn:hl7-org:elm-types:r1}Boolean\",\n                           \"value\" : \"true\",\n                           \"type\" : \"Literal\"\n                        },\n                        \"code\" : {\n                           \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                           \"value\" : \"FHIRHelpers.ToQuantity.ComparatorQuantityNotSupported\",\n                           \"type\" : \"Literal\"\n                        },\n                        \"severity\" : {\n                           \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                           \"value\" : \"Error\",\n                           \"type\" : \"Literal\"\n                        },\n                        \"message\" : {\n                           \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                           \"value\" : \"FHIR Quantity value has a comparator and cannot be converted to a System.Quantity value.\",\n                           \"type\" : \"Literal\"\n                        }\n                     }\n                  }\n               }, {\n                  \"when\" : {\n                     \"type\" : \"Or\",\n                     \"operand\" : [ {\n                        \"type\" : \"Or\",\n                        \"operand\" : [ {\n                           \"type\" : \"IsNull\",\n                           \"operand\" : {\n                              \"path\" : \"system\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"name\" : \"quantity\",\n                                 \"type\" : \"OperandRef\"\n                              }\n                           }\n                        }, {\n                           \"type\" : \"Equal\",\n                           \"operand\" : [ {\n                              \"path\" : \"value\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"path\" : \"system\",\n                                 \"type\" : \"Property\",\n                                 \"source\" : {\n                                    \"name\" : \"quantity\",\n                                    \"type\" : \"OperandRef\"\n                                 }\n                              }\n                           }, {\n                              \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                              \"value\" : \"http://unitsofmeasure.org\",\n                              \"type\" : \"Literal\"\n                           } ]\n                        } ]\n                     }, {\n                        \"type\" : \"Equal\",\n                        \"operand\" : [ {\n                           \"path\" : \"value\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"path\" : \"system\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"name\" : \"quantity\",\n                                 \"type\" : \"OperandRef\"\n                              }\n                           }\n                        }, {\n                           \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                           \"value\" : \"http://hl7.org/fhirpath/CodeSystem/calendar-units\",\n                           \"type\" : \"Literal\"\n                        } ]\n                     } ]\n                  },\n                  \"then\" : {\n                     \"classType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                     \"type\" : \"Instance\",\n                     \"element\" : [ {\n                        \"name\" : \"value\",\n                        \"value\" : {\n                           \"path\" : \"value\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"path\" : \"value\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"name\" : \"quantity\",\n                                 \"type\" : \"OperandRef\"\n                              }\n                           }\n                        }\n                     }, {\n                        \"name\" : \"unit\",\n                        \"value\" : {\n                           \"name\" : \"ToCalendarUnit\",\n                           \"type\" : \"FunctionRef\",\n                           \"operand\" : [ {\n                              \"type\" : \"Coalesce\",\n                              \"operand\" : [ {\n                                 \"path\" : \"value\",\n                                 \"type\" : \"Property\",\n                                 \"source\" : {\n                                    \"path\" : \"code\",\n                                    \"type\" : \"Property\",\n                                    \"source\" : {\n                                       \"name\" : \"quantity\",\n                                       \"type\" : \"OperandRef\"\n                                    }\n                                 }\n                              }, {\n                                 \"path\" : \"value\",\n                                 \"type\" : \"Property\",\n                                 \"source\" : {\n                                    \"path\" : \"unit\",\n                                    \"type\" : \"Property\",\n                                    \"source\" : {\n                                       \"name\" : \"quantity\",\n                                       \"type\" : \"OperandRef\"\n                                    }\n                                 }\n                              }, {\n                                 \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                 \"value\" : \"1\",\n                                 \"type\" : \"Literal\"\n                              } ]\n                           } ]\n                        }\n                     } ]\n                  }\n               } ],\n               \"else\" : {\n                  \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Message\",\n                     \"source\" : {\n                        \"type\" : \"Null\"\n                     },\n                     \"condition\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}Boolean\",\n                        \"value\" : \"true\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"code\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                        \"value\" : \"FHIRHelpers.ToQuantity.InvalidFHIRQuantity\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"severity\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                        \"value\" : \"Error\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"message\" : {\n                        \"type\" : \"Concatenate\",\n                        \"operand\" : [ {\n                           \"type\" : \"Coalesce\",\n                           \"operand\" : [ {\n                              \"type\" : \"Concatenate\",\n                              \"operand\" : [ {\n                                 \"type\" : \"Coalesce\",\n                                 \"operand\" : [ {\n                                    \"type\" : \"Concatenate\",\n                                    \"operand\" : [ {\n                                       \"type\" : \"Coalesce\",\n                                       \"operand\" : [ {\n                                          \"type\" : \"Concatenate\",\n                                          \"operand\" : [ {\n                                             \"type\" : \"Coalesce\",\n                                             \"operand\" : [ {\n                                                \"type\" : \"Concatenate\",\n                                                \"operand\" : [ {\n                                                   \"type\" : \"Coalesce\",\n                                                   \"operand\" : [ {\n                                                      \"type\" : \"Concatenate\",\n                                                      \"operand\" : [ {\n                                                         \"type\" : \"Coalesce\",\n                                                         \"operand\" : [ {\n                                                            \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                            \"value\" : \"Invalid FHIR Quantity code: \",\n                                                            \"type\" : \"Literal\"\n                                                         }, {\n                                                            \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                            \"value\" : \"\",\n                                                            \"type\" : \"Literal\"\n                                                         } ]\n                                                      }, {\n                                                         \"type\" : \"Coalesce\",\n                                                         \"operand\" : [ {\n                                                            \"path\" : \"value\",\n                                                            \"type\" : \"Property\",\n                                                            \"source\" : {\n                                                               \"path\" : \"unit\",\n                                                               \"type\" : \"Property\",\n                                                               \"source\" : {\n                                                                  \"name\" : \"quantity\",\n                                                                  \"type\" : \"OperandRef\"\n                                                               }\n                                                            }\n                                                         }, {\n                                                            \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                            \"value\" : \"\",\n                                                            \"type\" : \"Literal\"\n                                                         } ]\n                                                      } ]\n                                                   }, {\n                                                      \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                      \"value\" : \"\",\n                                                      \"type\" : \"Literal\"\n                                                   } ]\n                                                }, {\n                                                   \"type\" : \"Coalesce\",\n                                                   \"operand\" : [ {\n                                                      \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                      \"value\" : \" (\",\n                                                      \"type\" : \"Literal\"\n                                                   }, {\n                                                      \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                      \"value\" : \"\",\n                                                      \"type\" : \"Literal\"\n                                                   } ]\n                                                } ]\n                                             }, {\n                                                \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                \"value\" : \"\",\n                                                \"type\" : \"Literal\"\n                                             } ]\n                                          }, {\n                                             \"type\" : \"Coalesce\",\n                                             \"operand\" : [ {\n                                                \"path\" : \"value\",\n                                                \"type\" : \"Property\",\n                                                \"source\" : {\n                                                   \"path\" : \"system\",\n                                                   \"type\" : \"Property\",\n                                                   \"source\" : {\n                                                      \"name\" : \"quantity\",\n                                                      \"type\" : \"OperandRef\"\n                                                   }\n                                                }\n                                             }, {\n                                                \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                \"value\" : \"\",\n                                                \"type\" : \"Literal\"\n                                             } ]\n                                          } ]\n                                       }, {\n                                          \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                          \"value\" : \"\",\n                                          \"type\" : \"Literal\"\n                                       } ]\n                                    }, {\n                                       \"type\" : \"Coalesce\",\n                                       \"operand\" : [ {\n                                          \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                          \"value\" : \"|\",\n                                          \"type\" : \"Literal\"\n                                       }, {\n                                          \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                          \"value\" : \"\",\n                                          \"type\" : \"Literal\"\n                                       } ]\n                                    } ]\n                                 }, {\n                                    \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                    \"value\" : \"\",\n                                    \"type\" : \"Literal\"\n                                 } ]\n                              }, {\n                                 \"type\" : \"Coalesce\",\n                                 \"operand\" : [ {\n                                    \"path\" : \"value\",\n                                    \"type\" : \"Property\",\n                                    \"source\" : {\n                                       \"path\" : \"code\",\n                                       \"type\" : \"Property\",\n                                       \"source\" : {\n                                          \"name\" : \"quantity\",\n                                          \"type\" : \"OperandRef\"\n                                       }\n                                    }\n                                 }, {\n                                    \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                    \"value\" : \"\",\n                                    \"type\" : \"Literal\"\n                                 } ]\n                              } ]\n                           }, {\n                              \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                              \"value\" : \"\",\n                              \"type\" : \"Literal\"\n                           } ]\n                        }, {\n                           \"type\" : \"Coalesce\",\n                           \"operand\" : [ {\n                              \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                              \"value\" : \")\",\n                              \"type\" : \"Literal\"\n                           }, {\n                              \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                              \"value\" : \"\",\n                              \"type\" : \"Literal\"\n                           } ]\n                        } ]\n                     }\n                  }\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"quantity\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Quantity\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToQuantityIgnoringComparator\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"Case\",\n               \"caseItem\" : [ {\n                  \"when\" : {\n                     \"type\" : \"IsNull\",\n                     \"operand\" : {\n                        \"name\" : \"quantity\",\n                        \"type\" : \"OperandRef\"\n                     }\n                  },\n                  \"then\" : {\n                     \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                     \"type\" : \"As\",\n                     \"operand\" : {\n                        \"type\" : \"Null\"\n                     }\n                  }\n               }, {\n                  \"when\" : {\n                     \"type\" : \"IsNull\",\n                     \"operand\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"name\" : \"quantity\",\n                           \"type\" : \"OperandRef\"\n                        }\n                     }\n                  },\n                  \"then\" : {\n                     \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                     \"type\" : \"As\",\n                     \"operand\" : {\n                        \"type\" : \"Null\"\n                     }\n                  }\n               }, {\n                  \"when\" : {\n                     \"type\" : \"Or\",\n                     \"operand\" : [ {\n                        \"type\" : \"Or\",\n                        \"operand\" : [ {\n                           \"type\" : \"IsNull\",\n                           \"operand\" : {\n                              \"path\" : \"system\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"name\" : \"quantity\",\n                                 \"type\" : \"OperandRef\"\n                              }\n                           }\n                        }, {\n                           \"type\" : \"Equal\",\n                           \"operand\" : [ {\n                              \"path\" : \"value\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"path\" : \"system\",\n                                 \"type\" : \"Property\",\n                                 \"source\" : {\n                                    \"name\" : \"quantity\",\n                                    \"type\" : \"OperandRef\"\n                                 }\n                              }\n                           }, {\n                              \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                              \"value\" : \"http://unitsofmeasure.org\",\n                              \"type\" : \"Literal\"\n                           } ]\n                        } ]\n                     }, {\n                        \"type\" : \"Equal\",\n                        \"operand\" : [ {\n                           \"path\" : \"value\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"path\" : \"system\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"name\" : \"quantity\",\n                                 \"type\" : \"OperandRef\"\n                              }\n                           }\n                        }, {\n                           \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                           \"value\" : \"http://hl7.org/fhirpath/CodeSystem/calendar-units\",\n                           \"type\" : \"Literal\"\n                        } ]\n                     } ]\n                  },\n                  \"then\" : {\n                     \"classType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                     \"type\" : \"Instance\",\n                     \"element\" : [ {\n                        \"name\" : \"value\",\n                        \"value\" : {\n                           \"path\" : \"value\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"path\" : \"value\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"name\" : \"quantity\",\n                                 \"type\" : \"OperandRef\"\n                              }\n                           }\n                        }\n                     }, {\n                        \"name\" : \"unit\",\n                        \"value\" : {\n                           \"name\" : \"ToCalendarUnit\",\n                           \"type\" : \"FunctionRef\",\n                           \"operand\" : [ {\n                              \"type\" : \"Coalesce\",\n                              \"operand\" : [ {\n                                 \"path\" : \"value\",\n                                 \"type\" : \"Property\",\n                                 \"source\" : {\n                                    \"path\" : \"code\",\n                                    \"type\" : \"Property\",\n                                    \"source\" : {\n                                       \"name\" : \"quantity\",\n                                       \"type\" : \"OperandRef\"\n                                    }\n                                 }\n                              }, {\n                                 \"path\" : \"value\",\n                                 \"type\" : \"Property\",\n                                 \"source\" : {\n                                    \"path\" : \"unit\",\n                                    \"type\" : \"Property\",\n                                    \"source\" : {\n                                       \"name\" : \"quantity\",\n                                       \"type\" : \"OperandRef\"\n                                    }\n                                 }\n                              }, {\n                                 \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                 \"value\" : \"1\",\n                                 \"type\" : \"Literal\"\n                              } ]\n                           } ]\n                        }\n                     } ]\n                  }\n               } ],\n               \"else\" : {\n                  \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Message\",\n                     \"source\" : {\n                        \"type\" : \"Null\"\n                     },\n                     \"condition\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}Boolean\",\n                        \"value\" : \"true\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"code\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                        \"value\" : \"FHIRHelpers.ToQuantity.InvalidFHIRQuantity\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"severity\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                        \"value\" : \"Error\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"message\" : {\n                        \"type\" : \"Concatenate\",\n                        \"operand\" : [ {\n                           \"type\" : \"Coalesce\",\n                           \"operand\" : [ {\n                              \"type\" : \"Concatenate\",\n                              \"operand\" : [ {\n                                 \"type\" : \"Coalesce\",\n                                 \"operand\" : [ {\n                                    \"type\" : \"Concatenate\",\n                                    \"operand\" : [ {\n                                       \"type\" : \"Coalesce\",\n                                       \"operand\" : [ {\n                                          \"type\" : \"Concatenate\",\n                                          \"operand\" : [ {\n                                             \"type\" : \"Coalesce\",\n                                             \"operand\" : [ {\n                                                \"type\" : \"Concatenate\",\n                                                \"operand\" : [ {\n                                                   \"type\" : \"Coalesce\",\n                                                   \"operand\" : [ {\n                                                      \"type\" : \"Concatenate\",\n                                                      \"operand\" : [ {\n                                                         \"type\" : \"Coalesce\",\n                                                         \"operand\" : [ {\n                                                            \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                            \"value\" : \"Invalid FHIR Quantity code: \",\n                                                            \"type\" : \"Literal\"\n                                                         }, {\n                                                            \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                            \"value\" : \"\",\n                                                            \"type\" : \"Literal\"\n                                                         } ]\n                                                      }, {\n                                                         \"type\" : \"Coalesce\",\n                                                         \"operand\" : [ {\n                                                            \"path\" : \"value\",\n                                                            \"type\" : \"Property\",\n                                                            \"source\" : {\n                                                               \"path\" : \"unit\",\n                                                               \"type\" : \"Property\",\n                                                               \"source\" : {\n                                                                  \"name\" : \"quantity\",\n                                                                  \"type\" : \"OperandRef\"\n                                                               }\n                                                            }\n                                                         }, {\n                                                            \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                            \"value\" : \"\",\n                                                            \"type\" : \"Literal\"\n                                                         } ]\n                                                      } ]\n                                                   }, {\n                                                      \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                      \"value\" : \"\",\n                                                      \"type\" : \"Literal\"\n                                                   } ]\n                                                }, {\n                                                   \"type\" : \"Coalesce\",\n                                                   \"operand\" : [ {\n                                                      \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                      \"value\" : \" (\",\n                                                      \"type\" : \"Literal\"\n                                                   }, {\n                                                      \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                      \"value\" : \"\",\n                                                      \"type\" : \"Literal\"\n                                                   } ]\n                                                } ]\n                                             }, {\n                                                \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                \"value\" : \"\",\n                                                \"type\" : \"Literal\"\n                                             } ]\n                                          }, {\n                                             \"type\" : \"Coalesce\",\n                                             \"operand\" : [ {\n                                                \"path\" : \"value\",\n                                                \"type\" : \"Property\",\n                                                \"source\" : {\n                                                   \"path\" : \"system\",\n                                                   \"type\" : \"Property\",\n                                                   \"source\" : {\n                                                      \"name\" : \"quantity\",\n                                                      \"type\" : \"OperandRef\"\n                                                   }\n                                                }\n                                             }, {\n                                                \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                                \"value\" : \"\",\n                                                \"type\" : \"Literal\"\n                                             } ]\n                                          } ]\n                                       }, {\n                                          \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                          \"value\" : \"\",\n                                          \"type\" : \"Literal\"\n                                       } ]\n                                    }, {\n                                       \"type\" : \"Coalesce\",\n                                       \"operand\" : [ {\n                                          \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                          \"value\" : \"|\",\n                                          \"type\" : \"Literal\"\n                                       }, {\n                                          \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                          \"value\" : \"\",\n                                          \"type\" : \"Literal\"\n                                       } ]\n                                    } ]\n                                 }, {\n                                    \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                    \"value\" : \"\",\n                                    \"type\" : \"Literal\"\n                                 } ]\n                              }, {\n                                 \"type\" : \"Coalesce\",\n                                 \"operand\" : [ {\n                                    \"path\" : \"value\",\n                                    \"type\" : \"Property\",\n                                    \"source\" : {\n                                       \"path\" : \"code\",\n                                       \"type\" : \"Property\",\n                                       \"source\" : {\n                                          \"name\" : \"quantity\",\n                                          \"type\" : \"OperandRef\"\n                                       }\n                                    }\n                                 }, {\n                                    \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                                    \"value\" : \"\",\n                                    \"type\" : \"Literal\"\n                                 } ]\n                              } ]\n                           }, {\n                              \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                              \"value\" : \"\",\n                              \"type\" : \"Literal\"\n                           } ]\n                        }, {\n                           \"type\" : \"Coalesce\",\n                           \"operand\" : [ {\n                              \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                              \"value\" : \")\",\n                              \"type\" : \"Literal\"\n                           }, {\n                              \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                              \"value\" : \"\",\n                              \"type\" : \"Literal\"\n                           } ]\n                        } ]\n                     }\n                  }\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"quantity\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Quantity\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToInterval\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"If\",\n               \"condition\" : {\n                  \"type\" : \"IsNull\",\n                  \"operand\" : {\n                     \"name\" : \"quantity\",\n                     \"type\" : \"OperandRef\"\n                  }\n               },\n               \"then\" : {\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Null\"\n                  },\n                  \"asTypeSpecifier\" : {\n                     \"type\" : \"IntervalTypeSpecifier\",\n                     \"pointType\" : {\n                        \"name\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                        \"type\" : \"NamedTypeSpecifier\"\n                     }\n                  }\n               },\n               \"else\" : {\n                  \"type\" : \"Case\",\n                  \"comparand\" : {\n                     \"path\" : \"value\",\n                     \"type\" : \"Property\",\n                     \"source\" : {\n                        \"path\" : \"comparator\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"name\" : \"quantity\",\n                           \"type\" : \"OperandRef\"\n                        }\n                     }\n                  },\n                  \"caseItem\" : [ {\n                     \"when\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                        \"value\" : \"<\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"then\" : {\n                        \"lowClosed\" : true,\n                        \"highClosed\" : false,\n                        \"type\" : \"Interval\",\n                        \"low\" : {\n                           \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                           \"type\" : \"As\",\n                           \"operand\" : {\n                              \"type\" : \"Null\"\n                           }\n                        },\n                        \"high\" : {\n                           \"name\" : \"ToQuantityIgnoringComparator\",\n                           \"type\" : \"FunctionRef\",\n                           \"operand\" : [ {\n                              \"name\" : \"quantity\",\n                              \"type\" : \"OperandRef\"\n                           } ]\n                        }\n                     }\n                  }, {\n                     \"when\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                        \"value\" : \"<=\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"then\" : {\n                        \"lowClosed\" : true,\n                        \"highClosed\" : true,\n                        \"type\" : \"Interval\",\n                        \"low\" : {\n                           \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                           \"type\" : \"As\",\n                           \"operand\" : {\n                              \"type\" : \"Null\"\n                           }\n                        },\n                        \"high\" : {\n                           \"name\" : \"ToQuantityIgnoringComparator\",\n                           \"type\" : \"FunctionRef\",\n                           \"operand\" : [ {\n                              \"name\" : \"quantity\",\n                              \"type\" : \"OperandRef\"\n                           } ]\n                        }\n                     }\n                  }, {\n                     \"when\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                        \"value\" : \">=\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"then\" : {\n                        \"lowClosed\" : true,\n                        \"highClosed\" : true,\n                        \"type\" : \"Interval\",\n                        \"low\" : {\n                           \"name\" : \"ToQuantityIgnoringComparator\",\n                           \"type\" : \"FunctionRef\",\n                           \"operand\" : [ {\n                              \"name\" : \"quantity\",\n                              \"type\" : \"OperandRef\"\n                           } ]\n                        },\n                        \"high\" : {\n                           \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                           \"type\" : \"As\",\n                           \"operand\" : {\n                              \"type\" : \"Null\"\n                           }\n                        }\n                     }\n                  }, {\n                     \"when\" : {\n                        \"valueType\" : \"{urn:hl7-org:elm-types:r1}String\",\n                        \"value\" : \">\",\n                        \"type\" : \"Literal\"\n                     },\n                     \"then\" : {\n                        \"lowClosed\" : false,\n                        \"highClosed\" : true,\n                        \"type\" : \"Interval\",\n                        \"low\" : {\n                           \"name\" : \"ToQuantityIgnoringComparator\",\n                           \"type\" : \"FunctionRef\",\n                           \"operand\" : [ {\n                              \"name\" : \"quantity\",\n                              \"type\" : \"OperandRef\"\n                           } ]\n                        },\n                        \"high\" : {\n                           \"asType\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                           \"type\" : \"As\",\n                           \"operand\" : {\n                              \"type\" : \"Null\"\n                           }\n                        }\n                     }\n                  } ],\n                  \"else\" : {\n                     \"lowClosed\" : true,\n                     \"highClosed\" : true,\n                     \"type\" : \"Interval\",\n                     \"low\" : {\n                        \"name\" : \"ToQuantity\",\n                        \"type\" : \"FunctionRef\",\n                        \"operand\" : [ {\n                           \"name\" : \"quantity\",\n                           \"type\" : \"OperandRef\"\n                        } ]\n                     },\n                     \"high\" : {\n                        \"name\" : \"ToQuantity\",\n                        \"type\" : \"FunctionRef\",\n                        \"operand\" : [ {\n                           \"name\" : \"quantity\",\n                           \"type\" : \"OperandRef\"\n                        } ]\n                     }\n                  }\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"quantity\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Quantity\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToRatio\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"If\",\n               \"condition\" : {\n                  \"type\" : \"IsNull\",\n                  \"operand\" : {\n                     \"name\" : \"ratio\",\n                     \"type\" : \"OperandRef\"\n                  }\n               },\n               \"then\" : {\n                  \"asType\" : \"{urn:hl7-org:elm-types:r1}Ratio\",\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Null\"\n                  }\n               },\n               \"else\" : {\n                  \"classType\" : \"{urn:hl7-org:elm-types:r1}Ratio\",\n                  \"type\" : \"Instance\",\n                  \"element\" : [ {\n                     \"name\" : \"numerator\",\n                     \"value\" : {\n                        \"name\" : \"ToQuantity\",\n                        \"type\" : \"FunctionRef\",\n                        \"operand\" : [ {\n                           \"path\" : \"numerator\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"ratio\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        } ]\n                     }\n                  }, {\n                     \"name\" : \"denominator\",\n                     \"value\" : {\n                        \"name\" : \"ToQuantity\",\n                        \"type\" : \"FunctionRef\",\n                        \"operand\" : [ {\n                           \"path\" : \"denominator\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"ratio\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        } ]\n                     }\n                  } ]\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"ratio\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Ratio\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToInterval\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"If\",\n               \"condition\" : {\n                  \"type\" : \"IsNull\",\n                  \"operand\" : {\n                     \"name\" : \"range\",\n                     \"type\" : \"OperandRef\"\n                  }\n               },\n               \"then\" : {\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Null\"\n                  },\n                  \"asTypeSpecifier\" : {\n                     \"type\" : \"IntervalTypeSpecifier\",\n                     \"pointType\" : {\n                        \"name\" : \"{urn:hl7-org:elm-types:r1}Quantity\",\n                        \"type\" : \"NamedTypeSpecifier\"\n                     }\n                  }\n               },\n               \"else\" : {\n                  \"lowClosed\" : true,\n                  \"highClosed\" : true,\n                  \"type\" : \"Interval\",\n                  \"low\" : {\n                     \"name\" : \"ToQuantity\",\n                     \"type\" : \"FunctionRef\",\n                     \"operand\" : [ {\n                        \"path\" : \"low\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"name\" : \"range\",\n                           \"type\" : \"OperandRef\"\n                        }\n                     } ]\n                  },\n                  \"high\" : {\n                     \"name\" : \"ToQuantity\",\n                     \"type\" : \"FunctionRef\",\n                     \"operand\" : [ {\n                        \"path\" : \"high\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"name\" : \"range\",\n                           \"type\" : \"OperandRef\"\n                        }\n                     } ]\n                  }\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"range\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Range\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToCode\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"If\",\n               \"condition\" : {\n                  \"type\" : \"IsNull\",\n                  \"operand\" : {\n                     \"name\" : \"coding\",\n                     \"type\" : \"OperandRef\"\n                  }\n               },\n               \"then\" : {\n                  \"asType\" : \"{urn:hl7-org:elm-types:r1}Code\",\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Null\"\n                  }\n               },\n               \"else\" : {\n                  \"classType\" : \"{urn:hl7-org:elm-types:r1}Code\",\n                  \"type\" : \"Instance\",\n                  \"element\" : [ {\n                     \"name\" : \"code\",\n                     \"value\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"code\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"coding\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     }\n                  }, {\n                     \"name\" : \"system\",\n                     \"value\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"system\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"coding\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     }\n                  }, {\n                     \"name\" : \"version\",\n                     \"value\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"version\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"coding\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     }\n                  }, {\n                     \"name\" : \"display\",\n                     \"value\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"display\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"coding\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     }\n                  } ]\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"coding\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Coding\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToConcept\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"If\",\n               \"condition\" : {\n                  \"type\" : \"IsNull\",\n                  \"operand\" : {\n                     \"name\" : \"concept\",\n                     \"type\" : \"OperandRef\"\n                  }\n               },\n               \"then\" : {\n                  \"asType\" : \"{urn:hl7-org:elm-types:r1}Concept\",\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Null\"\n                  }\n               },\n               \"else\" : {\n                  \"classType\" : \"{urn:hl7-org:elm-types:r1}Concept\",\n                  \"type\" : \"Instance\",\n                  \"element\" : [ {\n                     \"name\" : \"codes\",\n                     \"value\" : {\n                        \"type\" : \"Query\",\n                        \"source\" : [ {\n                           \"alias\" : \"C\",\n                           \"expression\" : {\n                              \"path\" : \"coding\",\n                              \"type\" : \"Property\",\n                              \"source\" : {\n                                 \"name\" : \"concept\",\n                                 \"type\" : \"OperandRef\"\n                              }\n                           }\n                        } ],\n                        \"relationship\" : [ ],\n                        \"return\" : {\n                           \"expression\" : {\n                              \"name\" : \"ToCode\",\n                              \"type\" : \"FunctionRef\",\n                              \"operand\" : [ {\n                                 \"name\" : \"C\",\n                                 \"type\" : \"AliasRef\"\n                              } ]\n                           }\n                        }\n                     }\n                  }, {\n                     \"name\" : \"display\",\n                     \"value\" : {\n                        \"path\" : \"value\",\n                        \"type\" : \"Property\",\n                        \"source\" : {\n                           \"path\" : \"text\",\n                           \"type\" : \"Property\",\n                           \"source\" : {\n                              \"name\" : \"concept\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        }\n                     }\n                  } ]\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"concept\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeableConcept\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"reference\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"type\" : \"If\",\n               \"condition\" : {\n                  \"type\" : \"IsNull\",\n                  \"operand\" : {\n                     \"name\" : \"reference\",\n                     \"type\" : \"OperandRef\"\n                  }\n               },\n               \"then\" : {\n                  \"asType\" : \"{http://hl7.org/fhir}Reference\",\n                  \"type\" : \"As\",\n                  \"operand\" : {\n                     \"type\" : \"Null\"\n                  }\n               },\n               \"else\" : {\n                  \"classType\" : \"{http://hl7.org/fhir}Reference\",\n                  \"type\" : \"Instance\",\n                  \"element\" : [ {\n                     \"name\" : \"reference\",\n                     \"value\" : {\n                        \"classType\" : \"{http://hl7.org/fhir}string\",\n                        \"type\" : \"Instance\",\n                        \"element\" : [ {\n                           \"name\" : \"value\",\n                           \"value\" : {\n                              \"name\" : \"reference\",\n                              \"type\" : \"OperandRef\"\n                           }\n                        } ]\n                     }\n                  } ]\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"reference\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"resolve\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"reference\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"resolve\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"reference\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Reference\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"reference\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"resource\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Resource\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"extension\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"element\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Element\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"url\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"extension\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"resource\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Resource\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"url\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"hasValue\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"element\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Element\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"getValue\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"element\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Element\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ofType\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"identifier\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"is\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"identifier\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"as\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"identifier\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"elementDefinition\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"element\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Element\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"slice\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"element\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Element\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"url\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"name\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"checkModifiers\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"resource\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Resource\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"checkModifiers\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"resource\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Resource\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"modifier\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"checkModifiers\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"element\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Element\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"checkModifiers\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"element\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Element\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"modifier\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"conformsTo\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"resource\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Resource\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"structure\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"memberOf\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"code\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}code\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"valueSet\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"memberOf\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"coding\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Coding\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"valueSet\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"memberOf\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"concept\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeableConcept\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"valueSet\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{urn:hl7-org:elm-types:r1}String\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"subsumes\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"coding\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Coding\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"subsumedCoding\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Coding\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"subsumes\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"concept\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeableConcept\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"subsumedConcept\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeableConcept\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"subsumedBy\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"coding\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Coding\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"subsumingCoding\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Coding\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"subsumedBy\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"concept\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeableConcept\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            }, {\n               \"name\" : \"subsumingConcept\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeableConcept\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"htmlChecks\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"external\" : true,\n            \"type\" : \"FunctionDef\",\n            \"operand\" : [ {\n               \"name\" : \"element\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Element\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AccountStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActionCardinalityBehavior\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActionConditionKind\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActionGroupingBehavior\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActionParticipantType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActionPrecheckBehavior\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActionRelationshipType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActionRequiredBehavior\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActionSelectionBehavior\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActivityDefinitionKind\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ActivityParticipantType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AddressType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AddressUse\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AdministrativeGender\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AdverseEventActuality\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AggregationMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AllergyIntoleranceCategory\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AllergyIntoleranceCriticality\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AllergyIntoleranceSeverity\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AllergyIntoleranceType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AppointmentStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AssertionDirectionType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AssertionOperatorType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AssertionResponseTypes\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AuditEventAction\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AuditEventAgentNetworkType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}AuditEventOutcome\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}BindingStrength\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}BiologicallyDerivedProductCategory\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}BiologicallyDerivedProductStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}BiologicallyDerivedProductStorageScale\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}BundleType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CapabilityStatementKind\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CarePlanActivityKind\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CarePlanActivityStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CarePlanIntent\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CarePlanStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CareTeamStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CatalogEntryRelationType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ChargeItemDefinitionPriceComponentType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ChargeItemStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ClaimResponseStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ClaimStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ClinicalImpressionStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeSearchSupport\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeSystemContentMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CodeSystemHierarchyMeaning\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CommunicationPriority\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CommunicationRequestStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CommunicationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CompartmentCode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CompartmentType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CompositionAttestationMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CompositionStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ConceptMapEquivalence\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ConceptMapGroupUnmappedMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ConditionalDeleteStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ConditionalReadStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ConsentDataMeaning\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ConsentProvisionType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ConsentState\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ConstraintSeverity\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ContactPointSystem\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ContactPointUse\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ContractPublicationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ContractStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ContributorType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CoverageStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}CurrencyCode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DayOfWeek\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DaysOfWeek\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DetectedIssueSeverity\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DetectedIssueStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DeviceMetricCalibrationState\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DeviceMetricCalibrationType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DeviceMetricCategory\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DeviceMetricColor\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DeviceMetricOperationalStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DeviceNameType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DeviceRequestStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DeviceUseStatementStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DiagnosticReportStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DiscriminatorType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DocumentConfidentiality\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DocumentMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DocumentReferenceStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}DocumentRelationshipType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EligibilityRequestPurpose\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EligibilityRequestStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EligibilityResponsePurpose\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EligibilityResponseStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EnableWhenBehavior\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EncounterLocationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EncounterStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EndpointStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EnrollmentRequestStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EnrollmentResponseStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EpisodeOfCareStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EventCapabilityMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EventTiming\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}EvidenceVariableType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ExampleScenarioActorType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ExplanationOfBenefitStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ExposureState\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ExtensionContextType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FHIRAllTypes\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FHIRDefinedType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FHIRDeviceStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FHIRResourceType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FHIRSubstanceStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FHIRVersion\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FamilyHistoryStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FilterOperator\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}FlagStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}GoalLifecycleStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}GraphCompartmentRule\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}GraphCompartmentUse\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}GroupMeasure\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}GroupType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}GuidanceResponseStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}GuidePageGeneration\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}GuideParameterCode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}HTTPVerb\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}IdentifierUse\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}IdentityAssuranceLevel\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ImagingStudyStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ImmunizationEvaluationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ImmunizationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}InvoicePriceComponentType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}InvoiceStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}IssueSeverity\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}IssueType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}LinkType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}LinkageType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ListMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ListStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}LocationMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}LocationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MeasureReportStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MeasureReportType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MediaStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MedicationAdministrationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MedicationDispenseStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MedicationKnowledgeStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MedicationRequestIntent\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MedicationRequestPriority\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MedicationRequestStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MedicationStatementStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MedicationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MessageSignificanceCategory\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Messageheader_Response_Request\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}MimeType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}NameUse\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}NamingSystemIdentifierType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}NamingSystemType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}NarrativeStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}NoteType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}NutritiionOrderIntent\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}NutritionOrderStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ObservationDataType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ObservationRangeCategory\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ObservationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}OperationKind\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}OperationParameterUse\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}OrientationType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ParameterUse\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ParticipantRequired\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ParticipantStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ParticipationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}PaymentNoticeStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}PaymentReconciliationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ProcedureStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}PropertyRepresentation\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}PropertyType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ProvenanceEntityRole\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}PublicationStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}QualityType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}QuantityComparator\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}QuestionnaireItemOperator\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}QuestionnaireItemType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}QuestionnaireResponseStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ReferenceHandlingPolicy\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ReferenceVersionRules\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ReferredDocumentStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}RelatedArtifactType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}RemittanceOutcome\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}RepositoryType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}RequestIntent\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}RequestPriority\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}RequestStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ResearchElementType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ResearchStudyStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ResearchSubjectStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ResourceType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ResourceVersionPolicy\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ResponseType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}RestfulCapabilityMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}RiskAssessmentStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SPDXLicense\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SearchComparator\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SearchEntryMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SearchModifierCode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SearchParamType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SectionMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SequenceType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ServiceRequestIntent\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ServiceRequestPriority\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}ServiceRequestStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SlicingRules\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SlotStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SortDirection\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SpecimenContainedPreference\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SpecimenStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Status\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StrandType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StructureDefinitionKind\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StructureMapContextType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StructureMapGroupTypeMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StructureMapInputMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StructureMapModelMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StructureMapSourceListMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StructureMapTargetListMode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}StructureMapTransform\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SubscriptionChannelType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SubscriptionStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SupplyDeliveryStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SupplyRequestStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}SystemRestfulInteraction\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TaskIntent\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TaskPriority\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TaskStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TestReportActionResult\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TestReportParticipantType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TestReportResult\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TestReportStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TestScriptRequestMethodCode\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TriggerType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TypeDerivationRule\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}TypeRestfulInteraction\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}UDIEntryType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}UnitsOfTime\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}Use\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}VariableType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}VisionBase\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}VisionEyes\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}VisionStatus\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}XPathUsageType\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}base64Binary\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToBoolean\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}boolean\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToDate\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}date\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToDateTime\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}dateTime\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToDecimal\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}decimal\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToDateTime\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}instant\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToInteger\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}integer\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}string\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToTime\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}time\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}uri\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         }, {\n            \"name\" : \"ToString\",\n            \"context\" : \"Patient\",\n            \"accessLevel\" : \"Public\",\n            \"type\" : \"FunctionDef\",\n            \"expression\" : {\n               \"path\" : \"value\",\n               \"type\" : \"Property\",\n               \"source\" : {\n                  \"name\" : \"value\",\n                  \"type\" : \"OperandRef\"\n               }\n            },\n            \"operand\" : [ {\n               \"name\" : \"value\",\n               \"operandTypeSpecifier\" : {\n                  \"name\" : \"{http://hl7.org/fhir}xhtml\",\n                  \"type\" : \"NamedTypeSpecifier\"\n               }\n            } ]\n         } ]\n      }\n   }\n};\n\n","import cql from 'cql-execution';\nimport fhir from 'cql-exec-fhir';\nimport fhirHelpersJson from './FHIRHelpers-4.0.1.json.js';\n\n/**\n * Executes logical expression written in the Clinical Quality Language (CQL) against \n * a bundle of patient data formatted as FHIR resources. \n */\nexport default class CqlProcessor {\n  /**\n   * Create a CQL Processor.\n   * @param {object} elmJson - The CQL library formatted in ELM JSON \n   * @param {object} valueSetJson - A value set cache which maps codes to clinical concepts\n   * @param {object} parameters - Key:value pairs of parameters for the CQL library\n   * @param {object} elmJsonDependencies - Libraries referenced from within elmJson.\n   */\n  constructor(elmJson, valueSetJson, parameters=null, elmJsonDependencies = {}) {\n    this.patientSource = fhir.PatientSource.FHIRv401();\n    this.repository  = new cql.Repository({\n      'FHIRHelpers': fhirHelpersJson,\n      ...elmJsonDependencies\n    });\n    this.library = new cql.Library(elmJson, this.repository);\n    this.codeService = new cql.CodeService(valueSetJson);\n    this.executor = new cql.Executor(this.library, this.codeService, parameters);\n  }\n\n  /**\n   * Load a patient bundle into the CQL Processor\n   * @param {object} patientBundle - A bundle of FHIR resources for the patient\n   */\n  loadBundle(patientBundle) {\n    this.patientSource.reset(); // necessary to avoid memory leaks\n    this.patientSource.loadBundles([patientBundle]);\n    this.patientID = this.patientSource._bundles[0].entry.\n      filter(resrc => resrc.resource.resourceType == 'Patient').\n      map(resrc => resrc.resource.id);\n  }\n\n  /**\n   * Evaluate an expression from the CQL library represented by elmJson against \n   * the patient bundle.\n   * @param {string} expr - The name of an expression from elmJson\n   * @returns {object} results - The results from executing the expression\n   */\n  evaluateExpression(expr) {\n    // Only try to evaluate an expression if we have a patient bundle loaded.\n    if (this.patientSource._bundles && this.patientSource._bundles.length > 0) {\n      let results = this.executor.exec_expression(expr, this.patientSource);\n      this.patientSource._index = 0; // HACK: rewind the patient source\n      return results.patientResults[this.patientID][expr];\n    } else return null;\n  }\n}","\nimport CqlProcessor from './CqlProcessor.js';\nvar processor = {};\n\n/**\n * Define an event handler for when a message is sent to this web worker.\n * Three types of messages can be sent here.\n * 1. elmJson & valueSetJon - Logic and code libraries for initial setup\n * 2. patientBundle - An initial or updated patient bundle\n * 3. expression - A logical expression needing to be evaluated\n * It is assumed that at least initially messages are sent in that order. For \n * the third type, if an expression can be evaluated, the result is sent back \n * as a message.\n * @param {object} rx - The message object being sent\n */\nonmessage = function(rx) {\n  let elmJson;\n  let valueSetJson;\n  let patientBundle;\n  let expression;\n  let parameters;\n  let elmJsonDependencies;\n\n  // For efficiency, first check if this is an expression message, since that is \n  // the type called most often.\n  if ((expression = rx.data.expression) != null) {\n    let tx;\n    if (processor.patientSource._bundles.length > 0) {\n      let result = processor.evaluateExpression(expression);\n      tx = {\n        expression: expression,\n        result: result\n      };\n    } else {\n      // If we don't have a bundle just send the expression back.\n      tx = {\n        expression: expression,\n        result: 'WAITING_FOR_PATIENT_BUNDLE'\n      }\n    }\n    // console.log(JSON.stringify(tx,null,1));\n    this.postMessage(tx); // send the result back\n  } else if ((patientBundle = rx.data.patientBundle) != null) {\n    // If the message contains a patient bundle, load it.\n    // console.log('patientBundle: ', JSON.stringify(patientBundle,null,1));\n    processor.loadBundle(patientBundle);\n  } else if ((elmJson = rx.data.elmJson) != null && (valueSetJson = rx.data.valueSetJson) != null) { // TODO: Allow empty value sets and check elm dependencies\n    // If the message contains translated CQL (ELM JSON), use it to create a new \n    // CQL Processor object.\n    parameters = rx.data.parameters;\n    elmJsonDependencies = rx.data.elmJsonDependencies;\n    processor = new CqlProcessor(elmJson, valueSetJson, parameters, elmJsonDependencies);\n    // valueSetJson['2.16.840.1.113762.1.4.1032.252']['Latest'].forEach(element => {\n    //   console.log(element);\n    // });\n  }\n}\n\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","iter","Symbol","iterator","from","strings","raw","slice","freeze","defineProperties","value","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","call","constructor","name","test","dimLen_","validOps_","codeSep_","valMsgStart_","valMsgEnd_","cnvMsgStart_","cnvMsgEnd_","openEmph_","closeEmph_","openEmphHTML_","closeEmphHTML_","bracesMsg_","needMoleWeightMsg_","csvCols_","inputKey_","specUnits_","UC","require","isInteger","Dimension","dimSetting","Ucum","Error","undefined","this","assignZero","JSON","stringify","dimVec_","d","push","setElementAt","indexPos","getElementAt","ret","getProperty","propertyName","charAt","join","add","dim2","sub","minus","mul","s","equals","isEqual","dimVec2","assignDim","isZero","allZero","isNull","clone","that","obj","config","data","_config","prepareConfig","map","unpackItem","bind","pushFn","createConfig","refObj","keys","reduce","apply","keyTail","concat","packItem","item","keyArr","place","forEach","result","Prefix","attrs","code_","ciCode_","name_","printSymbol_","value_","parseFloat","exp_","getValue","getCode","getCiCode","getName","getPrintSymbol","getExp","prefix2","PrefixTablesFactory","byCode_","byValue_","prefixCount","allPrefixesByValue","prefixBuff","pList","pLen","p","pfx","getPrefixByValue","allPrefixesByCode","prefixList","sort","getPrefixByCode","prefixObj","isDefined","code","prefixTablesInstance","PrefixTables","getInstance","UcumFunctions","funcs","cnvTo","x","cnvFrom","Math","log","LN10","pow","exp","LN2","tan","atan","sqrt","func","forName","fname","toLowerCase","f","theString","num","isNaN","str","theSyn","resp","retObj","utab","UnitTables","getUnitBySynonym","aLen","a","theUnit","csCode_","guidance_","Pfx","PfxT","Un","Utab","unpackArray","UcumJsonDefs","loadJsonDefs","jsonDefs","prefixes","units","unitsCount","pTab","plen","newPref","uTab","ulen","u","newUnit","Unit","addUnit","ucumJsonDefs","UnitString","UcumLhcUtils","uStrParser_","useHTMLInMessages","use","useBraceMsgForEachString","validateUnitString","uStr","suggest","valConv","getSpecifiedUnit","convertUnitTo","fromUnitCode","fromVal","toUnitCode","molecularWeight","returnObj","trim","intUtils_","isNumericString","fromUnit","parseResp","toUnit","moleExp_","isMoleMassCommensurable","convertMolToMass","convertMassToMol","convertFrom","err","message","checkSynonyms","getSynonyms","uName","getUnitByCode","parseString","console","unshift","commensurablesList","fromName","retMsg","commUnits","dimVec","fromDim","getUnitsByDimension","isBase_","property_","magnitude_","dim_","class_","isMetric_","variable_","cnv_","cnvPfx_","isSpecial_","isArbitrary_","synonyms_","source_","loincProperty_","category_","csUnitString_","ciUnitString_","baseFactorStr_","baseFactor_","defError_","assignUnity","assignVals","vals","uKey","hasOwnProperty","retUnit","getOwnPropertyNames","val","assign","unit2","fullEquals","thisAttr","u2Attr","keyLen","match","k","newNum","fromCnv","fromMag","convertTo","convertCoherent","f_from","mutateCoherent","max","getMax","elem","uA","_getUnitTables","amt","molUnit","molAmt","avoNum","massUnit","mutateRatio","multiplyThis","mulVal","_concatStrs","multiplyThese","divide","invertString","invert","stringRep","replace","substr","str1","operator","str2","startChar","endChar","_buildOneString","power","uArray","arLen","un","nun","parseInt","uLen","uChar","getMassDimensionIndex","commensurable","testDim","curVal","utabs_","pfxTabs_","parensFlag_","pFlagLen_","braceFlag_","bFlagLen_","vcMsgStart_","vcMsgEnd_","retMsg_","parensUnits_","annotations_","suggestions","suggestions_","origString","_getAnnotations","sUnit","indexOf","finalUnit","_parseTheString","isIntegerUnit","endProcessing","parensResp","_processParens","mkUArray","_makeUnitsArray","u1","curCode","Number","parenUnit","_getParensUnit","uRet","_makeUnit","_performUnitArithmetic","uString","openBrace","closeBrace","braceStr","substring","aIdx","uStrArray","uStrAryPos","stopProcessing","pu","trimmedCt","openCt","closeCt","openPos","closePos","theMsg","c","uArray1","startNumCheck","numRes","dispVal","parensback","op","theOp","numRes2","invalidString","parensStr","parensString","nextParens","pStr","psIdx","befText","peIdx","lastIndexOf","aftText","pNumText","nMag","annoRet","_getAnnoText","_getSuggestions","asIdx","startText","aeIdx","endText","idx","idxNum","suggSet","synLen","unit","unitArray","uCode","getAnnoRet","_getUnitWithAnnotation","tryCode","addBrackets","retUnitAry","getUnitByName","mString","dupMsg","r","rStr","RegExp","res","origCode","origUnit","pfxCode","pfxObj","pfxVal","pfxExp","codeAndExp","_isCodeWithExponent","pCodeLen","theDim","theMag","theName","theCiCode","thePrintSymbol","expMul","theCode","expStr","annoText","befAnnoText","aftAnnoText","msgLen","mkUnitRet","tryBrackets","pop","u2","nextUnit","msgString","unitTablesInstance","UnitTablesFactory","unitNames_","unitCodes_","codeOrder_","unitStrings_","unitDimensions_","unitSynonyms_","massDimIndex_","addUnitName","addUnitCode","addUnitString","addUnitDimension","caseSensitive_","uEntry","mag","uDim","buildUnitSynonyms","uSyns","synsAry","split","addSynonymCodes","theSynonyms","words","wLen","w","word","sepPos","retUnits","getUnitByString","retAry","unitsArray","uSyn","foundCodes","fLen","getAllUnitNames","getUnitNamesList","nameList","codes","compareCodes","b","getAllUnitCodes","allUnitsByDef","unitsList","allUnitsByName","cols","sep","unitBuff","cLen","nameRecs","rec","cbuf","printUnits","doLong","codeList","unitString","curUnit","curDim","_typeof","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","arguments","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","getPrototypeOf","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","normalCompletion","didErr","step","next","_e2","_classCallCheck","_createClass","cql","load","FHIRv102XML","FHIRv300XML","FHIRv400XML","FHIRv401XML","FHIRWrapper","filePathOrXML","_modelInfo","fhirJson","fhirResourceType","targetClassName","resourceType","targetClass","findClass","currentClass","_typeCastIsAllowed","FHIRObject","parentClasses","includes","PatientSource","_index","_bundles","get","version","bundles","Patient","currentPatient","json","typeInfo","modelInfo","_this","_json","_typeInfo","elementNames","Set","currentInfo","elements","baseTypeSpecifier","fqn","_step","_iterator","_loop","error","field","parts","root","suffix","splice","element","findElement","property","typeSpecifier","choicePropertyName","choice","toUpperCase","isChoice","choices","find","_step2","_iterator2","isNamed","choiceProperty","namespace","DateTime","parse","getDate","time","timezoneOffset","toSystemObject","extra","isFHIRPrimitiveOrListOfFHIRPrimitives","valueArr","isList","extraArr","getPropertyFromJSON","toFHIRObject","id","Code","toCode","date","ivl","Interval","dateOrIvl","_typeHierarchy","some","t","type","typeHierarchy","getTypeInfo","url","startsWith","_FHIRObject","subClass","superClass","create","_inherits","_super","bundle","_this2","patientClass","patientClassIdentifier","patientClassName","ptEntry","entry","resource","ptClass","profile","records","findRecords","_this3","classInfo","_bundle","filter","elementType","rootClassInfo","rootObject","isInterval","low","pointType","high","lowClosed","highClosed","typeName","coding","codings","system","display","fs","xml2js","processors","ModelInfo","xml","_name","$","_version","_url","_schemaLocation","schemaLocation","_targetQualifier","targetQualifier","_patientClassName","_patientClassIdentifier","_patientBirthDatePropertyName","patientBirthDatePropertyName","_caseSensitive","caseSensitive","_strictRetrieveTyping","strictRetrieveTyping","_classesByLabel","Map","_classesByIdentifier","_classesByName","stripNS","ClassInfo","label","set","identifier","klass","has","klassName","modKlassName","_namespace","_identifier","_label","_isRetrievable","retrievable","_primaryCodePath","primaryCodePath","_baseTypeSpecifier","getTypeSpecifierFromXML","_elementsByName","ClassElement","_parentClasses","values","_this$_parentClasses","parentClass","el","allowExplicitChoice","potential","_ret","explicitType","_typeSpecifier","_isProhibited","prohibited","_isOneBased","oneBased","NAMED_TYPE_RE","NamedTypeSpecifier","LIST_TYPE_RE","ListTypeSpecifier","_elementType","INTERVAL_TYPE_RE","IntervalTypeSpecifier","_pointType","CHOICE_TYPE_RE","ChoiceTypeSpecifier","_choices","_len","_key","_i","getTypeSpecifier","stringType","xmlTypeSpecifier","m","exec","modelName","_m","_m2","readFileSync","opts","async","tagNameProcessors","stripPrefix","attrNameProcessors","valueSetsJson","oid","valueSets","datatypes_1","CodeService","results","findValueSetsByOid","Record","recordType","rest","_recursiveGet","getInterval","DT","gender","birthDate","__extends","patients","nextPatient","current","currentJSON","shift","library_1","repository_1","expression_1","context_1","executor_1","results_1","messageListeners_1","cql_patient_1","cql_code_service_1","__exportStar","Library","Repository","Expression","Context","PatientContext","UnfilteredContext","Executor","Results","ConsoleMessageListener","NullMessageListener","CodeSystem","Concept","Date","Quantity","Ratio","ValueSet","codesInList","toCodeList","codesList","matchFound","multipleCodeSystemsExist","codeItem","list","c2","cl1","cl2","c1","code2","code1","LENGTH_TO_DATE_FORMAT_MAP","ltdfMap","LENGTH_TO_DATETIME_FORMATS_MAP","formats","yyyy","ltdtfMap","example","wholeLuxonDuration","duration","floor","ceil","truncateLuxonDateTime","luxonDT","WEEK","weekday","weeks","DAY","startOf","year","month","day","AbstractDate","FIELDS","every","isPrecise","other","isSamePrecision","isMorePrecise","getPrecision","compareWithDefaultResult","precision","isDate","isDateTime","getDateTime","sameAs","isPrecisionUnspecifiedOrGreaterThanDay","convertToTimezoneOffset","sameOrBefore","sameOrAfter","before","after","offset","copy","luxonDateTime","toLuxonDateTime","endOf","luxonResult","plus","_a","fromLuxonDateTime","reducedPrecision","util_1","daysInMonth","hour","minute","second","millisecond","getTimezoneOffset","string","matches","years","months","days","hours","minutes","seconds","milliseconds","fmt","fromFormat","isValid","isValidDateTimeStringFormat","args","arg","__spreadArray","getTime","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","MILLISECOND","SECOND","MINUTE","HOUR","MONTH","YEAR","shiftedLuxonDT","setZone","luxon_1","unitField","_implicitlyConvert","toLuxonUncertainty","toUTC","keepLocalTime","uncertainty_1","diff","isTime","TIME_PRECISION_VALUE_MAP","DATETIME_PRECISION_VALUE_MAP","offsetMins","fromObject","_b","_c","_d","_f","_g","zone","ignoreTimezone","toJSDate","String","toStringTime","toStringDateTime","_pad","offsetHours","abs","offsetMin","reduced","fieldIndex","format","isValidDateStringFormat","differenceBetween","durationBetween","utcInstance","y","mo","padStart","dtpvMap","tpvMap","defaultResult","aMillisecond","aSecondAndMillisecond","bMillisecond","wrapped","defaultPointType","point","isQuantity","newLow","newHigh","cmp","lowFn","highFn","lessThanOrEquals","lessThan","greaterThanOrEquals","greaterThan","logic_1","and","not","contains","toClosed","closed","itemClosed","overlaps","meets","l","lc","areNumeric","lowestNumericUncertainty","areDateTimes","h","hc","_h","highestNumericUncertainty","_j","_k","ol","olb","overlapsBefore","ola","overlapsAfter","start","end","or","meetsBefore","meetsAfter","startEqual","endLessThanOrEqual","endEqual","startGreaterThanOrEqual","isUncertainty","lowValue","highValue","round","quantity_1","pointSize","getPointSize","z","ThreeValuedLogic","validation","valid","otherVal","val1","unit1","val2","resultValue","resultUnit","doScaledAddition","scaleForB","sum","cqlUnitB","components","dividedBy","multiplyBy","numerator","denominator","isRatio","divided_this","divided_other","equal","isNonEnumerable","isCode","isConcept","isValueSet","Uncertainty","gte","lt","bestCase","source","Count","ctx","items","execute","AggregateExpression","Sum","processQuantities","hasOnlyQuantities","getValuesFromQuantities","Min","listWithoutNulls","minimum","Max","maximum","Avg","Median","medianOfNumbers","median","Mode","filtered","mode","counts","cnt","StdDev","stdDev","standardDeviation","stats","mean","sumOfSquares","sq","std_var","pop_var","standard_variance","population_variance","standard_deviation","population_deviation","Product","product","GeometricMean","geoMean","AllTrue","AnyTrue","convertUnit","hasSomeQuantities","exception_1","quantities","numbers","Add","execArgs","MathUtil","overflowsOrUnderflows","Subtract","difference","Multiply","Divide","quotient","TruncatedDivide","truncatedQuotient","Modulo","modulo","decimalOrNull","Ceiling","Floor","Truncate","Abs","Negate","Round","dec","Ln","ln","Exp","Log","Power","valueType","MinValue","MIN_VALUES","minDateTime","MIN_INT_VALUE","MIN_FLOAT_VALUE","MIN_DATETIME_VALUE","MIN_DATE_VALUE","MIN_TIME_VALUE","MaxValue","MAX_VALUES","maxDateTime","MAX_INT_VALUE","MAX_FLOAT_VALUE","MAX_DATETIME_VALUE","MAX_DATE_VALUE","MAX_TIME_VALUE","Successor","successor","OverFlowException","Predecessor","predecessor","build","child","E","FunctionRef","Literal","constructByName","ValueSetDef","valueset","codeService","findValueSet","dt","rootContext","libraryName","ValueSetRef","getValueSet","AnyInValueSet","hasMatch","InValueSet","CodeSystemDef","_ctx","systemName","codeSystem","CodeDef","getCodeSystem","library","CodeRef","codeDef","getLibraryContext","ConceptDef","ConceptRef","conceptDef","getConcept","CalculateAge","date1","date2","fromJSDate","getExecutionDateTime","isPoint","CalculateAgeAt","Less","LessOrEqual","Greater","GreaterOrEqual","condition","th","then","els","else","If","when","comparand","caseItems","caseItem","ci","CaseItem","Case","exec_selected","exec_standard","PROPERTIES","literal_1","Time","Today","Now","TimeOfDay","DateTimeComponentFrom","DateFrom","TimeFrom","TimezoneOffsetFrom","DifferenceBetween","DurationBetween","operand","localId","execValue","setLocalIdWithResult","UnimplementedExpression","interval_1","datatype","dataType","templateId","codeProperty","dateProperty","dateRange","Retrieve","retrieveDetails","resolvedCodes","recordMatchesCodesOrVS","getDateOrInterval","evaluatedRecords","record","Element","classType","Instance","lowClosedExpression","highClosedExpression","asTypeSpecifier","dtivl","interval","subinterval","properlyIncludes","Meets","MeetsAfter","MeetsBefore","Overlaps","OverlapsAfter","OverlapsBefore","union","except","intersect","Width","width","Size","size","Start","math_1","End","Starts","starts","Ends","ends","Expand","defaultPer","expandFunction","intervals","per","itvl","intervalListType","collapseIntervals","expandDTishInterval","expandQuantityInterval","expandNumericInterval","_interval","isLessPrecise","current_low","truncateToPrecision","current_high","intervalToAdd","shouldTruncate","result_units","low_value","high_value","per_value","makeNumericIntervalList","perValue","perIsDecimal","decimalPrecision","truncateDecimal","perUnitSize","toFixed","Collapse","perWidth","intervalsClone","collapsedIntervals","decimal","decimalPlaces","re","libraryManager","usingDefs","usings","def","localIdentifier","paramDefs","parameters","param","expressions_1","csDefs","codeSystems","codesystems","codesystem","vsDefs","valuesets","codeDefs","conceptDefs","concepts","concept","exprDefs","statements","expressions","functions","expr","inclDefs","incl","resolve","path","iProperty","csProperty","getFunction","List","Exists","removeDuplicateNulls","doDistinct","doContains","SingletonFrom","ToList","IndexOf","index","src","itm","container","nullEquivalence","doIncludes","sublist","Flatten","Distinct","distinct","seenItem","firstNullFound","setList","First","Last","startIndex","endIndex","Slice","BooleanLiteral","IntegerLiteral","DecimalLiteral","StringLiteral","And","Or","Not","Xor","xor","IsTrue","IsFalse","severity","Message","listener","getMessageListener","onMessage","Null","IsNull","Coalesce","Equal","comparison_1","Equivalent","NotEqual","Union","listTypeArgs","notNull","LIST","IVL","doUnion","Except","doExcept","Intersect","doIntersect","Indexer","In","Contains","Includes","contained","IncludedIn","ProperIncludes","doProperIncludes","ProperIncludedIn","Length","After","datetime_1","doAfter","Before","doBefore","SameAs","SameOrAfter","d1","d2","SameOrBefore","Precision","getPrecisionValue","default","parameterTypeSpecifier","ParameterDef","getParentParameter","parentParam","ParameterRef","getParameter","alias","expression","suchThat","With","childCtx","childContext","Without","direction","low_order","high_order","ByDirection","ByExpression","sctx","a_val","b_val","by","SortClause","order","starting","AggregateClause","returnedValues","aggregateValue","contextValues","sources","MultiSource","AliasedQuerySource","letClauses","let","LetClause","relationship","where","returnClause","return","ReturnClause","aggregateClause","aggregate","aliases","sortClause","Query","rctx","relations","child_ctx","rel","context_values","isDistinct","xList","yList","toDistinctList","returnsList","AliasRef","context","ExpressionDef","ExpressionRef","FunctionDef","functionDefs","lib","libCtx","operandTypeSpecifier","operandType","matchesTypeSpecifier","functionDef","OperandRef","IdentifierRef","curr_obj","part","_obj","Function","Concatenate","separator","Combine","filteredArray","stringToSplit","Split","separatorPattern","SplitOnMatches","Upper","Lower","pattern","PositionOf","LastPositionOf","Matches","stringToSub","Substring","StartsWith","EndsWith","ReplaceMatches","scope","Property","getPropertyFromObject","Tuple","asType","strict","As","argTypeString","specifierToString","guessSpecifierType","asTypeString","ToBoolean","strArg","ToConcept","clinical_1","ToDate","ToDateTime","ToDecimal","ToInteger","integer","ToQuantity","convertValue","ToRatio","splitRatioString","ratio_1","ToString","ToTime","timeString","toType","Convert","ConvertsToBoolean","canConvertToType","ConvertsToDate","ConvertsToDateTime","ConvertsToDecimal","ConvertsToInteger","ConvertsToQuantity","ConvertsToRatio","ConvertsToString","ConvertsToTime","toFunction","ConvertQuantity","quantity","CanConvertQuantity","isTypeSpecifier","isType","Is","_is","isSystemType","spec","types","v","ts","parent","_codeService","_parameters","executionDateTime","messageListener","library_context","localId_context","checkParameters","params","cs","getLocalIdContext","localIdResults","libName","supportLibraryLocalIds","mergeLibraryLocalIdResults","supportLib","libraryId","libraryResults","localIdResult","existingResult","pName","pVal","pDef","matchesInstanceType","matchesNamedTypeSpecifier","matchesListTypeSpecifier","matchesTupleTypeSpecifier","matchesIntervalTypeSpecifier","matchesChoiceTypeSpecifier","inst","isBooleanLiteral","isDecimalLiteral","isIntegerLiteral","isStringLiteral","matchesListInstanceType","isTuple","matchesTupleInstanceType","matchesIntervalInstanceType","tpl","patient","_template","_library","patientResults","pr","ml","patientSource","patient_ctx","recordPatientResults","exec_patient_context","unfilteredContext","resultMap","recordUnfilteredResults","_source","_code","_severity","_message","logSourceOnTrace","print","content","libraries","libraryVersion","unfilteredResults","localIdPatientResultsMap","patientEvaluatedRecords","patientId","getId","getAllLocalIds","areNumbers","areStrings","areDateTimesOrQuantities","getClassOfObjects","object1","object2","compareEveryItemInArrays","array1","array2","comparisonFunction","compareObjects","finalComparisonResult","aKeys","getKeysFromObject","bKeys","shouldReturnNull","comparisonResult","deepCompareKeysAndValues","object","input","aClass","equivalent","bClass","localeCompare","sensitivity","isValidInteger","isValidDecimal","decimalString","splitDecimalString","decimalPoints","maxValueForInstance","minValueForInstance","succ","pred","quantityInstance","maxQty","minQty","NaN","utils","ucum","CQL_TO_UCUM_DATE_UNITS","week","UCUM_TO_CQL_DATE_UNITS","a_j","a_g","mo_j","mo_g","wk","min","ms","unitValidityCache","checkUnit","allowEmptyUnits","allowCQLDateUnits","fixEmptyUnit","fixCQLDateUnit","status","msg","ucumCode","adjustPrecision","fixUnit","toVal","convertToCQLDateUnit","dateUnit","getQuotientOfUnits","factorPowerMap_1","factor","getBaseUnitAndPower","baseUnit","accumulatedPower","entries","base","convertToBaseUnit","toBaseUnit","fromPower","newVal","term","useCQLDateUnits","resultConverter","baseUnit1","baseUnit2","newVal2","newUnit2","newVal1","newUnit1","getProductOfUnits","match1","match2","factorPowerMap","normalizeMillisecondsField","msString","getTimezoneSeparatorFromString","things","timezoneField","beforeMs","msAndAfter","timezoneSeparator","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","listeners","hasListeners","ReflectOwnKeys","R","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","NumberIsNaN","EventEmitter","init","emitter","Promise","reject","errorListener","resolver","eventTargetAgnosticAddListener","handler","flags","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","_addListener","prepend","events","existing","warning","newListener","warned","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","wrapListener","RangeError","setMaxListeners","getMaxListeners","doError","er","addListener","prependListener","prependOnceListener","position","originalListener","spliceOne","rawListeners","eventNames","isFinite","Infinity","LuxonError","InvalidDateTimeError","reason","_LuxonError","toMessage","_inheritsLoose","InvalidIntervalError","_LuxonError2","InvalidDurationError","_LuxonError3","ConflictingSpecificationError","InvalidUnitError","_LuxonError5","InvalidArgumentError","ZoneIsAbstractError","_LuxonError7","DATE_SHORT","DATE_MED","DATE_MED_WITH_WEEKDAY","DATE_FULL","DATE_HUGE","TIME_SIMPLE","TIME_WITH_SECONDS","TIME_WITH_SHORT_OFFSET","timeZoneName","TIME_WITH_LONG_OFFSET","TIME_24_SIMPLE","hour12","TIME_24_WITH_SECONDS","TIME_24_WITH_SHORT_OFFSET","TIME_24_WITH_LONG_OFFSET","DATETIME_SHORT","DATETIME_SHORT_WITH_SECONDS","DATETIME_MED","DATETIME_MED_WITH_SECONDS","DATETIME_MED_WITH_WEEKDAY","DATETIME_FULL","DATETIME_FULL_WITH_SECONDS","DATETIME_HUGE","DATETIME_HUGE_WITH_SECONDS","isUndefined","isNumber","hasIntl","Intl","DateTimeFormat","hasFormatToParts","formatToParts","hasRelative","RelativeTimeFormat","bestBy","compare","best","pair","pick","prop","integerBetween","thing","bottom","top","repeat","parseInteger","parseMillis","fraction","roundTo","number","digits","towardZero","trunc","isLeapYear","daysInYear","modMonth","floorMod","objToLocalTS","UTC","setUTCFullYear","weeksInWeekYear","weekYear","p1","last","p2","untruncateYear","parseZoneInfo","offsetFormat","locale","timeZone","intlOpts","modified","intl","parsed","without","signedOffset","offHourStr","offMinuteStr","offHour","offMin","is","asNumber","numericValue","normalizeObject","normalizer","nonUnitKeys","normalized","formatOffset","sign","timeObject","ianaRegex","monthsLong","monthsShort","monthsNarrow","weekdaysLong","weekdaysShort","weekdaysNarrow","weekdays","meridiems","erasLong","erasShort","erasNarrow","eras","stringifyTokens","splits","tokenToString","token","literal","macroTokenToFormatOpts","D","Formats","DD","DDD","DDDD","tt","ttt","tttt","T","TT","TTT","TTTT","ff","fff","ffff","FF","FFF","FFFF","Formatter","formatOpts","loc","systemLoc","parseFormat","currentFull","bracketed","formatWithSystemDefault","redefaultToSystem","dtFormatter","formatDateTime","formatDateTimeParts","resolvedOptions","forceSimple","padTo","numberFormatter","formatDateTimeFromString","knownEnglish","listingMode","useDateTimeFormatter","outputCalendar","extract","isOffsetFixed","allowZ","meridiem","English","standalone","era","offsetName","zoneName","weekNumber","ordinal","quarter","maybeMacro","formatDurationFromString","dur","lildur","tokenToField","tokens","realTokens","found","collapsed","shiftTo","mapped","Invalid","explanation","Zone","otherZone","singleton","LocalZone","matchingRegex","dtfCache","typeToPos","ianaZoneCache","IANAZone","isValidZone","resetCache","isValidSpecifier","parseGMTOffset","specifier","dtf","formatted","filled","pos","partsOffset","fMonth","fDay","hackyOffset","asTS","over","FixedOffsetZone","fixed","parseSpecifier","InvalidZone","normalizeZone","defaultZone","lowered","now","defaultLocale","defaultNumberingSystem","defaultOutputCalendar","throwOnInvalid","Settings","resetCaches","Locale","numberingSystem","intlDTCache","getCachedDTF","locString","intlNumCache","intlRelCache","getCachedRTF","cacheKeyOpts","inf","sysLocaleCache","listStuff","defaultOK","englishFn","intlFn","PolyNumberFormatter","useGrouping","minimumIntegerDigits","NumberFormat","getCachedINF","PolyDateFormatter","universal","gmtOffset","offsetZ","isOffsetZoneSupported","fromMillis","tokenFormat","knownFormat","dateTimeHuge","PolyRelFormatter","isEnglish","style","rtf","numeric","narrow","quarters","lastable","isDay","isInPast","fmtValue","singular","lilUnits","fmtUnit","numbering","specifiedLocale","localeStr","uIndex","options","smaller","calendar","parseLocaleString","parsedLocale","parsedNumberingSystem","parsedOutputCalendar","intlConfigString","weekdaysCache","monthsCache","meridiemCache","eraCache","fastNumbersCached","fromOpts","defaultToEN","computedSys","systemLocale","hasFTP","isActuallyEn","hasNoWeirdness","alts","redefaultToEN","formatStr","utc","mapMonths","mapWeekdays","_this4","matching","fastNumbers","relFormatter","combineRegexes","regexes","full","combineExtractors","extractors","ex","mergedVals","mergedZone","cursor","patterns","regex","extractor","simpleParse","offsetRegex","isoTimeBaseRegex","isoTimeRegex","isoTimeExtensionRegex","extractISOWeekData","extractISOOrdinalData","sqlTimeRegex","sqlTimeExtensionRegex","int","fallback","extractISOYmd","extractISOTime","extractISOOffset","local","fullOffset","extractIANAZone","isoTimeOnly","isoDuration","extractISODuration","yearStr","monthStr","weekStr","dayStr","hourStr","minuteStr","secondStr","millisecondsStr","hasNegativePrefix","negativeSeconds","maybeNegate","force","obsOffsets","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","fromStrings","weekdayStr","rfc2822","extractRFC2822","obsOffset","milOffset","rfc1123","rfc850","ascii","extractRFC1123Or850","extractASCII","isoYmdWithTimeExtensionRegex","isoWeekWithTimeExtensionRegex","isoOrdinalWithTimeExtensionRegex","isoTimeCombinedRegex","extractISOYmdTimeAndOffset","extractISOWeekTimeAndOffset","extractISOOrdinalDateAndTime","extractISOTimeAndOffset","extractISOTimeOnly","sqlYmdWithTimeExtensionRegex","sqlTimeCombinedRegex","extractISOYmdTimeOffsetAndIANAZone","extractISOTimeOffsetAndIANAZone","lowOrderMatrix","casualMatrix","daysInYearAccurate","daysInMonthAccurate","accurateMatrix","orderedUnits","reverseUnits","reverse","clear","conf","conversionAccuracy","Duration","convert","matrix","fromMap","toMap","conv","added","antiTrunc","accurate","invalid","isLuxonDuration","normalizeUnit","fromISO","text","parseISODuration","fromISOTime","parseISOTimeOnly","isDuration","toFormat","fmtOpts","toObject","includeConfig","toISO","toISOTime","millis","toMillis","suppressMilliseconds","suppressSeconds","includePrefix","toJSON","as","friendlyDuration","negate","mapUnits","reconfigure","normalize","previous","normalizeValues","lastUnit","built","accumulated","own","ak","down","negated","v1","v2","durationish","INVALID","validateStartEnd","isLuxonInterval","fromDateTimes","builtStart","friendlyDateTime","builtEnd","validateError","startIsValid","endIsValid","toDuration","hasSame","isEmpty","isAfter","dateTime","isBefore","splitAt","dateTimes","sorted","splitBy","divideEqually","numberOfParts","abutsStart","abutsEnd","engulfs","intersection","merge","sofar","final","currentCount","toISODate","dateFormat","invalidReason","mapEndpoints","mapFn","Info","hasDST","proto","isValidIANAZone","locObj","monthsFormat","weekdaysFormat","features","intlTokens","zones","relative","dayDiff","earlier","later","utcDayStart","_diff","lowestOrder","highWater","differ","delta","highOrderDiffs","remainingMillis","lowerOrderUnits","numberingSystems","arab","arabext","bali","beng","deva","fullwide","gujr","hanidec","khmr","knda","laoo","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt","latn","numberingSystemsUTF16","hanidecChars","digitRegex","_ref","append","intUnit","post","deser","charCodeAt","search","parseDigits","spaceOrNBSP","fromCharCode","spaceOrNBSPRegExp","fixListRegex","stripInsensitivities","oneOf","findIndex","groups","simple","partTypeStyleToTokenVal","short","long","dayperiod","dayPeriod","dummyDateTimeCache","maybeExpandMacroToken","tokenForPart","explainFromTokens","expandMacroTokens","one","two","three","four","six","oneOrTwo","oneToThree","oneToSix","oneToNine","twoToFour","fourToSix","unitate","unitForToken","disqualifyingUnit","buildRegex","regexString","handlers","all","matchIndex","rawMatches","Z","q","M","G","S","toField","dateTimeFromMatches","nonLeapLadder","leapLadder","unitOutOfRange","dayOfWeek","js","getUTCDay","computeOrdinal","uncomputeOrdinal","table","month0","gregorianToWeek","gregObj","weekToGregorian","weekData","weekdayOfJan4","yearInDays","gregorianToOrdinal","gregData","ordinalToGregorian","ordinalData","hasInvalidGregorianData","validYear","validMonth","validDay","hasInvalidTimeData","validHour","validMinute","validSecond","validMillisecond","MAX_DATE","unsupportedZone","possiblyCachedWeekData","old","fixOffset","localTS","tz","utcGuess","o2","o3","tsToObj","objToTS","adjustTime","oPre","millisToAdd","parseDataToDateTime","parsedZone","interpretationZone","toTechFormat","toTechTimeFormat","includeOffset","includeZone","spaceZone","defaultUnitValues","defaultWeekUnitValues","defaultOrdinalUnitValues","orderedWeekUnits","orderedOrdinalUnits","weeknumber","weeksnumber","weeknumbers","weekyear","weekyears","quickDT","tsNow","diffRelative","calendary","ot","_zone","isLuxonDateTime","zoneToUse","fromSeconds","offsetProvis","containsOrdinal","containsGregorYear","containsGregorMD","containsGregor","definiteWeekDef","defaultValues","useWeekData","objNow","foundFirst","higherOrderInvalid","validWeek","validWeekday","hasInvalidWeekData","validOrdinal","hasInvalidOrdinalData","parseISODate","fromRFC2822","preprocessRFC2822","parseRFC2822Date","fromHTTP","parseHTTPDate","parseFromTokens","fromString","fromSQL","parseSQL","resolvedLocaleOpts","toLocal","keepCalendarTime","newTS","offsetGuess","setLocale","mixed","settingWeekStuff","normalizedUnit","toLocaleString","toLocaleParts","toISOWeekDate","toRFC2822","toHTTP","toSQLDate","toSQLTime","toSQL","toSeconds","toBSON","otherDateTime","durOpts","otherIsLater","diffed","diffNow","until","inputMs","otherZoneDateTime","toRelative","padding","toRelativeCalendar","fromFormatExplain","fromStringExplain","dateTimeish","sax","parser","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","buffers","clearBuffers","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closedRoot","sawRoot","tag","noscript","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","line","column","EVENTS","write","chunk","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","isWhitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","script","CLOSE_TAG","SGML_DECL","sgmlDecl","isMatch","nameStart","OPEN_TAG","tagName","PROC_INST","procInstName","procInstBody","pad","emitNode","CDATA","cdata","COMMENT","comment","DOCTYPE","doctype","isQuote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","body","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","attributes","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","isAttribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","notMatch","returnState","buffer","parseEntity","entity","entityBody","entityStart","maxAllowed","maxActual","closeText","checkBufferLength","resume","close","flush","streamWraps","ev","_parser","readable","me","onend","onerror","_decoder","Buffer","isBuffer","SD","XML_NAMESPACE","XMLNS_NAMESPACE","STATE","COMMENT_STARTING","nodeType","qname","attribute","qualName","prefix","qn","selfClosing","uri","nv","isSelfClosing","closeTo","entityLC","numStr","fromCodePoint","stringFromCharCode","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","codePoint","pipe","dest","ondata","pause","ondrain","_isStdio","onclose","didOnEnd","destroy","cleanup","isEncoding","encoding","StringDecoder","nb","enc","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","utf8CheckByte","byte","buf","utf8CheckExtraBytes","total","j","utf8CheckIncomplete","copyProps","dst","SafeBuffer","encodingOrOffset","alloc","allocUnsafeSlow","fill","SlowBuffer","stripBOM","builder","defaults","escapeCDATA","requiresCDATA","wrapCDATA","hasProp","Builder","ref","buildObject","rootObj","attrkey","charkey","render","rootElement","rootName","attr","txt","ele","up","att","xmldec","headless","allowSurrogateChars","renderOpts","explicitCharkey","normalizeTags","explicitArray","ignoreAttrs","mergeAttrs","explicitRoot","validator","explicitChildren","childkey","charsAsChildren","includeWhiteChars","attrValueProcessors","valueProcessors","emptyTag","preserveChildrenOrder","chunkSize","bom","processItem","setImmediate","process","Parser","parseStringPromise","reset","assignOrPush","processAsync","xmlnskey","ctor","__super__","extend","remaining","saxParser","error1","errThrown","newValue","ontext","stack","ended","resultObject","EXPLICIT_CHARKEY","onopentag","node","processedKey","onclosetag","emptyStr","nodeName","objClone","xpath","charChild","oncdata","prefixMatch","firstCharLowerCase","parseNumbers","parseBooleans","ValidationError","Disconnected","Preceding","Following","ContainedBy","ImplementationSpecific","Attribute","Text","CData","EntityReference","EntityDeclaration","ProcessingInstruction","Comment","Document","DocType","DocumentFragment","NotationDeclaration","Declaration","Raw","AttributeDeclaration","ElementDeclaration","Dummy","isFunction","isObject","isPlainObject","None","OpenTag","InsideTag","CloseTag","NodeType","XMLAttribute","debugInfo","attValue","isId","schemaTypeInfo","writer","filterOptions","isEqualNode","namespaceURI","localName","XMLCharacterData","XMLCData","XMLNode","substringData","appendData","insertData","deleteData","replaceData","XMLComment","XMLDOMErrorHandler","XMLDOMStringList","XMLDOMConfiguration","defaultParams","canSetParameter","setParameter","handleError","XMLDOMImplementation","hasFeature","feature","createDocumentType","qualifiedName","publicId","systemId","createDocument","createHTMLDocument","title","getFeature","XMLDTDAttList","elementName","attributeName","attributeType","defaultValueType","defaultValue","dtdAttType","dtdAttDefault","dtdAttList","XMLDTDElement","dtdElementValue","dtdElement","XMLDTDEntity","pe","pubID","sysID","internal","dtdPubID","dtdSysID","nData","dtdNData","dtdEntityValue","dtdEntity","XMLDTDNotation","dtdNotation","XMLDeclaration","xmlVersion","xmlEncoding","xmlStandalone","declaration","XMLNamedNodeMap","XMLDocType","ref1","ref2","children","documentObject","nodes","attList","pEntity","notation","docType","ent","pent","XMLStringWriter","XMLStringifier","XMLDocument","documentURI","domConfig","writerOptions","document","createElement","createDocumentFragment","createTextNode","createComment","createCDATASection","createProcessingInstruction","createAttribute","createEntityReference","getElementsByTagName","tagname","importNode","importedNode","deep","createElementNS","createAttributeNS","getElementsByTagNameNS","getElementById","elementId","adoptNode","normalizeDocument","renameNode","getElementsByClassName","classNames","createEvent","eventInterface","createRange","createNodeIterator","whatToShow","createTreeWalker","WriterState","XMLElement","XMLProcessingInstruction","XMLRaw","XMLText","XMLDocumentCB","onData","onEnd","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","createChildNode","attName","attribs","dummy","instruction","openCurrent","oldValidationFlag","noValidation","keepNullAttributes","insTarget","insValue","processingInstruction","rootNodeName","closeNode","openNode","isOpen","indent","endline","isClosed","level","nod","dat","com","ins","dtd","XMLDummy","isRoot","attributeMap","clonedSelf","clonedChild","removeAttribute","getAttribute","setAttribute","getAttributeNode","setAttributeNode","newAttr","removeAttributeNode","oldAttr","getAttributeNS","setAttributeNS","removeAttributeNS","getAttributeNodeNS","setAttributeNodeNS","hasAttribute","hasAttributeNS","setIdAttribute","setIdAttributeNS","setIdAttributeNode","idAttr","getNamedItem","setNamedItem","oldNode","removeNamedItem","getNamedItemNS","setNamedItemNS","removeNamedItemNS","DocumentPosition","XMLNodeList","parent1","baseURI","childNodeList","textContent","setParent","childNode","lastChild","len1","ref3","ignoreDecorators","convertAttKey","separateArrayItems","keepNullNodes","convertTextKey","convertCDataKey","convertCommentKey","convertRawKey","convertPIKey","insertBefore","newChild","refChild","removed","insertAfter","remove","commentBefore","commentAfter","instructionBefore","instructionAfter","doc","prev","importDocument","clonedRoot","importXMLBuilder","replaceChild","oldChild","removeChild","appendChild","hasChildNodes","cloneNode","isSupported","hasAttributes","compareDocumentPosition","random","isAncestor","isDescendant","isPreceding","isSameNode","lookupPrefix","isDefaultNamespace","lookupNamespaceURI","setUserData","getUserData","nodePos","thisPos","treePosition","isFollowing","foreachTreeNode","XMLWriterBase","XMLStreamWriter","stream","isLastRootNode","writeChildNode","spaceBeforeSlash","childNodeCount","firstChildNode","allowEmpty","pretty","suppressPrettyCount","newline","assertLegalName","assertLegalChar","textEscape","attEscape","ampregex","noDoubleEncoding","previousSibling","nextSibling","splitText","replaceWholeText","filteredOptions","ref4","ref5","ref6","dontPrettyTextNodes","dontprettytextnodes","spacebeforeslash","user","indentLevel","openAttribute","closeAttribute","prettySuppressed","begin","stringWriter","streamWriter","implementation","writerState","_defineProperty","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","CqlProcessor","elmJson","valueSetJson","elmJsonDependencies","fhir","repository","fhirHelpersJson","executor","patientBundle","loadBundles","patientID","resrc","exec_expression","processor","onmessage","rx","tx","evaluateExpression","postMessage","loadBundle"],"sourceRoot":""}